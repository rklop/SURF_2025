{
    "0": "SELECT MAX(`Free Meal Count (K-12)` / `Enrollment (K-12)`) AS 'Eligible Free Rate' FROM frpm WHERE `County Name` = 'Alameda County';\t----- bird -----\tcalifornia_schools",
    "1": "SELECT schools.School, frpm.`Percent (%) Eligible Free (Ages 5-17)` FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.EILName = 'Continuation School' ORDER BY frpm.`Percent (%) Eligible Free (Ages 5-17)` ASC LIMIT 3\t----- bird -----\tcalifornia_schools",
    "2": "SELECT schools.Zip FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.County = 'Fresno County Office of Education' AND frpm.`Charter School (Y/N)` = 1\t----- bird -----\tcalifornia_schools",
    "3": "SELECT schools.MailStreet  FROM schools  INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode  ORDER BY frpm.`FRPM Count (K-12)` DESC  LIMIT 1\t----- bird -----\tcalifornia_schools",
    "4": "SELECT schools.Phone FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`Charter School (Y/N)` = 1 AND schools.FundingType = 'Directly funded' AND schools.OpenDate > '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(*)  FROM schools  INNER JOIN satscores ON schools.CDSCode = satscores.cds  WHERE schools.Virtual = 'F' AND satscores.AvgScrMath > 400\t----- bird -----\tcalifornia_schools",
    "6": "SELECT schools.School  FROM schools  INNER JOIN satscores ON schools.CDSCode = satscores.cds  WHERE satscores.NumTstTakr > 500 AND schools.Magnet = 1\t----- bird -----\tcalifornia_schools",
    "7": "SELECT schools.Phone  FROM schools  INNER JOIN satscores ON schools.CDSCode = satscores.cds  ORDER BY satscores.NumGE1500 DESC  LIMIT 1\t----- bird -----\tcalifornia_schools",
    "8": "SELECT satscores.NumTstTakr  FROM satscores  INNER JOIN frpm ON satscores.cds = frpm.CDSCode  WHERE frpm.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm)\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(*) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.AvgScrMath > 560 AND schools.FundingType = 'Directly Charter-Funded'\t----- bird -----\tcalifornia_schools",
    "10": "SELECT frpm.`FRPM Count (Ages 5-17)` FROM satscores INNER JOIN frpm ON satscores.cds = frpm.CDSCode ORDER BY satscores.AvgScrRead DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "11": "SELECT frpm.CDSCode FROM frpm WHERE frpm.`Enrollment (K-12)` + frpm.`Enrollment (Ages 5-17)` > 500\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(frpm.`Percent (%) Eligible Free (Ages 5-17)`) FROM satscores INNER JOIN frpm ON satscores.cds = frpm.CDSCode WHERE (satscores.NumGE1500 / satscores.NumTstTakr) > 0.3\t----- bird -----\tcalifornia_schools",
    "13": "SELECT schools.Phone FROM (     SELECT schools.Phone, satscores.NumGE1500 / satscores.NumTstTakr as 'Excellence Rate'     FROM schools     INNER JOIN satscores ON schools.CDSCode = satscores.cds     ORDER BY 'Excellence Rate' DESC     LIMIT 3 ) as subquery\t----- bird -----\tcalifornia_schools",
    "14": "SELECT schools.NCESSchool, schools.School FROM schools ORDER BY schools.Enrollment DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "15": "SELECT satscores.dname FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.StatusType = 'Active' ORDER BY satscores.AvgScrRead DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(*) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Alameda' AND satscores.NumTstTakr < 100\t----- bird -----\tcalifornia_schools",
    "17": "SELECT schools.CharterNum FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.AvgScrWrite > 499 AND schools.CharterNum IS NOT NULL ORDER BY satscores.AvgScrWrite DESC\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(*)  FROM schools  INNER JOIN satscores ON schools.CDSCode = satscores.cds  WHERE schools.County = 'Fresno'  AND schools.FundingType = 'Directly funded'  AND satscores.NumTstTakr <= 250\t----- bird -----\tcalifornia_schools",
    "19": "SELECT schools.Phone FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode ORDER BY satscores.AvgScrMath DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM schools WHERE County = 'Amador' AND Low_Grade = '9' AND High_Grade = '12'\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*)  FROM frpm  INNER JOIN schools ON frpm.CDSCode = schools.CDSCode  WHERE schools.County = 'Los Angeles'  AND frpm.`Free Meal Count (K-12)` > 500  AND frpm.`FRPM Count (K-12)` < 700;\t----- bird -----\tcalifornia_schools",
    "22": "SELECT satscores.sname FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.cname = 'Contra Costa' ORDER BY satscores.NumTstTakr DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "23": "SELECT schools.School, schools.Street FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)` > 30\t----- bird -----\tcalifornia_schools",
    "24": "SELECT schools.School  FROM frpm  INNER JOIN schools ON frpm.CDSCode = schools.CDSCode  INNER JOIN satscores ON schools.CDSCode = satscores.cds  WHERE (frpm.`Free Meal Count (K-12)` / frpm.`Enrollment (K-12)`) > 0.1  AND satscores.NumGE1500 >= 1500\t----- bird -----\tcalifornia_schools",
    "25": "SELECT schools.School, schools.FundingType FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Riverside' GROUP BY schools.School HAVING AVG(satscores.AvgScrMath) > 400\t----- bird -----\tcalifornia_schools",
    "26": "SELECT schools.School, schools.Street, schools.City, schools.State, schools.Zip  FROM schools  INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode  WHERE schools.County = 'Monterey'  AND schools.School = 'High School'  AND frpm.`FRPM Count (Ages 5-17)` > 800\t----- bird -----\tcalifornia_schools",
    "27": "SELECT schools.School, AVG(satscores.AvgScrWrite), schools.Phone  FROM schools  INNER JOIN satscores ON schools.CDSCode = satscores.cds  WHERE schools.OpenDate > '1991' OR schools.ClosedDate < '2000'  GROUP BY schools.School, schools.Phone;\t----- bird -----\tcalifornia_schools",
    "28": "SELECT schools.School, schools.DOCType FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.FundingType = 'Locally Funded' AND (frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) >      (SELECT AVG(frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`)     FROM schools     INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode     WHERE schools.FundingType = 'Locally Funded')\t----- bird -----\tcalifornia_schools",
    "29": "SELECT schools.OpenDate FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode ORDER BY frpm.`Enrollment (K-12)` DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "30": "SELECT schools.City FROM schools ORDER BY schools.Enrollment ASC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "31": "SELECT `School Name`, (`Free Meal Count (K-12)` / `Enrollment (K-12)`) * 100 as 'Eligible Free Rate' FROM frpm ORDER BY `Enrollment (K-12)` DESC LIMIT 11 WHERE `School Name` IN ('10th', '11th')\t----- bird -----\tcalifornia_schools",
    "32": "SELECT schools.School, (frpm.`FRPM Count (K-12)` / frpm.`Enrollment (K-12)`) as 'Eligible free or reduced price meal rate' FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.SOC = 66 ORDER BY frpm.`FRPM Count (K-12)` DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "33": "SELECT schools.School, schools.Website FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000\t----- bird -----\tcalifornia_schools",
    "34": "SELECT CAST(SUM(frpm.`Free Meal Count (Ages 5-17)`), REAL) / SUM(frpm.`Enrollment (Ages 5-17)`) FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.AdmFName1 = 'Kacey' AND schools.AdmLName1 = 'Gibson';\t----- bird -----\tcalifornia_schools",
    "35": "SELECT schools.AdmEmail1  FROM frpm  INNER JOIN schools ON frpm.CDSCode = schools.CDSCode  WHERE frpm.`Charter School (Y/N)` = 1  ORDER BY frpm.`Enrollment (K-12)` ASC  LIMIT 1\t----- bird -----\tcalifornia_schools",
    "36": "SELECT schools.AdmFName1, schools.AdmLName1, schools.AdmFName2, schools.AdmLName2, schools.AdmFName3, schools.AdmLName3 FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds ORDER BY satscores.NumGE1500 DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "37": "SELECT schools.Street, schools.City, schools.Zip, schools.State FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds ORDER BY (satscores.NumGE1500 / satscores.NumTstTakr) ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "38": "SELECT schools.Website  FROM schools  INNER JOIN satscores ON schools.CDSCode = satscores.cds  WHERE schools.County = 'Los Angeles County'  AND satscores.NumTstTakr > 2000  AND satscores.NumTstTakr < 3000\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(satscores.NumTstTakr)  FROM schools  INNER JOIN satscores ON schools.CDSCode = satscores.cds  WHERE schools.County = 'Fresno'  AND YEAR(schools.OpenDate) = 1980\t----- bird -----\tcalifornia_schools",
    "40": "SELECT schools.Phone FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.District = 'Fresno Unified' ORDER BY satscores.AvgScrRead ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "41": "SELECT schools.School FROM (     SELECT schools.School, schools.County, satscores.AvgScrRead,      DENSE_RANK() OVER (PARTITION BY schools.County ORDER BY satscores.AvgScrRead DESC) as rank     FROM schools     INNER JOIN satscores ON schools.CDSCode = satscores.cds     WHERE schools.Virtual = 'F' ) as subquery WHERE rank <= 5\t----- bird -----\tcalifornia_schools",
    "42": "SELECT schools.EdOpsName FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode ORDER BY satscores.AvgScrMath DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "43": "SELECT satscores.AvgScrMath, schools.CDSCode  FROM satscores  INNER JOIN schools ON satscores.cds = schools.CDSCode  ORDER BY (satscores.AvgScrMath + satscores.AvgScrRead + satscores.AvgScrWrite)  LIMIT 1\t----- bird -----\tcalifornia_schools",
    "44": "SELECT satscores.AvgScrWrite, schools.City FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode ORDER BY satscores.NumGE1500 DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "45": "SELECT schools.School, AVG(satscores.AvgScrWrite) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.AdmFName1 = 'Ricci' AND schools.AdmLName1 = 'Ulrich' GROUP BY schools.School\t----- bird -----\tcalifornia_schools",
    "46": "SELECT schools.School FROM schools WHERE schools.DOC = 31 ORDER BY schools.School DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(*) / 12 AS Monthly_Avg_Schools FROM schools WHERE County = 'Alameda County'  AND DOC = 52  AND strftime('%Y', OpenDate) = '1980'\t----- bird -----\tcalifornia_schools",
    "48": "SELECT (CAST((SELECT COUNT(*) FROM schools WHERE StatusType = 'Merged' AND County = 'Orange County' AND DOC = 54) AS REAL)) /  (SELECT COUNT(*) FROM schools WHERE StatusType = 'Merged' AND County = 'Orange County' AND DOC = 52)\t----- bird -----\tcalifornia_schools",
    "49": "SELECT schools.County, schools.School, schools.ClosedDate FROM schools WHERE schools.StatusType = 'Closed' GROUP BY schools.County ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "50": "SELECT schools.Street, schools.School FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds ORDER BY satscores.AvgScrMath DESC LIMIT 7;\t----- bird -----\tcalifornia_schools",
    "51": "SELECT schools.MailStreet, schools.School FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds ORDER BY satscores.AvgScrRead ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(*) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.MailCity = 'Lakeport' AND (satscores.AvgScrRead + satscores.AvgScrMath + satscores.AvgScrWrite) >= 1500\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(satscores.NumTstTakr)  FROM satscores  INNER JOIN schools ON satscores.cds = schools.CDSCode  WHERE schools.MailCity = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "54": "SELECT schools.School, schools.MailZip FROM schools WHERE schools.AdmLName1 = 'Atoian' AND schools.AdmFName1 = 'Avetik'\t----- bird -----\tcalifornia_schools",
    "55": "SELECT CAST((SELECT COUNT(*) FROM schools WHERE MailState = 'California' AND County = 'Colusa') AS REAL) /  (SELECT COUNT(*) FROM schools WHERE MailState = 'California' AND County = 'Humboldt') AS Ratio FROM schools LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE schools.MailState = 'California'  AND schools.StatusType = 'Active'  AND schools.City = 'San Joaquin'\t----- bird -----\tcalifornia_schools",
    "57": "SELECT schools.Phone, schools.Ext  FROM schools  INNER JOIN satscores ON schools.CDSCode = satscores.cds  ORDER BY satscores.AvgScrWrite DESC  LIMIT 332, 1\t----- bird -----\tcalifornia_schools",
    "58": "SELECT schools.School, schools.Phone, schools.Ext FROM schools WHERE schools.Zip = '95203-3704';\t----- bird -----\tcalifornia_schools",
    "59": "SELECT Website FROM schools WHERE (AdmFName1 = 'Mike' AND AdmLName1 = 'Larson') UNION SELECT Website FROM schools WHERE (AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez')\t----- bird -----\tcalifornia_schools",
    "60": "SELECT schools.Website FROM schools WHERE schools.Virtual = 'P' AND schools.Charter = 1 AND schools.County = 'San Joaquin'\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(*) FROM schools WHERE City = 'Hickman' AND Charter = 1 AND DOC = 52\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*)  FROM schools  INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode  WHERE schools.County = 'Los Angeles'  AND schools.Charter = 0  AND (frpm.`Free Meal Count (K-12)` * 100 / frpm.`Enrollment (K-12)`) < 0.18\t----- bird -----\tcalifornia_schools",
    "63": "SELECT AdmFName1, AdmLName1, AdmFName2, AdmLName2, AdmFName3, AdmLName3, School, City FROM schools WHERE Charter = 1 AND CharterNum = '00D2'\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE schools.MailCity = 'Hickman' AND schools.CharterNum = '00D4'\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (CAST((SELECT COUNT(*) FROM schools WHERE County = 'Santa Clara County' AND FundingType = 'Locally Funded') AS REAL) * 100) /  (SELECT COUNT(*) FROM schools WHERE County = 'Santa Clara County') AS Ratio FROM schools LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND County = 'Stanislaus' AND FundingType = 'Directly Funded'\t----- bird -----\tcalifornia_schools",
    "67": "SELECT SUM(amount)  FROM df  WHERE element = 'Community College District'  AND year = '1989'  AND city = 'San Francisco'\t----- bird -----\tcalifornia_schools",
    "68": "SELECT schools.County FROM schools WHERE schools.SOC = 11 AND schools.ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' GROUP BY schools.County ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "69": "SELECT schools.NCESDist FROM schools WHERE schools.SOC = '31'\t----- bird -----\tcalifornia_schools",
    "70": "SELECT (SELECT COUNT(*) FROM schools WHERE County = 'Alpine' AND SOCType = 'District Community Day School' AND StatusType = 'Active') AS Active, (SELECT COUNT(*) FROM schools WHERE County = 'Alpine' AND SOCType = 'District Community Day School' AND StatusType = 'Closed') AS Closed\t----- bird -----\tcalifornia_schools",
    "71": "SELECT schools.District FROM schools WHERE schools.City = 'Fresno' AND schools.Magnet = 0\t----- bird -----\tcalifornia_schools",
    "72": "SELECT frpm.`Enrollment (Ages 5-17)`  FROM frpm  INNER JOIN schools ON frpm.CDSCode = schools.CDSCode  WHERE schools.School = 'Fremont'  AND frpm.`Academic Year` = '2014-2015'  AND schools.EdOpsCode = 'SSS'\t----- bird -----\tcalifornia_schools",
    "73": "SELECT `frpm`.`FRPM Count (Ages 5-17)`  FROM `frpm`  INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode`  WHERE `schools`.`MailStreet` = 'PO Box 1040'  AND `schools`.`School` = 'Youth Authority School';\t----- bird -----\tcalifornia_schools",
    "74": "SELECT MIN(schools.grade) FROM schools WHERE schools.NCESDist = '0613360' AND schools.EdOpsCode = 'SPECON';\t----- bird -----\tcalifornia_schools",
    "75": "SELECT schools.EILName, schools.School  FROM frpm  INNER JOIN schools ON frpm.CDSCode = schools.CDSCode  WHERE frpm.`NSLP Provision Status` = 'Breakfast Provision 2'  AND frpm.`County Code` = '37'\t----- bird -----\tcalifornia_schools",
    "76": "SELECT schools.City  FROM schools  INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode  WHERE schools.EILCode = 'HS'  AND frpm.LunchProvision = 2  AND schools.LowestGrade = 9  AND schools.HighestGrade = 12  AND schools.County = 'Merced';\t----- bird -----\tcalifornia_schools",
    "77": "SELECT schools.School, frpm.`Percent (%) Eligible FRPM (Ages 5-17)` FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.County = 'Los Angeles' AND schools.GSserved = 'K-9'\t----- bird -----\tcalifornia_schools",
    "78": "SELECT schools.GSserved FROM schools WHERE schools.City = 'Adelanto' GROUP BY schools.GSserved ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "79": "SELECT schools.County, COUNT(schools.School)  FROM schools  WHERE schools.Virtual = 'F' AND (schools.County = 'San Diego' OR schools.County = 'Santa Barbara')  GROUP BY schools.County  ORDER BY COUNT(schools.School) DESC  LIMIT 1\t----- bird -----\tcalifornia_schools",
    "80": "SELECT schools.School, schools.Latitude FROM schools ORDER BY schools.Latitude DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "81": "SELECT schools.City, schools.School  FROM schools  WHERE schools.State = 'CA'  ORDER BY schools.Latitude ASC  LIMIT 1\t----- bird -----\tcalifornia_schools",
    "82": "SELECT schools.GSoffered FROM schools ORDER BY schools.Longitude DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "83": "SELECT schools.City, COUNT(schools.School)  FROM schools  INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode  WHERE schools.Magnet = 1 AND schools.GSserved = 'K-8' AND frpm.`NSLP Provision Status` = 'Multiple Provision Types'  GROUP BY schools.City\t----- bird -----\tcalifornia_schools",
    "84": "SELECT schools.AdmFName1, schools.district  FROM schools  GROUP BY schools.AdmFName1  ORDER BY COUNT(*) DESC  LIMIT 2\t----- bird -----\tcalifornia_schools",
    "85": "SELECT frpm.`Percent (%) Eligible Free (K-12)`, frpm.`District Code` FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.AdmFName1 = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "86": "SELECT schools.AdmLName1, schools.District, schools.County, schools.School FROM schools WHERE schools.CharterNum = 40\t----- bird -----\tcalifornia_schools",
    "87": "SELECT schools.AdmEmail1, schools.AdmEmail2, schools.AdmEmail3 FROM schools WHERE schools.County = 'San Bernardino'  AND schools.City = 'San Bernardino City Unified'  AND schools.OpenDate BETWEEN '1/1/2009' AND '12/31/2010'  AND schools.SOC = 62  AND schools.DOC = 54\t----- bird -----\tcalifornia_schools",
    "88": "SELECT schools.AdmEmail1, schools.School FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds ORDER BY satscores.NumGE1500 DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(account.account_id)  FROM account  INNER JOIN district ON account.district_id = district.district_id  WHERE account.frequency = 'POPLATEK PO OBRATU' AND district.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(*)  FROM account  INNER JOIN district ON account.district_id = district.district_id  INNER JOIN loan ON account.account_id = loan.account_id  WHERE district.A3 = 'Prague';\t----- bird -----\tfinancial",
    "91": "SELECT CASE      WHEN AVG(district.A12) > AVG(district.A13) THEN '1995 has higher percentage'      ELSE '1996 has higher percentage'  END  FROM district\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT client.district_id)  FROM client  INNER JOIN district ON client.district_id = district.district_id  WHERE client.gender = 'F'  AND district.A11 > 6000  AND district.A11 < 10000\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(*)  FROM client  INNER JOIN district ON client.district_id = district.district_id  WHERE district.A3 = 'North Bohemia'  AND client.gender = 'M'  AND district.A11 > 8000\t----- bird -----\tfinancial",
    "94": "SELECT client.client_id,  (SELECT MAX(district.A11) FROM client INNER JOIN district ON client.district_id = district.district_id) - district.A11 AS gap FROM client  INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F' ORDER BY client.birth_date ASC, district.A11 ASC LIMIT 1\t----- bird -----\tfinancial",
    "95": "SELECT account.account_id FROM account INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id INNER JOIN district ON account.district_id = district.district_id ORDER BY client.birth_date DESC, district.A11 DESC LIMIT 1\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(*)  FROM account  INNER JOIN disp ON account.account_id = disp.account_id  WHERE account.frequency = 'POPLATEK TYDNE' AND disp.type = 'OWNER'\t----- bird -----\tfinancial",
    "97": "SELECT client.client_id  FROM account  INNER JOIN disp ON account.account_id = disp.account_id  INNER JOIN client ON disp.client_id = client.client_id  WHERE account.frequency = 'POPLATEK PO OBRATU'  AND disp.type = 'Disponent'\t----- bird -----\tfinancial",
    "98": "SELECT account.account_id  FROM account  INNER JOIN loan ON account.account_id = loan.account_id  WHERE strftime('%Y', loan.date) = '1997'  AND loan.amount = (SELECT MIN(loan.amount) FROM loan WHERE strftime('%Y', loan.date) = '1997')  AND account.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "99": "SELECT account.account_id  FROM account  INNER JOIN loan ON account.account_id = loan.account_id  WHERE loan.duration > 12 AND strftime('%Y', account.date) = '1993'  ORDER BY loan.amount DESC  LIMIT 1\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(*)  FROM account  INNER JOIN disp ON account.account_id = disp.account_id  INNER JOIN client ON disp.client_id = client.client_id  INNER JOIN district ON account.district_id = district.district_id  WHERE client.gender = 'F'  AND client.birth_date < '1950-01-01'  AND district.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "101": "SELECT account.account_id  FROM account  WHERE account.date = (SELECT MIN(account.date) FROM account WHERE YEAR(account.date) = 1995)\t----- bird -----\tfinancial",
    "102": "SELECT trans.account FROM trans INNER JOIN account ON trans.account_id = account.account_id WHERE account.date < 1997 AND trans.amount > 3000\t----- bird -----\tfinancial",
    "103": "SELECT client.client_id  FROM card  INNER JOIN disp ON card.disp_id = disp.disp_id  INNER JOIN client ON disp.client_id = client.client_id  WHERE card.issued = '1994/3/3'\t----- bird -----\tfinancial",
    "104": "SELECT account.date  FROM account  INNER JOIN trans ON account.account_id = trans.account_id  WHERE trans.amount = 840 AND trans.date = '1998/10/14'\t----- bird -----\tfinancial",
    "105": "SELECT account.district_id  FROM loan  INNER JOIN account ON loan.account_id = account.account_id  WHERE loan.date = '1994/8/25'\t----- bird -----\tfinancial",
    "106": "SELECT trans.amount FROM card INNER JOIN disp ON card.disp_id = disp.disp_id INNER JOIN trans ON disp.account_id = trans.account_id WHERE card.issued = '1996/10/21' ORDER BY trans.amount DESC LIMIT 1\t----- bird -----\tfinancial",
    "107": "SELECT client.gender FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE district.district_id = (     SELECT district_id     FROM district     ORDER BY A11 DESC     LIMIT 1 ) ORDER BY client.birth_date LIMIT 1\t----- bird -----\tfinancial",
    "108": "SELECT trans.amount FROM (     SELECT trans.amount, trans.date, account.date     FROM (         SELECT loan.account_id, loan.amount, account.date         FROM loan         INNER JOIN account ON loan.account_id = account.account_id         ORDER BY loan.amount DESC         LIMIT 1     ) AS df1     INNER JOIN trans ON df1.account_id = trans.account_id     WHERE trans.date > df1.date     ORDER BY trans.date     LIMIT 1 ) AS df2\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(*)  FROM account  INNER JOIN district ON account.district_id = district.district_id  INNER JOIN client ON account.account_id = client.client_id  WHERE district.A2 = 'Jesenik' AND client.gender = 'F'\t----- bird -----\tfinancial",
    "110": "SELECT disp.disp_id  FROM trans  INNER JOIN disp ON trans.account_id = disp.account_id  WHERE trans.amount = 5100 AND trans.date = '1998/9/2'\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(*)  FROM account  INNER JOIN district ON account.district_id = district.district_id  WHERE district.A2 = 'Litomerice' AND strftime('%Y', account.date) = '1996'\t----- bird -----\tfinancial",
    "112": "SELECT district.A2  FROM client  INNER JOIN disp ON client.client_id = disp.client_id  INNER JOIN account ON disp.account_id = account.account_id  INNER JOIN district ON account.district_id = district.district_id  WHERE client.gender = 'F' AND client.birth_date = '1976/1/29'\t----- bird -----\tfinancial",
    "113": "SELECT client.birth_date  FROM loan  INNER JOIN disp ON loan.account_id = disp.account_id  INNER JOIN client ON disp.client_id = client.client_id  WHERE loan.amount = 98832 AND loan.date = '1996/1/3'\t----- bird -----\tfinancial",
    "114": "SELECT account.account_id  FROM account  INNER JOIN district ON account.district_id = district.district_id  WHERE district.A3 = 'Prague'  ORDER BY account.date  LIMIT 1\t----- bird -----\tfinancial",
    "115": "SELECT (CAST(COUNT(df2.client_id) AS REAL) * 100 / COUNT(df1.client_id)) AS percentage FROM      (SELECT * FROM client      INNER JOIN district ON client.district_id = district.district_id      WHERE district.A3 = 'south Bohemia'      ORDER BY district.A4 DESC      LIMIT 1) AS df1,     (SELECT * FROM client      INNER JOIN district ON client.district_id = district.district_id      WHERE district.A3 = 'south Bohemia' AND client.gender = 'M'      ORDER BY district.A4 DESC      LIMIT 1) AS df2\t----- bird -----\tfinancial",
    "116": "SELECT CAST((tmp_res2 - tmp_res1) AS REAL) * 100 / tmp_res1 AS increase_rate FROM (     SELECT SUM(trans.balance) AS tmp_res1     FROM trans     INNER JOIN (         SELECT account_id         FROM loan         WHERE date = (SELECT MIN(date) FROM loan WHERE date >= '1993-07-05')     ) AS df1 ON trans.account_id = df1.account_id     WHERE trans.date = '1993-03-22' ) AS df2, (     SELECT SUM(trans.balance) AS tmp_res2     FROM trans     INNER JOIN (         SELECT account_id         FROM loan         WHERE date = (SELECT MIN(date) FROM loan WHERE date >= '1993-07-05')     ) AS df1 ON trans.account_id = df1.account_id     WHERE trans.date = '1998-12-27' ) AS df3\t----- bird -----\tfinancial",
    "117": "SELECT (CAST(SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) AS REAL) / SUM(amount)) * 100 AS percentage FROM loan\t----- bird -----\tfinancial",
    "118": "SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM loan WHERE amount < 100000)  FROM loan  WHERE amount < 100000 AND status = 'C'\t----- bird -----\tfinancial",
    "119": "SELECT account.account_id, district.A2, district.A3 FROM account INNER JOIN district ON account.district_id = district.district_id WHERE strftime('%Y', account.date) = '1993' AND account.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "120": "SELECT account.account_id, account.frequency FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A3 = 'east Bohemia' AND account.date BETWEEN 1995 AND 2000\t----- bird -----\tfinancial",
    "121": "SELECT account.account_id, account.date  FROM account  INNER JOIN district ON account.district_id = district.district_id  WHERE district.A2 = 'Prachatice';\t----- bird -----\tfinancial",
    "122": "SELECT district.A2, district.A3  FROM loan  INNER JOIN account ON loan.account_id = account.account_id  INNER JOIN district ON account.district_id = district.district_id  WHERE loan.loan_id = '4990';\t----- bird -----\tfinancial",
    "123": "SELECT account.account_id, district.A2, district.A3 FROM account INNER JOIN loan ON account.account_id = loan.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.amount > 300000\t----- bird -----\tfinancial",
    "124": "SELECT loan.loan_id, district.A2, district.A11 FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.duration = 60\t----- bird -----\tfinancial",
    "125": "SELECT district.A2, ((CAST(district.A13 AS REAL) - CAST(district.A12 AS REAL)) * 100 / CAST(district.A12 AS REAL)) AS Unemployment_Increment_Rate FROM loan  INNER JOIN account ON loan.account_id = account.account_id  INNER JOIN disp ON account.account_id = disp.account_id  INNER JOIN client ON disp.client_id = client.client_id  INNER JOIN district ON client.district_id = district.district_id  WHERE loan.status = 'D'\t----- bird -----\tfinancial",
    "126": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM account WHERE strftime('%Y', date) = '1993') AS percentage FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Decin' AND strftime('%Y', account.date) = '1993'\t----- bird -----\tfinancial",
    "127": "SELECT account.account_id FROM account WHERE account.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "128": "SELECT district.A2 FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE client.gender = 'F' AND disp.type = 'OWNER' GROUP BY district.A2 ORDER BY COUNT(*) DESC LIMIT 9\t----- bird -----\tfinancial",
    "129": "SELECT district.A2 FROM trans INNER JOIN account ON trans.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE trans.type = 'VYDAJ' AND trans.date LIKE '1996-01%' ORDER BY trans.amount DESC LIMIT 10\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(*)  FROM account  INNER JOIN district ON account.district_id = district.district_id  LEFT JOIN disp ON account.account_id = disp.account_id  LEFT JOIN card ON disp.disp_id = card.disp_id  WHERE district.A3 = 'South Bohemia' AND card.card_id IS NULL\t----- bird -----\tfinancial",
    "131": "SELECT district.A3 FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.status IN ('C', 'D') GROUP BY district.district_id ORDER BY COUNT(loan.loan_id) DESC LIMIT 1\t----- bird -----\tfinancial",
    "132": "SELECT AVG(loan.amount) FROM loan INNER JOIN disp ON loan.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'M'\t----- bird -----\tfinancial",
    "133": "SELECT district.A2  FROM district  ORDER BY district.A13 DESC  LIMIT 1;\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(account.account_id)  FROM account  INNER JOIN  (SELECT district_id   FROM district   ORDER BY A16 DESC   LIMIT 1) AS df1  ON account.district_id = df1.district_id\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT account.account_id)  FROM account  INNER JOIN trans ON account.account_id = trans.account_id  WHERE trans.operation = 'VYBER KARTOU'  AND account.frequency = 'POPLATEK MESICNE'  AND trans.balance < 0\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(*)  FROM account  INNER JOIN loan ON account.account_id = loan.account_id  WHERE account.frequency = 'POPLATEK MESICNE'  AND loan.amount >= 250000  AND loan.date BETWEEN '1995-01-01' AND '1997-12-31'\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT account.account_id)  FROM account  INNER JOIN loan ON account.account_id = loan.account_id  WHERE loan.status IN ('C', 'D')  AND account.district_id = 1\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(*)  FROM      (SELECT district_id      FROM district      ORDER BY A15 DESC      LIMIT 1 OFFSET 1) AS subquery  INNER JOIN client  ON subquery.district_id = client.district_id  WHERE client.gender = 'M';\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*)  FROM card  INNER JOIN disp ON card.disp_id = disp.disp_id  WHERE card.type = 'gold' AND disp.type = 'OWNER'\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(*) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Pisek';\t----- bird -----\tfinancial",
    "141": "SELECT district.A2 FROM trans INNER JOIN account ON trans.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE trans.amount > 10000 AND strftime('%Y', trans.date) = '1997'\t----- bird -----\tfinancial",
    "142": "SELECT account.account_id  FROM account  INNER JOIN district ON account.district_id = district.district_id  INNER JOIN order ON account.account_id = order.account_id  WHERE district.A2 = 'Pisek' AND order.k_symbol = 'SIPO'\t----- bird -----\tfinancial",
    "143": "SELECT account.account_id  FROM account  INNER JOIN card ON account.account_id = card.disp_id  WHERE card.type = 'gold'\t----- bird -----\tfinancial",
    "144": "SELECT AVG(trans.amount) FROM trans WHERE trans.operation = 'VYBER KARTOU' AND YEAR(trans.date) = 2021\t----- bird -----\tfinancial",
    "145": "SELECT account.account_id FROM account INNER JOIN trans ON account.account_id = trans.account_id WHERE trans.operation = 'VYBER KARTOU' AND trans.amount < (SELECT AVG(trans.amount) FROM trans WHERE trans.operation = 'VYBER KARTOU') AND YEAR(trans.date) = 1998\t----- bird -----\tfinancial",
    "146": "SELECT account.account_id  FROM account  INNER JOIN disp ON account.account_id = disp.account_id  INNER JOIN client ON disp.client_id = client.client_id  INNER JOIN card ON disp.disp_id = card.disp_id  INNER JOIN loan ON account.account_id = loan.account_id  WHERE client.gender = 'F'  AND card.type = 'credit'  AND disp.type = 'owner'  AND loan.loan_id IS NOT NULL\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT account.account_id) FROM account INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id INNER JOIN district ON account.district_id = district.district_id WHERE client.gender = 'F' AND district.A3 = 'south Bohemia'\t----- bird -----\tfinancial",
    "148": "SELECT account.account_id  FROM account  INNER JOIN district ON account.district_id = district.district_id  INNER JOIN disp ON account.account_id = disp.account_id  WHERE district.A2 = 'Tabor' AND disp.type = 'OWNER'\t----- bird -----\tfinancial",
    "149": "SELECT account.frequency FROM account LEFT JOIN loan ON account.account_id = loan.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.account_id IS NULL AND district.A11 > 8000 AND district.A11 <= 9000\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT account.account_id) FROM account INNER JOIN district ON account.district_id = district.district_id INNER JOIN trans ON account.account_id = trans.account_id WHERE district.A3 = 'North Bohemia' AND trans.bank = 'AB'\t----- bird -----\tfinancial",
    "151": "SELECT district.A2  FROM district  INNER JOIN account ON district.district_id = account.district_id  INNER JOIN trans ON account.account_id = trans.account_id  WHERE trans.type = 'VYDAJ';\t----- bird -----\tfinancial",
    "152": "SELECT AVG(district.A15)  FROM district  INNER JOIN account ON district.district_id = account.district_id  WHERE district.A15 > 4000 AND YEAR(account.date) >= 1997\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(*)  FROM card  INNER JOIN disp ON card.disp_id = disp.disp_id  INNER JOIN loan ON disp.account_id = loan.account_id  WHERE card.type = 'classic' AND disp.type = 'OWNER'\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(*)  FROM client  INNER JOIN district ON client.district_id = district.district_id  WHERE district.A2 = 'Hl.m. Praha' AND client.gender = 'M'\t----- bird -----\tfinancial",
    "155": "SELECT (CAST((SELECT COUNT(*) FROM card WHERE type = 'Gold' AND issued < '1998-01-01') AS REAL) / (SELECT COUNT(*) FROM card)) * 100 FROM card LIMIT 1\t----- bird -----\tfinancial",
    "156": "SELECT client.client_id  FROM disp  INNER JOIN loan ON disp.account_id = loan.account_id  INNER JOIN client ON disp.client_id = client.client_id  WHERE disp.type = 'OWNER'  ORDER BY loan.amount DESC  LIMIT 1\t----- bird -----\tfinancial",
    "157": "SELECT district.A15  FROM account  INNER JOIN district ON account.district_id = district.district_id  WHERE account.account_id = 532\t----- bird -----\tfinancial",
    "158": "SELECT account.district_id  FROM account  INNER JOIN order ON account.account_id = order.account_id  WHERE order.order_id = '33333'\t----- bird -----\tfinancial",
    "159": "SELECT trans.account  FROM trans  INNER JOIN disp ON trans.account_id = disp.account_id  INNER JOIN client ON disp.client_id = client.client_id  WHERE client.client_id = 3356 AND trans.operation = 'VYBER'\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(*)  FROM account  INNER JOIN loan ON account.account_id = loan.account_id  WHERE account.frequency = 'POPLATEK TYDNE' AND loan.amount < 200000\t----- bird -----\tfinancial",
    "161": "SELECT card.type  FROM card  INNER JOIN disp ON card.disp_id = disp.disp_id  WHERE disp.client_id = '13539'\t----- bird -----\tfinancial",
    "162": "SELECT district.A3  FROM client  INNER JOIN district ON client.district_id = district.district_id  WHERE client.client_id = 3541\t----- bird -----\tfinancial",
    "163": "SELECT account.district_id FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.status = 'A' GROUP BY account.district_id ORDER BY COUNT(account.account_id) DESC LIMIT 1\t----- bird -----\tfinancial",
    "164": "SELECT client.client_id  FROM order  WHERE order.order_id = '32423';\t----- bird -----\tfinancial",
    "165": "SELECT trans.account  FROM trans  INNER JOIN account ON trans.account_id = account.account_id  WHERE account.district_id = 5\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Jesenik'\t----- bird -----\tfinancial",
    "167": "SELECT client.client_id FROM card INNER JOIN disp ON card.disp_id = disp.disp_id INNER JOIN client ON disp.client_id = client.client_id WHERE card.type = 'junior' AND card.issued >= '1997-01-01'\t----- bird -----\tfinancial",
    "168": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A11 > 10000)  FROM account  INNER JOIN disp ON account.account_id = disp.account_id  INNER JOIN client ON disp.client_id = client.client_id  INNER JOIN district ON account.district_id = district.district_id  WHERE district.A11 > 10000 AND client.gender = 'F'\t----- bird -----\tfinancial",
    "169": "SELECT (CAST((SELECT SUM(loan.amount) FROM loan  INNER JOIN disp ON loan.account_id = disp.account_id  INNER JOIN client ON disp.client_id = client.client_id  WHERE client.gender = 'M' AND strftime('%Y', loan.date) = '1997') -  (SELECT SUM(loan.amount) FROM loan  INNER JOIN disp ON loan.account_id = disp.account_id  INNER JOIN client ON disp.client_id = client.client_id  WHERE client.gender = 'M' AND strftime('%Y', loan.date) = '1996') AS REAL) * 100 /  (SELECT SUM(loan.amount) FROM loan  INNER JOIN disp ON loan.account_id = disp.account_id  INNER JOIN client ON disp.client_id = client.client_id  WHERE client.gender = 'M' AND strftime('%Y', loan.date) = '1996') AS growth_rate\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*)  FROM trans  WHERE trans.date > 1995 AND trans.operation = 'VYBER KARTOU'\t----- bird -----\tfinancial",
    "171": "SELECT (SELECT SUM(district.A16) FROM district WHERE district.A3 = 'north Bohemia') -  (SELECT SUM(district.A16) FROM district WHERE district.A3 = 'east Bohemia')\t----- bird -----\tfinancial",
    "172": "SELECT disp.type, COUNT(*)  FROM disp  INNER JOIN account ON disp.account_id = account.account_id  WHERE account.account_id BETWEEN 1 AND 10 AND (disp.type = 'OWNER' OR disp.type = 'DISPONENT')  GROUP BY disp.type\t----- bird -----\tfinancial",
    "173": "SELECT COUNT(*) as 'StatementRequest Frequency', trans.k_symbol as 'Debit Aim' FROM account INNER JOIN trans ON account.account_id = trans.account_id WHERE account.account_id = 3 AND trans.k_symbol = 'StatementRequest' UNION SELECT COUNT(*) as 'StatementRequest Frequency', trans.k_symbol as 'Debit Aim' FROM account INNER JOIN trans ON account.account_id = trans.account_id WHERE account.account_id = 3 AND trans.amount = 3539;\t----- bird -----\tfinancial",
    "174": "SELECT EXTRACT(YEAR FROM client.birth_date)  FROM disp  INNER JOIN client ON disp.client_id = client.client_id  WHERE disp.account_id = '130' AND disp.type = 'OWNER'\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(DISTINCT account.account_id) FROM account INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN trans ON account.account_id = trans.account_id WHERE disp.type = 'OWNER' AND trans.k_symbol = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "176": "SELECT loan.amount, loan.status  FROM loan  INNER JOIN disp ON loan.account_id = disp.account_id  INNER JOIN client ON disp.client_id = client.client_id  WHERE client.client_id = 992;\t----- bird -----\tfinancial",
    "177": "SELECT trans.balance, client.gender  FROM trans  INNER JOIN disp ON trans.account_id = disp.account_id  INNER JOIN client ON disp.client_id = client.client_id  WHERE trans.trans_id = 851 AND client.client_id = 4\t----- bird -----\tfinancial",
    "178": "SELECT card.type  FROM card  INNER JOIN disp ON card.disp_id = disp.disp_id  INNER JOIN client ON disp.client_id = client.client_id  WHERE client.client_id = 9\t----- bird -----\tfinancial",
    "179": "SELECT SUM(trans.amount)  FROM client  INNER JOIN disp ON client.client_id = disp.client_id  INNER JOIN trans ON disp.account_id = trans.account_id  WHERE client.client_id = 617 AND strftime('%Y', trans.date) = '1998'\t----- bird -----\tfinancial",
    "180": "SELECT client.client_id  FROM client  INNER JOIN district ON client.district_id = district.district_id  WHERE district.A3 = 'East Bohemia'  AND client.birth_date BETWEEN '1983-01-01' AND '1987-12-31'\t----- bird -----\tfinancial",
    "181": "SELECT client.client_id FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN loan ON disp.account_id = loan.account_id WHERE client.gender = 'F' ORDER BY loan.amount DESC LIMIT 3\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(*)  FROM client  INNER JOIN disp ON client.client_id = disp.client_id  INNER JOIN trans ON disp.account_id = trans.account_id  WHERE client.gender = 'M'  AND client.birth_date BETWEEN '1974-01-01' AND '1976-12-31'  AND trans.k_symbol = 'SIPO'  AND trans.amount > 4000\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(account.account_id)  FROM account  INNER JOIN district ON account.district_id = district.district_id  WHERE district.district_id = 'Beroun' AND account.date > 1996\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(*)  FROM client  INNER JOIN disp ON client.client_id = disp.client_id  INNER JOIN card ON disp.disp_id = card.disp_id  WHERE client.gender = 'F' AND card.type = 'junior'\t----- bird -----\tfinancial",
    "185": "SELECT CAST(COUNT(*) FILTER (WHERE client.gender = 'F') AS REAL) * 100 / COUNT(*)  FROM account  INNER JOIN disp ON account.account_id = disp.account_id  INNER JOIN client ON disp.client_id = client.client_id  INNER JOIN district ON account.district_id = district.district_id  WHERE district.A3 = 'Prague'\t----- bird -----\tfinancial",
    "186": "SELECT (CAST(COUNT(*) FILTER (WHERE client.gender = 'M') AS REAL) * 100 / COUNT(*)) AS percentage FROM account INNER JOIN client ON account.account_id = client.client_id WHERE account.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(*) FROM account INNER JOIN disp ON account.account_id = disp.account_id WHERE account.frequency = 'POPLATEK TYDNE' AND disp.type = 'OWNER'\t----- bird -----\tfinancial",
    "188": "SELECT account.account_id  FROM account  INNER JOIN loan ON account.account_id = loan.account_id  WHERE loan.duration > 24 AND account.date < '1997'  ORDER BY loan.amount ASC  LIMIT 1\t----- bird -----\tfinancial",
    "189": "SELECT account.account_id  FROM account  INNER JOIN disp ON account.account_id = disp.account_id  INNER JOIN client ON disp.client_id = client.client_id  INNER JOIN district ON account.district_id = district.district_id  WHERE client.gender = 'F'  ORDER BY client.birth_date DESC, district.A11 ASC  LIMIT 1\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(*)  FROM client  INNER JOIN district ON client.district_id = district.district_id  WHERE district.A3 = 'East Bohemia' AND strftime('%Y', client.birth_date) = '1920'\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(*)  FROM account  INNER JOIN loan ON account.account_id = loan.account_id  WHERE account.frequency = 'POPLATEK TYDNE' AND loan.duration = 24\t----- bird -----\tfinancial",
    "192": "SELECT AVG(loan.amount) FROM account INNER JOIN loan ON account.account_id = loan.account_id WHERE account.frequency = 'POPLATEK PO OBRATU' AND (loan.status = 'C' OR loan.status = 'D')\t----- bird -----\tfinancial",
    "193": "SELECT client.client_id, client.district_id  FROM client  INNER JOIN disp ON client.client_id = disp.client_id  WHERE disp.type = 'OWNER'\t----- bird -----\tfinancial",
    "194": "SELECT client.client_id, client.birth_date FROM card INNER JOIN disp ON card.disp_id = disp.disp_id INNER JOIN client ON disp.client_id = client.client_id WHERE card.type = 'gold' AND disp.type = 'OWNER'\t----- bird -----\tfinancial",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT atom.molecule_id)  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.label = '-' AND atom.element = 'cl'\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(atom.molecule_id)  FROM atom  INNER JOIN bond ON atom.molecule_id = bond.molecule_id  WHERE bond.bond_type = '-' AND atom.element = 'O'\t----- bird -----\ttoxicology",
    "198": "SELECT AVG(single_bonded_count)  FROM (     SELECT molecule.molecule_id, COUNT(bond.bond_id) AS single_bonded_count      FROM molecule      INNER JOIN bond ON molecule.molecule_id = bond.molecule_id      WHERE molecule.label = '+' AND bond.bond_type = '-'      GROUP BY molecule.molecule_id ) AS subquery\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(*)  FROM molecule  INNER JOIN atom ON molecule.molecule_id = atom.molecule_id  WHERE atom.element = 'na' AND molecule.label = '-'\t----- bird -----\ttoxicology",
    "200": "SELECT molecule.molecule_id  FROM bond  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE bond.bond_type = '#' AND molecule.label = '+'\t----- bird -----\ttoxicology",
    "201": "SELECT (CAST(SUM(CASE WHEN atom.element = 'c' THEN 1 ELSE 0 END) AS REAL) * 100) / COUNT(atom.atom_id)  FROM atom  INNER JOIN bond ON atom.molecule_id = bond.molecule_id  WHERE bond.bond_type = '='\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*)  FROM bond  WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element != 'br'\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND label = '+'\t----- bird -----\ttoxicology",
    "205": "SELECT atom.molecule_id FROM atom WHERE atom.element = 'c';\t----- bird -----\ttoxicology",
    "206": "SELECT atom.element  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  WHERE connected.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "207": "SELECT atom.element FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '=';\t----- bird -----\ttoxicology",
    "208": "SELECT molecule.label FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE atom.element = 'H' GROUP BY molecule.label ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "209": "SELECT bond.bond_type  FROM bond  INNER JOIN atom ON bond.molecule_id = atom.molecule_id  WHERE atom.element = 'Cl'\t----- bird -----\ttoxicology",
    "210": "SELECT atom.atom_id, connected.atom_id2  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "211": "SELECT connected.atom_id, connected.atom_id2  FROM molecule  INNER JOIN atom ON molecule.molecule_id = atom.molecule_id  INNER JOIN connected ON atom.atom_id = connected.atom_id  WHERE molecule.label = '-'\t----- bird -----\ttoxicology",
    "212": "SELECT atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '-' GROUP BY atom.element ORDER BY COUNT(atom.element) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "213": "SELECT bond.bond_type  FROM connected  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE (connected.atom_id = 'TR004_8' AND connected.atom_id2 = 'TR004_20')  OR (connected.atom_id = 'TR004_20' AND connected.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "214": "SELECT molecule.label FROM molecule WHERE molecule.molecule_id NOT IN (     SELECT molecule.molecule_id     FROM molecule     INNER JOIN atom ON molecule.molecule_id = atom.molecule_id     WHERE atom.element = 'sn' );\t----- bird -----\ttoxicology",
    "215": "SELECT (SELECT COUNT(DISTINCT atom.atom_id) FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'i' AND bond.bond_type = '-') + (SELECT COUNT(DISTINCT atom.atom_id) FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 's' AND bond.bond_type = '-') AS total_atoms\t----- bird -----\ttoxicology",
    "216": "SELECT connected.atom_id, connected.atom_id2  FROM connected  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "217": "SELECT connected.atom_id2  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  WHERE atom.molecule_id = 'TR181'\t----- bird -----\ttoxicology",
    "218": "SELECT CAST(COUNT(DISTINCT df2.molecule_id) * 100.0 / COUNT(DISTINCT df1.molecule_id)) AS percentage FROM      (SELECT molecule_id FROM atom WHERE element != 'f') AS df2,     (SELECT molecule_id FROM molecule WHERE label = '+') AS df1 WHERE df2.molecule_id = df1.molecule_id\t----- bird -----\ttoxicology",
    "219": "SELECT (CAST(SUM(CASE WHEN bond.bond_type = '#' AND molecule.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100) / COUNT(bond.bond_id) AS percent FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id\t----- bird -----\ttoxicology",
    "220": "SELECT atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR000' ORDER BY atom.element ASC LIMIT 3\t----- bird -----\ttoxicology",
    "221": "SELECT atom.atom_id, connected.atom_id  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.molecule_id = 'TR001' AND bond.bond_id = 'TR001_2_6'\t----- bird -----\ttoxicology",
    "222": "SELECT (SELECT COUNT(*) FROM molecule WHERE label = '+') - (SELECT COUNT(*) FROM molecule WHERE label = '-') AS difference\t----- bird -----\ttoxicology",
    "223": "SELECT connected.atom_id, connected.atom_id2  FROM bond  INNER JOIN connected ON bond.bond_id = connected.bond_id  WHERE bond.bond_id = 'TR000_2_5'\t----- bird -----\ttoxicology",
    "224": "SELECT connected.bond_id FROM connected WHERE connected.atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "225": "SELECT molecule.molecule_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = ' = ' ORDER BY molecule.molecule_id ASC LIMIT 5\t----- bird -----\ttoxicology",
    "226": "SELECT CAST(SUM(CASE WHEN bond.bond_type = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(bond.bond_id) AS percent FROM bond WHERE bond.molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "227": "SELECT ROUND((CAST(SUM(CASE WHEN molecule.label = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(molecule.molecule_id)) * 100, 3) AS percentage FROM molecule\t----- bird -----\ttoxicology",
    "228": "SELECT CAST(SUM(CASE WHEN atom.element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(atom.atom_id) AS percent FROM atom WHERE atom.molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "229": "SELECT bond.bond_type  FROM bond  WHERE bond.molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "230": "SELECT atom.element, molecule.label  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "231": "SELECT bond.bond_type, molecule.label FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.molecule_id = 'TR010' GROUP BY bond.bond_type ORDER BY COUNT(bond.bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "232": "SELECT molecule.molecule_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '-' AND molecule.label = '-' ORDER BY molecule.molecule_id ASC LIMIT 3\t----- bird -----\ttoxicology",
    "233": "SELECT bond.bond_id  FROM bond  WHERE bond.molecule_id = 'TR006'  ORDER BY bond.bond_id ASC  LIMIT 2\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(*)  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  WHERE atom.molecule_id = 'TR009' AND (connected.atom_id = 'TR009_12' OR connected.atom_id2 = 'TR009_12')\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT molecule.molecule_id)  FROM molecule  INNER JOIN atom ON molecule.molecule_id = atom.molecule_id  WHERE molecule.label = '+' AND atom.element = 'br'\t----- bird -----\ttoxicology",
    "236": "SELECT bond.bond_type, connected.atom_id, connected.atom_id2  FROM bond  INNER JOIN connected ON bond.bond_id = connected.bond_id  WHERE bond.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "237": "SELECT molecule.molecule_id, molecule.label FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.atom_id = 'TR001_10'\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT bond.molecule_id)  FROM bond  WHERE bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) FROM atom WHERE atom.atom_id LIKE 'TR%_19';\t----- bird -----\ttoxicology",
    "240": "SELECT atom.element  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*)  FROM molecule  WHERE label = '-';\t----- bird -----\ttoxicology",
    "242": "SELECT molecule.molecule_id  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE SUBSTR(atom.atom_id, 7, 2) BETWEEN '21' AND '25'  AND molecule.label = '+'\t----- bird -----\ttoxicology",
    "243": "SELECT bond.bond_id  FROM atom AS df1  INNER JOIN atom AS df2 ON df1.atom_id = df2.atom_id  WHERE df1.element = 'P' AND df2.element = 'N'\t----- bird -----\ttoxicology",
    "244": "SELECT molecule.label FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '=' GROUP BY bond.molecule_id ORDER BY COUNT(bond.bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "245": "SELECT AVG(bond_count)  FROM (     SELECT atom.atom_id, COUNT(connected.bond_id) as bond_count     FROM atom      INNER JOIN connected ON atom.atom_id = connected.atom_id     WHERE atom.element = 'i'     GROUP BY atom.atom_id ) AS subquery\t----- bird -----\ttoxicology",
    "246": "SELECT bond.bond_type, bond.bond_id  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE SUBSTR(atom.atom_id, 7, 2) + 0 = 45\t----- bird -----\ttoxicology",
    "247": "SELECT atom.element  FROM atom  WHERE atom.atom_id NOT IN (SELECT connected.atom_id FROM connected)\t----- bird -----\ttoxicology",
    "248": "SELECT atom.atom_id, connected.atom_id  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.molecule_id = 'TR041' AND bond.bond_type = '#'\t----- bird -----\ttoxicology",
    "249": "SELECT atom.element  FROM atom  INNER JOIN bond ON atom.atom_id = bond.atom_id  WHERE bond.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "250": "SELECT molecule.molecule_id FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE molecule.label = '+' AND bond.bond_type = '=' GROUP BY molecule.molecule_id ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "251": "SELECT atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' GROUP BY atom.element ORDER BY COUNT(*) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "252": "SELECT connected.atom_id2  FROM connected  WHERE connected.atom_id IN (SELECT atom.atom_id FROM atom WHERE atom.element = 'Pb')\t----- bird -----\ttoxicology",
    "253": "SELECT atom.element  FROM atom  INNER JOIN bond ON atom.atom_id = bond.bond_id  WHERE bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "254": "SELECT (CAST((SELECT COUNT(*) FROM atom GROUP BY element HAVING COUNT(atom_id) = MAX(COUNT(atom_id))) AS REAL) * 100) / COUNT(*) FROM atom\t----- bird -----\ttoxicology",
    "255": "SELECT CAST(SUM(CASE WHEN molecule.label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(bond.bond_id), 5) AS proportion FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(*)  FROM atom  WHERE element IN ('c', 'h')\t----- bird -----\ttoxicology",
    "257": "SELECT connected.atom_id2 FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id WHERE atom.element = 's'\t----- bird -----\ttoxicology",
    "258": "SELECT bond.bond_type  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE atom.element = 'sn';\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT atom.element) FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(*)  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE bond.bond_type = '#' AND (atom.element = 'p' OR atom.element = 'br')\t----- bird -----\ttoxicology",
    "261": "SELECT bond.bond_id  FROM bond  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE molecule.label = '+'\t----- bird -----\ttoxicology",
    "262": "SELECT bond.molecule_id  FROM bond  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE bond.bond_type = '-' AND molecule.label = '-'\t----- bird -----\ttoxicology",
    "263": "SELECT (CAST(SUM(CASE WHEN atom.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(atom.atom_id)) AS percent FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "264": "SELECT molecule.label  FROM molecule  WHERE molecule.molecule_id IN ('TR000', 'TR001', 'TR002')\t----- bird -----\ttoxicology",
    "265": "SELECT molecule.molecule_id FROM molecule WHERE molecule.label = '-'\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*)  FROM molecule  WHERE molecule_id BETWEEN 'TR000' AND 'TR030'  AND label = '+'\t----- bird -----\ttoxicology",
    "267": "SELECT bond.bond_type  FROM bond  WHERE bond.molecule_id BETWEEN 'TR000' AND 'TR050';\t----- bird -----\ttoxicology",
    "268": "SELECT atom.element  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  WHERE connected.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(bond.bond_id)  FROM bond  INNER JOIN atom ON bond.molecule_id = atom.molecule_id  WHERE atom.element = 'i'\t----- bird -----\ttoxicology",
    "270": "SELECT molecule.label, COUNT(*) as count FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE atom.element = 'ca' GROUP BY molecule.label ORDER BY count DESC LIMIT 1\t----- bird -----\ttoxicology",
    "271": "SELECT CASE WHEN      (SELECT COUNT(*) FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id WHERE bond.bond_id = 'TR001_1_8' AND atom.element = 'cl') > 0      AND      (SELECT COUNT(*) FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id WHERE bond.bond_id = 'TR001_1_8' AND atom.element = 'c') > 0  THEN 'True' ELSE 'False' END\t----- bird -----\ttoxicology",
    "272": "SELECT molecule.molecule_id FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE atom.element = 'C' AND bond.bond_type = '#' AND molecule.label = '-' LIMIT 2\t----- bird -----\ttoxicology",
    "273": "SELECT CAST(COUNT(*) FILTER (WHERE atom.element = 'cl') AS REAL) * 100 / COUNT(*) AS percentage FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+'\t----- bird -----\ttoxicology",
    "274": "SELECT atom.element  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "275": "SELECT bond.molecule_id  FROM bond  WHERE bond.bond_type = 'double';\t----- bird -----\ttoxicology",
    "276": "SELECT atom.atom_id, connected.atom_id2  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "277": "SELECT atom.element FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id WHERE connected.bond_id = 'TR000_1_2'\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(*) FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '-' AND molecule.label = '-'\t----- bird -----\ttoxicology",
    "279": "SELECT molecule.label  FROM bond  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE bond.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "280": "SELECT bond.bond_id, molecule.label FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '#'\t----- bird -----\ttoxicology",
    "281": "SELECT atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' AND substr(atom.atom_id, 7, 1) = '4';\t----- bird -----\ttoxicology",
    "282": "SELECT (SELECT COUNT(*) FROM atom WHERE atom.element = 'h' AND atom.molecule_id = 'TR006') / (SELECT COUNT(*) FROM atom WHERE atom.molecule_id = 'TR006') AS ratio, molecule.label  FROM molecule  WHERE molecule.molecule_id = 'TR006';\t----- bird -----\ttoxicology",
    "283": "SELECT molecule.label  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE atom.element = 'Ca';\t----- bird -----\ttoxicology",
    "284": "SELECT bond.bond_type  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE atom.element = 'C';\t----- bird -----\ttoxicology",
    "285": "SELECT atom.element  FROM atom  INNER JOIN bond ON atom.atom_id = bond.bond_id  WHERE bond.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "286": "SELECT (CAST((SELECT COUNT(*) FROM bond WHERE bond_type = '#') AS REAL) * 100) / (SELECT COUNT(*) FROM bond) FROM bond\t----- bird -----\ttoxicology",
    "287": "SELECT CAST(SUM(CASE WHEN bond.bond_type = ' = ' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(bond.bond_id) AS percent FROM bond WHERE bond.molecule_id = 'TR047'\t----- bird -----\ttoxicology",
    "288": "SELECT molecule.label  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE atom.atom_id = 'TR001_1';\t----- bird -----\ttoxicology",
    "289": "SELECT molecule.label  FROM molecule  WHERE molecule.molecule_id = 'TR151';\t----- bird -----\ttoxicology",
    "290": "SELECT atom.element  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.molecule_id = 'TR151';\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(*)  FROM molecule  WHERE label = '+';\t----- bird -----\ttoxicology",
    "292": "SELECT atom.atom_id  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE atom.element = 'C'  AND CAST(SUBSTR(molecule.molecule_id, 3, 3) AS INTEGER) BETWEEN 10 AND 50\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(atom.atom_id)  FROM atom  INNER JOIN molecule  ON atom.molecule_id = molecule.molecule_id  WHERE molecule.label = '+';\t----- bird -----\ttoxicology",
    "294": "SELECT bond.bond_id  FROM bond  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE molecule.label = '+' AND bond.bond_type = '='\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(atom.atom_id)  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.label = '+' AND atom.element = 'H'\t----- bird -----\ttoxicology",
    "296": "SELECT atom.molecule_id  FROM atom  INNER JOIN bond ON atom.molecule_id = bond.molecule_id  INNER JOIN connected ON bond.bond_id = connected.bond_id AND atom.atom_id = connected.atom_id  WHERE bond.bond_id = 'TR000_1_2' AND atom.atom_id = 'TR000_1'\t----- bird -----\ttoxicology",
    "297": "SELECT atom.atom_id  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE atom.element = 'c' AND molecule.label = '-'\t----- bird -----\ttoxicology",
    "298": "SELECT CAST(SUM(CASE WHEN molecule.label = '+' AND atom.element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT molecule.molecule_id) FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '+'\t----- bird -----\ttoxicology",
    "299": "SELECT molecule.label  FROM molecule  WHERE molecule.molecule_id = 'TR124';\t----- bird -----\ttoxicology",
    "300": "SELECT atom.atom_id  FROM atom  WHERE atom.molecule_id = 'TR186'\t----- bird -----\ttoxicology",
    "301": "SELECT bond.bond_type FROM bond WHERE bond.bond_id = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT atom.element  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  WHERE connected.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(*), molecule.label  FROM molecule  INNER JOIN bond ON molecule.molecule_id = bond.molecule_id  WHERE molecule.label = 'TR006' AND bond.bond_type = '=';\t----- bird -----\ttoxicology",
    "304": "SELECT molecule.molecule_id, atom.element FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '+'\t----- bird -----\ttoxicology",
    "305": "SELECT bond.bond_id, connected.atom_id, connected.atom_id2  FROM bond  INNER JOIN connected ON bond.bond_id = connected.bond_id  WHERE bond.bond_type = '-';\t----- bird -----\ttoxicology",
    "306": "SELECT molecule.molecule_id, atom.element FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE bond.bond_type = '#'\t----- bird -----\ttoxicology",
    "307": "SELECT atom.element  FROM atom  INNER JOIN bond ON atom.atom_id = bond.atom_id  WHERE bond.bond_id = 'TR000_2_3'\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(*) FROM atom WHERE element = 'Cl'\t----- bird -----\ttoxicology",
    "309": "SELECT atom.atom_id, COUNT(DISTINCT bond.bond_type)  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  INNER JOIN bond ON atom.atom_id = bond.atom_id  WHERE molecule.molecule_id = 'TR346'  GROUP BY atom.atom_id;\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT bond.molecule_id), COUNT(DISTINCT CASE WHEN molecule.label = '+' THEN bond.molecule_id END)  FROM bond  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE bond.bond_type = ' = '\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT molecule.molecule_id)  FROM molecule  LEFT JOIN atom ON molecule.molecule_id = atom.molecule_id  LEFT JOIN bond ON molecule.molecule_id = bond.molecule_id  WHERE atom.element != 's' AND bond.bond_type != ' = '\t----- bird -----\ttoxicology",
    "312": "SELECT molecule.label  FROM bond  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE bond.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(*) FROM atom WHERE atom.molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "315": "SELECT molecule.molecule_id  FROM molecule  INNER JOIN atom ON molecule.molecule_id = atom.molecule_id  WHERE atom.element = 'cl' AND molecule.label = '+'\t----- bird -----\ttoxicology",
    "316": "SELECT molecule.molecule_id  FROM molecule  INNER JOIN atom ON molecule.molecule_id = atom.molecule_id  WHERE atom.element = 'c' AND molecule.label = '-'\t----- bird -----\ttoxicology",
    "317": "SELECT (CAST((SELECT COUNT(*) FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '+' AND atom.element = 'Cl') AS REAL) / (SELECT COUNT(*) FROM molecule)) * 100 AS percentage FROM molecule LIMIT 1\t----- bird -----\ttoxicology",
    "318": "SELECT bond.molecule_id FROM bond WHERE bond.bond_id = 'TR001_1_7';\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(atom.element)  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  WHERE connected.bond_id = 'TR001_3_4'\t----- bird -----\ttoxicology",
    "320": "SELECT bond.bond_type  FROM connected  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE connected.atom_id = 'TR000_1' AND connected.atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "321": "SELECT atom.molecule_id FROM atom WHERE atom.atom_id = 'TR000_2' UNION SELECT atom.molecule_id FROM atom WHERE atom.atom_id = 'TR000_4'\t----- bird -----\ttoxicology",
    "322": "SELECT atom.element  FROM atom  WHERE atom.atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "323": "SELECT molecule.label  FROM molecule  WHERE molecule.molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "324": "SELECT (CAST(SUM(CASE WHEN bond.bond_type = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(bond.bond_id)) AS percentage FROM bond\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT molecule.molecule_id) FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '+' AND atom.element = 'n'\t----- bird -----\ttoxicology",
    "326": "SELECT atom.molecule_id  FROM atom  INNER JOIN bond ON atom.atom_id = bond.atom_id  WHERE atom.element = 'S' AND bond.bond_type = '=';\t----- bird -----\ttoxicology",
    "327": "SELECT molecule.molecule_id FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '-' GROUP BY atom.molecule_id HAVING COUNT(atom.atom_id) > 5\t----- bird -----\ttoxicology",
    "328": "SELECT atom.element  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE bond.bond_type = '=' AND atom.molecule_id = 'TR024'\t----- bird -----\ttoxicology",
    "329": "SELECT molecule.molecule_id FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '+' GROUP BY atom.molecule_id HAVING COUNT(atom.atom_id) = (SELECT MAX(COUNT(atom.atom_id)) FROM atom GROUP BY atom.molecule_id)\t----- bird -----\ttoxicology",
    "330": "SELECT (CAST((SELECT COUNT(*) FROM molecule  INNER JOIN atom ON molecule.molecule_id = atom.molecule_id  INNER JOIN bond ON molecule.molecule_id = bond.molecule_id  INNER JOIN connected ON bond.bond_id = connected.bond_id  WHERE atom.element = 'h' AND bond.bond_type = '#' AND molecule.label = '+') AS REAL) * 100) /  (SELECT COUNT(*) FROM molecule  INNER JOIN atom ON molecule.molecule_id = atom.molecule_id  INNER JOIN bond ON molecule.molecule_id = bond.molecule_id  INNER JOIN connected ON bond.bond_id = connected.bond_id  WHERE atom.element = 'h' AND bond.bond_type = '#') AS percentage\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(*) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT bond.molecule_id)  FROM bond  WHERE bond.bond_type = '-'  AND bond.molecule_id BETWEEN 'TR004' AND 'TR010';\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(*)  FROM atom  WHERE atom.molecule_id = 'TR008' AND atom.element = 'c'\t----- bird -----\ttoxicology",
    "334": "SELECT atom.element  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.label = '-' AND atom.atom_id = 'TR004_7'\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT molecule.molecule_id)  FROM molecule  INNER JOIN atom ON molecule.molecule_id = atom.molecule_id  INNER JOIN bond ON molecule.molecule_id = bond.molecule_id  WHERE atom.element = 'O' AND bond.bond_type = '=';\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT bond.molecule_id)  FROM bond  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE bond.bond_type = '#' AND molecule.label = '-'\t----- bird -----\ttoxicology",
    "337": "SELECT atom.element, bond.bond_type FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id WHERE atom.molecule_id = 'TR002';\t----- bird -----\ttoxicology",
    "338": "SELECT atom.atom_id  FROM atom  INNER JOIN bond ON atom.molecule_id = bond.molecule_id  WHERE atom.element = 'C' AND bond.bond_type = '=' AND atom.molecule_id = 'TR012'\t----- bird -----\ttoxicology",
    "339": "SELECT atom.atom_id  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.label = '+' AND atom.element = 'O'\t----- bird -----\ttoxicology",
    "340": "SELECT card FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "341": "SELECT cards.name  FROM cards  WHERE cards.borderColor = 'borderless' AND cards.cardKingdomFoilId IS NULL\t----- bird -----\tcard_games",
    "342": "SELECT card.name FROM cards ORDER BY card.faceConvertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "343": "SELECT cards.name FROM cards WHERE cards.frameVersion = '2015' AND cards.EDHRec < 100\t----- bird -----\tcard_games",
    "344": "SELECT cards.name FROM cards WHERE cards.rarity = 'mythic' AND cards.status = 'Banned' AND cards.format = 'gladiator'\t----- bird -----\tcard_games",
    "345": "SELECT legalities.status FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.types = 'Artifact' AND cards.side IS NULL AND legalities.format = 'vintage';\t----- bird -----\tcard_games",
    "346": "SELECT cards.id, cards.artist  FROM cards  INNER JOIN legalities ON cards.uuid = legalities.uuid  WHERE (cards.power = '*' OR cards.power IS NULL)  AND legalities.format = 'commander'  AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "347": "SELECT cards.card_id, cards.ruling_text  FROM cards  WHERE cards.artist = 'Stephen Daniele' AND cards.hasContentWarning = 1\t----- bird -----\tcard_games",
    "348": "SELECT rulings.text FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.name = 'Sublime Epiphany' AND cards.number = '74s'\t----- bird -----\tcard_games",
    "349": "SELECT cards.name, cards.artist FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.isPromo = 1 GROUP BY cards.uuid HAVING COUNT(rulings.uuid) = (SELECT MAX(COUNT(rulings.uuid)) FROM rulings GROUP BY rulings.uuid)\t----- bird -----\tcard_games",
    "350": "SELECT alternative_languages FROM cards WHERE name = 'Annul' AND number = '29'\t----- bird -----\tcard_games",
    "351": "SELECT cards.card_name FROM cards WHERE cards.alternative_language = 'Japanese';\t----- bird -----\tcard_games",
    "352": "SELECT (CAST((SELECT COUNT(*) FROM cards WHERE language = 'Chinese Simplified') AS REAL) / COUNT(*) * 100) AS percentage FROM cards\t----- bird -----\tcard_games",
    "353": "SELECT sets.setName, sets.totalSetSize FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Italian';\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT cards.art)  FROM cards  WHERE cards.artist = 'Aaron Boyd'\t----- bird -----\tcard_games",
    "355": "SELECT cards.keyword FROM cards WHERE cards.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress';\t----- bird -----\tcard_games",
    "358": "SELECT cards.border_color FROM cards WHERE cards.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "359": "SELECT cards.originaltype  FROM cards  WHERE cards.name = 'Ancestor's Chosen';\t----- bird -----\tcard_games",
    "360": "SELECT sets.language  FROM cards  INNER JOIN sets ON cards.setCode = sets.code  WHERE cards.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM legalities INNER JOIN cards ON legalities.uuid = cards.uuid WHERE legalities.status = 'restricted' AND cards.isTextless = 0\t----- bird -----\tcard_games",
    "362": "SELECT cards.text  FROM cards  WHERE cards.name = 'Condemn'\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(*)  FROM legalities  INNER JOIN cards ON legalities.uuid = cards.uuid  WHERE legalities.status = 'restricted' AND cards.isStarter = 1\t----- bird -----\tcard_games",
    "364": "SELECT card.status FROM cards WHERE card.name = 'Cloudchaser Eagle'\t----- bird -----\tcard_games",
    "365": "SELECT cards.type FROM cards WHERE cards.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": "SELECT cards.format FROM cards WHERE cards.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "367": "SELECT cards.artist  FROM cards  WHERE cards.language = 'Phyrexian'\t----- bird -----\tcard_games",
    "368": "SELECT (CAST((SELECT COUNT(id) FROM cards WHERE borderColor = 'borderless') AS REAL) / COUNT(id)) * 100 FROM cards\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(*) FROM cards WHERE language = 'German' AND isReprint = 1\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(*)  FROM cards  WHERE borderColor = 'borderless' AND language = 'Russian'\t----- bird -----\tcard_games",
    "371": "SELECT CAST((SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1 AND language = 'French') AS REAL) * 100 / (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1) AS percentage FROM cards LIMIT 1\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99';\t----- bird -----\tcard_games",
    "373": "SELECT cards.name FROM cards WHERE cards.artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo'\t----- bird -----\tcard_games",
    "375": "SELECT cards.card_id FROM cards WHERE cards.convertedManaCost = 0\t----- bird -----\tcard_games",
    "376": "SELECT cards.card_layout FROM cards WHERE cards.keyword = 'flying';\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE original_type = 'Summon - Angel' AND subtypes != 'Angel'\t----- bird -----\tcard_games",
    "378": "SELECT cardKingdomFoilId, cardKingdomId FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "379": "SELECT cards.card_id FROM cards WHERE cards.duelDeck = 'a';\t----- bird -----\tcard_games",
    "380": "SELECT cards.edhrecRank FROM cards WHERE cards.frame_version = '2015'\t----- bird -----\tcard_games",
    "381": "SELECT cards.artist_name  FROM cards  WHERE cards.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT cards.card_name FROM cards WHERE cards.availability = 'paper' AND cards.language = 'Japanese'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards WHERE status = 'Banned' AND borderColor = 'white'\t----- bird -----\tcard_games",
    "384": "SELECT cards.uuid, foreign_data.language FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.format = 'legacy'\t----- bird -----\tcard_games",
    "385": "SELECT rulings.text  FROM rulings  INNER JOIN cards ON rulings.uuid = cards.uuid  WHERE cards.name = 'Beacon of Immortality';\t----- bird -----\tcard_games",
    "386": "SELECT cards.card_id, cards.status, COUNT(*) FROM cards WHERE cards.frameVersion = 'future' GROUP BY cards.card_id, cards.status\t----- bird -----\tcard_games",
    "387": "SELECT cards.name, cards.color  FROM cards  WHERE cards.setCode = 'OGW';\t----- bird -----\tcard_games",
    "388": "SELECT cards.cardName, cards.language  FROM cards  WHERE cards.setCode = '10E' AND cards.convertedManaCost = 5 AND cards.hasTranslation = True\t----- bird -----\tcard_games",
    "389": "SELECT cards.name, rulings.date  FROM cards  INNER JOIN rulings ON cards.uuid = rulings.uuid  WHERE cards.originalType = 'Creature - Elf';\t----- bird -----\tcard_games",
    "390": "SELECT cards.color, cards.format FROM cards WHERE cards.id BETWEEN 1 AND 20\t----- bird -----\tcard_games",
    "391": "SELECT cards.name  FROM cards  INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid  WHERE cards.originalType = 'Artifact'  AND cards.colors = 'B'  AND foreign_data.language IS NOT NULL\t----- bird -----\tcard_games",
    "392": "SELECT cards.name FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.rarity = 'uncommon' ORDER BY rulings.date ASC LIMIT 3\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*)  FROM cards  WHERE artist = 'John Avon'  AND cardKingdomId IS NOT NULL  AND cardKingdomFoilId IS NOT NULL\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*)  FROM cards  WHERE borderColor = 'white'  AND cardKingdomFoilId IS NOT NULL  AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability = 'mtgo' AND hand = -1\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards WHERE frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = 1\t----- bird -----\tcard_games",
    "397": "SELECT cards.manaCost FROM cards WHERE cards.layout = 'normal' AND cards.frameVersion = '2003' AND cards.borderColor = 'black' AND cards.availability = 'mtgo,paper'\t----- bird -----\tcard_games",
    "398": "SELECT SUM(cards.manaCost) FROM cards WHERE cards.artist = 'Rob Alexander'\t----- bird -----\tcard_games",
    "399": "SELECT cards.subtypes, cards.supertypes  FROM cards  WHERE cards.availability = 'arena'\t----- bird -----\tcard_games",
    "400": "SELECT cards.setCode FROM cards WHERE cards.language = 'Spanish'\t----- bird -----\tcard_games",
    "401": "SELECT CAST(COUNT(*) FILTER (WHERE cards.isOnlineOnly = 1) AS REAL) * 100 / COUNT(*)  FROM cards  WHERE cards.frameEffects = 'legendary'\t----- bird -----\tcard_games",
    "402": "SELECT (CAST(COUNT(id) FILTER (WHERE isStorylight = 1 AND isTextless = 0) AS REAL) / COUNT(id)) * 100 AS percentage, id FROM cards WHERE isStorylight = 1 AND isTextless = 0\t----- bird -----\tcard_games",
    "403": "SELECT CAST((SELECT COUNT(*) FROM cards WHERE language = 'Spanish') AS REAL) * 100 / COUNT(*), cards.name FROM cards WHERE language = 'Spanish' GROUP BY cards.name\t----- bird -----\tcard_games",
    "404": "SELECT language  FROM sets  INNER JOIN set_translations  ON sets.code = set_translations.setCode  WHERE sets.baseSetSize = 309\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(*)  FROM sets  INNER JOIN set_translations ON sets.code = set_translations.setCode  WHERE sets.block = 'Commander' AND set_translations.language = 'Portuguese (Brasil)'\t----- bird -----\tcard_games",
    "406": "SELECT cards.id  FROM cards  WHERE cards.types = 'Creature' AND cards.status = 'legal'\t----- bird -----\tcard_games",
    "407": "SELECT subtypes, supertypes  FROM cards  WHERE language = 'German'  AND subtypes IS NOT NULL  AND supertypes IS NOT NULL\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*)  FROM cards  WHERE (cards.power IS NULL OR cards.power = '*')  AND cards.text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*)  FROM cards  WHERE format = 'premodern'  AND ruling_text = 'This is a triggered mana ability.'  AND side IS NULL\t----- bird -----\tcard_games",
    "410": "SELECT cards.card_id FROM cards WHERE cards.artist = 'Erica Yang' AND cards.format = 'pauper' AND cards.availability = 'paper'\t----- bird -----\tcard_games",
    "411": "SELECT cards.artist FROM cards WHERE cards.text = 'Das perfekte Gegenmittel zu einer dichten Formation';\t----- bird -----\tcard_games",
    "412": "SELECT cards.foreignName  FROM cards  WHERE cards.type = 'Creature'  AND cards.layout = 'normal'  AND cards.borderColor = 'black'  AND cards.artist = 'Matthew D. Wilson'  AND cards.language = 'French'\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(*)  FROM cards  WHERE rarity = 'rare'  AND date = '2007-02-01'\t----- bird -----\tcard_games",
    "414": "SELECT cards.language FROM cards WHERE cards.baseSetSize = 180 AND cards.block = 'Ravnica'\t----- bird -----\tcard_games",
    "415": "SELECT CAST(COUNT(*) FILTER (WHERE cards.hasContentWarning = 0) AS REAL) * 100 / COUNT(*)  FROM cards  WHERE cards.format = 'commander' AND cards.status = 'legal'\t----- bird -----\tcard_games",
    "416": "SELECT CAST(COUNT(*) FILTER (WHERE language = 'French' AND (power IS NULL OR power = '*')) AS REAL) * 100 / COUNT(*) FILTER (WHERE power IS NULL OR power = '*') FROM cards\t----- bird -----\tcard_games",
    "417": "SELECT CAST(COUNT(*) FILTER (WHERE language = 'Japanese' AND type = 'expansion') AS REAL) * 100 / COUNT(*) FILTER (WHERE language = 'Japanese') FROM sets\t----- bird -----\tcard_games",
    "418": "SELECT cards.availability FROM cards WHERE cards.artist = 'Daren Bader'\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND edhrecRank > 12000\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*)  FROM cards  WHERE isOversized = 1  AND isReprint = 1  AND isPromo = 1\t----- bird -----\tcard_games",
    "421": "SELECT cards.name FROM cards WHERE (cards.power IS NULL OR cards.power = '*') AND cards.promoTypes = 'arenaleague' ORDER BY cards.name ASC LIMIT 3\t----- bird -----\tcard_games",
    "422": "SELECT cards.language FROM cards WHERE cards.multiverseid = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT cardKingdomFoilId, cardKingdomId  FROM cards  WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL  ORDER BY cardKingdomFoilId ASC  LIMIT 3\t----- bird -----\tcard_games",
    "424": "SELECT (CAST((SELECT COUNT(*) FROM cards WHERE isTextless = 1 AND layout = 'normal') AS REAL) / (SELECT COUNT(*) FROM cards WHERE isTextless = 1)) * 100\t----- bird -----\tcard_games",
    "425": "SELECT cards.number FROM cards WHERE cards.side IS NULL AND cards.subtypes LIKE '%Angel%' AND cards.subtypes LIKE '%Wizard%'\t----- bird -----\tcard_games",
    "426": "SELECT sets.name FROM sets WHERE sets.mtgoCode IS NULL OR sets.mtgoCode = '' ORDER BY sets.name ASC LIMIT 3\t----- bird -----\tcard_games",
    "427": "SELECT cards.language  FROM sets  INNER JOIN cards ON sets.code = cards.setCode  WHERE sets.mcmName = 'Archenemy' AND sets.setCode = 'ARC'\t----- bird -----\tcard_games",
    "428": "SELECT sets.name, sets.translation  FROM sets  WHERE sets.id = 5\t----- bird -----\tcard_games",
    "429": "SELECT sets.language, sets.expansion_type FROM sets WHERE sets.id = 206\t----- bird -----\tcard_games",
    "430": "SELECT cards.set_id, cards.card_id FROM cards WHERE cards.language = 'Italian' AND cards.block = 'Shadowmoor' ORDER BY cards.name ASC LIMIT 2\t----- bird -----\tcard_games",
    "431": "SELECT set_id FROM cards WHERE isForeignOnly = 1 AND isFoilOnly = 1 AND language = 'Japanese';\t----- bird -----\tcard_games",
    "432": "SELECT setName  FROM sets  WHERE language = 'Russian'  ORDER BY baseSetSize DESC  LIMIT 1\t----- bird -----\tcard_games",
    "433": "SELECT (CAST((SELECT COUNT(*) FROM cards WHERE language = 'Chinese Simplified' AND isOnlineOnly = 1) AS REAL) / COUNT(*) * 100) AS percentage FROM cards\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(*)  FROM sets  WHERE language = 'Japanese' AND (mtgoCode IS NULL OR mtgoCode = '')\t----- bird -----\tcard_games",
    "435": "SELECT cards.id FROM cards WHERE cards.borderColor = 'black'\t----- bird -----\tcard_games",
    "436": "SELECT cards.id FROM cards WHERE cards.frameEffects = 'extendedart'\t----- bird -----\tcard_games",
    "437": "SELECT cards.name FROM cards WHERE cards.borderColor = 'black' AND cards.isFullArt = 1\t----- bird -----\tcard_games",
    "438": "SELECT set.language FROM sets WHERE set.id = '174';\t----- bird -----\tcard_games",
    "439": "SELECT set_name FROM sets WHERE set_code = 'ALL';\t----- bird -----\tcard_games",
    "440": "SELECT language FROM cards WHERE name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "441": "SELECT sets.set_code FROM sets WHERE sets.release_date = '07/13/2007'\t----- bird -----\tcard_games",
    "442": "SELECT set.base_set_size, set.set_code  FROM set  WHERE block.name = 'Masques'  AND block.name = 'Mirage'\t----- bird -----\tcard_games",
    "443": "SELECT setCode FROM sets WHERE expansionType = 'expansion';\t----- bird -----\tcard_games",
    "444": "SELECT cards.foreign_name, cards.type FROM cards WHERE cards.watermark = 'Boros';\t----- bird -----\tcard_games",
    "445": "SELECT cards.language, cards.flavor_text, cards.type  FROM cards  WHERE cards.watermark = 'colorpie';\t----- bird -----\tcard_games",
    "446": "SELECT (CAST((SELECT COUNT(*) FROM cards WHERE convertedManaCost = 10 AND name = 'Abyssal Horror') AS REAL) * 100) / (SELECT COUNT(*) FROM cards WHERE name = 'Abyssal Horror') AS percentage FROM cards LIMIT 1\t----- bird -----\tcard_games",
    "447": "SELECT sets.setCode FROM sets WHERE sets.type = 'expansion.commander'\t----- bird -----\tcard_games",
    "448": "SELECT cards.foreign_name, cards.type FROM cards WHERE cards.watermark = 'Abzan';\t----- bird -----\tcard_games",
    "449": "SELECT cards.language, cards.type FROM cards WHERE cards.watermark = 'Azorius';\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*)  FROM cards  WHERE artist = 'Aaron Miller'  AND cardKingdomFoilId IS NOT NULL  AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*)  FROM cards  WHERE availability LIKE '%paper%'  AND hand > 0\t----- bird -----\tcard_games",
    "452": "SELECT cards.name FROM cards WHERE cards.isTextless = 0\t----- bird -----\tcard_games",
    "453": "SELECT card.unconverted_mana_cost FROM cards WHERE card.name = 'Ancestor`s Chosen';\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE border_color = 'white' AND (power = '*' OR power IS NULL)\t----- bird -----\tcard_games",
    "455": "SELECT cards.name  FROM cards  WHERE cards.isPromo = 1 AND cards.side IS NOT NULL\t----- bird -----\tcard_games",
    "456": "SELECT cards.subtypes, cards.supertypes  FROM cards  WHERE cards.name = 'Molimo, Maro-Sorcerer'\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes = 'bundle'\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT cards.artist) FROM cards WHERE cards.border_color = 'black' AND cards.availability LIKE '%arena,mtgo%'\t----- bird -----\tcard_games",
    "459": "SELECT (SELECT convertedManaCost FROM cards WHERE name = 'Serra Angel') > (SELECT convertedManaCost FROM cards WHERE name = 'Shrine Keeper') FROM cards LIMIT 1;\t----- bird -----\tcard_games",
    "460": "SELECT card.artist  FROM card  WHERE card.flavorName = 'Battra, Dark Destroyer'\t----- bird -----\tcard_games",
    "461": "SELECT cards.name  FROM cards  WHERE cards.frameVersion = '2003'  ORDER BY cards.convertedManaCost DESC  LIMIT 3\t----- bird -----\tcard_games",
    "462": "SELECT card_sets.set_name  FROM cards  INNER JOIN card_sets ON cards.set_code = card_sets.set_code  WHERE cards.name = 'Ancestor''s Chosen'  AND card_sets.language = 'Italian';\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(set_translations.setCode)  FROM set_translations  INNER JOIN cards ON set_translations.setCode = cards.setCode  WHERE cards.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "464": "SELECT cards.name  FROM cards  INNER JOIN set_translations ON cards.setCode = set_translations.setCode  WHERE set_translations.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "465": "SELECT COUNT(*) FROM cards WHERE name = 'Ancestor''s Chosen' AND language = 'Korean'\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*)  FROM cards  INNER JOIN set_translations ON cards.uuid = set_translations.uuid  WHERE set_translations.translation = 'Hauptset Zehnte Edition'  AND cards.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "467": "SELECT baseSetSize  FROM sets  WHERE translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "468": "SELECT translation.translation FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.name = 'Eighth Edition' AND set_translations.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "469": "SELECT COUNT(*) FROM cards WHERE name = 'Angel of Mercy' AND mtgoCode IS NOT NULL\t----- bird -----\tcard_games",
    "470": "SELECT cards.releaseDate  FROM cards  WHERE cards.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "471": "SELECT sets.type  FROM sets  INNER JOIN set_translations ON sets.code = set_translations.setCode  WHERE set_translations.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(DISTINCT sets.code)  FROM sets  LEFT JOIN set_translations ON sets.code = set_translations.setCode  WHERE sets.block = 'Ice Age'  AND set_translations.language = 'Italian'  AND set_translations.translation IS NOT NULL\t----- bird -----\tcard_games",
    "473": "SELECT cards.isForeignOnly FROM cards WHERE cards.name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(DISTINCT sets.code)  FROM sets  INNER JOIN set_translations ON sets.code = set_translations.setCode  WHERE set_translations.language = 'Italian' AND sets.baseSetSize < 100\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(*)  FROM cards  WHERE set = 'Coldsnap' AND borderColor = 'black'\t----- bird -----\tcard_games",
    "476": "SELECT cards.name  FROM cards  INNER JOIN card_sets ON cards.set_code = card_sets.code  WHERE card_sets.name = 'Coldsnap'  ORDER BY cards.converted_mana_cost DESC  LIMIT 1\t----- bird -----\tcard_games",
    "477": "SELECT artist.name  FROM cards  WHERE cards.set = 'Coldsnap'  AND cards.artist IN ('Jeremy Jarvis', 'Aaron Miller','Chippy')\t----- bird -----\tcard_games",
    "478": "SELECT cards.name  FROM cards  WHERE cards.set = 'Coldsnap' AND cards.number = '4'\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*)  FROM cards AS T1  INNER JOIN sets ON sets.code = T1.setCode  WHERE sets.name = 'Coldsnap'  AND T1.convertedManaCost > 5  AND (T1.power = '*' OR T1.power IS NULL)\t----- bird -----\tcard_games",
    "480": "SELECT cards.flavorText FROM cards WHERE cards.name = 'Ancestor''s Chosen' AND cards.language = 'Italian';\t----- bird -----\tcard_games",
    "481": "SELECT cards.language FROM cards WHERE cards.name = 'Ancestor''s Chosen' AND cards.flavorText IS NOT NULL\t----- bird -----\tcard_games",
    "482": "SELECT cards.type  FROM cards  INNER JOIN card_translations ON cards.uuid = card_translations.uuid  WHERE cards.name = 'Ancestor''s Chosen' AND card_translations.language = 'German'\t----- bird -----\tcard_games",
    "483": "SELECT cards.text FROM cards INNER JOIN sets ON cards.setCode = sets.code INNER JOIN rulings ON cards.uuid = rulings.uuid INNER JOIN languages ON rulings.languageId = languages.id WHERE sets.name = 'Coldsnap' AND languages.name = 'Italian'\t----- bird -----\tcard_games",
    "484": "SELECT cards.Italian_name FROM cards INNER JOIN card_sets ON cards.uuid = card_sets.uuid WHERE card_sets.name = 'Coldsnap' ORDER BY cards.convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "485": "SELECT cards.date  FROM cards  WHERE cards.name = 'Reminisce';\t----- bird -----\tcard_games",
    "486": "SELECT CAST(COUNT(*) FILTER (WHERE convertedManaCost = 7) AS REAL) * 100 / COUNT(*)  FROM cards  WHERE name = 'Coldsnap'\t----- bird -----\tcard_games",
    "487": "SELECT CAST(COUNT(*) FILTER (WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL), REAL) * 100 / COUNT(*)  FROM cards  WHERE set = 'Coldsnap'\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14'\t----- bird -----\tcard_games",
    "489": "SELECT set.keyruneCode FROM set WHERE set.code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT sets.mcmName FROM sets WHERE sets.releaseDate = '2017/6/9';\t----- bird -----\tcard_games",
    "492": "SELECT sets.type  FROM sets  WHERE sets.name = 'From the Vault: Lore'\t----- bird -----\tcard_games",
    "493": "SELECT parent_code FROM sets WHERE name = 'Commander 2014 Oversized';\t----- bird -----\tcard_games",
    "494": "SELECT cards.text  FROM cards  WHERE cards.artist = 'Jim Pavelec'  AND cards.hasContentWarning = 1\t----- bird -----\tcard_games",
    "495": "SELECT sets.releaseDate  FROM cards  INNER JOIN sets ON cards.setCode = sets.code  WHERE cards.name = 'Evacuation'\t----- bird -----\tcard_games",
    "496": "SELECT sets.baseSetSize  FROM sets  INNER JOIN set_translations ON sets.code = set_translations.setCode  WHERE set_translations.translation = 'Rinascita di Alara';\t----- bird -----\tcard_games",
    "497": "SELECT type  FROM sets  WHERE translation = 'Huiti\u00e8me \u00e9dition'\t----- bird -----\tcard_games",
    "498": "SELECT cards.set_name  FROM cards  INNER JOIN translations ON cards.uuid = translations.uuid  WHERE translations.translated_name = 'Tendo Ice Bridge' AND translations.language = 'French'\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(*)  FROM sets  INNER JOIN set_translations ON sets.code = set_translations.setCode  WHERE sets.name = 'Tenth Edition' AND set_translations.translation IS NOT NULL\t----- bird -----\tcard_games",
    "500": "SELECT sets.name  FROM cards  INNER JOIN set_translations ON cards.setCode = set_translations.setCode  WHERE cards.name = 'Fellwar Stone' AND set_translations.language = 'Japanese';\t----- bird -----\tcard_games",
    "501": "SELECT cards.name  FROM sets  INNER JOIN cards ON sets.code = cards.setCode  WHERE sets.name = 'Journey into Nyx Hero''s Path'  ORDER BY cards.convertedManaCost DESC  LIMIT 1\t----- bird -----\tcard_games",
    "502": "SELECT sets.release_date  FROM sets  INNER JOIN set_translations ON sets.code = set_translations.setCode  WHERE set_translations.translation = 'Ola de fr\u00edo';\t----- bird -----\tcard_games",
    "503": "SELECT sets.type  FROM cards  INNER JOIN sets ON cards.setCode = sets.code  WHERE cards.name = 'Samite Pilgrim';\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM sets INNER JOIN cards ON sets.code = cards.setCode WHERE sets.name = 'World Championship Decks 2004' AND cards.converted_mana_cost = 3\t----- bird -----\tcard_games",
    "505": "SELECT cardsetlanguage.translation FROM cardsetlanguage WHERE cardsetlanguage.name = 'Mirrodin' AND cardsetlanguage.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "506": "SELECT (CAST(SUM(CASE WHEN cards.isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100) / SUM(CASE WHEN set_translations.language = 'Japanese' THEN 1 ELSE 0 END) FROM cards INNER JOIN set_translations ON cards.uuid = set_translations.uuid WHERE set_translations.language = 'Japanese'\t----- bird -----\tcard_games",
    "507": "SELECT CAST(SUM(CASE WHEN cards.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*)  FROM cards  INNER JOIN set_translations ON cards.uuid = set_translations.uuid  WHERE set_translations.language = 'Portuguese (Brazil)'\t----- bird -----\tcard_games",
    "508": "SELECT cards.availability  FROM cards  WHERE cards.artist = 'Aleksi Briclot' AND cards.isTextless = 1\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "510": "SELECT cards.artist FROM cards WHERE cards.side IS NULL ORDER BY cards.converted_mana_cost DESC LIMIT 1\t----- bird -----\tcard_games",
    "511": "SELECT frameEffects FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL GROUP BY frameEffects ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*)  FROM cards  WHERE (power IS NULL OR power = '*')  AND hasFoil = 0  AND duelDeck = 'a'\t----- bird -----\tcard_games",
    "513": "SELECT sets.id FROM sets WHERE sets.type = 'Commander' ORDER BY sets.totalSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "514": "SELECT card FROM (     SELECT card, manaCost FROM cards      WHERE format = 'duel'      ORDER BY manaCost DESC      LIMIT 10 )\t----- bird -----\tcard_games",
    "515": "SELECT cards.originalReleaseDate, formats.format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid INNER JOIN formats ON legalities.formatId = formats.id WHERE cards.rarity = 'mythic' AND formats.status = 'legal' ORDER BY cards.originalReleaseDate ASC LIMIT 1\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(*)  FROM cards  WHERE artist = 'Volkan Ba\u01f5a'  AND language = 'French'\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*)  FROM cards  INNER JOIN legalities ON cards.uuid = legalities.uuid  WHERE cards.rarity = 'rare'  AND cards.types = 'Enchantment'  AND cards.name = 'Abundance'  AND legalities.status = 'Legal'\t----- bird -----\tcard_games",
    "518": "SELECT format, card_name  FROM cards  WHERE status = 'Banned'  GROUP BY format  HAVING COUNT(status) = (SELECT MAX(COUNT(status)) FROM cards WHERE status = 'Banned') ORDER BY format\t----- bird -----\tcard_games",
    "519": "SELECT sets.language FROM sets WHERE sets.name = 'Battlebond';\t----- bird -----\tcard_games",
    "520": "SELECT cards.artist, cards.format FROM cards GROUP BY cards.artist HAVING COUNT(cards.card_id) = (SELECT MIN(COUNT(cards.card_id)) FROM cards GROUP BY cards.artist)\t----- bird -----\tcard_games",
    "521": "SELECT cards.status FROM cards WHERE cards.frameVersion = '1997'  AND cards.artist = 'D. Alexander Gregory'  AND cards.hasContentWarning = 1  AND cards.format = 'legacy'\t----- bird -----\tcard_games",
    "522": "SELECT cards.name, cards.format  FROM cards  WHERE cards.edhrecRank = 1 AND cards.status = 'Banned'\t----- bird -----\tcard_games",
    "523": "SELECT AVG(id), (SELECT language FROM sets WHERE releaseDate BETWEEN '1/1/2012' AND '12/31/2015' GROUP BY language ORDER BY COUNT(language) DESC LIMIT 1) AS common_language FROM sets WHERE releaseDate BETWEEN '1/1/2012' AND '12/31/2015' GROUP BY YEAR(releaseDate)\t----- bird -----\tcard_games",
    "524": "SELECT cards.artist  FROM cards  WHERE cards.BorderColor = 'black'  AND cards.availability = 'arena'\t----- bird -----\tcard_games",
    "525": "SELECT cards.uuid  FROM cards  INNER JOIN legalities ON cards.uuid = legalities.uuid  WHERE legalities.format = 'oldschool'  AND (legalities.status = 'banned' OR legalities.status = 'restricted')\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper'\t----- bird -----\tcard_games",
    "527": "SELECT rulings.text FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Kev Walker' ORDER BY rulings.date DESC\t----- bird -----\tcard_games",
    "528": "SELECT cards.name, legalities.format FROM cards INNER JOIN sets ON cards.set = sets.code INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal';\t----- bird -----\tcard_games",
    "529": "SELECT name  FROM sets  WHERE code IN (     SELECT setCode      FROM set_translations      WHERE language = 'Korean'      AND setCode NOT IN (         SELECT setCode          FROM set_translations          WHERE language LIKE '%Japanese%'     ) )\t----- bird -----\tcard_games",
    "530": "SELECT frameVersion, name  FROM cards  WHERE artist = 'Allen Williams' AND status = 'Banned'\t----- bird -----\tcard_games",
    "531": "SELECT users.DisplayName, MAX(users.Reputation)  FROM users  WHERE users.DisplayName IN ('Harlan', 'Jarrod Dixon')  GROUP BY users.DisplayName\t----- bird -----\tcodebase_community",
    "532": "SELECT users.DisplayName FROM users WHERE strftime('%Y', users.CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "534": "SELECT users.DisplayName  FROM users  ORDER BY users.Views DESC  LIMIT 1\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(*) FROM users WHERE UpVotes > 100 AND DownVotes > 1\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND YEAR(CreationDate) > 2013\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(posts.Id)  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "538": "SELECT posts.Title  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  WHERE users.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "539": "SELECT users.DisplayName  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  WHERE posts.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "540": "SELECT posts.Title FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie' ORDER BY posts.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "541": "SELECT users.DisplayName  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  ORDER BY posts.FavoriteCount DESC  LIMIT 1\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(posts.CommentCount)  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  WHERE users.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "543": "SELECT posts.AnswerCount FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie' ORDER BY posts.AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "544": "SELECT users.DisplayName FROM posts INNER JOIN users ON posts.LastEditorUserId = users.Id WHERE posts.Title = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*)  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  WHERE users.DisplayName = 'csgillespie' AND posts.ParentId IS NULL\t----- bird -----\tcodebase_community",
    "546": "SELECT users.DisplayName  FROM users  INNER JOIN posts ON users.Id = posts.OwnerUserId  WHERE posts.ClosedDate IS NOT NULL\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(*) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.Age > 65 AND posts.Score >= 20\t----- bird -----\tcodebase_community",
    "548": "SELECT users.Location  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  WHERE posts.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "549": "SELECT posts.Body  FROM tags  INNER JOIN posts ON tags.ExcerptPostId = posts.Id  WHERE tags.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "550": "SELECT posts.Body  FROM posts  INNER JOIN tags ON posts.Id = tags.ExcerptPostId  ORDER BY tags.Count DESC  LIMIT 1\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(*)  FROM badges  INNER JOIN users ON badges.UserId = users.Id  WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "552": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(*)  FROM badges  INNER JOIN users ON badges.UserId = users.Id  WHERE users.DisplayName = 'csgillespie' AND YEAR(badges.Date) = 2011\t----- bird -----\tcodebase_community",
    "554": "SELECT users.DisplayName FROM badges INNER JOIN users ON badges.UserId = users.Id GROUP BY badges.UserId ORDER BY COUNT(badges.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(posts.Score)  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  WHERE users.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(badges.Id) FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.Views > 200\t----- bird -----\tcodebase_community",
    "557": "SELECT (CAST((SELECT COUNT(posts.Id) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Score > 5 AND users.Age > 65) AS REAL) * 100) /  (SELECT COUNT(posts.Id) FROM posts WHERE posts.Score > 5) AS percentage FROM posts LIMIT 1\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'\t----- bird -----\tcodebase_community",
    "559": "SELECT votes.CreationDate FROM votes GROUP BY votes.CreationDate HAVING COUNT(votes.Id) = (SELECT MAX(COUNT(votes.Id)) FROM votes GROUP BY votes.CreationDate)\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(badges.Id) FROM badges WHERE badges.Name = 'Revival'\t----- bird -----\tcodebase_community",
    "561": "SELECT posts.Title  FROM posts  INNER JOIN comments ON posts.Id = comments.PostId  WHERE comments.Score = (SELECT MAX(comments.Score) FROM comments)\t----- bird -----\tcodebase_community",
    "562": "SELECT posts.CommentCount FROM posts WHERE posts.ViewCount = 1910\t----- bird -----\tcodebase_community",
    "563": "SELECT posts.FavoriteCount  FROM comments  INNER JOIN posts ON comments.PostId = posts.Id  WHERE comments.UserId = '3025' AND comments.CreationDate = '2014/4/23 20:29:39.0'\t----- bird -----\tcodebase_community",
    "564": "SELECT comments.Text  FROM posts  INNER JOIN comments ON posts.Id = comments.PostId  WHERE posts.ParentId = '107829' AND posts.CommentCount = '1'  LIMIT 1\t----- bird -----\tcodebase_community",
    "565": "SELECT posts.Id  FROM comments  INNER JOIN posts ON comments.PostId = posts.Id  WHERE comments.UserId = '23853'  AND comments.CreationDate = '2013-07-12 09:08:18.0'  AND posts.ClosedDate IS NOT NULL\t----- bird -----\tcodebase_community",
    "566": "SELECT users.Reputation  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  WHERE posts.Id = '65041'\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(posts.Id)  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  WHERE users.DisplayName = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "568": "SELECT users.DisplayName  FROM votes  INNER JOIN users ON votes.UserId = users.Id  WHERE votes.Id = '6347';\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(*)  FROM votes  WHERE PostId IN (     SELECT Id      FROM posts      WHERE Title LIKE '%data visualization%' )\t----- bird -----\tcodebase_community",
    "570": "SELECT badges.Name  FROM badges  INNER JOIN users ON badges.UserId = users.Id  WHERE users.DisplayName = 'DatEpicCoderGuyWhoPrograms';\t----- bird -----\tcodebase_community",
    "571": "SELECT (CAST((SELECT COUNT(*) FROM posts WHERE OwnerUserId = '24') AS REAL)) /  (SELECT COUNT(*) FROM votes WHERE UserId = '24') AS times FROM posts LIMIT 1\t----- bird -----\tcodebase_community",
    "572": "SELECT posts.ViewCount  FROM posts  WHERE posts.Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": "SELECT comments.Text FROM comments WHERE comments.Score = 17\t----- bird -----\tcodebase_community",
    "574": "SELECT users.DisplayName FROM users WHERE users.WebsiteUrl = 'http://stackoverflow.com'\t----- bird -----\tcodebase_community",
    "575": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'SilentGhost'\t----- bird -----\tcodebase_community",
    "576": "SELECT users.DisplayName  FROM comments  INNER JOIN users ON comments.UserId = users.Id  WHERE comments.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "577": "SELECT comments.Text  FROM comments  INNER JOIN users ON comments.UserId = users.Id  WHERE users.DisplayName = 'A Lion'\t----- bird -----\tcodebase_community",
    "578": "SELECT users.DisplayName, users.Reputation  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  WHERE posts.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "579": "SELECT comments.Text  FROM comments  INNER JOIN posts ON comments.PostId = posts.Id  WHERE posts.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community",
    "580": "SELECT users.DisplayName FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Name = 'Necromancer' LIMIT 10\t----- bird -----\tcodebase_community",
    "581": "SELECT users.DisplayName  FROM posts  INNER JOIN users ON posts.LastEditorUserId = users.Id  WHERE posts.Title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
    "582": "SELECT posts.Title FROM posts INNER JOIN users ON posts.LastEditorUserId = users.Id WHERE users.DisplayName = 'Vebjorn Ljosa'\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(posts.Score), users.WebsiteUrl FROM posts INNER JOIN users ON posts.LastEditorUserId = users.Id WHERE users.DisplayName = 'Yevgeny'\t----- bird -----\tcodebase_community",
    "584": "SELECT comments.Text  FROM comments  INNER JOIN posts ON comments.UserId = posts.LastEditorUserId  WHERE posts.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(votes.BountyAmount)  FROM votes  INNER JOIN posts ON votes.PostId = posts.Id  WHERE posts.Title LIKE '%data%'\t----- bird -----\tcodebase_community",
    "586": "SELECT users.DisplayName FROM votes INNER JOIN posts ON votes.PostId = posts.Id INNER JOIN users ON votes.UserId = users.Id WHERE votes.BountyAmount = 50 AND posts.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "587": "SELECT posts.Title, comments.Text, AVG(posts.ViewCount)  FROM posts  INNER JOIN tags ON posts.Id = tags.Id  INNER JOIN comments ON posts.Id = comments.PostId  WHERE tags.TagName = '<humor>'  GROUP BY posts.Id\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(*) FROM comments WHERE UserId = 13\t----- bird -----\tcodebase_community",
    "589": "SELECT users.Id  FROM users  ORDER BY users.Reputation DESC  LIMIT 1;\t----- bird -----\tcodebase_community",
    "590": "SELECT users.Id  FROM users  ORDER BY users.Views ASC  LIMIT 1\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT badges.UserId) FROM badges WHERE badges.Name = 'Supporter' AND YEAR(badges.Date) = 2011\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(*) FROM (SELECT badges.UserId FROM badges GROUP BY badges.UserId HAVING COUNT(badges.Name) > 5) AS subquery\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT users.Id) FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.Location = 'New York'  AND (badges.Name = 'Supporter' OR badges.Name = 'Teacher')\t----- bird -----\tcodebase_community",
    "594": "SELECT users.DisplayName, users.Reputation FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Id = 1\t----- bird -----\tcodebase_community",
    "595": "SELECT posts.OwnerUserId FROM posts INNER JOIN postHistory ON posts.Id = postHistory.PostId WHERE posts.ViewCount >= 1000 GROUP BY posts.OwnerUserId HAVING COUNT(postHistory.PostId) = 1\t----- bird -----\tcodebase_community",
    "596": "SELECT users.DisplayName, badges.Name FROM comments INNER JOIN users ON comments.UserId = users.Id INNER JOIN badges ON users.Id = badges.UserId GROUP BY comments.UserId ORDER BY COUNT(comments.Id) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT users.Id) FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.Location = 'India' AND badges.Name = 'Teacher'\t----- bird -----\tcodebase_community",
    "598": "SELECT (CAST((SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND strftime('%Y', Date) = '2010') AS REAL) * 100 / (SELECT COUNT(*) FROM badges WHERE Name = 'Student')) -  (CAST((SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND strftime('%Y', Date) = '2011') AS REAL) * 100 / (SELECT COUNT(*) FROM badges WHERE Name = 'Student')) AS percentage_difference\t----- bird -----\tcodebase_community",
    "599": "SELECT postHistory.PostHistoryTypeId FROM postHistory WHERE postHistory.PostId = 3720 UNION SELECT COUNT(DISTINCT comments.UserId) FROM comments WHERE comments.PostId = 3720;\t----- bird -----\tcodebase_community",
    "600": "SELECT posts.ViewCount, postLinks.PostId  FROM postLinks  INNER JOIN posts ON postLinks.PostId = posts.Id  WHERE postLinks.RelatedPostId = 61217\t----- bird -----\tcodebase_community",
    "601": "SELECT posts.Score, postLinks.LinkTypeId  FROM posts  INNER JOIN postLinks ON posts.Id = postLinks.PostId  WHERE posts.Id = 395\t----- bird -----\tcodebase_community",
    "602": "SELECT posts.Id, posts.OwnerUserId FROM posts WHERE posts.Score > 60\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(posts.FavoriteCount)  FROM posts  WHERE posts.OwnerUserId = 686 AND YEAR(posts.CreatinDate) = 2011\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(users.UpVotes), AVG(users.Age) FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId GROUP BY posts.OwnerUserId HAVING COUNT(posts.Id) > 10\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(badges.UserId)  FROM badges  WHERE badges.Name = 'Announcer'\t----- bird -----\tcodebase_community",
    "606": "SELECT badges.Name FROM badges WHERE badges.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60\t----- bird -----\tcodebase_community",
    "608": "SELECT comments.Text FROM comments WHERE comments.CreationDate = '2010-07-19 19:25:47.0'\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(posts.Id) FROM posts WHERE posts.Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT badges.Name  FROM badges  INNER JOIN users ON badges.UserId = users.Id  WHERE users.Reputation = (SELECT MAX(users.Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "611": "SELECT users.Reputation  FROM users  INNER JOIN badges ON users.Id = badges.UserId  WHERE badges.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "612": "SELECT badges.Name  FROM badges  INNER JOIN users ON badges.UserId = users.Id  WHERE users.DisplayName = 'Pierre'\t----- bird -----\tcodebase_community",
    "613": "SELECT badges.Date FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.Location = 'Rochester, NY';\t----- bird -----\tcodebase_community",
    "614": "SELECT (CAST((SELECT COUNT(*) FROM badges WHERE Name = 'Teacher') AS REAL) / (SELECT COUNT(*) FROM badges)) * 100 FROM badges\t----- bird -----\tcodebase_community",
    "615": "SELECT (CAST(COUNT(df2.UserId) AS REAL) * 100 / COUNT(df1.UserId)) AS percentage FROM badges AS df1 LEFT JOIN users AS df2 ON df1.UserId = df2.Id WHERE df1.Name = 'Organizer' AND df2.Age BETWEEN 13 AND 18\t----- bird -----\tcodebase_community",
    "616": "SELECT comments.Score FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE posts.CreationDate = '2010-07-19 19:19:56.0'\t----- bird -----\tcodebase_community",
    "617": "SELECT comments.Text  FROM comments  WHERE comments.CreationDate = '2010-07-19 19:37:33.0'\t----- bird -----\tcodebase_community",
    "618": "SELECT users.Age  FROM users  INNER JOIN badges ON users.Id = badges.UserId  WHERE users.Location = 'Vienna, Austria';\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(*)  FROM badges  INNER JOIN users ON badges.UserId = users.Id  WHERE badges.Name = 'Supporter' AND users.Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "620": "SELECT users.Views FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "621": "SELECT badges.Name FROM badges INNER JOIN (     SELECT users.Id     FROM users     ORDER BY users.Reputation ASC     LIMIT 1 ) AS subquery ON badges.UserId = subquery.Id\t----- bird -----\tcodebase_community",
    "622": "SELECT badges.Name  FROM badges  INNER JOIN users ON badges.UserId = users.Id  WHERE users.DisplayName = 'Sharpie';\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(*) FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Name = 'Supporter' AND users.Age > 65\t----- bird -----\tcodebase_community",
    "624": "SELECT users.DisplayName FROM users WHERE users.Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) FROM users WHERE Location = 'New York';\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2010;\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "628": "SELECT users.DisplayName  FROM users  ORDER BY users.Views DESC  LIMIT 1;\t----- bird -----\tcodebase_community",
    "629": "SELECT (CAST((SELECT COUNT(Id) FROM votes WHERE strftime('%Y', CreationDate) = '2010') AS REAL) /  (SELECT COUNT(Id) FROM votes WHERE strftime('%Y', CreationDate) = '2011')) AS ratio FROM votes LIMIT 1;\t----- bird -----\tcodebase_community",
    "630": "SELECT tags.TagName  FROM users  INNER JOIN posts ON users.Id = posts.OwnerUserId  INNER JOIN tags ON posts.Id = tags.Id  WHERE users.DisplayName = 'John Salvatier';\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(posts.Id)  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  WHERE users.DisplayName = 'Daniel Vassallo';\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*)  FROM users  INNER JOIN votes ON users.Id = votes.UserId  WHERE users.DisplayName = 'Harlan';\t----- bird -----\tcodebase_community",
    "633": "SELECT posts.Id  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  WHERE users.DisplayName = 'slashnick'  ORDER BY posts.AnswerCount DESC  LIMIT 1\t----- bird -----\tcodebase_community",
    "634": "SELECT posts.Id FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY posts.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(posts.Id)  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  INNER JOIN votes ON posts.Id = votes.PostId  WHERE users.DisplayName = 'Matt Parker'  GROUP BY posts.Id  HAVING COUNT(votes.Id) > 4\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(*) FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE users.DisplayName = 'Neil McGuigan' AND comments.Score < 60\t----- bird -----\tcodebase_community",
    "637": "SELECT tags.TagName  FROM users  INNER JOIN posts ON users.Id = posts.OwnerUserId  INNER JOIN tags ON posts.Id = tags.Id  WHERE users.DisplayName = 'Mark Meckes'  AND posts.CommentCount = 0\t----- bird -----\tcodebase_community",
    "638": "SELECT users.DisplayName FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "639": "SELECT CAST(COUNT(posts.Id) FILTER (WHERE tags.TagName = 'r') AS REAL) * 100 / COUNT(posts.Id) FILTER (WHERE posts.OwnerDisplayName = 'Community') AS percentage FROM posts LEFT JOIN tags ON posts.Id = tags.ExcerptPostId WHERE posts.OwnerDisplayName = 'Community';\t----- bird -----\tcodebase_community",
    "640": "SELECT (SELECT SUM(posts.ViewCount) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Mornington') -  (SELECT SUM(posts.ViewCount) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Amos')\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT badges.UserId)  FROM badges  WHERE badges.Name = 'Commentator' AND YEAR(badges.Date) = 2014\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(*) FROM posts WHERE CreationDate BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59';\t----- bird -----\tcodebase_community",
    "643": "SELECT users.DisplayName, users.Age  FROM users  WHERE users.Views = (SELECT MAX(users.Views) FROM users);\t----- bird -----\tcodebase_community",
    "644": "SELECT posts.LastEditDate, posts.LastEditorUserId FROM posts WHERE posts.Title = 'Detecting a given face in a database of facial images';\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE UserId = 13 AND Score < 60\t----- bird -----\tcodebase_community",
    "646": "SELECT posts.Title, comments.UserDisplayName  FROM comments  INNER JOIN posts ON comments.PostId = posts.Id  WHERE comments.Score > 60\t----- bird -----\tcodebase_community",
    "647": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.Location = 'North Pole' AND YEAR(badges.Date) = 2011\t----- bird -----\tcodebase_community",
    "648": "SELECT users.DisplayName, users.WebsiteUrl FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.FavoriteCount > 150\t----- bird -----\tcodebase_community",
    "649": "SELECT posts.Id, COUNT(postHistory.Id), posts.LastEditDate FROM posts INNER JOIN postHistory ON posts.Id = postHistory.PostId WHERE posts.Title = 'What is the best introductory Bayesian statistics textbook?' GROUP BY posts.Id\t----- bird -----\tcodebase_community",
    "650": "SELECT users.LastAccessDate, users.Location  FROM badges  INNER JOIN users ON badges.UserId = users.Id  WHERE badges.Name = 'Outliers';\t----- bird -----\tcodebase_community",
    "651": "SELECT posts.Title  FROM posts  INNER JOIN postLinks ON posts.Id = postLinks.RelatedPostId  WHERE postLinks.PostId IN (     SELECT postLinks.PostId      FROM posts      INNER JOIN postLinks ON posts.Id = postLinks.PostId      WHERE posts.Title = 'How to tell if something happened in a data set which monitors a value over time' )\t----- bird -----\tcodebase_community",
    "652": "SELECT posts.Id, badges.Name FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId INNER JOIN badges ON users.Id = badges.UserId WHERE users.DisplayName = 'Samuel' AND YEAR(users.CreationDate) = 2013 AND YEAR(badges.Date) = 2013\t----- bird -----\tcodebase_community",
    "653": "SELECT users.DisplayName  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  ORDER BY posts.ViewCount DESC  LIMIT 1\t----- bird -----\tcodebase_community",
    "654": "SELECT users.DisplayName, users.Location  FROM users  INNER JOIN posts ON users.Id = posts.OwnerUserId  INNER JOIN tags ON posts.Id = tags.ExcerptPostId  WHERE tags.TagName = 'hypothesis-testing';\t----- bird -----\tcodebase_community",
    "655": "SELECT posts.Title, postLinks.LinkTypeId FROM posts INNER JOIN postLinks ON posts.Id = postLinks.RelatedPostId WHERE postLinks.PostId = (SELECT Id FROM posts WHERE Title = 'What are principal component scores?')\t----- bird -----\tcodebase_community",
    "656": "SELECT users.DisplayName  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  WHERE posts.ParentId IS NOT NULL  ORDER BY posts.Score DESC  LIMIT 1\t----- bird -----\tcodebase_community",
    "657": "SELECT users.DisplayName, users.WebsiteUrl  FROM votes  INNER JOIN users ON votes.UserId = users.Id  WHERE votes.VoteTypeId = 8  ORDER BY votes.BountyAmount DESC  LIMIT 1\t----- bird -----\tcodebase_community",
    "658": "SELECT posts.Title FROM posts ORDER BY posts.ViewCount DESC LIMIT 5\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT posts.OwnerUserId FROM posts ORDER BY posts.FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "661": "SELECT users.Age  FROM users  ORDER BY users.Reputation DESC  LIMIT 1\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(*) FROM votes INNER JOIN posts ON votes.PostId = posts.Id WHERE YEAR(votes.CreationDate) = 2011 AND votes.BountyAmount = 50\t----- bird -----\tcodebase_community",
    "663": "SELECT users.Id FROM users ORDER BY users.Age LIMIT 1;\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(posts.Score) FROM posts WHERE posts.LasActivityDate LIKE '2010-07-19%';\t----- bird -----\tcodebase_community",
    "665": "SELECT COUNT(postLinks.Id) / 12  FROM postLinks  INNER JOIN posts ON postLinks.PostId = posts.Id  WHERE YEAR(postLinks.CreationDate) = 2010 AND posts.AnswerCount <= 2\t----- bird -----\tcodebase_community",
    "666": "SELECT posts.Id FROM votes INNER JOIN posts ON votes.PostId = posts.Id WHERE votes.UserId = 1465 ORDER BY posts.FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "667": "SELECT posts.Title  FROM postLinks  INNER JOIN posts ON postLinks.PostId = posts.Id  ORDER BY postLinks.CreationDate ASC  LIMIT 1;\t----- bird -----\tcodebase_community",
    "668": "SELECT users.DisplayName  FROM badges  INNER JOIN users ON badges.UserId = users.Id  GROUP BY badges.UserId  ORDER BY COUNT(badges.Name) DESC  LIMIT 1\t----- bird -----\tcodebase_community",
    "669": "SELECT votes.CreationDate FROM users INNER JOIN votes ON users.Id = votes.UserId WHERE users.DisplayName = 'chl' ORDER BY votes.CreationDate ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "670": "SELECT users.CreationDate FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE users.Age = (SELECT MIN(Age) FROM users) ORDER BY users.CreationDate ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "671": "SELECT users.DisplayName  FROM badges  INNER JOIN users ON badges.UserId = users.Id  WHERE badges.Name = 'Autobiographer'  ORDER BY badges.Date ASC  LIMIT 1\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT posts.OwnerUserId)  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  WHERE users.Location = 'United Kingdom'  GROUP BY posts.OwnerUserId  HAVING SUM(posts.FavoriteCount) >= 4\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(votes.PostId)  FROM votes  INNER JOIN users ON votes.UserId = users.Id  WHERE users.Age = (SELECT MAX(Age) FROM users)\t----- bird -----\tcodebase_community",
    "674": "SELECT users.DisplayName FROM users ORDER BY users.Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000\t----- bird -----\tcodebase_community",
    "676": "SELECT users.DisplayName FROM users WHERE users.Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(posts.Id)  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  WHERE users.DisplayName = 'Jay Stevens' AND YEAR(users.CreationDate) = 2010;\t----- bird -----\tcodebase_community",
    "678": "SELECT posts.Id, posts.Title FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Harvey Motulsky' ORDER BY posts.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "679": "SELECT posts.Id, posts.Title  FROM posts  ORDER BY posts.Score DESC  LIMIT 1;\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(posts.Score)  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  WHERE users.DisplayName = 'Stephen Turner'\t----- bird -----\tcodebase_community",
    "681": "SELECT users.DisplayName  FROM posts  INNER JOIN users ON posts.OwnerUserId = users.Id  WHERE posts.ViewCount > 20000 AND YEAR(users.CreationDate) = 2011\t----- bird -----\tcodebase_community",
    "682": "SELECT posts.Id, users.DisplayName FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE strftime('%Y', posts.CreationDate) = '2010' ORDER BY posts.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "683": "SELECT (CAST(COUNT(posts.Id) FILTER (WHERE users.Reputation > 1000 AND EXTRACT(YEAR FROM users.CreationDate) = 2011) AS REAL) / COUNT(posts.Id)) * 100 FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id\t----- bird -----\tcodebase_community",
    "684": "SELECT (CAST(COUNT(users.Id) WHERE users.Age BETWEEN 13 AND 18 AS REAL) / COUNT(users.Id)) * 100 AS percentage FROM users;\t----- bird -----\tcodebase_community",
    "685": "SELECT posts.ViewCount, users.DisplayName  FROM posts  INNER JOIN users ON posts.LastEditorUserId = users.Id  WHERE posts.Title = 'Computer Game Datasets';\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*)  FROM posts  WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts);\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(*) FROM comments WHERE comments.PostId = (     SELECT posts.Id     FROM posts     ORDER BY posts.Score DESC     LIMIT 1 )\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*)  FROM posts  WHERE ViewCount > 35000 AND CommentCount = 0\t----- bird -----\tcodebase_community",
    "689": "SELECT users.DisplayName, users.Location  FROM posts  INNER JOIN users ON posts.LastEditorUserId = users.Id  WHERE posts.Id = 183  ORDER BY posts.LastEditDate DESC  LIMIT 1\t----- bird -----\tcodebase_community",
    "690": "SELECT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'Emmett' ORDER BY badges.Date DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(*)  FROM users  WHERE Age BETWEEN 19 AND 65  AND UpVotes > 5000\t----- bird -----\tcodebase_community",
    "692": "SELECT DATEDIFF(badges.Date, users.CreationDate) FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'Zolomon';\t----- bird -----\tcodebase_community",
    "693": "SELECT (SELECT COUNT(*) FROM posts WHERE posts.OwnerUserId = (SELECT users.Id FROM users ORDER BY users.CreationDate DESC LIMIT 1)),  (SELECT COUNT(*) FROM comments WHERE comments.UserId = (SELECT users.Id FROM users ORDER BY users.CreationDate DESC LIMIT 1))\t----- bird -----\tcodebase_community",
    "694": "SELECT comments.Text, users.DisplayName FROM comments INNER JOIN posts ON comments.PostId = posts.Id INNER JOIN users ON comments.UserId = users.Id WHERE posts.Title = 'Analysing wind data with R' ORDER BY comments.CreationDate DESC LIMIT 10\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(*) FROM badges WHERE Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(*)  FROM posts  INNER JOIN tags ON posts.Id = tags.Id  WHERE tags.TagName = 'careers';\t----- bird -----\tcodebase_community",
    "697": "SELECT users.Reputation, users.Views FROM users WHERE users.DisplayName = 'Jarrod Dixon'\t----- bird -----\tcodebase_community",
    "698": "SELECT posts.CommentCount, posts.AnswerCount FROM posts WHERE posts.Title = 'Clustering 1D data'\t----- bird -----\tcodebase_community",
    "699": "SELECT users.CreationDate FROM users WHERE users.DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(*) FROM votes WHERE BountyAmount > 30\t----- bird -----\tcodebase_community",
    "701": "SELECT CAST(COUNT(df2.Id) AS REAL) * 100 / COUNT(df1.Id) FROM  (SELECT posts.Id FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.Reputation = (SELECT MAX(Reputation) FROM users)) AS df1, (SELECT posts.Id FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.Reputation = (SELECT MAX(Reputation) FROM users) AND posts.Score > 50) AS df2\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) FROM posts WHERE Score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20;\t----- bird -----\tcodebase_community",
    "704": "SELECT tags.ExcerptPostId, tags.WikiPostId FROM tags WHERE tags.TagName = 'sample';\t----- bird -----\tcodebase_community",
    "705": "SELECT users.Reputation, users.UpVotes  FROM users  INNER JOIN comments ON users.Id = comments.UserId  WHERE comments.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "706": "SELECT comments.Text FROM posts INNER JOIN comments ON posts.Id = comments.PostId WHERE posts.Title LIKE '%linear regression%'\t----- bird -----\tcodebase_community",
    "707": "SELECT comments.Text FROM posts INNER JOIN comments ON posts.Id = comments.PostId WHERE posts.ViewCount BETWEEN 100 AND 150 ORDER BY comments.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "708": "SELECT users.CreationDate, users.Age FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE comments.Text LIKE '%http://%'\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT comments.PostId) FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE comments.Score = 0 AND posts.ViewCount < 5\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(*) FROM posts INNER JOIN comments ON posts.Id = comments.PostId WHERE posts.CommentCount = 1 AND comments.Score = 0\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT users.Id)  FROM comments  INNER JOIN users ON comments.UserId = users.Id  WHERE comments.Score = 0 AND users.Age = 40\t----- bird -----\tcodebase_community",
    "712": "SELECT posts.Id, comments.Text  FROM posts  INNER JOIN comments ON posts.Id = comments.PostId  WHERE posts.Title = 'Group differences on a five point Likert item';\t----- bird -----\tcodebase_community",
    "713": "SELECT users.UpVotes  FROM comments  INNER JOIN users ON comments.UserId = users.Id  WHERE comments.Text = 'R is also lazy evaluated.';\t----- bird -----\tcodebase_community",
    "714": "SELECT comments.Text  FROM comments  INNER JOIN users ON comments.UserId = users.Id  WHERE users.DisplayName = 'Harvey Motulsky';\t----- bird -----\tcodebase_community",
    "715": "SELECT users.DisplayName  FROM comments  INNER JOIN users ON comments.UserId = users.Id  WHERE comments.Score BETWEEN 1 AND 5 AND users.DownVotes = 0\t----- bird -----\tcodebase_community",
    "716": "SELECT CAST(COUNT(DISTINCT df2.UserId) * 100.0 / COUNT(DISTINCT df1.UserId)) as percentage FROM  (SELECT UserId FROM comments WHERE Score BETWEEN 5 AND 10) as df1 LEFT JOIN  (SELECT UserId FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE users.UpVotes = 0 AND comments.Score BETWEEN 5 AND 10) as df2 ON df1.UserId = df2.UserId\t----- bird -----\tcodebase_community",
    "717": "SELECT superpower.power_name  FROM hero_power  INNER JOIN superhero ON hero_power.hero_id = superhero.id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(*)  FROM superhero  INNER JOIN hero_power ON superhero.id = hero_power.hero_id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superpower.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(*)  FROM hero_power  INNER JOIN superhero ON hero_power.hero_id = superhero.id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superpower.power_name = 'Super Strength'  AND superhero.height_cm > 200\t----- bird -----\tsuperhero",
    "720": "SELECT superhero.full_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id GROUP BY superhero.id HAVING COUNT(hero_power.power_id) > 15\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue';\t----- bird -----\tsuperhero",
    "722": "SELECT colour.colour  FROM superhero  INNER JOIN colour ON superhero.skin_colour_id = colour.id  WHERE superhero.superhero_name = 'Apocalypse'\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(*)  FROM superhero  INNER JOIN colour ON superhero.eye_colour_id = colour.id  INNER JOIN hero_power ON superhero.id = hero_power.hero_id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE colour.colour = 'Blue' AND superpower.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "724": "SELECT superhero.superhero_name FROM superhero INNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id INNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(*)  FROM superhero  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "726": "SELECT superhero.superhero_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' ORDER BY superhero.height_cm DESC\t----- bird -----\tsuperhero",
    "727": "SELECT publisher.publisher_name  FROM superhero  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE superhero.superhero_name = 'Sauron'\t----- bird -----\tsuperhero",
    "728": "SELECT colour.colour, COUNT(superhero.id)  FROM superhero  INNER JOIN colour ON superhero.eye_colour_id = colour.id  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE publisher.publisher_name = 'Marvel Comics'  GROUP BY colour.colour  ORDER BY COUNT(superhero.id) DESC\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(superhero.height_cm)  FROM superhero  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "730": "SELECT superhero.superhero_name  FROM superhero  INNER JOIN hero_power ON superhero.id = hero_power.hero_id  INNER JOIN superpower ON hero_power.power_id = superpower.id  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE publisher.publisher_name = 'Marvel Comics' AND superpower.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(*)  FROM superhero  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE publisher.publisher_name = 'DC Comics';\t----- bird -----\tsuperhero",
    "732": "SELECT publisher.publisher_name FROM hero_attribute INNER JOIN superhero ON hero_attribute.hero_id = superhero.id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE attribute.attribute_name = 'Speed' ORDER BY hero_attribute.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(*)  FROM superhero  INNER JOIN colour ON superhero.eye_colour_id = colour.id  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "734": "SELECT publisher.publisher_name  FROM publisher  INNER JOIN superhero ON publisher.id = superhero.publisher_id  WHERE superhero.superhero_name = 'Blue Beetle II'\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(superhero.id)  FROM superhero  INNER JOIN colour ON superhero.hair_colour_id = colour.id  WHERE colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "736": "SELECT superhero.superhero_name  FROM hero_attribute  INNER JOIN superhero ON hero_attribute.hero_id = superhero.id  INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id  WHERE attribute.attribute_name = 'Intelligence'  ORDER BY hero_attribute.attribute_value ASC  LIMIT 1\t----- bird -----\tsuperhero",
    "737": "SELECT race.race  FROM superhero  INNER JOIN race ON superhero.race_id = race.id  WHERE superhero.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "738": "SELECT superhero.superhero_name  FROM superhero  INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id  INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id  WHERE attribute.attribute_name = 'Durability' AND hero_attribute.attribute_value < 50\t----- bird -----\tsuperhero",
    "739": "SELECT superhero.superhero_name  FROM superhero  INNER JOIN hero_power ON superhero.id = hero_power.hero_id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superpower.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(*)  FROM superhero  INNER JOIN gender ON superhero.gender_id = gender.id  INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id  INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id  WHERE gender.gender = 'Female'  AND attribute.attribute_name = 'Strength'  AND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "741": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id GROUP BY superhero.id HAVING COUNT(hero_power.power_id) = (SELECT MAX(COUNT(hero_power.power_id)) FROM hero_power GROUP BY hero_power.hero_id)\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(*)  FROM superhero  INNER JOIN race ON superhero.race_id = race.id  WHERE race.race = 'Vampire';\t----- bird -----\tsuperhero",
    "743": "SELECT CAST(COUNT(*) FILTER (WHERE alignment.alignment = 'Bad' AND publisher.publisher_name = 'Marvel Comics') AS REAL) * 100 / COUNT(*) FILTER (WHERE alignment.alignment = 'Bad'), COUNT(*) FILTER (WHERE alignment.alignment = 'Bad' AND publisher.publisher_name = 'Marvel Comics') FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id INNER JOIN publisher ON superhero.publisher_id = publisher.id\t----- bird -----\tsuperhero",
    "744": "SELECT (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) -  (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) AS difference\t----- bird -----\tsuperhero",
    "745": "SELECT publisher.id FROM publisher WHERE publisher.publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(hero_attribute.attribute_value) FROM hero_attribute\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "748": "SELECT colour.colour  FROM superhero  INNER JOIN colour ON superhero.eye_colour_id = colour.id  WHERE superhero.id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT superpower.power_name  FROM superhero  INNER JOIN hero_power ON superhero.id = hero_power.hero_id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superhero.superhero_name = 'Deathlok'\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(superhero.weight_kg)  FROM superhero  INNER JOIN gender ON superhero.gender_id = gender.id  WHERE gender.gender = 'Female'\t----- bird -----\tsuperhero",
    "751": "SELECT DISTINCT superpower.power_name FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE gender.gender = 'Male' LIMIT 5\t----- bird -----\tsuperhero",
    "752": "SELECT superhero.superhero_name FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE race.race = 'Alien'\t----- bird -----\tsuperhero",
    "753": "SELECT superhero.superhero_name FROM superhero LEFT JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.height_cm BETWEEN 170 AND 190 AND colour.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "754": "SELECT superpower.power_name  FROM superpower  INNER JOIN hero_power ON superpower.id = hero_power.power_id  WHERE hero_power.hero_id = 56\t----- bird -----\tsuperhero",
    "755": "SELECT superhero.full_name  FROM superhero  INNER JOIN race ON superhero.race_id = race.id  WHERE race.race = 'Demi-God'  LIMIT 5\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*)  FROM superhero  INNER JOIN alignment ON superhero.alignment_id = alignment.id  WHERE alignment.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "757": "SELECT race.race  FROM superhero  INNER JOIN race ON superhero.race_id = race.id  WHERE superhero.weight_kg = 169\t----- bird -----\tsuperhero",
    "758": "SELECT colour.colour  FROM superhero  INNER JOIN race ON superhero.race_id = race.id  INNER JOIN colour ON superhero.hair_colour_id = colour.id  WHERE superhero.height_cm = 185 AND race.race = 'human';\t----- bird -----\tsuperhero",
    "759": "SELECT colour.colour  FROM superhero  INNER JOIN colour ON superhero.eye_colour_id = colour.id  ORDER BY superhero.weight_kg DESC  LIMIT 1\t----- bird -----\tsuperhero",
    "760": "SELECT (CAST((SELECT COUNT(*) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.height_cm BETWEEN 150 AND 180 AND publisher.publisher_name = 'Marvel Comics') AS REAL) * 100) / (SELECT COUNT(*) FROM superhero WHERE superhero.height_cm BETWEEN 150 AND 180) AS percentage FROM superhero LIMIT 1;\t----- bird -----\tsuperhero",
    "761": "SELECT superhero.superhero_name  FROM superhero  INNER JOIN gender ON superhero.gender_id = gender.id  WHERE gender.gender = 'Male'  AND superhero.weight_kg > (SELECT AVG(superhero.weight_kg)*0.79 FROM superhero)\t----- bird -----\tsuperhero",
    "762": "SELECT superpower.power_name FROM superpower INNER JOIN hero_power ON superpower.id = hero_power.power_id GROUP BY superpower.power_name ORDER BY COUNT(superpower.power_name) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "763": "SELECT hero_attribute.attribute_value  FROM hero_attribute  INNER JOIN superhero ON hero_attribute.hero_id = superhero.id  WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "764": "SELECT superpower.power_name  FROM hero_power  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE hero_power.hero_id = 1\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(*)  FROM hero_power  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superpower.power_name = 'stealth';\t----- bird -----\tsuperhero",
    "766": "SELECT superhero.full_name FROM hero_attribute INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id INNER JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE attribute.attribute_name = 'strength' ORDER BY hero_attribute.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "767": "SELECT CAST(COUNT(superhero.id) AS REAL) / SUM(CASE WHEN superhero.skin_colour_id = 1 THEN 1 ELSE 0 END) AS average FROM superhero WHERE superhero.skin_colour_id = 1\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(*)  FROM superhero  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE publisher.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "769": "SELECT superhero.superhero_name FROM hero_attribute INNER JOIN superhero ON hero_attribute.hero_id = superhero.id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE attribute.attribute_name = 'durability' AND publisher.publisher_name = 'Dark Horse Comics' ORDER BY hero_attribute.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "770": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.full_name = 'Abraham Sapien';\t----- bird -----\tsuperhero",
    "771": "SELECT superhero.superhero_name  FROM superhero  INNER JOIN hero_power ON superhero.id = hero_power.hero_id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superpower.power_name = 'Flight'\t----- bird -----\tsuperhero",
    "772": "SELECT colour.colour AS eye_colour,  colour_1.colour AS skin_colour,  colour_2.colour AS hair_colour  FROM superhero  INNER JOIN gender ON superhero.gender_id = gender.id  INNER JOIN publisher ON superhero.publisher_id = publisher.id  INNER JOIN colour ON superhero.eye_colour_id = colour.id  INNER JOIN colour AS colour_1 ON superhero.skin_colour_id = colour_1.id  INNER JOIN colour AS colour_2 ON superhero.hair_colour_id = colour_2.id  WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "773": "SELECT superhero.superhero_name, publisher.publisher_name  FROM superhero  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE superhero.hair_colour_id = superhero.skin_colour_id AND superhero.hair_colour_id = superhero.eye_colour_id\t----- bird -----\tsuperhero",
    "774": "SELECT race.race  FROM superhero  INNER JOIN race ON superhero.race_id = race.id  WHERE superhero.superhero_name = 'A-Bomb'\t----- bird -----\tsuperhero",
    "775": "SELECT (CAST((SELECT COUNT(*) FROM superhero  INNER JOIN colour ON superhero.skin_colour_id = colour.id  INNER JOIN gender ON superhero.gender_id = gender.id  WHERE colour.colour = 'Blue' AND gender.gender = 'Female') AS REAL) * 100) /  (SELECT COUNT(*) FROM superhero  INNER JOIN gender ON superhero.gender_id = gender.id  WHERE gender.gender = 'Female') AS percentage FROM superhero  INNER JOIN colour ON superhero.skin_colour_id = colour.id  INNER JOIN gender ON superhero.gender_id = gender.id  LIMIT 1;\t----- bird -----\tsuperhero",
    "776": "SELECT superhero.superhero_name, race.race  FROM superhero  INNER JOIN race ON superhero.race_id = race.id  WHERE superhero.full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "777": "SELECT gender.gender  FROM superhero  INNER JOIN gender ON superhero.gender_id = gender.id  WHERE superhero.superhero_name = 'Agent 13';\t----- bird -----\tsuperhero",
    "778": "SELECT superhero.superhero_name  FROM superhero  INNER JOIN hero_power ON superhero.id = hero_power.hero_id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superpower.power_name = 'Adaptation';\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(*) FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id WHERE superhero.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
    "780": "SELECT superpower.power_name  FROM hero_power  INNER JOIN superhero ON hero_power.hero_id = superhero.id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superhero.full_name = 'Hunter Zolomon';\t----- bird -----\tsuperhero",
    "781": "SELECT superhero.height_cm  FROM superhero  INNER JOIN colour ON superhero.eye_colour_id = colour.id  WHERE colour.colour = 'Amber'\t----- bird -----\tsuperhero",
    "782": "SELECT superhero.superhero_name  FROM superhero  INNER JOIN colour ON superhero.eye_colour_id = colour.id AND superhero.hair_colour_id = colour.id  WHERE colour.colour = 'Black'\t----- bird -----\tsuperhero",
    "783": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.skin_colour_id IN (     SELECT colour.id     FROM colour     WHERE colour.colour = 'Gold' );\t----- bird -----\tsuperhero",
    "784": "SELECT superhero.full_name FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE race.race = 'Vampire'\t----- bird -----\tsuperhero",
    "785": "SELECT superhero.superhero_name FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(hero_attribute.hero_id)  FROM hero_attribute  INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id  WHERE attribute.attribute_name = 'Strength'  AND hero_attribute.attribute_value = (     SELECT MAX(hero_attribute.attribute_value)      FROM hero_attribute      INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id      WHERE attribute.attribute_name = 'Strength' )\t----- bird -----\tsuperhero",
    "787": "SELECT race.race, alignment.alignment  FROM superhero  INNER JOIN race ON superhero.race_id = race.id  INNER JOIN alignment ON superhero.alignment_id = alignment.id  WHERE superhero.superhero_name = 'Cameron Hicks';\t----- bird -----\tsuperhero",
    "788": "SELECT (CAST((SELECT COUNT(*) FROM superhero  INNER JOIN gender ON superhero.gender_id = gender.id  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics') AS REAL) * 100) /  (SELECT COUNT(*) FROM superhero  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE publisher.publisher_name = 'Marvel Comics') AS percent FROM superhero LIMIT 1;\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(superhero.weight_kg)  FROM superhero  INNER JOIN race ON superhero.race_id = race.id  WHERE race.race = 'Alien'\t----- bird -----\tsuperhero",
    "790": "SELECT (SELECT SUM(weight_kg) FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT SUM(weight_kg) FROM superhero WHERE full_name = 'Charles Chandler') AS difference;\t----- bird -----\tsuperhero",
    "791": "SELECT superhero.superhero_name, AVG(superhero.height_cm)  FROM superhero  GROUP BY superhero.superhero_name;\t----- bird -----\tsuperhero",
    "792": "SELECT superpower.power_name  FROM superhero  INNER JOIN hero_power ON superhero.id = hero_power.hero_id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(*)  FROM superhero  INNER JOIN race ON superhero.race_id = race.id  INNER JOIN gender ON superhero.gender_id = gender.id  WHERE race.race = 'god/eternal' AND gender.gender = 'Male'\t----- bird -----\tsuperhero",
    "794": "SELECT superhero.superhero_name  FROM hero_attribute  INNER JOIN superhero ON hero_attribute.hero_id = superhero.id  INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id  WHERE attribute.attribute_name = 'Speed'  ORDER BY hero_attribute.attribute_value DESC  LIMIT 1\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "796": "SELECT attribute.attribute_name, hero_attribute.attribute_value FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "797": "SELECT superhero.superhero_name FROM superhero INNER JOIN colour as eye_colour ON superhero.eye_colour_id = eye_colour.id INNER JOIN colour as hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Brown'\t----- bird -----\tsuperhero",
    "798": "SELECT publisher.publisher_name  FROM superhero  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) - (SELECT COUNT(*) FROM superhero WHERE publisher_id = 1) FROM superhero\t----- bird -----\tsuperhero",
    "800": "SELECT (CAST(COUNT(superhero.id) FILTER (WHERE superhero.eye_colour_id = 7) AS REAL) * 100 / COUNT(superhero.id)) AS percentage FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue'\t----- bird -----\tsuperhero",
    "801": "SELECT (CAST((SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Male') AS REAL)) /  (SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female') AS ratio\t----- bird -----\tsuperhero",
    "802": "SELECT superhero.superhero_name FROM superhero ORDER BY superhero.height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "803": "SELECT superpower.id FROM superpower WHERE superpower.power_name = 'cryokinesis';\t----- bird -----\tsuperhero",
    "804": "SELECT superhero.superhero_name FROM superhero WHERE superhero.id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT superhero.full_name FROM superhero WHERE superhero.weight_kg = 0 OR superhero.weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "806": "SELECT colour.colour  FROM superhero  INNER JOIN colour ON superhero.eye_colour_id = colour.id  WHERE superhero.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "807": "SELECT superpower.power_name  FROM hero_power  INNER JOIN superhero ON hero_power.hero_id = superhero.id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superhero.full_name = 'Helen Parr'\t----- bird -----\tsuperhero",
    "808": "SELECT race.race  FROM superhero  INNER JOIN race ON superhero.race_id = race.id  WHERE superhero.weight_kg = 108 AND superhero.height_cm = 188\t----- bird -----\tsuperhero",
    "809": "SELECT publisher.publisher_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.id = 38;\t----- bird -----\tsuperhero",
    "810": "SELECT race.race  FROM race  INNER JOIN superhero ON race.id = superhero.race_id  INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id  ORDER BY hero_attribute.attribute_value DESC  LIMIT 1\t----- bird -----\tsuperhero",
    "811": "SELECT alignment.alignment, superpower.power_name  FROM superhero  INNER JOIN alignment ON superhero.alignment_id = alignment.id  INNER JOIN hero_power ON superhero.id = hero_power.hero_id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superhero.superhero_name = 'Atom IV';\t----- bird -----\tsuperhero",
    "812": "SELECT superhero.superhero_name FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue' LIMIT 5\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(hero_attribute.attribute_value)  FROM hero_attribute  INNER JOIN superhero ON hero_attribute.hero_id = superhero.id  INNER JOIN alignment ON superhero.alignment_id = alignment.id  WHERE alignment.alignment = 'neutral';\t----- bird -----\tsuperhero",
    "814": "SELECT colour.colour  FROM hero_attribute  INNER JOIN superhero ON hero_attribute.hero_id = superhero.id  INNER JOIN colour ON superhero.skin_colour_id = colour.id  WHERE hero_attribute.attribute_value = 100;\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero  INNER JOIN alignment ON superhero.alignment_id = alignment.id  INNER JOIN gender ON superhero.gender_id = gender.id  WHERE alignment.alignment = 'good' AND gender.gender = 'female'\t----- bird -----\tsuperhero",
    "816": "SELECT superhero.superhero_name FROM hero_attribute INNER JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE hero_attribute.attribute_value BETWEEN 75 AND 80\t----- bird -----\tsuperhero",
    "817": "SELECT race.race  FROM superhero  INNER JOIN colour ON superhero.hair_colour_id = colour.id  INNER JOIN gender ON superhero.gender_id = gender.id  INNER JOIN race ON superhero.race_id = race.id  WHERE colour.colour = 'blue' AND gender.gender = 'male';\t----- bird -----\tsuperhero",
    "818": "SELECT (CAST((SELECT COUNT(*) FROM superhero          INNER JOIN gender ON superhero.gender_id = gender.id          INNER JOIN alignment ON superhero.alignment_id = alignment.id          WHERE gender.gender = 'female' AND alignment.alignment = 'bad') AS REAL) * 100) /         (SELECT COUNT(*) FROM superhero          INNER JOIN alignment ON superhero.alignment_id = alignment.id          WHERE alignment.alignment = 'bad')  FROM superhero  LIMIT 1;\t----- bird -----\tsuperhero",
    "819": "SELECT (SUM(CASE WHEN superhero.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN superhero.eye_colour_id = 1 THEN 1 ELSE 0 END)) AS difference FROM superhero WHERE superhero.weight_kg = 0 OR superhero.weight_kg IS NULL\t----- bird -----\tsuperhero",
    "820": "SELECT hero_attribute.attribute_value  FROM hero_attribute  INNER JOIN superhero ON hero_attribute.hero_id = superhero.id  INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id  WHERE superhero.superhero_name = 'Hulk' AND attribute.attribute_name = 'Strength';\t----- bird -----\tsuperhero",
    "821": "SELECT superpower.power_name  FROM superhero  INNER JOIN hero_power ON superhero.id = hero_power.hero_id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superhero.superhero_name = 'Ajax';\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM superhero  INNER JOIN colour ON superhero.skin_colour_id = colour.id  INNER JOIN alignment ON superhero.alignment_id = alignment.id  WHERE colour.colour = 'Green' AND alignment.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) FROM superhero  INNER JOIN gender ON superhero.gender_id = gender.id  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "824": "SELECT superhero.superhero_name FROM hero_power INNER JOIN superhero ON hero_power.hero_id = superhero.id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Wind Control' ORDER BY superhero.superhero_name ASC\t----- bird -----\tsuperhero",
    "825": "SELECT gender.gender  FROM gender  INNER JOIN superhero ON gender.id = superhero.gender_id  INNER JOIN hero_power ON superhero.id = hero_power.hero_id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superpower.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "826": "SELECT superhero.superhero_name  FROM superhero  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE publisher.publisher_name = 'DC Comics'  ORDER BY superhero.weight_kg DESC  LIMIT 1\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(superhero.height_cm)  FROM superhero  INNER JOIN race ON superhero.race_id = race.id  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE race.race <> 'Human' AND publisher.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(*)  FROM hero_attribute  INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id  WHERE attribute.attribute_name = 'Speed' AND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "829": "SELECT (SELECT COUNT(*) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'DC Comics') -  (SELECT COUNT(*) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics') AS difference\t----- bird -----\tsuperhero",
    "830": "SELECT attribute.attribute_name  FROM hero_attribute  INNER JOIN superhero ON hero_attribute.hero_id = superhero.id  INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id  WHERE superhero.superhero_name = 'Black Panther'  ORDER BY hero_attribute.attribute_value ASC  LIMIT 1\t----- bird -----\tsuperhero",
    "831": "SELECT colour.colour  FROM superhero  INNER JOIN colour ON superhero.eye_colour_id = colour.id  WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "832": "SELECT superhero.superhero_name FROM superhero ORDER BY superhero.height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "833": "SELECT superhero.superhero_name FROM superhero WHERE superhero.full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "834": "SELECT (CAST((SELECT COUNT(*) FROM superhero  INNER JOIN gender ON superhero.gender_id = gender.id  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE gender.gender = 'Female' AND publisher.publisher_name = 'George Lucas') AS REAL) * 100) /  (SELECT COUNT(*) FROM superhero  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE publisher.publisher_name = 'George Lucas') AS percentage FROM superhero  INNER JOIN gender ON superhero.gender_id = gender.id  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE publisher.publisher_name = 'George Lucas' LIMIT 1;\t----- bird -----\tsuperhero",
    "835": "SELECT (CAST((SELECT COUNT(*) FROM superhero  INNER JOIN alignment ON superhero.alignment_id = alignment.id  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE alignment.alignment = 'Good' AND publisher.publisher_name = 'Marvel Comics') AS REAL) * 100) /  (SELECT COUNT(*) FROM superhero  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE publisher.publisher_name = 'Marvel Comics') AS percentage FROM superhero  INNER JOIN alignment ON superhero.alignment_id = alignment.id  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE publisher.publisher_name = 'Marvel Comics' LIMIT 1;\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%';\t----- bird -----\tsuperhero",
    "837": "SELECT hero_attribute.hero_id  FROM hero_attribute  ORDER BY hero_attribute.attribute_value ASC  LIMIT 1\t----- bird -----\tsuperhero",
    "838": "SELECT superhero.full_name FROM superhero WHERE superhero.superhero_name = 'Alien'\t----- bird -----\tsuperhero",
    "839": "SELECT superhero.full_name  FROM superhero  INNER JOIN colour ON superhero.eye_colour_id = colour.id  WHERE superhero.weight_kg < 100 AND colour.colour = 'brown'\t----- bird -----\tsuperhero",
    "840": "SELECT hero_attribute.attribute_value  FROM hero_attribute  INNER JOIN superhero ON hero_attribute.hero_id = superhero.id  WHERE superhero.superhero_name = 'Aquababy'\t----- bird -----\tsuperhero",
    "841": "SELECT superhero.weight_kg, race.race  FROM superhero  INNER JOIN race ON superhero.race_id = race.id  WHERE superhero.id = 40\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(superhero.height_cm)  FROM superhero  INNER JOIN alignment ON superhero.alignment_id = alignment.id  WHERE alignment.alignment = 'neutral'\t----- bird -----\tsuperhero",
    "843": "SELECT superhero.id  FROM superhero  INNER JOIN hero_power ON superhero.id = hero_power.hero_id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superpower.power_name = 'Intelligence';\t----- bird -----\tsuperhero",
    "844": "SELECT colour.colour  FROM superhero  INNER JOIN colour ON superhero.eye_colour_id = colour.id  WHERE superhero.superhero_name = 'Blackwulf'\t----- bird -----\tsuperhero",
    "845": "SELECT superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.height_cm > (SELECT AVG(superhero.height_cm) * 0.8 FROM superhero)\t----- bird -----\tsuperhero",
    "846": "SELECT drivers.driverRef  FROM qualifying  INNER JOIN drivers ON qualifying.driverId = drivers.driverId  WHERE qualifying.raceId = 20  ORDER BY qualifying.q1 DESC  LIMIT 5\t----- bird -----\tformula_1",
    "847": "SELECT drivers.surname  FROM qualifying  INNER JOIN drivers ON qualifying.driverId = drivers.driverId  WHERE qualifying.raceId = 19  ORDER BY qualifying.q2 ASC  LIMIT 1;\t----- bird -----\tformula_1",
    "848": "SELECT races.year  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE circuits.location = 'Shanghai';\t----- bird -----\tformula_1",
    "849": "SELECT races.url  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE circuits.name = 'Circuit de Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "850": "SELECT races.name  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE circuits.country = 'Germany';\t----- bird -----\tformula_1",
    "851": "SELECT circuits.name  FROM constructors  INNER JOIN races ON constructors.constructorId = races.constructorId  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE constructors.name = 'Renault';\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(*)  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE races.year = 2010 AND circuits.location NOT IN ('Asia', 'Europe')\t----- bird -----\tformula_1",
    "853": "SELECT races.name  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE circuits.country = 'Spain';\t----- bird -----\tformula_1",
    "854": "SELECT circuits.lat, circuits.lng FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "855": "SELECT races.url  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE circuits.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "856": "SELECT races.time  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE circuits.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "857": "SELECT circuits.lat, circuits.lng  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE races.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "858": "SELECT constructors.country  FROM constructorResults  INNER JOIN constructors ON constructorResults.constructorId = constructors.constructorId  WHERE constructorResults.raceId = 24 AND constructorResults.points = 1\t----- bird -----\tformula_1",
    "859": "SELECT qualifying.q1  FROM drivers  INNER JOIN qualifying ON drivers.driverId = qualifying.driverId  WHERE drivers.surname = 'Senna'  AND drivers.forename = 'Bruno'  AND qualifying.raceId = 354\t----- bird -----\tformula_1",
    "860": "SELECT drivers.nationality  FROM qualifying  INNER JOIN drivers ON qualifying.driverId = drivers.driverId  WHERE qualifying.q2 = '0:01:40' AND qualifying.raceId = 355\t----- bird -----\tformula_1",
    "861": "SELECT qualifying.number FROM qualifying WHERE qualifying.raceId = 903 AND qualifying.q3 = '0:01:54'\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(*)  FROM races  INNER JOIN results ON races.raceId = results.raceId  WHERE races.name = 'Bahrain Grand Prix'  AND races.year = 2007  AND results.time IS NULL\t----- bird -----\tformula_1",
    "863": "SELECT seasons.year FROM races INNER JOIN seasons ON races.year = seasons.year WHERE races.raceId = 901\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(results.driverId)  FROM races  INNER JOIN results ON races.raceId = results.raceId  WHERE races.date = '2015/11/29' AND results.time IS NOT NULL\t----- bird -----\tformula_1",
    "865": "SELECT drivers.driverRef  FROM results  INNER JOIN drivers ON results.driverId = drivers.driverId  WHERE results.raceId = 592 AND results.time IS NOT NULL  ORDER BY drivers.dob  LIMIT 1\t----- bird -----\tformula_1",
    "866": "SELECT drivers.url  FROM lapTimes  INNER JOIN drivers ON lapTimes.driverId = drivers.driverId  WHERE lapTimes.time LIKE '0:01:27%'  AND lapTimes.raceId = 161\t----- bird -----\tformula_1",
    "867": "SELECT drivers.nationality  FROM results  INNER JOIN drivers ON results.driverId = drivers.driverId  WHERE results.raceId = 933  ORDER BY results.fastestLapSpeed DESC  LIMIT 1\t----- bird -----\tformula_1",
    "868": "SELECT circuits.lat, circuits.lng  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE races.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "869": "SELECT constructors.url  FROM constructorResults  INNER JOIN constructors ON constructorResults.constructorId = constructors.constructorId  WHERE constructorResults.raceId = 9  ORDER BY constructorResults.points DESC  LIMIT 1\t----- bird -----\tformula_1",
    "870": "SELECT qualifying.q1  FROM drivers  INNER JOIN qualifying ON drivers.driverId = qualifying.driverId  WHERE drivers.surname = 'di Grassi' AND drivers.forename = 'Lucas' AND qualifying.raceId = 345\t----- bird -----\tformula_1",
    "871": "SELECT drivers.nationality  FROM qualifying  INNER JOIN drivers ON qualifying.driverId = drivers.driverId  WHERE qualifying.q2 = '0:01:15' AND qualifying.raceId = 347\t----- bird -----\tformula_1",
    "872": "SELECT drivers.code  FROM qualifying  INNER JOIN drivers ON qualifying.driverId = drivers.driverId  WHERE qualifying.raceId = 45 AND qualifying.q3 = '0:01:33'\t----- bird -----\tformula_1",
    "873": "SELECT results.time  FROM races  INNER JOIN results ON races.raceId = results.raceId  INNER JOIN drivers ON results.driverId = drivers.driverId  WHERE races.raceId = 743 AND drivers.driverRef = 'Bruce McLaren';\t----- bird -----\tformula_1",
    "874": "SELECT drivers.surname, drivers.forename  FROM races  INNER JOIN results ON races.raceId = results.raceId  INNER JOIN drivers ON results.driverId = drivers.driverId  WHERE races.name = 'San Marino Grand Prix'  AND races.year = 2006  AND results.position = 2\t----- bird -----\tformula_1",
    "875": "SELECT seasons.url  FROM seasons  INNER JOIN races ON seasons.year = races.year  WHERE races.raceId = 901\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(*)  FROM races  INNER JOIN results ON races.raceId = results.raceId  WHERE races.date = '2015/11/29' AND results.time IS NULL\t----- bird -----\tformula_1",
    "877": "SELECT drivers.driverRef FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE results.raceId = 872 AND results.time IS NOT NULL ORDER BY drivers.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "878": "SELECT drivers.surname, drivers.forename FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE lapTimes.raceId = 348 ORDER BY lapTimes.time LIMIT 1\t----- bird -----\tformula_1",
    "879": "SELECT drivers.nationality  FROM results  INNER JOIN drivers ON results.driverId = drivers.driverId  WHERE results.fastestLapSpeed = (SELECT MAX(results.fastestLapSpeed) FROM results);\t----- bird -----\tformula_1",
    "880": "SELECT CAST((tmp_res1 - tmp_res2) AS REAL) * 100 / tmp_res1 AS percentage FROM (     SELECT SUM(results.fastestLapSpeed) AS tmp_res1     FROM results     INNER JOIN drivers ON results.driverId = drivers.driverId     INNER JOIN races ON results.raceId = races.raceId     WHERE drivers.forename = 'Paul' AND drivers.surname = 'di Resta' AND races.raceId = 853 ) tmp1, (     SELECT SUM(results.fastestLapSpeed) AS tmp_res2     FROM results     INNER JOIN drivers ON results.driverId = drivers.driverId     INNER JOIN races ON results.raceId = races.raceId     WHERE drivers.forename = 'Paul' AND drivers.surname = 'di Resta' AND races.raceId = 854 ) tmp2\t----- bird -----\tformula_1",
    "881": "SELECT CAST(COUNT(results.time) AS REAL) * 100 / COUNT(results.driverId) AS percentage FROM races INNER JOIN results ON races.raceId = results.raceId WHERE races.date = '1983-07-16' AND results.time IS NOT NULL\t----- bird -----\tformula_1",
    "882": "SELECT races.year FROM races WHERE races.name = 'Singapore Grand Prix' ORDER BY races.year ASC LIMIT 1\t----- bird -----\tformula_1",
    "883": "SELECT races.name FROM races WHERE races.year = 2005 ORDER BY races.name DESC\t----- bird -----\tformula_1",
    "884": "SELECT races.name FROM races WHERE YEAR(races.date) = (SELECT YEAR(MIN(date)) FROM races)  AND MONTH(races.date) = (SELECT MONTH(MIN(date)) FROM races)\t----- bird -----\tformula_1",
    "885": "SELECT races.name, races.date  FROM races  WHERE races.year = 1999  ORDER BY races.round DESC  LIMIT 1\t----- bird -----\tformula_1",
    "886": "SELECT races.year FROM races GROUP BY races.year ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1",
    "887": "SELECT races.name  FROM races  WHERE races.year = 2017  AND races.name NOT IN (     SELECT races.name      FROM races      WHERE races.year = 2000)\t----- bird -----\tformula_1",
    "888": "SELECT circuits.country, circuits.name, circuits.location FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'European Grand Prix' ORDER BY races.year LIMIT 1\t----- bird -----\tformula_1",
    "889": "SELECT races.year FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Brands Hatch' AND races.name = 'British Grand Prix' ORDER BY races.year DESC LIMIT 1\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(races.year)  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE circuits.name = 'Silverstone Circuit' AND races.name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "891": "SELECT drivers.surname, drivers.forename  FROM results  INNER JOIN drivers ON results.driverId = drivers.driverId  INNER JOIN races ON results.raceId = races.raceId  WHERE races.year = 2010 AND races.name = 'Singapore Grand Prix'  ORDER BY results.positionOrder\t----- bird -----\tformula_1",
    "892": "SELECT drivers.surname, drivers.forename, MAX(driverStandings.points)  FROM drivers  INNER JOIN driverStandings ON drivers.driverId = driverStandings.driverId  GROUP BY drivers.surname, drivers.forename  ORDER BY MAX(driverStandings.points) DESC  LIMIT 1\t----- bird -----\tformula_1",
    "893": "SELECT drivers.surname, drivers.forename, results.points FROM races INNER JOIN results ON races.raceId = results.raceId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE races.year = 2017 AND races.name = 'Chinese Grand Prix' ORDER BY results.points DESC LIMIT 3\t----- bird -----\tformula_1",
    "894": "SELECT drivers.surname, drivers.forename, races.name  FROM lapTimes  INNER JOIN drivers ON lapTimes.driverId = drivers.driverId  INNER JOIN races ON lapTimes.raceId = races.raceId  ORDER BY lapTimes.milliseconds ASC  LIMIT 1\t----- bird -----\tformula_1",
    "895": "SELECT AVG(lapTimes.time)  FROM drivers  INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId  INNER JOIN races ON lapTimes.raceId = races.raceId  WHERE drivers.forename = 'Lewis'  AND drivers.surname = 'Hamilton'  AND races.name = 'Malaysian Grand Prix'  AND races.year = 2009\t----- bird -----\tformula_1",
    "896": "SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM drivers INNER JOIN races ON drivers.driverId = races.driverId WHERE drivers.surname = 'Hamilton' AND races.year >= 2010)  FROM drivers  INNER JOIN races ON drivers.driverId = races.driverId  WHERE drivers.surname = 'Hamilton' AND races.year >= 2010 AND races.position > 1\t----- bird -----\tformula_1",
    "897": "SELECT drivers.forename, drivers.surname, drivers.nationality, MAX(driverStandings.points) FROM drivers INNER JOIN driverStandings ON drivers.driverId = driverStandings.driverId GROUP BY drivers.driverId HAVING COUNT(driverStandings.wins) = (SELECT MAX(COUNT(wins)) FROM driverStandings) ORDER BY MAX(driverStandings.points) DESC LIMIT 1\t----- bird -----\tformula_1",
    "898": "SELECT drivers.surname, drivers.forename, YEAR(CURRENT_TIMESTAMP) - YEAR(drivers.dob) AS age FROM drivers WHERE drivers.nationality = 'Japanese' ORDER BY drivers.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "899": "SELECT circuits.location, circuits.circuitId, circuits.country, circuits.circuitRef, circuits.name FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year BETWEEN 1990 AND 2000 GROUP BY circuits.circuitId HAVING COUNT(races.raceId) = 4\t----- bird -----\tformula_1",
    "900": "SELECT circuits.name, circuits.location, races.name  FROM circuits  INNER JOIN races ON circuits.circuitId = races.circuitId  WHERE circuits.country = 'USA' AND races.year = 2006\t----- bird -----\tformula_1",
    "901": "SELECT races.name, circuits.name, circuits.location  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE MONTH(races.date) = 9 AND YEAR(races.date) = 2005\t----- bird -----\tformula_1",
    "902": "SELECT races.name  FROM results  INNER JOIN drivers ON results.driverId = drivers.driverId  INNER JOIN races ON results.raceId = races.raceId  WHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND results.position < 20\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(*) FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE drivers.surname = 'Schumacher' AND drivers.forename = 'Michael' AND circuits.name = 'Sepang International Circuit' AND results.points = (SELECT MAX(results.points) FROM results)\t----- bird -----\tformula_1",
    "904": "SELECT races.name, races.year  FROM drivers  INNER JOIN results ON drivers.driverId = results.driverId  INNER JOIN races ON results.raceId = races.raceId  WHERE drivers.surname = 'Schumacher' AND drivers.forename = 'Michael'  ORDER BY results.fastestLapTime ASC  LIMIT 1;\t----- bird -----\tformula_1",
    "905": "SELECT AVG(results.points) FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE drivers.driverRef = 'Eddie Irvine' AND races.year = 2000\t----- bird -----\tformula_1",
    "906": "SELECT races.name, results.points  FROM drivers  INNER JOIN results ON drivers.driverId = results.driverId  INNER JOIN races ON results.raceId = races.raceId  WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis'  ORDER BY races.year ASC  LIMIT 1\t----- bird -----\tformula_1",
    "907": "SELECT races.name, circuits.country  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE races.year = 2017  ORDER BY races.date\t----- bird -----\tformula_1",
    "908": "SELECT races.name, races.year, circuits.location  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  ORDER BY races.laps DESC  LIMIT 1\t----- bird -----\tformula_1",
    "909": "SELECT CAST(COUNT(*) FILTER (WHERE races.country = 'Germany') AS REAL) * 100 / COUNT(*)  FROM races  WHERE races.name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "910": "SELECT circuits.lat, circuits.lng FROM circuits WHERE circuits.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "911": "SELECT name FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY lat DESC LIMIT 1\t----- bird -----\tformula_1",
    "912": "SELECT circuits.circuitRef  FROM circuits  WHERE circuits.name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "913": "SELECT circuits.country  FROM circuits  ORDER BY circuits.alt DESC  LIMIT 1\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL\t----- bird -----\tformula_1",
    "915": "SELECT drivers.nationality  FROM drivers  ORDER BY drivers.dob ASC  LIMIT 1\t----- bird -----\tformula_1",
    "916": "SELECT drivers.surname FROM drivers WHERE drivers.nationality = 'Italian'\t----- bird -----\tformula_1",
    "917": "SELECT drivers.url FROM drivers WHERE drivers.surname = 'Davidson' AND drivers.forename = 'Anthony'\t----- bird -----\tformula_1",
    "918": "SELECT drivers.driverRef FROM drivers WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis'\t----- bird -----\tformula_1",
    "919": "SELECT circuits.name  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "920": "SELECT races.year  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE circuits.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "921": "SELECT races.url  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE circuits.name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "922": "SELECT races.time  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE circuits.name = 'Abu Dhabi Circuit' AND races.year = 2010\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(*)  FROM circuits  INNER JOIN races ON circuits.circuitId = races.circuitId  WHERE circuits.country = 'Italy';\t----- bird -----\tformula_1",
    "924": "SELECT races.date  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE circuits.name = 'Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "925": "SELECT circuits.url  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "926": "SELECT MIN(results.fastestLapTime)  FROM drivers  INNER JOIN results ON drivers.driverId = results.driverId  WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis'\t----- bird -----\tformula_1",
    "927": "SELECT drivers.forename, drivers.surname  FROM results  INNER JOIN drivers ON results.driverId = drivers.driverId  ORDER BY results.fastestLapSpeed DESC  LIMIT 1\t----- bird -----\tformula_1",
    "928": "SELECT drivers.driverRef  FROM results  INNER JOIN drivers ON results.driverId = drivers.driverId  INNER JOIN races ON results.raceId = races.raceId  WHERE races.name = 'Canadian Grand Prix'  AND races.year = 2007  AND results.positionOrder = 1\t----- bird -----\tformula_1",
    "929": "SELECT races.name, races.year, races.round, races.date  FROM races  INNER JOIN results ON races.raceId = results.raceId  INNER JOIN drivers ON results.driverId = drivers.driverId  WHERE drivers.driverRef = 'Lewis Hamilton'\t----- bird -----\tformula_1",
    "930": "SELECT races.name  FROM results  INNER JOIN drivers ON results.driverId = drivers.driverId  INNER JOIN races ON results.raceId = races.raceId  WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis'  ORDER BY results.rank ASC  LIMIT 1;\t----- bird -----\tformula_1",
    "931": "SELECT MAX(results.fastestLapSpeed)  FROM races  INNER JOIN results ON races.raceId = results.raceId  WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "932": "SELECT races.year  FROM drivers  INNER JOIN races ON drivers.driverId = races.driverId  WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis'\t----- bird -----\tformula_1",
    "933": "SELECT results.positionOrder  FROM drivers  INNER JOIN results ON drivers.driverId = results.driverId  INNER JOIN races ON results.raceId = races.raceId  WHERE drivers.forename = 'Lewis'  AND drivers.surname = 'Hamilton'  AND races.name = 'Chinese Grand Prix'  AND races.year = 2008\t----- bird -----\tformula_1",
    "934": "SELECT drivers.forename, drivers.surname  FROM races  INNER JOIN results ON races.raceId = results.raceId  INNER JOIN drivers ON results.driverId = drivers.driverId  WHERE races.year = 1989 AND races.name = 'Australian Grand Prix' AND results.grid = 4\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(*)  FROM races  INNER JOIN results ON races.raceId = results.raceId  WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.time IS NOT NULL\t----- bird -----\tformula_1",
    "936": "SELECT results.fastestLapTime  FROM drivers  INNER JOIN results ON drivers.driverId = results.driverId  INNER JOIN races ON results.raceId = races.raceId  WHERE drivers.surname = 'Hamilton'  AND drivers.forename = 'Lewis'  AND races.name = 'Australian Grand Prix'  AND races.year = 2008\t----- bird -----\tformula_1",
    "937": "SELECT results.time  FROM races  INNER JOIN results ON races.raceId = results.raceId  WHERE races.year = 2008 AND races.name = 'Chinese Grand Prix' AND results.positionOrder = 2\t----- bird -----\tformula_1",
    "938": "SELECT drivers.surname, drivers.forename, drivers.url  FROM results  INNER JOIN drivers ON results.driverId = drivers.driverId  INNER JOIN races ON results.raceId = races.raceId  WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.positionOrder = 1\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT drivers.driverId)  FROM drivers  INNER JOIN results ON drivers.driverId = results.driverId  INNER JOIN races ON results.raceId = races.raceId  WHERE races.year = 2008  AND races.name = 'Australian Grand Prix'  AND drivers.nationality = 'British'\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT results.driverId)  FROM races  INNER JOIN results ON races.raceId = results.raceId  WHERE races.year = 2008 AND races.name = 'Chinese Grand Prix' AND results.time IS NOT NULL\t----- bird -----\tformula_1",
    "941": "SELECT SUM(results.points)  FROM results  INNER JOIN drivers ON results.driverId = drivers.driverId  WHERE drivers.driverRef = 'Lewis Hamilton'\t----- bird -----\tformula_1",
    "942": "SELECT AVG(results.fastestLapTime)  FROM results  INNER JOIN drivers ON results.driverId = drivers.driverId  WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis'\t----- bird -----\tformula_1",
    "943": "SELECT CAST(COUNT(df2.raceId) AS REAL) * 100 / COUNT(df1.raceId)  FROM  (SELECT * FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AS df1  LEFT JOIN  (SELECT * FROM results WHERE time IS NOT NULL) AS df2  ON df1.raceId = df2.raceId\t----- bird -----\tformula_1",
    "944": "SELECT CAST((df3.time - df2.time) AS REAL) * 100 / df3.time AS faster_percentage FROM      (SELECT results.time      FROM results      INNER JOIN races ON results.raceId = races.raceId      WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.position = 1) AS df2,     (SELECT results.time      FROM results      INNER JOIN races ON results.raceId = races.raceId      WHERE races.year = 2008 AND races.name = 'Australian Grand Prix'      ORDER BY results.positionOrder DESC      LIMIT 1) AS df3\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE country = 'Australia' AND location = 'Adelaide'\t----- bird -----\tformula_1",
    "946": "SELECT circuits.lat, circuits.lng  FROM circuits  WHERE circuits.country = 'USA'\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND EXTRACT(YEAR FROM dob) > 1980\t----- bird -----\tformula_1",
    "948": "SELECT MAX(constructors.points)  FROM constructors  WHERE constructors.nationality = 'British'\t----- bird -----\tformula_1",
    "949": "SELECT constructors.name  FROM constructors  INNER JOIN constructorStandings  ON constructors.constructorId = constructorStandings.constructorId  ORDER BY constructorStandings.points DESC  LIMIT 1\t----- bird -----\tformula_1",
    "950": "SELECT constructors.name  FROM constructorResults  INNER JOIN constructors ON constructorResults.constructorId = constructors.constructorId  WHERE constructorResults.raceId = 291 AND constructorResults.points = 0\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(DISTINCT constructors.constructorId) FROM constructors INNER JOIN constructorResults ON constructors.constructorId = constructorResults.constructorId WHERE constructors.nationality = 'Japanese' AND constructorResults.points = 0 GROUP BY constructors.constructorId HAVING COUNT(races.raceId) = 2\t----- bird -----\tformula_1",
    "952": "SELECT constructors.name  FROM constructors  INNER JOIN constructorStandings  ON constructors.constructorId = constructorStandings.constructorId  WHERE constructorStandings.position = 1\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT constructors.constructorId)  FROM constructors  INNER JOIN lapTimes ON constructors.constructorId = lapTimes.constructorId  WHERE constructors.nationality = 'French' AND lapTimes.lap > 50\t----- bird -----\tformula_1",
    "954": "SELECT CAST(COUNT(df2.driverId) AS REAL) * 100 / COUNT(df1.driverId) AS percentage FROM     (SELECT drivers.driverId     FROM drivers     INNER JOIN results ON drivers.driverId = results.driverId     INNER JOIN races ON results.raceId = races.raceId     WHERE drivers.nationality = 'Japanese' AND races.year BETWEEN 2007 AND 2009) AS df1,     (SELECT drivers.driverId     FROM drivers     INNER JOIN results ON drivers.driverId = results.driverId     INNER JOIN races ON results.raceId = races.raceId     WHERE drivers.nationality = 'Japanese' AND races.year BETWEEN 2007 AND 2009 AND results.time IS NOT NULL) AS df2\t----- bird -----\tformula_1",
    "955": "SELECT races.year, AVG(results.milliseconds/1000)  FROM races  INNER JOIN results ON races.raceId = results.raceId  WHERE races.year < 1975 AND results.position = 1 AND results.time IS NOT NULL  GROUP BY races.year\t----- bird -----\tformula_1",
    "956": "SELECT drivers.forename, drivers.surname  FROM drivers  INNER JOIN driverStandings ON drivers.driverId = driverStandings.driverId  WHERE YEAR(drivers.dob) > 1975 AND driverStandings.position = 2\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(*)  FROM drivers  INNER JOIN results ON drivers.driverId = results.driverId  WHERE drivers.nationality = 'Italian' AND results.time IS NULL\t----- bird -----\tformula_1",
    "958": "SELECT drivers.forename, drivers.surname  FROM drivers  INNER JOIN results ON drivers.driverId = results.driverId  ORDER BY results.fastestLapTime  LIMIT 1\t----- bird -----\tformula_1",
    "959": "SELECT MAX(results.fastestLap)  FROM races  INNER JOIN results ON races.raceId = results.raceId  WHERE races.year = 2009 AND results.time LIKE '%:%';\t----- bird -----\tformula_1",
    "960": "SELECT AVG(results.fastestLapSpeed)  FROM races  INNER JOIN results ON races.raceId = results.raceId  WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009\t----- bird -----\tformula_1",
    "961": "SELECT races.name, races.year  FROM results  INNER JOIN races ON results.raceId = races.raceId  WHERE results.milliseconds IS NOT NULL  ORDER BY results.milliseconds ASC  LIMIT 1;\t----- bird -----\tformula_1",
    "962": "SELECT CAST(COUNT(df2.driverId) AS REAL) * 100 / COUNT(df1.driverId) FROM  (SELECT driverId FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.year BETWEEN 2000 AND 2005) AS df1, (SELECT drivers.driverId FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE YEAR(drivers.dob) < 1985 AND results.laps > 50) AS df2\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT drivers.driverId)  FROM drivers  INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId  WHERE drivers.nationality = 'French' AND lapTimes.milliseconds < 120000\t----- bird -----\tformula_1",
    "964": "SELECT drivers.code FROM drivers WHERE drivers.nationality = 'America'\t----- bird -----\tformula_1",
    "965": "SELECT races.raceId FROM races WHERE races.year = 2009\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(results.driverId)  FROM results  WHERE results.raceId = 18\t----- bird -----\tformula_1",
    "967": "SELECT drivers.code FROM drivers ORDER BY drivers.dob DESC LIMIT 3 UNION SELECT COUNT(*) FROM drivers WHERE drivers.nationality = 'Dutch'\t----- bird -----\tformula_1",
    "968": "SELECT drivers.driverRef FROM drivers WHERE drivers.surname = 'Kubica' AND drivers.forename = 'Robert';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(*)  FROM drivers  WHERE nationality = 'British' AND strftime('%Y', dob) = '1980';\t----- bird -----\tformula_1",
    "970": "SELECT drivers.driverRef FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE drivers.nationality = 'German' AND YEAR(drivers.dob) BETWEEN 1980 AND 1990 ORDER BY lapTimes.time ASC LIMIT 3\t----- bird -----\tformula_1",
    "971": "SELECT drivers.driverRef FROM drivers WHERE drivers.nationality = 'German' ORDER BY drivers.dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "972": "SELECT drivers.driverId, drivers.code FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE strftime('%Y', drivers.dob) = '1971' AND results.fastestLapTime = (SELECT MAX(results.fastestLapTime) FROM results)\t----- bird -----\tformula_1",
    "973": "SELECT drivers.driverRef FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE drivers.nationality = 'Spanish' AND YEAR(drivers.dob) < 1982 ORDER BY MAX(lapTimes.time) DESC LIMIT 10\t----- bird -----\tformula_1",
    "974": "SELECT races.year FROM results INNER JOIN races ON results.raceId = races.raceId ORDER BY results.fastestLapTime ASC LIMIT 1\t----- bird -----\tformula_1",
    "975": "SELECT races.year FROM races ORDER BY races.time DESC LIMIT 1\t----- bird -----\tformula_1",
    "976": "SELECT lapTimes.driverId FROM lapTimes WHERE lapTimes.lap = 1 ORDER BY lapTimes.time ASC LIMIT 5\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(*)  FROM results  INNER JOIN status ON results.statusId = status.statusId  WHERE results.raceId > 50 AND results.raceId < 100 AND results.time IS NOT NULL AND status.statusId = 2\t----- bird -----\tformula_1",
    "978": "SELECT circuits.location, circuits.lng, circuits.lat  FROM circuits  WHERE circuits.country = 'Austria'\t----- bird -----\tformula_1",
    "979": "SELECT results.raceId FROM results WHERE results.time IS NOT NULL GROUP BY results.raceId ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1",
    "980": "SELECT drivers.driverRef, drivers.nationality, drivers.dob  FROM qualifying  INNER JOIN drivers ON qualifying.driverId = drivers.driverId  WHERE qualifying.raceId = 23 AND qualifying.q2 IS NOT NULL\t----- bird -----\tformula_1",
    "981": "SELECT races.year, races.name, races.date, races.time FROM races INNER JOIN qualifying ON races.raceId = qualifying.raceId INNER JOIN drivers ON qualifying.driverId = drivers.driverId WHERE drivers.driverId = (     SELECT driverId     FROM (         SELECT drivers.driverId, MIN(races.date) as first_race         FROM races         INNER JOIN qualifying ON races.raceId = qualifying.raceId         INNER JOIN drivers ON qualifying.driverId = drivers.driverId         GROUP BY drivers.driverId         ORDER BY drivers.dob DESC         LIMIT 1     ) ) ORDER BY races.date LIMIT 1\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(DISTINCT drivers.driverId)  FROM drivers  INNER JOIN results ON drivers.driverId = results.driverId  INNER JOIN status ON results.statusId = status.statusId  WHERE drivers.nationality = 'American' AND status.status = 'Puncture';\t----- bird -----\tformula_1",
    "983": "SELECT constructors.name, constructors.url FROM constructors INNER JOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId WHERE constructors.nationality = 'Italian' ORDER BY constructorStandings.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "984": "SELECT constructors.url FROM constructors INNER JOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId GROUP BY constructors.constructorId ORDER BY SUM(constructorStandings.wins) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "985": "SELECT drivers.driverRef  FROM races  INNER JOIN lapTimes ON races.raceId = lapTimes.raceId  INNER JOIN drivers ON lapTimes.driverId = drivers.driverId  WHERE races.name = 'French Grand Prix' AND lapTimes.lap = 3  ORDER BY lapTimes.time DESC  LIMIT 1\t----- bird -----\tformula_1",
    "986": "SELECT races.name, results.milliseconds FROM results INNER JOIN races ON results.raceId = races.raceId ORDER BY results.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "987": "SELECT AVG(results.fastestLapTime)  FROM races  INNER JOIN results ON races.raceId = results.raceId  WHERE races.name = 'United States Grand Prix'  AND races.year = 2006  AND results.rank < 11\t----- bird -----\tformula_1",
    "988": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN pitStops ON drivers.driverId = pitStops.driverId WHERE drivers.nationality = 'German' AND YEAR(drivers.dob) > 1980 AND YEAR(drivers.dob) < 1985 GROUP BY drivers.driverId HAVING AVG(pitStops.duration) = (SELECT MIN(avg_duration) FROM (SELECT AVG(pitStops.duration) as avg_duration FROM drivers INNER JOIN pitStops ON drivers.driverId = pitStops.driverId WHERE drivers.nationality = 'German' AND YEAR(drivers.dob) > 1980 AND YEAR(drivers.dob) < 1985 GROUP BY drivers.driverId)) LIMIT 3\t----- bird -----\tformula_1",
    "989": "SELECT drivers.surname, drivers.forename, results.time  FROM races  INNER JOIN results ON races.raceId = results.raceId  INNER JOIN drivers ON results.driverId = drivers.driverId  WHERE races.name = 'Canadian Grand Prix'  AND races.year = 2008  AND results.positionOrder = 1\t----- bird -----\tformula_1",
    "990": "SELECT constructors.constructorRef, constructors.url FROM races INNER JOIN results ON races.raceId = results.raceId INNER JOIN constructors ON results.constructorId = constructors.constructorId WHERE races.year = 2009 AND races.name = 'Singapore Grand Prix' ORDER BY results.time LIMIT 1\t----- bird -----\tformula_1",
    "991": "SELECT drivers.forename, drivers.surname, drivers.dob  FROM drivers  WHERE drivers.nationality = 'Austrian'  AND YEAR(drivers.dob) BETWEEN 1981 AND 1991\t----- bird -----\tformula_1",
    "992": "SELECT drivers.forename, drivers.surname, drivers.url, drivers.dob FROM drivers WHERE drivers.nationality = 'German' AND YEAR(drivers.dob) BETWEEN 1971 AND 1985 ORDER BY drivers.dob DESC\t----- bird -----\tformula_1",
    "993": "SELECT circuits.location, circuits.country, circuits.lat, circuits.lng FROM circuits WHERE circuits.name = 'Hungaroring'\t----- bird -----\tformula_1",
    "994": "SELECT constructors.name, constructors.nationality, SUM(results.points) as total_points FROM results INNER JOIN constructors ON results.constructorId = constructors.constructorId INNER JOIN races ON results.raceId = races.raceId WHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010 GROUP BY constructors.constructorId ORDER BY total_points DESC LIMIT 1\t----- bird -----\tformula_1",
    "995": "SELECT AVG(results.points)  FROM drivers  INNER JOIN results ON drivers.driverId = results.driverId  INNER JOIN races ON results.raceId = races.raceId  WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis' AND races.name = 'Turkish Grand Prix'\t----- bird -----\tformula_1",
    "996": "SELECT AVG(yearly_race_count)  FROM (     SELECT COUNT(*) as yearly_race_count      FROM races      WHERE date BETWEEN '2000-01-01' AND '2010-12-31'      GROUP BY YEAR(date) ) as subquery\t----- bird -----\tformula_1",
    "997": "SELECT drivers.nationality FROM drivers GROUP BY drivers.nationality ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1",
    "998": "SELECT wins FROM driverStandings WHERE position = 91\t----- bird -----\tformula_1",
    "999": "SELECT races.name  FROM races  INNER JOIN results ON races.raceId = results.raceId  ORDER BY results.fastestLapSpeed DESC  LIMIT 1\t----- bird -----\tformula_1",
    "1000": "SELECT circuits.location, circuits.country  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  ORDER BY races.date DESC  LIMIT 1\t----- bird -----\tformula_1",
    "1001": "SELECT drivers.forename, drivers.surname FROM qualifying INNER JOIN drivers ON qualifying.driverId = drivers.driverId INNER JOIN races ON qualifying.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Marina Bay Street Circuit' AND races.year = 2008 ORDER BY qualifying.q3 LIMIT 1\t----- bird -----\tformula_1",
    "1002": "SELECT drivers.forename, drivers.surname, drivers.nationality, races.name FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId ORDER BY drivers.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "1003": "SELECT COUNT(*) AS count FROM (     SELECT drivers.driverId     FROM results     INNER JOIN races ON results.raceId = races.raceId     INNER JOIN status ON results.statusId = status.statusId     WHERE races.name = 'Canadian Grand Prix' AND status.statusId = 3     GROUP BY drivers.driverId     ORDER BY COUNT(*) DESC     LIMIT 1 ) AS df\t----- bird -----\tformula_1",
    "1004": "SELECT drivers.forename, drivers.surname, COUNT(*) FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE drivers.driverId = (     SELECT driverId     FROM drivers     ORDER BY dob ASC     LIMIT 1 ) GROUP BY drivers.forename, drivers.surname\t----- bird -----\tformula_1",
    "1005": "SELECT pitStops.duration FROM pitStops ORDER BY pitStops.duration DESC LIMIT 1\t----- bird -----\tformula_1",
    "1006": "SELECT lapTimes.time  FROM lapTimes  ORDER BY lapTimes.time ASC  LIMIT 1\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(pitStops.duration) FROM drivers INNER JOIN pitStops ON drivers.driverId = pitStops.driverId WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis';\t----- bird -----\tformula_1",
    "1008": "SELECT pitStops.lap FROM drivers  INNER JOIN pitStops ON drivers.driverId = pitStops.driverId INNER JOIN races ON pitStops.raceId = races.raceId WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis' AND races.name = 'Australian Grand Prix' AND races.year = 2011\t----- bird -----\tformula_1",
    "1009": "SELECT drivers.driverId, pitStops.duration FROM races INNER JOIN pitStops ON races.raceId = pitStops.raceId INNER JOIN drivers ON pitStops.driverId = drivers.driverId WHERE races.name = 'Australian Grand Prix' AND races.year = 2011\t----- bird -----\tformula_1",
    "1010": "SELECT MIN(lapTimes.time)  FROM drivers  INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId  WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis'\t----- bird -----\tformula_1",
    "1011": "SELECT drivers.forename, drivers.surname  FROM lapTimes  INNER JOIN drivers ON lapTimes.driverId = drivers.driverId  ORDER BY lapTimes.time ASC  LIMIT 20\t----- bird -----\tformula_1",
    "1012": "SELECT races.circuitId  FROM races  INNER JOIN results ON races.raceId = results.raceId  INNER JOIN drivers ON results.driverId = drivers.driverId  WHERE drivers.driverRef = 'Lewis Hamilton'  ORDER BY results.fastestLap ASC  LIMIT 1;\t----- bird -----\tformula_1",
    "1013": "SELECT lapTimes.time FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId INNER JOIN lapTimes ON races.raceId = lapTimes.raceId WHERE circuits.name = 'Austrian Grand Prix Circuit' ORDER BY lapTimes.time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1014": "SELECT lapTimes.lap, lapTimes.time  FROM circuits  INNER JOIN races ON circuits.circuitId = races.circuitId  INNER JOIN lapTimes ON races.raceId = lapTimes.raceId  WHERE circuits.country = 'Italy'  ORDER BY lapTimes.time ASC\t----- bird -----\tformula_1",
    "1015": "SELECT races.name  FROM races  INNER JOIN circuits ON races.circuitId = circuits.circuitId  INNER JOIN lapTimes ON races.raceId = lapTimes.raceId  WHERE circuits.name = 'Austrian Grand Prix Circuit'  ORDER BY lapTimes.time ASC  LIMIT 1\t----- bird -----\tformula_1",
    "1016": "SELECT pitStops.duration FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId INNER JOIN lapTimes ON races.raceId = lapTimes.raceId INNER JOIN pitStops ON races.raceId = pitStops.raceId AND lapTimes.driverId = pitStops.driverId WHERE circuits.name = 'Austrian Grand Prix Circuit' AND lapTimes.time = (SELECT MIN(lapTimes.time) FROM lapTimes)\t----- bird -----\tformula_1",
    "1017": "SELECT circuits.lat, circuits.lng  FROM lapTimes  INNER JOIN races ON lapTimes.raceId = races.raceId  INNER JOIN circuits ON races.circuitId = circuits.circuitId  WHERE lapTimes.time = '1:29.488';\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(pitStops.milliseconds)  FROM drivers  INNER JOIN pitStops ON drivers.driverId = pitStops.driverId  WHERE drivers.driverRef = 'Lewis Hamilton'\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(lapTimes.milliseconds)  FROM circuits  INNER JOIN races ON circuits.circuitId = races.circuitId  INNER JOIN lapTimes ON races.raceId = lapTimes.raceId  WHERE circuits.country = 'Italy'\t----- bird -----\tformula_1",
    "1020": "SELECT Player.player_api_id  FROM Player  ORDER BY Player.overall_rating DESC  LIMIT 1\t----- bird -----\teuropean_football_2",
    "1021": "SELECT Player.height, Player.name  FROM Player  ORDER BY Player.height DESC  LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1022": "SELECT player.preferred_foot FROM player ORDER BY player.potential ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*)  FROM Player  WHERE overall_rating >= 60  AND overall_rating < 65  AND defensive_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT player.player_id  FROM player  ORDER BY player.crossing DESC  LIMIT 5\t----- bird -----\teuropean_football_2",
    "1025": "SELECT league.name  FROM Match  INNER JOIN League ON Match.league_id = League.id  WHERE Match.season = '2015/2016'  GROUP BY League.name  ORDER BY SUM(Match.home_team_goal + Match.away_team_goal) DESC  LIMIT 1\t----- bird -----\teuropean_football_2",
    "1026": "SELECT match.home_team_api_id FROM match WHERE match.season = '2015/2016' AND (match.home_team_goal - match.away_team_goal) < 0 GROUP BY match.home_team_api_id ORDER BY COUNT(match.id) ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1027": "SELECT Player.player_name FROM Player ORDER BY Player.penalties DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1028": "SELECT Team.team_long_name FROM Match INNER JOIN League ON Match.league_id = League.id INNER JOIN Team ON Match.away_team_api_id = Team.team_api_id WHERE League.name = 'Scotland Premier League' AND Match.season = '2009/2010' AND Match.away_team_goal > Match.home_team_goal GROUP BY Team.team_long_name ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1029": "SELECT team.buildUpPlaySpeed FROM team ORDER BY team.buildUpPlaySpeed DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "1030": "SELECT league.name  FROM Match  INNER JOIN League ON Match.league_id = League.id  WHERE Match.season = '2015/2016'  GROUP BY league.name  HAVING SUM(CASE WHEN Match.home_team_goal = Match.away_team_goal THEN 1 ELSE 0 END) =  (SELECT MAX(sum_draws) FROM  (SELECT SUM(CASE WHEN home_team_goal = away_team_goal THEN 1 ELSE 0 END) as sum_draws  FROM Match  WHERE season = '2015/2016'  GROUP BY league_id))\t----- bird -----\teuropean_football_2",
    "1031": "SELECT (DATETIME() - player.birthday) AS players_age_at_present FROM player WHERE player.sprint_speed >= 97 AND YEAR(player.date) >= 2013 AND YEAR(player.date) <= 2015\t----- bird -----\teuropean_football_2",
    "1032": "SELECT league.league_name, COUNT(league.league_id) AS matches_played FROM league INNER JOIN match ON league.id = match.league_id GROUP BY league.league_id ORDER BY matches_played DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(player.height)  FROM player  WHERE player.birthday >= '1990-01-01 00:00:00' AND player.birthday < '1996-01-01 00:00:00';\t----- bird -----\teuropean_football_2",
    "1034": "SELECT player_api_id  FROM Player_Attributes  WHERE substr(date,1,4) = '2010'  ORDER BY overall_rating DESC  LIMIT 1\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "1036": "SELECT team_long_name  FROM Team  INNER JOIN Team_Attributes  ON Team.team_api_id = Team_Attributes.team_api_id  WHERE strftime('%Y', date) = '2012'  AND buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing)                            FROM Team_Attributes                            WHERE buildUpPlayPassing IS NOT NULL                            AND strftime('%Y', date) = '2012')\t----- bird -----\teuropean_football_2",
    "1037": "SELECT CAST(COUNT(*) FILTER (WHERE preferred_foot = 'left') AS REAL) * 100 / COUNT(*)  FROM Player  WHERE EXTRACT(YEAR FROM birthday) BETWEEN 1987 AND 1992;\t----- bird -----\teuropean_football_2",
    "1038": "SELECT league.name FROM Match INNER JOIN League ON Match.league_id = League.id GROUP BY league.name ORDER BY SUM(home_team_goal + away_team_goal) ASC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(Player.long_shots)  FROM Player  WHERE Player.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "1040": "SELECT Player.player_name  FROM Player  WHERE Player.height > 180  GROUP BY Player.player_name  ORDER BY AVG(Player.heading_accuracy) DESC  LIMIT 10\t----- bird -----\teuropean_football_2",
    "1041": "SELECT team.team_long_name FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlayDribblingClass = 'Normal' AND Team_Attributes.date >= '2014-01-01 00:00:00' AND Team_Attributes.date <= '2014-12-31 23:59:59' AND Team_Attributes.chanceCreationPassing < (     SELECT AVG(Team_Attributes.chanceCreationPassing)     FROM Team_Attributes     WHERE Team_Attributes.buildUpPlayDribblingClass = 'Normal'     AND Team_Attributes.date >= '2014-01-01 00:00:00'     AND Team_Attributes.date <= '2014-12-31 23:59:59' ) ORDER BY Team_Attributes.chanceCreationPassing DESC\t----- bird -----\teuropean_football_2",
    "1042": "SELECT League.name  FROM Match  INNER JOIN League ON Match.league_id = League.id  WHERE Match.season = '2009/2010'  GROUP BY League.name  HAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal)\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers'\t----- bird -----\teuropean_football_2",
    "1044": "SELECT Player.name  FROM Player  WHERE substr(Player.birthday,1,7) = '1970-10';\t----- bird -----\teuropean_football_2",
    "1045": "SELECT football_player.attacking_work_rate FROM football_player WHERE football_player.name = 'Franco Zennaro';\t----- bird -----\teuropean_football_2",
    "1046": "SELECT buildUpPlayPositioningClass FROM Team WHERE team_long_name = 'ADO Den Haag'\t----- bird -----\teuropean_football_2",
    "1047": "SELECT Player_Attributes.heading_accuracy  FROM Player  INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id  WHERE Player.player_name = 'Francois Affolter' AND Player_Attributes.date = '2014-09-18 00:00:00';\t----- bird -----\teuropean_football_2",
    "1048": "SELECT overall_rating FROM Player_Attributes WHERE strftime('%Y', date) = '2011' AND player_name = 'Gabriel Tamas';\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(*) FROM Match INNER JOIN League ON Match.league_id = League.id WHERE League.name = 'Scotland Premier League' AND Match.season = '2015/2016';\t----- bird -----\teuropean_football_2",
    "1050": "SELECT player.preferred_foot  FROM player  ORDER BY player.birthday DESC  LIMIT 1\t----- bird -----\teuropean_football_2",
    "1051": "SELECT football_player.name  FROM football_player  ORDER BY football_player.potential DESC  LIMIT 1\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*)  FROM Player  WHERE weight < 130 AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1053": "SELECT Team.team_short_name  FROM Team  WHERE Team.chanceCreationPassingClass = 'Risky'\t----- bird -----\teuropean_football_2",
    "1054": "SELECT football_player.defensive_work_rate FROM football_player WHERE football_player.name = 'David Wilson'\t----- bird -----\teuropean_football_2",
    "1055": "SELECT football_player.birthday  FROM football_player  ORDER BY football_player.overall_rating DESC  LIMIT 1\t----- bird -----\teuropean_football_2",
    "1056": "SELECT League.name FROM Country INNER JOIN League ON Country.id = League.country_id WHERE Country.name = 'Netherlands';\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(Match.home_team_goal) FROM Match INNER JOIN Country ON Match.country_id = Country.id WHERE Country.name = 'Poland' AND Match.season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "1058": "SELECT player_api_id FROM Player WHERE height IN (     SELECT MAX(height)     FROM Player     UNION     SELECT MIN(height)     FROM Player ) GROUP BY player_api_id ORDER BY AVG(finishing) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1059": "SELECT Player.name FROM Player WHERE Player.height > 180\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) > '1990';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*)  FROM players  WHERE first_name = 'Adam' AND weight > 170;\t----- bird -----\teuropean_football_2",
    "1062": "SELECT Player.name  FROM Player  INNER JOIN Player_Attributes  ON Player.player_api_id = Player_Attributes.player_api_id  WHERE Player_Attributes.overall_rating > 80  AND strftime('%Y', Player_Attributes.date) BETWEEN '2008' AND '2010';\t----- bird -----\teuropean_football_2",
    "1063": "SELECT potential FROM Player WHERE player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1064": "SELECT player_name FROM players WHERE preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1065": "SELECT team.team_long_name FROM team WHERE team.buildUpPlaySpeedClass = 'Fast'\t----- bird -----\teuropean_football_2",
    "1066": "SELECT Team.buildUpPlayPassingClass FROM Team WHERE Team.team_short_name = 'CLB'\t----- bird -----\teuropean_football_2",
    "1067": "SELECT Team.team_short_name  FROM Team  INNER JOIN Team_Attributes  ON Team.team_api_id = Team_Attributes.team_api_id  WHERE Team_Attributes.buildUpPlayPassing > 70\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(t2.overall_rating) FROM Player WHERE strftime('%Y', date) BETWEEN '2010' AND '2015' AND Player.height > 170\t----- bird -----\teuropean_football_2",
    "1069": "SELECT Player.player_name  FROM Player  ORDER BY Player.height ASC  LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1070": "SELECT League.country_id  FROM League  WHERE League.name = 'Italy Serie A';\t----- bird -----\teuropean_football_2",
    "1071": "SELECT Team.team_short_name  FROM Team  INNER JOIN Team_Attributes  ON Team.team_api_id = Team_Attributes.team_api_id  WHERE Team_Attributes.buildUpPlaySpeed = 31  AND Team_Attributes.buildUpPlayDribbling = 53  AND Team_Attributes.buildUpPlayPassing = 32;\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(Player.overall_rating) FROM Player WHERE Player.name = 'Aaron Doran';\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*)  FROM Match  INNER JOIN League ON Match.league_id = League.id  WHERE League.name = 'Germany 1. Bundesliga'  AND strftime('%Y-%m', Match.date) BETWEEN '2008-08' AND '2008-10';\t----- bird -----\teuropean_football_2",
    "1074": "SELECT Team.team_short_name  FROM Match  INNER JOIN Team ON Match.home_team_api_id = Team.team_api_id  WHERE Match.home_team_goal = 10\t----- bird -----\teuropean_football_2",
    "1075": "SELECT football_player.name  FROM football_player  WHERE football_player.potential = 61  AND football_player.balance = (SELECT MAX(balance) FROM football_player WHERE potential = 61);\t----- bird -----\teuropean_football_2",
    "1076": "SELECT (SELECT AVG(ball_control) FROM Player WHERE player_name = 'Abdou Diallo') - (SELECT AVG(ball_control) FROM Player WHERE player_name = 'Aaron Appindangoye')\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team.team_long_name FROM team WHERE team.team_short_name = 'GEN'\t----- bird -----\teuropean_football_2",
    "1078": "SELECT CASE      WHEN (SELECT birthday FROM Player WHERE player_name = 'Aaron Lennon') < (SELECT birthday FROM Player WHERE player_name = 'Abdelaziz Barrada')      THEN 'Aaron Lennon'      ELSE 'Abdelaziz Barrada'  END AS older_player\t----- bird -----\teuropean_football_2",
    "1079": "SELECT Player.name  FROM Player  ORDER BY Player.height DESC  LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*)  FROM Player  WHERE preferred_foot = 'left'  AND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "1081": "SELECT League.country_id  FROM League  WHERE League.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "1082": "SELECT League.name  FROM League  INNER JOIN Country ON League.country_id = Country.id  WHERE Country.name = 'Germany';\t----- bird -----\teuropean_football_2",
    "1083": "SELECT Player.player_name  FROM Player  ORDER BY Player.overall_rating DESC  LIMIT 1\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(DISTINCT player.player_id)  FROM player  WHERE strftime('%Y', player.birthday) < '1986'  AND player.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1085": "SELECT player.name, MAX(player.crossing) as max_crossing FROM player WHERE player.name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') GROUP BY player.name ORDER BY max_crossing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1086": "SELECT player.heading_accuracy  FROM player  WHERE player.name = 'Ariel Borysiuk';\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(*)  FROM Player  WHERE height > 180 AND volleys > 70\t----- bird -----\teuropean_football_2",
    "1088": "SELECT players.name FROM players WHERE players.volleys > 70 AND players.dribbling > 70\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*)  FROM Match  INNER JOIN Country ON Match.country_id = Country.id  WHERE Country.name = 'Belgium' AND Match.season = '2008/2009'\t----- bird -----\teuropean_football_2",
    "1090": "SELECT player.long_passing  FROM player  ORDER BY player.birthday ASC  LIMIT 1\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(*) FROM Match INNER JOIN League ON Match.league_id = League.id WHERE League.name = 'Belgium Jupiler League' AND SUBSTR(Match.date, 1, 7) = '2009-04'\t----- bird -----\teuropean_football_2",
    "1092": "SELECT league.league_name  FROM Match  INNER JOIN League ON Match.league_id = League.id  WHERE Match.season = '2008/2009'  GROUP BY league.league_name  ORDER BY COUNT(*) DESC  LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(Player.overall_rating)  FROM Player  WHERE strftime('%Y', Player.birthday) < '1986'\t----- bird -----\teuropean_football_2",
    "1094": "SELECT (CAST((SELECT SUM(overall_rating) FROM Player WHERE player_name = 'Ariel Borysiuk') - (SELECT SUM(overall_rating) FROM Player WHERE player_name = 'Paulin Puel') AS REAL) * 100) / (SELECT SUM(overall_rating) FROM Player WHERE player_name = 'Paulin Puel') AS percentage_difference\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(Team.buildUpPlaySpeed)  FROM Team  WHERE Team.team_long_name = 'Heart of Midlothian'\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating)  FROM Player AS T1  WHERE T1.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(T1.crossing) FROM Player AS T2 INNER JOIN Player_Attributes AS T1 ON T2.player_api_id = T1.player_api_id WHERE T2.player_name = 'Aaron Lennox'\t----- bird -----\teuropean_football_2",
    "1098": "SELECT chanceCreationPassing, chanceCreationPassingClass FROM Team WHERE team_long_name = 'Ajax' ORDER BY chanceCreationPassing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1099": "SELECT player.preferred_foot FROM player WHERE player.player_name = 'Abdou Diallo'\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(T1.overall_rating)  FROM Player_Attributes AS T1  INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id  WHERE T2.player_name = 'Dorlan Pabon'\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(away_team_goal)  FROM Match  INNER JOIN Team ON Match.away_team_api_id = Team.team_api_id  WHERE Team.team_long_name = 'Parma' AND Match.country_id = (SELECT id FROM Country WHERE name = 'Italy')\t----- bird -----\teuropean_football_2",
    "1102": "SELECT Player.player_name  FROM Player  INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id  WHERE Player_Attributes.overall_rating = 77 AND Player_Attributes.date LIKE '2016-06-23%'  ORDER BY Player.birthday  LIMIT 1\t----- bird -----\teuropean_football_2",
    "1103": "SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Aaron Mooy' AND date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "1104": "SELECT player.potential FROM player WHERE player.player_name = 'Francesco Parravicini' AND player.date = '2010-08-30 00:00:00'\t----- bird -----\teuropean_football_2",
    "1105": "SELECT player_attributes.attacking_work_rate  FROM player  INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id  WHERE player.player_name = 'Francesco Migliore' AND player_attributes.date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "1106": "SELECT player.defensive_work_rate FROM player WHERE player.player_name = 'Kevin Berigaud' AND player.date = '2013-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1107": "SELECT date FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant') ORDER BY crossing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1108": "SELECT team.build_up_play_speed_class  FROM team  WHERE team.team_long_name = 'Willem II'  AND team.date = '2012-02-22'\t----- bird -----\teuropean_football_2",
    "1109": "SELECT team.build_up_play_dribbling_class FROM team WHERE team.team_short_name = 'LEI' AND team.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
    "1110": "SELECT team_attributes.buildUpPlayPassingClass FROM team_attributes WHERE team_attributes.team_long_name = 'FC Lorient' AND team_attributes.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "1111": "SELECT chanceCreationPassing  FROM Team_Attributes  WHERE team_long_name = 'PEC Zwolle' AND date = '2013-09-20 00:00:00'\t----- bird -----\teuropean_football_2",
    "1112": "SELECT chance_creation_crossing_class FROM Team_Attributes WHERE team_long_name = 'Hull City' AND date = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1113": "SELECT team_attributes.defence_aggression_class  FROM team_attributes  INNER JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team.team_long_name = 'Hannover 96' AND team_attributes.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(Player.overall_rating)  FROM Player  WHERE Player.player_name = 'Marko Arnautovic'  AND SUBSTR(Player.date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "1115": "SELECT CAST((SELECT SUM(player.overall_rating) FROM player WHERE player.player_name = 'Landon Donovan' AND player.date = '2013/7/12') -  (SELECT SUM(player.overall_rating) FROM player WHERE player.player_name = 'Jordan Bowery' AND player.date = '2013/7/12') AS REAL) * 100 /  (SELECT SUM(player.overall_rating) FROM player WHERE player.player_name = 'Landon Donovan' AND player.date = '2013/7/12') AS percentage_difference\t----- bird -----\teuropean_football_2",
    "1116": "SELECT Player.name  FROM Player  ORDER BY Player.height DESC  LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id  FROM Player  ORDER BY weight DESC  LIMIT 10\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player.name  FROM Player  WHERE strftime('%Y', 'now') - strftime('%Y', birthday) > 34\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(home_team_goal)  FROM Match  INNER JOIN Player ON Match.home_player_1 = Player.player_api_id  WHERE Player.player_name = 'Aaron Lennon'\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(Match.away_team_goal)  FROM Match  INNER JOIN Player ON Match.away_player_1 = Player.player_api_id  WHERE Player.player_name IN ('Daan Smith', 'Filipe Ferreira')\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(match.home_team_goal)  FROM match  INNER JOIN player ON match.home_player_1 = player.player_api_id  WHERE (strftime('%Y', 'now') - strftime('%Y', player.birthday)) < 31\t----- bird -----\teuropean_football_2",
    "1122": "SELECT Player.name  FROM Player  INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id  ORDER BY Player_Attributes.overall_rating DESC  LIMIT 1\t----- bird -----\teuropean_football_2",
    "1123": "SELECT Player.name  FROM Player  WHERE Player.potential = (SELECT MAX(Player.potential) FROM Player)\t----- bird -----\teuropean_football_2",
    "1124": "SELECT players.player_name FROM players WHERE players.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1125": "SELECT Player.name  FROM Player  INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id  WHERE Player_Attributes.finishing = 1  ORDER BY Player.birthday ASC  LIMIT 1\t----- bird -----\teuropean_football_2",
    "1126": "SELECT Player.player_name  FROM Player  INNER JOIN Country ON Player.country_id = Country.id  WHERE Country.name = 'Belgium'\t----- bird -----\teuropean_football_2",
    "1127": "SELECT Player.country  FROM Player  INNER JOIN Player_Attributes  ON Player.player_api_id = Player_Attributes.player_api_id  WHERE Player_Attributes.vision > 89\t----- bird -----\teuropean_football_2",
    "1128": "SELECT player.country FROM player GROUP BY player.country ORDER BY AVG(player.weight) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1129": "SELECT Team.team_long_name FROM Team WHERE Team.buildUpPlaySpeedClass = 'Slow';\t----- bird -----\teuropean_football_2",
    "1130": "SELECT Team.team_short_name  FROM Team  INNER JOIN Team_Attributes  ON Team.team_api_id = Team_Attributes.team_api_id  WHERE Team_Attributes.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(players.height)  FROM players  INNER JOIN country ON players.country_id = country.id  WHERE country.name = 'Italy'\t----- bird -----\teuropean_football_2",
    "1132": "SELECT player.player_name FROM Player WHERE player.height > 180 ORDER BY player.player_name ASC LIMIT 3\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*)  FROM Player  WHERE birthday > '1990' AND player_name LIKE 'Aaron%'\t----- bird -----\teuropean_football_2",
    "1134": "SELECT (SELECT SUM(player.jumping) FROM player WHERE player.id = 6) - (SELECT SUM(player.jumping) FROM player WHERE player.id = 23)\t----- bird -----\teuropean_football_2",
    "1135": "SELECT players.player_id  FROM players  WHERE players.preferred_foot = 'right'  ORDER BY players.potential ASC  LIMIT 5\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*)  FROM Player  WHERE preferred_foot = 'left'  AND crossing = (SELECT MAX(crossing) FROM Player)\t----- bird -----\teuropean_football_2",
    "1137": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM Player)  FROM Player  WHERE strength > 80 AND stamina > 80\t----- bird -----\teuropean_football_2",
    "1138": "SELECT Country FROM df WHERE element = 'Poland Ekstraklasa'\t----- bird -----\teuropean_football_2",
    "1139": "SELECT Match.home_team_goal, Match.away_team_goal  FROM Match  INNER JOIN League ON Match.league_id = League.id  WHERE Match.date LIKE '2008-09-24%' AND League.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "1140": "SELECT player.sprint_speed, player.agility, player.acceleration  FROM player  WHERE player.player_name = 'Alexis Blin'\t----- bird -----\teuropean_football_2",
    "1141": "SELECT buildUpPlaySpeedClass FROM Team WHERE team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*)  FROM Match  WHERE season = '2015/2016'  AND league_id = (SELECT id FROM League WHERE name = 'Italian Serie A')\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(Match.home_team_goal)  FROM Match  INNER JOIN League ON Match.league_id = League.id  WHERE League.name = 'Netherlands Eredivisie';\t----- bird -----\teuropean_football_2",
    "1144": "SELECT player.finishing, player.curve FROM player WHERE player.weight = (SELECT MAX(player.weight) FROM player)\t----- bird -----\teuropean_football_2",
    "1145": "SELECT League.name FROM Match INNER JOIN League ON Match.league_id = League.id WHERE Match.season = '2015/2016' GROUP BY League.name ORDER BY COUNT(Match.id) DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "1146": "SELECT Team.team_long_name FROM Match INNER JOIN Team ON Match.away_team_api_id = Team.team_api_id GROUP BY Match.away_team_api_id ORDER BY SUM(Match.away_team_goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1147": "SELECT Player.name  FROM Player  INNER JOIN Player_Attributes  ON Player.player_api_id = Player_Attributes.player_api_id  ORDER BY Player_Attributes.overall_rating DESC  LIMIT 1\t----- bird -----\teuropean_football_2",
    "1148": "SELECT (CAST((SELECT COUNT(*) FROM Player WHERE height < 180 AND overall_rating > 70) AS REAL) / (SELECT COUNT(*) FROM Player)) * 100\t----- bird -----\teuropean_football_2",
    "1149": "SELECT CAST((SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '+') - (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '-') AS REAL) * 100 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '-') AS Deviation_Percentage FROM Patient LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT CAST(COUNT(ID) * 100.0 / (SELECT COUNT(ID) FROM Patient WHERE SEX = 'F') AS REAL)  FROM Patient  WHERE SEX = 'F' AND strftime('%Y', Birthday) > '1930'\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM Patient WHERE strftime('%Y', Birthday) BETWEEN '1930' AND '1940')  FROM Patient  WHERE strftime('%Y', Birthday) BETWEEN '1930' AND '1940' AND Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT (CAST((SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '+') AS REAL)) /  (SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '-') AS ratio FROM Patient LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT Patient.Diagnosis, Laboratory.Date FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.ID = '30609'\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT Patient.SEX, Patient.Birthday, Examination.`Examination Date`, Examination.Symptoms  FROM Patient  INNER JOIN Examination ON Patient.ID = Examination.ID  WHERE Patient.ID = '163109'\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT Patient.ID, YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday) AS age FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT Patient.ID  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE YEAR(Patient.Birthday) = 1937 AND Laboratory.T-CHO >= 250\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALB < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'F')  FROM Laboratory  INNER JOIN Patient ON Laboratory.ID = Patient.ID  WHERE Patient.SEX = 'F' AND (Laboratory.TP < '6.0' OR Laboratory.TP > '8.5')\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(Examination.`aCL IgG`) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.Admission = '+' AND YEAR(CURDATE()) - YEAR(Patient.Birthday) >= 50\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(*)  FROM Patient  WHERE SEX = 'F'  AND YEAR(Description) = 1997  AND Admission = '-' \t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(YEAR(`First Date`) - YEAR(Birthday)) AS Age FROM Patient\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(*) FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.Thrombosis = '1' AND YEAR(Examination.`Examination Date`) = 1997 AND Patient.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX(YEAR(Patient.Birthday)) - MIN(YEAR(Patient.Birthday)) AS age_gap FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TG >= 200\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT Examination.Symptoms, Examination.Diagnosis  FROM Examination  INNER JOIN Patient ON Examination.ID = Patient.ID  WHERE Examination.Symptoms IS NOT NULL  ORDER BY Patient.Birthday DESC  LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT CAST(COUNT(DISTINCT Patient.ID) AS REAL) / 12 FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.Date BETWEEN '1998-01-01' AND '1998-12-31'\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT Laboratory.Date, YEAR(`First Date`) - YEAR(Patient.Birthday)  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Patient.Diagnosis = 'SJS'  ORDER BY Patient.Birthday ASC  LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT (CAST((SELECT COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.UA <= 8.0 AND Patient.SEX = 'M') AS REAL)) /  (SELECT COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.UA <= 6.5 AND Patient.SEX = 'F') AS ratio FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient LEFT JOIN Examination ON Patient.ID = Examination.ID WHERE YEAR(Examination.`Examination Date`) - YEAR(Patient.`First Date`) >= 1\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(*) FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE YEAR(Patient.Birthday) < 18 AND YEAR(Examination.`Examination Date`) BETWEEN 1990 AND 1993\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT Patient.ID)  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Patient.SEX = 'M' AND Laboratory.T-BIL >= 2.0\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Examination.Diagnosis FROM Examination WHERE Examination.`Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Examination.Diagnosis ORDER BY COUNT(Examination.Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(1999 - EXTRACT(YEAR FROM Patient.Birthday))  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE DATE(Laboratory.Date) BETWEEN '1991-10-01' AND '1991-10-31'\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT YEAR(Examination.`Examination Date`) - YEAR(Patient.Birthday) AS Age, Examination.Diagnosis FROM Examination  INNER JOIN Patient ON Examination.ID = Patient.ID INNER JOIN Laboratory ON Patient.ID = Laboratory.ID ORDER BY Laboratory.HGB DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT Examination.ANA  FROM Examination  WHERE Examination.ID = '3605340' AND Examination.`Examination Date` = '1996-12-02'\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT COUNT(*) FROM Laboratory WHERE ID = '2927464' AND Date = '1995-9-4' AND T-CHO < 250\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT Patient.SEX  FROM Patient  INNER JOIN Examination ON Patient.ID = Examination.ID  WHERE Patient.Diagnosis = 'AORTITIS'  ORDER BY Examination.ID  LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT Examination.aCL_IgM  FROM Patient  INNER JOIN Examination ON Patient.ID = Examination.ID  WHERE Patient.Diagnosis = 'SLE'  AND Patient.Description = '1994-02-19'  AND Examination.Description = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT Patient.SEX  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Laboratory.GPT = '9' AND Laboratory.Date = '1992-06-12'\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT YEAR('1991-10-21') - YEAR(Patient.Birthday) AS Age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.UA = '8.4' AND Laboratory.Date = '1991-10-21'\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(Laboratory.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'SJS' AND Laboratory.Date = '1991-06-13' AND Laboratory.Date LIKE '1995%';\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT Patient.Diagnosis FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'SLE' AND Examination.`Examination Date` = '1997-01-27' ORDER BY Patient.`First Date` LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT Examination.Symptoms  FROM Examination  INNER JOIN Patient ON Examination.ID = Patient.ID  WHERE Patient.Birthday = '1959-03-01' AND Examination.ID = '1993-09-27'\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT (SUM(CASE WHEN Date LIKE '1981-11-%' THEN `T-CHO` END) - SUM(CASE WHEN Date LIKE '1981-12-%' THEN `T-CHO` END)) AS decrease_rate FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Birthday = '1959-02-18'\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT Patient.ID  FROM Patient  INNER JOIN Examination ON Patient.ID = Examination.ID  WHERE Examination.Diagnosis = 'Behcet'  AND Examination.`Examination Date` >= '1997-01-01'  AND Examination.`Examination Date` < '1998-01-01'\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT Patient.ID FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND Laboratory.GPT > 30 AND Laboratory.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT Patient.ID FROM Patient WHERE SEX = 'F' AND YEAR(Birthday) = 1964 AND Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(*)  FROM Examination  WHERE Thrombosis = 2  AND ANA = 'S'  AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination WHERE Thrombosis = 2 AND ANA = 'S')\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT CAST(COUNT(*) FILTER (WHERE `U-PRO` > 0 AND `U-PRO` < 30 AND `UA` <= 6.5) AS REAL) * 100 / COUNT(*) FILTER (WHERE `U-PRO` > 0 AND `U-PRO` < 30) FROM Laboratory\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT CAST(COUNT(*) FILTER (WHERE Examination.Diagnosis = 'BEHCET') AS REAL) * 100 / COUNT(*)  FROM Patient  INNER JOIN Examination ON Patient.ID = Examination.ID  WHERE Patient.SEX = 'M' AND YEAR(Patient.`First Date`) = 1981\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT Patient.ID  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Patient.Admission = '-'  AND Laboratory.Date LIKE '1991-10%'  AND Laboratory.T-BIL < 2.0\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(*) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.`ANA Pattern` != 'P' AND Patient.SEX = 'F' AND Patient.Birthday BETWEEN '1980-01-01' AND '1989-12-31'\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT Patient.SEX FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.Diagnosis = 'PSS' AND Laboratory.CRP > 2 AND Laboratory.CRE = 1 AND Laboratory.LDH = 123\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(Laboratory.ALB)  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Patient.SEX = 'F'  AND Laboratory.PLT > 400  AND Patient.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT Examination.Symptoms FROM Examination WHERE Examination.Diagnosis = 'SLE' GROUP BY Examination.Symptoms ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT Description, Diagnosis FROM Patient WHERE ID = 48473\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(*)  FROM Patient  WHERE SEX = 'F' AND Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT Patient.ID) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE YEAR(Laboratory.Date) = 1997 AND (Laboratory.TP < 6 OR Laboratory.TP > 8.5)\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT CAST(COUNT(DISTINCT CASE WHEN Examination.Diagnosis LIKE '%thrombocytopenia%' THEN Patient.ID END) AS REAL) * 100 / COUNT(DISTINCT CASE WHEN Examination.Diagnosis LIKE '%SLE%' THEN Patient.ID END) FROM Examination\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT CAST(COUNT(CASE WHEN Patient.SEX = 'F' THEN 1 END) AS REAL) * 100 / COUNT(*)  FROM Patient  WHERE YEAR(Patient.Birthday) = '1980' AND Patient.Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(*)  FROM Patient  INNER JOIN Examination ON Patient.ID = Examination.ID  WHERE Patient.SEX = 'M'  AND Examination.`Examination Date` BETWEEN '1995' AND '1997'  AND Examination.Diagnosis = 'Behcet'  AND Patient.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Laboratory.WBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT DATEDIFF(`Examination Date`, `First Date`)  FROM Examination  INNER JOIN Patient ON Examination.ID = Patient.ID  WHERE Patient.ID = 821298;\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT Patient.ID  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE (Patient.ID = 57266 AND Laboratory.UA > 8.0 AND Patient.SEX = 'M')  OR (Patient.ID = 57266 AND Laboratory.UA > 6.5 AND Patient.SEX = 'F')\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT Laboratory.Date FROM Laboratory WHERE Laboratory.ID = '48473' AND Laboratory.GOT >= 60\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT Patient.SEX, Patient.Birthday  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Laboratory.GOT < 60 AND YEAR(Laboratory.Date) = 1994\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT Patient.ID  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Patient.SEX = 'M' AND Laboratory.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT Patient.Diagnosis  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Laboratory.GPT > 60  ORDER BY Patient.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(Laboratory.LDH)  FROM Laboratory  WHERE Laboratory.LDH < 500\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT Patient.ID, YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday) AS age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.LDH BETWEEN 600 AND 800;\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT Patient.Admission FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT Patient.ID  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Patient.Birthday = '1982-04-01' AND Laboratory.ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT Laboratory.TP - 8.5 AS Deviation FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.SEX = 'F' AND Laboratory.TP > 8.5\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT Patient.ID, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND (Laboratory.ALB <= 3.5 OR Laboratory.ALB >= 5.5) ORDER BY Patient.Birthday DESC\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT Patient.ID  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE YEAR(Patient.Birthday) = 1982 AND Laboratory.ALB BETWEEN 3.5 AND 5.5\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'F')) AS percentage FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Laboratory.UA > 6.5\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(Laboratory.UA)  FROM (     SELECT Patient.ID, Laboratory.UA, Laboratory.Date     FROM Patient     INNER JOIN Laboratory ON Patient.ID = Laboratory.ID     WHERE (Patient.SEX = 'M' AND Laboratory.UA < 8.0)      OR (Patient.SEX = 'F' AND Laboratory.UA < 6.5)     ORDER BY Laboratory.Date DESC     LIMIT 1 ) AS subquery\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.UN = 29\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'RA' AND Laboratory.UN < 30\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(*)  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Patient.SEX = 'M' AND Laboratory.CRE >= 1.5\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT CASE WHEN      (SELECT COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.CRE >= 1.5 AND Patient.SEX = 'M') >      (SELECT COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.CRE >= 1.5 AND Patient.SEX = 'F')  THEN 'True' ELSE 'False' END\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.T-BIL = (SELECT MAX(T-BIL) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT Patient.SEX, GROUP_CONCAT(DISTINCT Patient.ID) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.T-BIL >= 2.0 GROUP BY Patient.SEX\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT Patient.ID, Laboratory.T-CHO FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID ORDER BY Patient.Birthday ASC, Laboratory.T-CHO DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(YEAR(CURDATE()) - YEAR(Birthday))  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE SEX = 'M' AND T-CHO >= 250;\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT Patient.ID, Patient.Diagnosis FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TG > 300;\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TG >= 200 AND YEAR(CURDATE()) - YEAR(Patient.Birthday) > 50\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT Patient.ID  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Patient.Admission = '-' AND Laboratory.CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Patient.Birthday) BETWEEN 1936 AND 1956 AND Patient.SEX = 'M' AND Laboratory.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT Patient.ID, Patient.SEX, YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday) AS age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GLU >= 180 AND Laboratory.T-CHO < 250;\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT Patient.ID, Laboratory.GLU  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE YEAR(Patient.Description) = 1991 AND Laboratory.GLU < 180\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT Patient.ID, Patient.SEX, Patient.Birthday  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Laboratory.WBC <= 3.5 OR Laboratory.WBC >= 9.0  GROUP BY Patient.SEX  ORDER BY Patient.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT Patient.ID, Patient.Diagnosis, YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday) AS Age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT Patient.Admission FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F'  AND YEAR(CURDATE()) - YEAR(Patient.Birthday) >= 50  AND (Laboratory.RBC <= 3.5 OR Laboratory.RBC >= 6.0)\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT Patient.ID, Laboratory.ID, Patient.SEX  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Patient.Admission = '-' AND Laboratory.HGB < 10\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT Patient.ID, Patient.SEX FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.Diagnosis = 'SLE' AND Laboratory.HGB BETWEEN 10 AND 17 ORDER BY Patient.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT Patient.ID, YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday) as age FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID GROUP BY Patient.ID HAVING COUNT(Laboratory.ID) > 2 AND MAX(Laboratory.HCT) >= 52\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(Laboratory.HCT) FROM Laboratory WHERE Laboratory.Date LIKE '1991%' AND Laboratory.HCT < 29\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT (SELECT COUNT(*) FROM Laboratory WHERE PLT < 100) - (SELECT COUNT(*) FROM Laboratory WHERE PLT > 400) AS calculation FROM Laboratory\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT Patient.ID  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE YEAR(Laboratory.Date) = 1984  AND YEAR(CURDATE()) - YEAR(Patient.Birthday) < 50  AND Laboratory.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT CAST(COUNT(CASE WHEN Patient.SEX = 'F' THEN 1 END) AS REAL) * 100 / COUNT(*)  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday) > 55 AND Laboratory.PT >= 14\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT Patient.ID  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE YEAR(Patient.`First Date`) > 1992 AND Laboratory.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination WHERE `Examination Date` > '1997-01-01' AND APTT < 45\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT Examination.ID)  FROM Examination  INNER JOIN Laboratory ON Examination.ID = Laboratory.ID  WHERE Laboratory.APTT > 45 AND Examination.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT Patient.ID)  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Patient.SEX = 'M'  AND Laboratory.WBC > 3.5  AND Laboratory.WBC < 9.0  AND (Laboratory.FG <= 150 OR Laboratory.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT Patient.ID)  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Patient.Birthday > '1980-01-01'  AND (Laboratory.FG < 150 OR Laboratory.FG > 450)\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT Patient.Diagnosis FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.U-PRO >= 30\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT Patient.ID  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Patient.Diagnosis = 'SLE'  AND Laboratory.U-PRO > 0  AND Laboratory.U-PRO < 30\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT Laboratory.ID) FROM Laboratory WHERE Laboratory.IGG >= 2000\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(*)  FROM Examination  INNER JOIN Laboratory ON Examination.ID = Laboratory.ID  WHERE Laboratory.IGG > 900 AND Laboratory.IGG < 2000 AND Examination.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT Patient.Diagnosis  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Laboratory.IGA BETWEEN 80 AND 500  ORDER BY Laboratory.IGA DESC  LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.IGA > 80 AND Laboratory.IGA < 500 AND YEAR(Patient.`First Date`) >= 1990;\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT Patient.Diagnosis FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.IGM <= 40 OR Laboratory.IGM >= 400 GROUP BY Patient.Diagnosis ORDER BY COUNT(Patient.Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(*)  FROM Laboratory  INNER JOIN Patient ON Laboratory.ID = Patient.ID  WHERE Laboratory.CRP = '+' AND Patient.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.CRE >= 1.5 AND (YEAR(CURDATE()) - YEAR(Patient.Birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT Patient.ID) FROM Laboratory INNER JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.RA IN ('-', '+-') AND Examination.KCT = '+';\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT Patient.Diagnosis FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Patient.Birthday) > 1985 AND Laboratory.RA IN('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT Patient.ID  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Laboratory.RF < 20 AND YEAR(CURDATE()) - YEAR(Patient.Birthday) > 60;\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(DISTINCT Patient.ID)  FROM Laboratory  INNER JOIN Examination ON Laboratory.ID = Examination.ID  WHERE Laboratory.RF < 20 AND Examination.Thrombosis = '0';\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.C3 > 35 AND Examination.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT Examination.ID FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.HCT < 29 OR Laboratory.HCT > 52 ORDER BY Examination.`aCL IgA` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Thrombosis = 'Yes' AND Laboratory.C4 > 10\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT Patient.ID)  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Laboratory.RNP IN ('-', '+-') AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.RNP NOT IN('-', '+-') ORDER BY Patient.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(*)  FROM Laboratory  INNER JOIN Examination ON Laboratory.ID = Examination.ID  WHERE Laboratory.SM IN('-', '+-') AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT Patient.ID FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.SM NOT IN ('negative', '0') ORDER BY Patient.Birthday DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT Examination.ID FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.`Examination Date` > '1997-01-01' AND Laboratory.SC170 IN ('negative','0')\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT Patient.ID)  FROM Patient  INNER JOIN Examination ON Patient.ID = Examination.ID  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Laboratory.SC170 IN ('negative', '0')  AND Patient.SEX = 'F'  AND Examination.Symptoms IS NULL\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT Patient.ID) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.SSA IN ('-', '+-') AND YEAR(Patient.`First Date`) < 2000\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT Patient.ID FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.SSA != 'negative' AND Laboratory.SSA != '0' ORDER BY Patient.`First Date` ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.Diagnosis = 'SLE' AND Patient.Diagnosis IN ('negative', '0')\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT Examination.ID)  FROM Examination  INNER JOIN Laboratory ON Examination.ID = Laboratory.ID  WHERE Laboratory.SSB IN ('negative', '0')  AND Examination.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(DISTINCT Patient.ID)  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Laboratory.CENTROMEA IN('-', '+-')  AND Laboratory.SSB IN('-', '+-')  AND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT Patient.Diagnosis  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Laboratory.DNA >= 8\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient LEFT JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.DNA < 8 AND Patient.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.IGG > 900 AND Laboratory.IGG < 2000 AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT CAST(COUNT(DISTINCT df2.ID) * 100.0 / COUNT(DISTINCT df1.ID)) AS percentage FROM (SELECT Laboratory.ID FROM Laboratory WHERE Laboratory.GOT >= 60) AS df1 INNER JOIN (SELECT Patient.ID FROM Patient WHERE Patient.Diagnosis = 'SLE') AS df2 ON df1.ID = df2.ID\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(DISTINCT Patient.ID)  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Patient.SEX = 'M' AND Laboratory.GOT < 60\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT Patient.Birthday FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.GOT >= 60 ORDER BY Patient.Birthday DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT Patient.Birthday FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.GPT < 60 ORDER BY Laboratory.GPT DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(Patient.ID)  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Laboratory.GPT < 60 AND Patient.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT MIN(Laboratory.Date) FROM (     SELECT Laboratory.Date     FROM Laboratory     WHERE Laboratory.LDH < 500     ORDER BY Laboratory.LDH DESC     LIMIT 1 ) AS df1 ORDER BY Laboratory.Date ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT Laboratory.Date FROM Laboratory WHERE Laboratory.LDH >= 500 ORDER BY Laboratory.Date DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(*)  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Laboratory.ALP >= 300 AND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(DISTINCT Patient.ID)  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Patient.Admission = '-' AND Laboratory.ALP < 300;\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT Patient.Diagnosis FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'SJS' AND Laboratory.TP > 6.0 AND Laboratory.TP < 8.5\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT Laboratory.Date  FROM Laboratory  WHERE Laboratory.ALB > 3.5 AND Laboratory.ALB < 5.5  ORDER BY Laboratory.ALB DESC  LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(DISTINCT Patient.ID)  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Patient.SEX = 'M'  AND Laboratory.ALB > 3.5  AND Laboratory.ALB < 5.5  AND Laboratory.TP >= 6.0  AND Laboratory.TP <= 8.5\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT Examination.`aCL IgG`, Examination.`aCL IgM`, Examination.`aCL IgA` FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'F' AND Laboratory.UA <= 6.50 ORDER BY Laboratory.UA DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(Examination.ANA)  FROM Examination  INNER JOIN Laboratory ON Examination.ID = Laboratory.ID  WHERE Laboratory.CRE < 1.5\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT Patient.ID FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.CRE < 1.5 ORDER BY Laboratory.aCL IgA DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(*)  FROM Examination  INNER JOIN Laboratory ON Examination.ID = Laboratory.ID  WHERE Laboratory.T-BIL >= 2.0  AND Examination.`ANA Pattern` LIKE '%P%'\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT Examination.ANA FROM Examination INNER JOIN (     SELECT Laboratory.ID     FROM Laboratory     WHERE Laboratory.T-BIL < 2.0     ORDER BY Laboratory.T-BIL DESC     LIMIT 1 ) AS subquery ON Examination.ID = subquery.ID\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(*)  FROM Laboratory  INNER JOIN Examination ON Laboratory.ID = Examination.ID  WHERE Laboratory.T-CHO >= 250 AND Examination.KCT = '-'\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(*)  FROM Examination  INNER JOIN Laboratory ON Examination.ID = Laboratory.ID  WHERE Laboratory.T-CHO < 250 AND Examination.`ANA Pattern` = 'P';\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(*)  FROM Examination  INNER JOIN Laboratory ON Examination.ID = Laboratory.ID  WHERE Laboratory.TG < 200 AND Examination.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT Patient.Diagnosis FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TG < 200 ORDER BY Laboratory.TG DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT Patient.ID  FROM Patient  INNER JOIN Examination ON Patient.ID = Examination.ID  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Examination.Thrombosis = 0 AND Laboratory.CPK < 250\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(*)  FROM Examination  INNER JOIN Laboratory ON Examination.ID = Laboratory.ID  WHERE Laboratory.CPK < 250  AND (Examination.KCT = '+' OR Examination.RVVT = '+' OR Examination.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GLU > 180 ORDER BY Patient.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(*) FROM Laboratory INNER JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.GLU < 180 AND Examination.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(*)  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Patient.Admission = '+' AND Laboratory.WBC BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.Diagnosis = 'SLE' AND Laboratory.WBC BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT Patient.ID  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE (Laboratory.RBC <= 3.5 OR Laboratory.RBC >= 6.0)  AND Patient.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(*)  FROM Laboratory  INNER JOIN Examination ON Laboratory.ID = Examination.ID  WHERE Laboratory.PLT > 100 AND Laboratory.PLT < 400 AND Examination.Diagnosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT Laboratory.PLT  FROM Patient  INNER JOIN Laboratory  ON Patient.ID = Laboratory.ID  WHERE Patient.Diagnosis = 'MCTD'  AND Laboratory.PLT > 100  AND Laboratory.PLT < 400\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(Laboratory.PT)  FROM Patient  INNER JOIN Laboratory ON Patient.ID = Laboratory.ID  WHERE Patient.SEX = 'M' AND Laboratory.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT Patient.ID)  FROM Examination  INNER JOIN Laboratory ON Examination.ID = Laboratory.ID  WHERE Examination.Thrombosis IN (1, 2) AND Laboratory.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT major.major_name  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE member.first_name = 'Angela' AND member.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(*)  FROM major  INNER JOIN member ON major.major_id = member.link_to_major  WHERE major.college = 'College of Engineering';\t----- bird -----\tstudent_club",
    "1314": "SELECT member.first_name, member.last_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.department = 'Art and Design';\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(*)  FROM attendance  INNER JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Women's Soccer'\t----- bird -----\tstudent_club",
    "1316": "SELECT member.phone FROM attendance INNER JOIN member ON attendance.link_to_member = member.member_id INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer';\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(*)  FROM attendance  INNER JOIN member ON attendance.link_to_member = member.member_id  INNER JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Women's Soccer' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1318": "SELECT event.event_name  FROM attendance  INNER JOIN event ON attendance.link_to_event = event.event_id  GROUP BY event.event_id  ORDER BY COUNT(attendance.link_to_event) DESC  LIMIT 1\t----- bird -----\tstudent_club",
    "1319": "SELECT major.college  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1320": "SELECT event.event_name FROM attendance INNER JOIN member ON attendance.link_to_member = member.member_id INNER JOIN event ON attendance.link_to_event = event.event_id WHERE member.first_name = 'Maya' AND member.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(*)  FROM attendance  INNER JOIN member ON attendance.link_to_member = member.member_id  INNER JOIN event ON attendance.link_to_event = event.event_id  WHERE member.first_name = 'Sacha'  AND member.last_name = 'Harrison'  AND YEAR(event.event_date) = 2019\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(*)  FROM (     SELECT event.event_id      FROM attendance      INNER JOIN event ON attendance.link_to_event = event.event_id      GROUP BY event.event_id      HAVING COUNT(attendance.link_to_member) > 10 ) AS df1  WHERE df1.type = 'Meeting'\t----- bird -----\tstudent_club",
    "1323": "SELECT event.event_name  FROM event  INNER JOIN attendance ON event.event_id = attendance.link_to_event  GROUP BY event.event_id  HAVING COUNT(attendance.link_to_member) > 20  AND event.type != 'fundraisers'\t----- bird -----\tstudent_club",
    "1324": "SELECT COUNT(event.event_id) / COUNT(DISTINCT event.event_id)  FROM event  INNER JOIN attendance ON event.event_id = attendance.link_to_event  WHERE event.type = 'Meeting' AND YEAR(event.event_date) = 2020\t----- bird -----\tstudent_club",
    "1325": "SELECT expense.expense_description  FROM expense  ORDER BY expense.cost DESC  LIMIT 1\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(*)  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE major.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1327": "SELECT member.first_name, member.last_name  FROM attendance  INNER JOIN member ON attendance.link_to_member = member.member_id  INNER JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Laugh Out Loud'\t----- bird -----\tstudent_club",
    "1328": "SELECT member.last_name  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE major.major_name = 'Law and Constitutional Studies';\t----- bird -----\tstudent_club",
    "1329": "SELECT zip_code.county FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Sherri' AND member.last_name = 'Ramsey'\t----- bird -----\tstudent_club",
    "1330": "SELECT major.college FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Tyler' AND member.last_name = 'Hewitt'\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(income.amount)  FROM member  INNER JOIN income ON member.member_id = income.link_to_member  WHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1332": "SELECT budget.spent FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE event.event_name = 'September Meeting' AND budget.category = 'Food'\t----- bird -----\tstudent_club",
    "1333": "SELECT zip_code.city, zip_code.state  FROM member  INNER JOIN zip_code ON member.zip = zip_code.zip_code  WHERE member.position = 'President';\t----- bird -----\tstudent_club",
    "1334": "SELECT member.first_name, member.last_name FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.state = 'Illinois';\t----- bird -----\tstudent_club",
    "1335": "SELECT sum(budget.spent)  FROM budget  INNER JOIN event ON budget.link_to_event = event.event_id  WHERE event.event_name = 'September Meeting' AND budget.category = 'Advertisement';\t----- bird -----\tstudent_club",
    "1336": "SELECT major.department  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE member.last_name IN ('Pierce', 'Guidi')\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(budget.amount)  FROM budget  INNER JOIN event ON budget.link_to_event = event.event_id  WHERE event.event_name = 'October Speaker'\t----- bird -----\tstudent_club",
    "1338": "SELECT expense.approved  FROM expense  INNER JOIN event ON expense.link_to_event = event.event_id  WHERE event.event_name = 'October Meeting' AND event.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "1339": "SELECT AVG(expense.cost) FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE member.first_name = 'Elijah' AND member.last_name = 'Allen' AND (strftime('%m', expense.expense_date) = '09' OR strftime('%m', expense.expense_date) = '10')\t----- bird -----\tstudent_club",
    "1340": "SELECT (SELECT SUM(budget.spent) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE strftime('%Y', event.event_date) = '2019') - (SELECT SUM(budget.spent) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE strftime('%Y', event.event_date) = '2020') AS difference\t----- bird -----\tstudent_club",
    "1341": "SELECT event.location  FROM event  WHERE event.event_name = 'Spring Budget Review';\t----- bird -----\tstudent_club",
    "1342": "SELECT expense.cost FROM expense WHERE expense.expense_description = 'Posters' AND expense.expense_date = '2019-09-04'\t----- bird -----\tstudent_club",
    "1343": "SELECT budget.remaining FROM budget WHERE budget.category = 'Food' ORDER BY budget.amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1344": "SELECT event.notes FROM income WHERE income.source = 'Fundraising' AND income.date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(*) FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1346": "SELECT member.phone FROM member WHERE member.first_name = 'Carlo' AND member.last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT zip_code.county FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Adela' AND member.last_name = 'O\\'Gallagher'\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*)  FROM budget  INNER JOIN event ON budget.link_to_event = event.event_id  WHERE event.event_name = 'November Meeting' AND budget.remaining < 0\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(budget.amount)  FROM budget  INNER JOIN event ON budget.link_to_event = event.event_id  WHERE event.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "1350": "SELECT event.status  FROM expense  INNER JOIN budget ON expense.link_to_budget = budget.budget_id  INNER JOIN event ON budget.link_to_event = event.event_id  WHERE expense.expense_description = 'Post Cards, Posters' AND expense.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "1351": "SELECT major.major_name  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE member.first_name = 'Brent' AND member.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*)  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1353": "SELECT zip_code.type FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.last_name = 'Nielson' AND member.first_name = 'Christof'\t----- bird -----\tstudent_club",
    "1354": "SELECT major.major_name  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1355": "SELECT zip_code.state  FROM member  INNER JOIN zip_code ON member.zip = zip_code.zip_code  WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1356": "SELECT major.department  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE member.position = 'President';\t----- bird -----\tstudent_club",
    "1357": "SELECT income.date_received FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE member.first_name = 'Connor' AND member.last_name = 'Hilton' AND income.source = 'Dues';\t----- bird -----\tstudent_club",
    "1358": "SELECT member.first_name, member.last_name  FROM income  INNER JOIN member ON income.link_to_member = member.member_id  WHERE income.source = 'Dues'  ORDER BY income.date_received  LIMIT 1\t----- bird -----\tstudent_club",
    "1359": "SELECT (SELECT SUM(budget.amount) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE budget.category = 'Advertisement' AND event.event_name = 'Yearly Kickoff') / (SELECT SUM(budget.amount) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE budget.category = 'Advertisement' AND event.event_name = 'October Meeting') AS times\t----- bird -----\tstudent_club",
    "1360": "SELECT (CAST(SUM(budget.amount) FILTER (WHERE budget.category = 'Parking') AS REAL) * 100) / SUM(budget.amount) AS percentage FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'November Speaker'\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(expense.cost) FROM expense WHERE expense.expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT zip_code.city)  FROM zip_code  WHERE zip_code.county = 'Orange County' AND zip_code.state = 'Virginia'\t----- bird -----\tstudent_club",
    "1363": "SELECT major.department FROM major WHERE major.college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1364": "SELECT zip_code.city, zip_code.county, zip_code.state FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Amy' AND member.last_name = 'Firth'\t----- bird -----\tstudent_club",
    "1365": "SELECT expense.expense_description  FROM expense  INNER JOIN (     SELECT budget_id      FROM budget      ORDER BY remaining ASC      LIMIT 1 ) AS df1  ON expense.link_to_budget = df1.budget_id\t----- bird -----\tstudent_club",
    "1366": "SELECT member.first_name, member.last_name  FROM attendance  INNER JOIN member ON attendance.link_to_member = member.member_id  INNER JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'October Meeting';\t----- bird -----\tstudent_club",
    "1367": "SELECT major.college FROM major INNER JOIN member ON major.major_id = member.link_to_major GROUP BY major.college ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1368": "SELECT major.major_name  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE member.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "1369": "SELECT event.event_name  FROM event  INNER JOIN budget ON event.event_id = budget.link_to_event  ORDER BY budget.amount DESC  LIMIT 1\t----- bird -----\tstudent_club",
    "1370": "SELECT expense.expense_description  FROM expense  INNER JOIN member ON expense.link_to_member = member.member_id  WHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(*) FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer';\t----- bird -----\tstudent_club",
    "1372": "SELECT income.date_received  FROM member  INNER JOIN income ON member.member_id = income.link_to_member  WHERE member.first_name = 'Casey' AND member.last_name = 'Mason'\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(member.member_id)  FROM member  INNER JOIN zip_code ON member.zip = zip_code.zip_code  WHERE zip_code.state = 'Maryland';\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(*)  FROM attendance  INNER JOIN member ON attendance.link_to_member = member.member_id  WHERE member.phone = '954-555-6240'\t----- bird -----\tstudent_club",
    "1375": "SELECT member.first_name, member.last_name  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE major.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1376": "SELECT event.event_name FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE event.status = 'Closed' ORDER BY (budget.spent / budget.amount) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(budget.spent) FROM budget\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(*)  FROM event  WHERE type = 'Meeting' AND YEAR(event_date) = 2020\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(budget.spent) FROM budget WHERE budget.category = 'Food'\t----- bird -----\tstudent_club",
    "1381": "SELECT member.first_name, member.last_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member GROUP BY member.member_id HAVING COUNT(attendance.link_to_event) > 7\t----- bird -----\tstudent_club",
    "1382": "SELECT member.first_name, member.last_name  FROM member  INNER JOIN attendance ON member.member_id = attendance.link_to_member  INNER JOIN event ON attendance.link_to_event = event.event_id  INNER JOIN major ON member.link_to_major = major.major_id  WHERE major.major_name = 'Interior Design' AND event.event_name = 'Community Theater'\t----- bird -----\tstudent_club",
    "1383": "SELECT member.first_name, member.last_name FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.city = 'Georgetown' AND zip_code.state = 'South Carolina'\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(income.amount)  FROM income  INNER JOIN member ON income.link_to_member = member.member_id  WHERE member.last_name = 'Gilmour' AND member.first_name = 'Grant'\t----- bird -----\tstudent_club",
    "1385": "SELECT member.first_name, member.last_name  FROM member  INNER JOIN income ON member.member_id = income.link_to_member  WHERE income.amount > 40\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(expense.cost)  FROM expense  INNER JOIN event ON expense.expense_id = event.event_id  WHERE event.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1387": "SELECT member.first_name, member.last_name  FROM member  INNER JOIN budget ON member.member_id = budget.link_to_event  INNER JOIN event ON budget.link_to_event = event.event_id  WHERE event.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1388": "SELECT member.first_name, member.last_name, income.source FROM member INNER JOIN income ON member.member_id = income.link_to_member ORDER BY income.amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1389": "SELECT event.event_name FROM event INNER JOIN expense ON event.event_id = expense.link_to_event ORDER BY expense.cost ASC LIMIT 1\t----- bird -----\tstudent_club",
    "1390": "SELECT (CAST(SUM(expense.cost) FILTER (WHERE event.event_name = 'Yearly Kickoff') AS REAL) * 100 / SUM(expense.cost))  FROM event  INNER JOIN expense ON event.event_id = expense.link_to_event\t----- bird -----\tstudent_club",
    "1391": "SELECT (CAST((SELECT COUNT(*) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Finance') AS REAL)) /  (SELECT COUNT(*) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Physics') AS ratio\t----- bird -----\tstudent_club",
    "1392": "SELECT income.source FROM income WHERE income.date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY income.source ORDER BY SUM(income.amount) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1393": "SELECT member.first_name, member.last_name, member.email FROM member WHERE member.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(*) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(DISTINCT attendance.link_to_member)  FROM attendance  INNER JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Community Theater' AND YEAR(event.event_date) = 2019\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(attendance.link_to_event), major.major_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Luisa' AND member.last_name = 'Guidi';\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(budget.spent)  FROM budget  WHERE budget.category = 'Food' AND budget.event_status = 'Closed'\t----- bird -----\tstudent_club",
    "1398": "SELECT event.event_name FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE budget.category = 'Advertisement' ORDER BY budget.spent DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1399": "SELECT attendance.link_to_member, attendance.link_to_event  FROM attendance  INNER JOIN member ON attendance.link_to_member = member.member_id  INNER JOIN event ON attendance.link_to_event = event.event_id  WHERE member.first_name = 'Maya' AND member.last_name = 'Mclean' AND event.event_name = 'Women's Soccer'\t----- bird -----\tstudent_club",
    "1400": "SELECT (CAST((SELECT COUNT(*) FROM event WHERE type = 'Community Service' AND event_date BETWEEN '2019-01-01' AND '2019-12-31') AS REAL) / (SELECT COUNT(*) FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31')) * 100\t----- bird -----\tstudent_club",
    "1401": "SELECT expense.cost  FROM event  INNER JOIN expense ON event.event_id = expense.link_to_event  WHERE event.event_name = 'September Speaker'  AND expense.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "1402": "SELECT member.t_shirt_size FROM member GROUP BY member.t_shirt_size ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1403": "SELECT event.event_name  FROM event  INNER JOIN budget ON event.event_id = budget.link_to_event  WHERE event.status = 'Closed' AND budget.remaining < 0  ORDER BY budget.remaining ASC  LIMIT 1\t----- bird -----\tstudent_club",
    "1404": "SELECT expense.expense_description, SUM(expense.cost) FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE event.event_name = 'October Meeting' AND expense.approved = True GROUP BY expense.expense_description\t----- bird -----\tstudent_club",
    "1405": "SELECT budget.category, SUM(budget.amount)  FROM event  INNER JOIN budget ON event.event_id = budget.link_to_event  WHERE event.event_name = 'April Speaker'  GROUP BY budget.category  ORDER BY SUM(budget.amount) ASC;\t----- bird -----\tstudent_club",
    "1406": "SELECT amount FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1407": "SELECT amount FROM budget WHERE category = 'Advertising' ORDER BY amount DESC LIMIT 3\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(expense.cost) FROM expense WHERE expense.expense_description = 'Parking'\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(expense.cost) FROM expense WHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "1410": "SELECT member.first_name, member.last_name, SUM(expense.cost) FROM member  INNER JOIN expense ON member.member_id = expense.link_to_member WHERE member.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY member.first_name, member.last_name\t----- bird -----\tstudent_club",
    "1411": "SELECT expense.expense_description  FROM expense  INNER JOIN member ON expense.link_to_member = member.member_id  WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1412": "SELECT expense.expense_description  FROM expense  INNER JOIN member ON expense.link_to_member = member.member_id  WHERE member.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1413": "SELECT member.zip  FROM expense  INNER JOIN member ON expense.link_to_member = member.member_id  WHERE expense.cost < 50\t----- bird -----\tstudent_club",
    "1414": "SELECT major.major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Phillip' AND member.last_name = 'Cullen'\t----- bird -----\tstudent_club",
    "1415": "SELECT member.position  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE major.major_name = 'Business'\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1417": "SELECT event.type  FROM budget  INNER JOIN event ON budget.link_to_event = event.event_id  WHERE budget.remaining > 30\t----- bird -----\tstudent_club",
    "1418": "SELECT event.type FROM event WHERE event.location = 'MU 215';\t----- bird -----\tstudent_club",
    "1419": "SELECT event.type FROM event WHERE event.event_date = '2020-03-24T12:00:00'\t----- bird -----\tstudent_club",
    "1420": "SELECT major.major_name  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1421": "SELECT (CAST((SELECT COUNT(*) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business') AS REAL) / COUNT(*) * 100) AS percentage FROM member\t----- bird -----\tstudent_club",
    "1422": "SELECT event.type FROM event WHERE event.location = 'MU 215';\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(*) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "1426": "SELECT member.last_name, major.department, major.college  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE major.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1427": "SELECT budget.category  FROM event  INNER JOIN budget ON event.event_id = budget.link_to_event  WHERE event.location = 'MU 215'  AND event.type = 'Guest Speaker'  AND budget.spent = 0\t----- bird -----\tstudent_club",
    "1428": "SELECT zip_code.city, zip_code.state  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  INNER JOIN zip_code ON member.zip = zip_code.zip_code  WHERE major.department = 'Electrical and Computer Engineering'  AND member.position = 'Member'\t----- bird -----\tstudent_club",
    "1429": "SELECT event.event_name FROM attendance INNER JOIN member ON attendance.link_to_member = member.member_id INNER JOIN event ON attendance.link_to_event = event.event_id WHERE member.position = 'Vice President' AND event.location = '900 E. Washington St.' AND event.type = 'Social'\t----- bird -----\tstudent_club",
    "1430": "SELECT member.last_name, member.position  FROM expense  INNER JOIN member ON expense.link_to_member = member.member_id  WHERE expense.expense_description = 'Pizza' AND expense.expense_date = '2019-09-10'\t----- bird -----\tstudent_club",
    "1431": "SELECT member.last_name  FROM attendance  INNER JOIN member ON attendance.link_to_member = member.member_id  INNER JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Women's Soccer' AND member.position = 'Member';\t----- bird -----\tstudent_club",
    "1432": "SELECT (CAST(COUNT(income.amount) AS REAL) * 100 / COUNT(member.member_id)) AS percentage FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE member.t_shirt_size = 'Medium' AND income.amount = 50\t----- bird -----\tstudent_club",
    "1433": "SELECT zip_code.county FROM zip_code WHERE zip_code.type = 'PO Box';\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code.zip_code  FROM zip_code  WHERE zip_code.type = 'PO Box'  AND zip_code.state = 'Puerto Rico'  AND zip_code.county = 'San Juan Municipio'\t----- bird -----\tstudent_club",
    "1435": "SELECT event.event_name FROM event WHERE event.type = 'Game' AND event.status = 'Closed' AND event.event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "1436": "SELECT attendance.link_to_event  FROM attendance  INNER JOIN expense ON attendance.link_to_member = expense.link_to_member  WHERE expense.cost > 50\t----- bird -----\tstudent_club",
    "1437": "SELECT member.first_name, member.last_name, attendance.link_to_event FROM expense INNER JOIN member ON expense.link_to_member = member.member_id INNER JOIN attendance ON member.member_id = attendance.link_to_member WHERE expense.approved = 'true' AND expense.expense_date BETWEEN '2019-01-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1438": "SELECT major.college  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE member.first_name = 'Katy' AND member.link_to_major = 'rec1N0upiVLy5esTO';\t----- bird -----\tstudent_club",
    "1439": "SELECT member.phone  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE major.college = 'College of Agriculture and Applied Sciences'  AND major.major_name = 'Business';\t----- bird -----\tstudent_club",
    "1440": "SELECT member.email  FROM expense  INNER JOIN member ON expense.link_to_member = member.member_id  WHERE expense.cost > 20 AND expense.expense_date BETWEEN '2019-09-10' AND '2019-11-19';\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'education' AND major.college = 'College of Education & Human Services'\t----- bird -----\tstudent_club",
    "1442": "SELECT (CAST(SUM(CASE WHEN remaining < 0 THEN 1 ELSE 0 END) AS REAL) / COUNT(event_id)) * 100 FROM budget\t----- bird -----\tstudent_club",
    "1443": "SELECT event.event_id, event.location, event.status  FROM event  WHERE event.event_date BETWEEN '2019-11-01' AND '2020-03-31';\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) > 50\t----- bird -----\tstudent_club",
    "1445": "SELECT member.first_name, member.last_name  FROM member  WHERE member.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1446": "SELECT (CAST(SUM(CASE WHEN type = 'PO Box' THEN 1 ELSE 0 END) AS REAL) / COUNT(zip_code)) * 100 AS percentage FROM zip_code\t----- bird -----\tstudent_club",
    "1447": "SELECT event.event_name, event.location  FROM event  INNER JOIN budget ON event.event_id = budget.link_to_event  WHERE budget.remaining > 0\t----- bird -----\tstudent_club",
    "1448": "SELECT event.event_name, event.event_date  FROM event  INNER JOIN expense ON event.event_id = expense.link_to_event  WHERE expense.expense_description = 'Pizza'  AND expense.cost > 50  AND expense.cost < 100\t----- bird -----\tstudent_club",
    "1449": "SELECT member.first_name, member.last_name, major.major_name FROM expense INNER JOIN member ON expense.link_to_member = member.member_id INNER JOIN major ON member.link_to_major = major.major_id WHERE expense.cost > 100\t----- bird -----\tstudent_club",
    "1450": "SELECT zip_code.city, zip_code.county FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event INNER JOIN income ON attendance.link_to_member = income.link_to_member INNER JOIN zip_code ON event.location = zip_code.zip_code GROUP BY event.event_id HAVING COUNT(income.income_id) > 40\t----- bird -----\tstudent_club",
    "1451": "SELECT member.first_name, member.last_name  FROM expense  INNER JOIN member ON expense.link_to_member = member.member_id  GROUP BY expense.link_to_member  HAVING COUNT(DISTINCT event.event_id) > 1  ORDER BY SUM(expense.cost) DESC  LIMIT 1\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(expense.cost) FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE member.position != 'Member'\t----- bird -----\tstudent_club",
    "1453": "SELECT event.event_name  FROM budget  INNER JOIN expense ON budget.budget_id = expense.link_to_budget  INNER JOIN event ON budget.link_to_event = event.event_id  WHERE budget.category = 'Parking'  HAVING expense.cost < (SELECT AVG(expense.cost)                         FROM budget                         INNER JOIN expense ON budget.budget_id = expense.link_to_budget                         WHERE budget.category = 'Parking')\t----- bird -----\tstudent_club",
    "1454": "SELECT CAST(SUM(expense.cost) AS REAL) * 100 / COUNT(event.event_id) AS percentage FROM event INNER JOIN expense ON event.event_id = expense.link_to_event WHERE event.type = 'Meeting'\t----- bird -----\tstudent_club",
    "1455": "SELECT expense.cost FROM expense WHERE expense.expense_description = 'Water, chips, cookies' ORDER BY expense.cost DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1456": "SELECT member.first_name, member.last_name FROM (     SELECT expense.link_to_member, SUM(expense.cost) as total_cost     FROM expense     GROUP BY expense.link_to_member     ORDER BY total_cost DESC     LIMIT 5 ) AS top_spenders INNER JOIN member ON top_spenders.link_to_member = member.member_id\t----- bird -----\tstudent_club",
    "1457": "SELECT member.first_name, member.last_name, member.phone FROM member INNER JOIN expense ON member.member_id = expense.link_to_member GROUP BY expense.link_to_member HAVING AVG(expense.cost) > (SELECT AVG(expense.cost) FROM expense)\t----- bird -----\tstudent_club",
    "1458": "SELECT ((SELECT COUNT(*) FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.state = 'New Jersey' AND member.position = 'Member') * 100 / (SELECT COUNT(*) FROM member WHERE position = 'Member')) - ((SELECT COUNT(*) FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.state = 'Vermont' AND member.position = 'Member') * 100 / (SELECT COUNT(*) FROM member WHERE position = 'Member')) AS difference_percentage FROM member LIMIT 1;\t----- bird -----\tstudent_club",
    "1459": "SELECT major.major_name, major.department  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE member.first_name = 'Garrett' AND member.last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1460": "SELECT member.first_name, member.last_name, expense.cost FROM member INNER JOIN expense ON member.member_id = expense.link_to_member WHERE expense.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "1461": "SELECT member.last_name, member.phone FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education'\t----- bird -----\tstudent_club",
    "1462": "SELECT budget.category, budget.amount FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'January Speaker';\t----- bird -----\tstudent_club",
    "1463": "SELECT event.event_name FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE budget.category = 'Food'\t----- bird -----\tstudent_club",
    "1464": "SELECT member.first_name, member.last_name, income.amount FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE income.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "1465": "SELECT budget.category  FROM expense  INNER JOIN budget ON expense.link_to_budget = budget.budget_id  WHERE expense.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "1466": "SELECT member.first_name, member.last_name, major.college  FROM member  INNER JOIN major ON member.link_to_major = major.major_id  WHERE member.position = 'Secretary'\t----- bird -----\tstudent_club",
    "1467": "SELECT event.event_name, SUM(budget.spent)  FROM budget  INNER JOIN event ON budget.link_to_event = event.event_id  WHERE budget.category = 'Speaker Gifts'  GROUP BY event.event_name\t----- bird -----\tstudent_club",
    "1468": "SELECT zip_code.city  FROM member  INNER JOIN zip_code ON member.zip = zip_code.zip_code  WHERE member.last_name = 'Gerke' AND member.first_name = 'Garrett'\t----- bird -----\tstudent_club",
    "1469": "SELECT member.first_name, member.last_name, member.position FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.city = 'Lincolnton' AND zip_code.state = 'North Carolina' AND zip_code.zip_code = '28092'\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium'\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT (CAST((SELECT COUNT(*) FROM customers WHERE Currency = 'EUR') AS REAL)) / (SELECT COUNT(*) FROM customers WHERE Currency = 'CZK') AS ratio FROM customers LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT customers.CustomerID FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE substr(yearmonth.Date, 1, 4) BETWEEN '201201' AND '201212' AND customers.Segment = 'LAM' ORDER BY yearmonth.Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(yearmonth.Consumption) / 12 FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Segment = 'SME' AND        SUBSTR(yearmonth.Date, 1, 4) BETWEEN '2013' AND '2013'\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT customers.CustomerID FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'CZK' AND yearmonth.Date BETWEEN 201101 AND 201112 ORDER BY yearmonth.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT customers.CustomerID)  FROM customers  INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID  WHERE customers.Segment = 'KAM'  AND yearmonth.Consumption < 30000  AND yearmonth.Date BETWEEN 201201 AND 201212\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT (SUM(df1.Consumption) - SUM(df2.Consumption)) AS Difference FROM  (SELECT yearmonth.Consumption FROM yearmonth   INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID  WHERE customers.Currency = 'CZK' AND substr(yearmonth.Date, 1, 4) = '2012') AS df1, (SELECT yearmonth.Consumption FROM yearmonth   INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID  WHERE customers.Currency = 'EUR' AND substr(yearmonth.Date, 1, 4) = '2012') AS df2\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT strftime('%Y', yearmonth.Date) as Year FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Currency = 'EUR' GROUP BY Year ORDER BY SUM(yearmonth.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT yearmonth.Segment FROM yearmonth ORDER BY yearmonth.Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT SUBSTR(yearmonth.Date, 1, 4) AS Year FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'CZK' GROUP BY Year ORDER BY SUM(yearmonth.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT yearmonth.Date FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Segment = 'SME' AND substr(yearmonth.Date, 1, 6) BETWEEN '201301' AND '201312' ORDER BY yearmonth.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT (SELECT AVG(yearmonth.Consumption) FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'CZK' AND customers.Segment = 'SME' AND substr(yearmonth.Date, 1, 4) BETWEEN '2013' AND '2013') - (SELECT AVG(yearmonth.Consumption) FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'CZK' AND customers.Segment = 'LAM' AND substr(yearmonth.Date, 1, 4) BETWEEN '2013' AND '2013') AS diff_sme_lam, (SELECT AVG(yearmonth.Consumption) FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'CZK' AND customers.Segment = 'LAM' AND substr(yearmonth.Date, 1, 4) BETWEEN '2013' AND '2013') - (SELECT AVG(yearmonth.Consumption) FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'CZK' AND customers.Segment = 'KAM' AND substr(yearmonth.Date, 1, 4) BETWEEN '2013' AND '2013') AS diff_lam_kam, (SELECT AVG(yearmonth.Consumption) FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'CZK' AND customers.Segment = 'KAM' AND substr(yearmonth.Date, 1, 4) BETWEEN '2013' AND '2013') - (SELECT AVG(yearmonth.Consumption) FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'CZK' AND customers.Segment = 'SME' AND substr(yearmonth.Date, 1, 4) BETWEEN '2013' AND '2013') AS diff_kam_sme\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT 'SME' AS Segment, ((SUM(case when substr(yearmonth.Date, 1, 4) = '2013' then yearmonth.Consumption else 0 end) - SUM(case when substr(yearmonth.Date, 1, 4) = '2012' then yearmonth.Consumption else 0 end)) * 100 / SUM(case when substr(yearmonth.Date, 1, 4) = '2012' then yearmonth.Consumption else 0 end)) AS Percentage_Increase FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'EUR' AND customers.Segment = 'SME' UNION SELECT 'LAM' AS Segment, ((SUM(case when substr(yearmonth.Date, 1, 4) = '2013' then yearmonth.Consumption else 0 end) - SUM(case when substr(yearmonth.Date, 1, 4) = '2012' then yearmonth.Consumption else 0 end)) * 100 / SUM(case when substr(yearmonth.Date, 1, 4) = '2012' then yearmonth.Consumption else 0 end)) AS Percentage_Increase FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'EUR' AND customers.Segment = 'LAM' UNION SELECT 'KAM' AS Segment, ((SUM(case when substr(yearmonth.Date, 1, 4) = '2013' then yearmonth.Consumption else 0 end) - SUM(case when substr(yearmonth.Date, 1, 4) = '2012' then yearmonth.Consumption else 0 end)) * 100 / SUM(case when substr(yearmonth.Date, 1, 4) = '2012' then yearmonth.Consumption else 0 end)) AS Percentage_Increase FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'EUR' AND customers.Segment = 'KAM' ORDER BY Percentage_Increase DESC LIMIT 1 UNION SELECT 'SME' AS Segment, ((SUM(case when substr(yearmonth.Date, 1, 4) = '2013' then yearmonth.Consumption else 0 end) - SUM(case when substr(yearmonth.Date, 1, 4) = '2012' then yearmonth.Consumption else 0 end)) * 100 / SUM(case when substr(yearmonth.Date, 1, 4) = '2012' then yearmonth.Consumption else 0 end)) AS Percentage_Increase FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'EUR' AND customers.Segment = 'SME' UNION SELECT 'LAM' AS Segment, ((SUM(case when substr(yearmonth.Date, 1, 4) = '2013' then yearmonth.Consumption else 0 end) - SUM(case when substr(yearmonth.Date, 1, 4) = '2012' then yearmonth.Consumption else 0 end)) * 100 / SUM(case when substr(yearmonth.Date, 1, 4) = '2012' then yearmonth.Consumption else 0 end)) AS Percentage_Increase FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'EUR' AND customers.Segment = 'LAM' UNION SELECT 'KAM' AS Segment, ((SUM(case when substr(yearmonth.Date, 1, 4) = '2013' then yearmonth.Consumption else 0 end) - SUM(case when substr(yearmonth.Date, 1, 4) = '2012' then yearmonth.Consumption else 0 end)) * 100 / SUM(case when substr(yearmonth.Date, 1, 4) = '2012' then yearmonth.Consumption else 0 end)) AS Percentage_Increase FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'EUR' AND customers.Segment = 'KAM' ORDER BY Percentage_Increase ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(yearmonth.Consumption)  FROM yearmonth  WHERE yearmonth.CustomerID = 6  AND yearmonth.Date >= '201308'  AND yearmonth.Date <= '201311'\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Discount') -  (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'Discount') AS More_Discount_Stations\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT (SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 7 AND Date = 201304) -  (SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 5 AND Date = 201304) AS Difference FROM yearmonth LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'CZK') -  (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'EUR') AS Amount_of_more_SMEs\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT customers.CustomerID FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Segment = 'LAM' AND customers.Currency = 'Euro' AND yearmonth.Date = '201310' ORDER BY yearmonth.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT customers.CustomerID, yearmonth.Consumption  FROM customers  INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID  WHERE customers.Segment = 'KAM'  ORDER BY yearmonth.Consumption DESC  LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(yearmonth.Consumption)  FROM customers  INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID  WHERE customers.Segment = 'KAM' AND yearmonth.Date = '201305'\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM customers WHERE Segment = 'LAM') AS REAL)  FROM customers  INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID  WHERE customers.Segment = 'LAM' AND yearmonth.Consumption > 46.73\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT gasstations.Country, COUNT(*) FROM gasstations WHERE gasstations.Segment = 'Value for Money' GROUP BY gasstations.Country\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM customers WHERE Segment = 'KAM')  FROM customers  WHERE Segment = 'KAM' AND Currency = 'Euro'\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM yearmonth WHERE substr(Date, 1, 6) = '201202')  FROM yearmonth  WHERE substr(Date, 1, 6) = '201202' AND Consumption > 528.3\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT CAST(COUNT(*) FILTER (WHERE gasstations.Segment = 'Premium') AS REAL) * 100 / COUNT(*)  FROM gasstations  WHERE gasstations.Country = 'Slovakia'\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT yearmonth.CustomerID FROM yearmonth WHERE yearmonth.Date = '201309' ORDER BY yearmonth.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT customers.Segment FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE yearmonth.Date = '201309' GROUP BY customers.Segment ORDER BY SUM(yearmonth.Consumption) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT customers.CustomerID FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Segment = 'SME' AND yearmonth.Date = '201206' ORDER BY yearmonth.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(yearmonth.Consumption)  FROM yearmonth  WHERE substr(yearmonth.Date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(SUM(yearmonth.Consumption)/12)  FROM customers  INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID  WHERE customers.Currency = 'Euro'\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT products.Description  FROM yearmonth  INNER JOIN transactions_1k ON yearmonth.CustomerID = transactions_1k.CustomerID  INNER JOIN products ON transactions_1k.ProductID = products.ProductID  WHERE substr(yearmonth.Date, 1, 6) = '201309'\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT gasstations.Country  FROM gasstations  INNER JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID  WHERE SUBSTR(transactions_1k.Date, 1, 6) = '201306'\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT gasstations.ChainID  FROM gasstations  INNER JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID  INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID  WHERE customers.Currency = 'Euro'\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT products.Description  FROM products  INNER JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID  INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID  WHERE customers.Currency = 'Euro'\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(transactions_1k.Price)  FROM transactions_1k  WHERE transactions_1k.Date LIKE '2012-01%'\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT customers.CustomerID) FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'EUR' AND yearmonth.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT products.Description  FROM gasstations  INNER JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID  INNER JOIN products ON transactions_1k.ProductID = products.ProductID  WHERE gasstations.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT transactions_1k.Time  FROM gasstations  INNER JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID  WHERE gasstations.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(*)  FROM gasstations  INNER JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID  WHERE gasstations.Country = 'CZE' AND transactions_1k.Price > 1000\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*)  FROM gasstations  INNER JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID  WHERE gasstations.Country = 'CZE' AND transactions_1k.Date > '2012/1/1'\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(transactions_1k.Price * transactions_1k.Amount)  FROM gasstations  INNER JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID  WHERE gasstations.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(sum_price) FROM (     SELECT customers.CustomerID, SUM(transactions_1k.Price) as sum_price     FROM customers     INNER JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID     WHERE customers.Currency = 'Euro'     GROUP BY customers.CustomerID ) as subquery\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' ORDER BY Price DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT gasstations.Country FROM transactions_1k INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE transactions_1k.Date = '2012-08-25' ORDER BY transactions_1k.Time ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT customers.Currency  FROM transactions_1k  INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID  WHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT customers.Segment  FROM transactions_1k  INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID  WHERE transactions_1k.Time = '2012-08-23 21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(*) FROM transactions_1k INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE transactions_1k.Date = '2012-08-26' AND transactions_1k.Time < '13:00:00' AND customers.Currency = 'CZK'\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT customers.Segment FROM customers ORDER BY customers.CustomerID ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT gasstations.Country FROM transactions_1k INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Time = '12:42:00'\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT yearmonth.Date, yearmonth.Consumption  FROM transactions_1k  INNER JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID  WHERE transactions_1k.Price = 124.05 AND transactions_1k.Date = '2012-08-24' AND yearmonth.Date LIKE '2012-01%';\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(*) FROM transactions_1k INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE transactions_1k.Date = '2012-08-26' AND transactions_1k.Time BETWEEN '08:00:00' AND '09:00:00' AND gasstations.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT customers.Currency FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE yearmonth.Consumption = 214582.17 AND yearmonth.Date LIKE '%201306%'\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT gasstations.Country  FROM transactions_1k  INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID  WHERE transactions_1k.CardID = '667467'\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT customers.Currency  FROM transactions_1k  INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID  WHERE transactions_1k.Amount = 548.4 AND transactions_1k.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM transactions_1k WHERE Date = '2012-08-25') AS REAL)  FROM customers  INNER JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID  WHERE transactions_1k.Date = '2012-08-25' AND customers.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT (SELECT Consumption FROM yearmonth WHERE Date = '2012' AND CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Price = 634.8 AND Date = '2012-08-24')) -  (SELECT Consumption FROM yearmonth WHERE Date = '2013' AND CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Price = 634.8 AND Date = '2012-08-24')) /  (SELECT Consumption FROM yearmonth WHERE Date = '2012' AND CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Price = 634.8 AND Date = '2012-08-24')) AS Consumption_Decrease_Rate\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT gasstations.GasStationID FROM gasstations INNER JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID GROUP BY gasstations.GasStationID ORDER BY SUM(transactions_1k.Price * transactions_1k.Amount) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT (CAST((SELECT COUNT(*) FROM gasstations WHERE Segment = 'premium' AND Country = 'SVK') AS REAL) * 100) /  (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK') AS percentage FROM gasstations LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(transactions_1k.Amount)  FROM transactions_1k  INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID  WHERE customers.CustomerID = '38508'  AND transactions_1k.Date = '201201'\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT products.Description FROM products INNER JOIN (     SELECT transactions_1k.ProductID, SUM(transactions_1k.Amount) as total_amount     FROM transactions_1k     GROUP BY transactions_1k.ProductID     ORDER BY total_amount DESC     LIMIT 5 ) as top_products ON products.ProductID = top_products.ProductID\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT customers.CustomerID, AVG(transactions_1k.Price / transactions_1k.Amount) as average_price, customers.Currency FROM customers INNER JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID GROUP BY customers.CustomerID ORDER BY SUM(transactions_1k.Amount) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT gasstations.Country FROM transactions_1k INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE transactions_1k.ProductID = 2 ORDER BY transactions_1k.Price DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT yearmonth.Consumption FROM transactions_1k INNER JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID WHERE transactions_1k.ProductID = 5 AND transactions_1k.Price/transactions_1k.Amount > 29.00 AND yearmonth.Date = '201208'\t----- bird -----\tdebit_card_specializing"
}