{
    "0": "SELECT MAX(\"Free Meal Count (K-12)\" / \"Enrollment (K-12)\") AS highesteligiblefreerate FROM frpm WHERE \"County Name\" = 'Alameda'",
    "1": "SELECT (t1.\"Free Meal Count (Ages 5-17)\" / t1.\"Enrollment (Ages 5-17)\") AS eligiblefreerate FROM frpm AS t1 INNER JOIN schools AS t2 ON t1.cdscode = t2.cdscode WHERE t2.soctype = 'Continuation High Schools' AND NOT t1.\"Free Meal Count (Ages 5-17)\" IS NULL AND NOT t1.\"Enrollment (Ages 5-17)\" IS NULL AND t1.\"Enrollment (Ages 5-17)\" > 0 ORDER BY eligiblefreerate ASC LIMIT 3",
    "2": "SELECT DISTINCT schools.zip FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE frpm.\"County Name\" = 'Fresno' AND frpm.\"Charter School (Y/N)\" = 1 AND frpm.\"District Name\" = 'Fresno County Office of Education'",
    "3": "SELECT schools.mailstreet FROM frpm INNER JOIN schools ON frpm.cdscode = schools.cdscode ORDER BY frpm.\"FRPM Count (K-12)\" DESC LIMIT 1",
    "4": "SELECT schools.phone FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.fundingtype = 'Directly funded' AND frpm.\"Charter School (Y/N)\" = 1 AND schools.opendate > '2000-01-01'",
    "5": "SELECT COUNT(schools.cdscode) FROM satscores INNER JOIN schools ON satscores.cds = schools.cdscode WHERE satscores.avgscrmath > 400 AND schools.virtual = 'F'",
    "6": "SELECT DISTINCT s.school FROM schools AS s INNER JOIN satscores AS sa ON s.cdscode = sa.cds WHERE sa.numtsttakr > 500 AND s.magnet = 1",
    "7": "SELECT schools.phone FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds ORDER BY satscores.numge1500 DESC LIMIT 1",
    "8": "SELECT s.numtsttakr FROM satscores AS s INNER JOIN frpm AS f ON s.cds = f.cdscode WHERE f.\"FRPM Count (K-12)\" = (SELECT MAX(\"FRPM Count (K-12)\") FROM frpm)",
    "9": "SELECT COUNT(*) FROM satscores INNER JOIN schools ON satscores.cds = schools.cdscode WHERE satscores.avgscrmath > 560 AND schools.fundingtype = 'Directly funded'",
    "10": "SELECT frpm.\"FRPM Count (Ages 5-17)\" FROM frpm INNER JOIN satscores ON frpm.cdscode = satscores.cds ORDER BY satscores.avgscrread DESC LIMIT 1",
    "11": "SELECT cdscode FROM frpm WHERE (\"Enrollment (K-12)\" + \"Enrollment (Ages 5-17)\") > 500",
    "12": "SELECT MAX((CAST(t2.\"Free Meal Count (Ages 5-17)\" AS REAL) / t2.\"Enrollment (Ages 5-17)\")) AS highesteligiblefreerate FROM (SELECT cds, (CAST(numge1500 AS REAL) / numtsttakr) AS excellencerate FROM satscores WHERE (CAST(numge1500 AS REAL) / numtsttakr) > 0.3) AS t1 INNER JOIN frpm AS t2 ON t1.cds = t2.cdscode",
    "13": "SELECT schools.phone FROM satscores INNER JOIN schools ON satscores.cds = schools.cdscode ORDER BY (satscores.numge1500 / satscores.numtsttakr) DESC LIMIT 3",
    "14": "SELECT t2.ncesschool FROM frpm AS t1 INNER JOIN schools AS t2 ON t1.cdscode = t2.cdscode ORDER BY t1.\"Enrollment (Ages 5-17)\" DESC LIMIT 5",
    "15": "SELECT s.district FROM schools AS s INNER JOIN satscores AS sa ON s.cdscode = sa.cds WHERE s.statustype = 'Active' ORDER BY sa.avgscrread DESC LIMIT 1",
    "16": "SELECT COUNT(*) FROM satscores INNER JOIN schools ON satscores.cds = schools.cdscode WHERE schools.county = 'Alameda' AND schools.statustype = 'Merged' AND satscores.numtsttakr < 100",
    "17": "SELECT schools.charternum FROM satscores INNER JOIN schools ON satscores.cds = schools.cdscode WHERE satscores.avgscrwrite > 499 AND NOT schools.charternum IS NULL ORDER BY satscores.avgscrwrite DESC",
    "18": "SELECT COUNT(*) FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE schools.county = 'Fresno' AND schools.fundingtype = 'Directly funded' AND satscores.numtsttakr <= 250",
    "19": "SELECT schools.phone FROM satscores INNER JOIN schools ON satscores.cds = schools.cdscode ORDER BY satscores.avgscrmath DESC LIMIT 1",
    "20": "SELECT COUNT(frpm.cdscode) FROM frpm WHERE frpm.\"County Name\" = 'Amador' AND frpm.\"Low Grade\" = '9' AND frpm.\"High Grade\" = '12'",
    "21": "SELECT COUNT(*) FROM frpm WHERE \"County Name\" = 'Los Angeles' AND \"Free Meal Count (K-12)\" > 500 AND \"FRPM Count (K-12)\" < 700",
    "22": "SELECT sname, numtsttakr FROM satscores WHERE cname = 'Contra Costa' AND numtsttakr = (SELECT MAX(numtsttakr) FROM satscores WHERE cname = 'Contra Costa')",
    "23": "SELECT schools.school, schools.street FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE (frpm.\"Enrollment (K-12)\" - frpm.\"Enrollment (Ages 5-17)\") > 30",
    "24": "SELECT s.school FROM schools AS s INNER JOIN frpm AS f ON s.cdscode = f.cdscode INNER JOIN satscores AS sat ON s.cdscode = sat.cds WHERE f.\"Percent (%) Eligible Free (K-12)\" > 0.1 AND sat.numge1500 > 0",
    "25": "SELECT DISTINCT schools.fundingtype FROM frpm INNER JOIN satscores ON frpm.cdscode = satscores.cds INNER JOIN schools ON schools.cdscode = satscores.cds WHERE frpm.\"County Name\" = 'Riverside' AND satscores.avgscrmath > 400",
    "26": "SELECT schools.school, schools.street, schools.city, schools.state, schools.zip FROM frpm INNER JOIN schools ON frpm.cdscode = schools.cdscode WHERE frpm.\"County Name\" = 'Monterey' AND frpm.\"FRPM Count (Ages 5-17)\" > 800 AND schools.\"GSoffered\" LIKE '%12%'",
    "27": "SELECT schools.school, AVG(satscores.avgscrwrite) AS avgscrwrite, schools.phone FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE schools.opendate > '1991-12-31' OR schools.closeddate < '2000-01-01' GROUP BY schools.school, schools.phone ORDER BY schools.school, avgscrwrite, schools.phone",
    "28": "SELECT schools.school, schools.doctype FROM schools INNER JOIN (SELECT cdscode, frpm.\"Enrollment (K-12)\" - frpm.\"Enrollment (Ages 5-17)\" AS difference FROM frpm WHERE frpm.\"Charter Funding Type\" = 'Locally funded') AS sub1 ON schools.cdscode = sub1.cdscode WHERE sub1.difference > (SELECT AVG(difference) FROM (SELECT frpm.\"Enrollment (K-12)\" - frpm.\"Enrollment (Ages 5-17)\" AS difference FROM frpm WHERE frpm.\"Charter Funding Type\" = 'Locally funded'))",
    "29": "SELECT s.opendate FROM schools AS s INNER JOIN frpm AS f ON s.cdscode = f.cdscode WHERE s.gsoffered = 'K-12' AND NOT f.\"Enrollment (K-12)\" IS NULL AND f.\"Enrollment (K-12)\" > 0 ORDER BY f.\"Enrollment (K-12)\" DESC LIMIT 1",
    "30": "SELECT schools.city FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode ORDER BY frpm.\"Enrollment (K-12)\" ASC LIMIT 5",
    "31": "SELECT \"School Name\", \"Free Meal Count (K-12)\" / \"Enrollment (K-12)\" AS eligible_free_rate FROM frpm ORDER BY \"Enrollment (K-12)\" DESC LIMIT 2 OFFSET 9",
    "32": "SELECT \"FRPM Count (K-12)\" / \"Enrollment (K-12)\" AS \"Eligible FRPM Rate\" FROM \"frpm\" ORDER BY \"FRPM Count (K-12)\" DESC LIMIT 5",
    "33": "SELECT schools.website, schools.school FROM frpm INNER JOIN schools ON frpm.cdscode = schools.cdscode WHERE frpm.\"Free Meal Count (Ages 5-17)\" BETWEEN 1900 AND 2000",
    "34": "SELECT frpm.\"Free Meal Count (Ages 5-17)\" / frpm.\"Enrollment (Ages 5-17)\" AS free_rate FROM frpm INNER JOIN schools ON frpm.cdscode = schools.cdscode WHERE schools.admfname1 = 'Kacey' AND schools.admlname1 = 'Gibson'",
    "35": "SELECT t2.admemail1 FROM frpm AS t1 INNER JOIN schools AS t2 ON t1.cdscode = t2.cdscode WHERE t1.\"Charter School (Y/N)\" = 1 ORDER BY t1.\"Enrollment (K-12)\" ASC LIMIT 1",
    "36": "SELECT admfname1, admlname1, admfname2, admlname2, admfname3, admlname3 FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE NOT admfname1 IS NULL AND NOT admlname1 IS NULL ORDER BY satscores.numge1500 DESC LIMIT 1",
    "37": "SELECT t2.street, t2.city, t2.zip, t2.state FROM satscores AS t1 INNER JOIN schools AS t2 ON t1.cds = t2.cdscode ORDER BY CAST(t1.numge1500 AS REAL) / t1.numtsttakr ASC LIMIT 1",
    "38": "SELECT DISTINCT schools.website FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE schools.county = 'Los Angeles' AND satscores.numtsttakr BETWEEN 2000 AND 3000",
    "39": "SELECT AVG(satscores.numtsttakr) AS averagetesttakers FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE schools.county = 'Fresno' AND STRFTIME('%Y', schools.opendate) = '1980'",
    "40": "SELECT phone FROM schools WHERE cdscode = (SELECT a.cds FROM satscores AS a INNER JOIN schools AS s ON a.cds = s.cdscode WHERE s.district = 'Fresno Unified' ORDER BY a.avgscrread ASC LIMIT 1)",
    "41": "SELECT school FROM (SELECT schools.school, ROW_NUMBER() OVER (PARTITION BY schools.county ORDER BY satscores.avgscrread DESC) AS rn FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE schools.virtual = 'F') WHERE rn <= 5",
    "42": "SELECT schools.edopsname FROM satscores INNER JOIN schools ON satscores.cds = schools.cdscode ORDER BY satscores.avgscrmath DESC LIMIT 1",
    "43": "SELECT s.avgscrmath, sc.county FROM satscores AS s INNER JOIN schools AS sc ON s.cds = sc.cdscode ORDER BY (s.avgscrmath + s.avgscrread + s.avgscrwrite) ASC LIMIT 1",
    "44": "SELECT avgscrwrite, city FROM satscores INNER JOIN schools ON satscores.cds = schools.cdscode WHERE numge1500 = (SELECT MAX(numge1500) FROM satscores)",
    "45": "SELECT schools.school, satscores.avgscrwrite FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE schools.admfname1 = 'Ricci' AND schools.admlname1 = 'Ulrich'",
    "46": "SELECT s.school, f.\"Enrollment (K-12)\" FROM frpm AS f INNER JOIN schools AS s ON f.cdscode = s.cdscode WHERE s.doc = '31' AND (s.eilcode = 'ELEMHIGH' OR s.eilcode = 'K-12') ORDER BY f.\"Enrollment (K-12)\" DESC LIMIT 1",
    "47": "SELECT CAST(COUNT(*) AS REAL) / 12 AS monthlyaverage FROM schools WHERE county = 'Alameda' AND doc = 52 AND STRFTIME('%Y', opendate) = '1980'",
    "48": "SELECT CAST(SUM(CASE WHEN doc = 54 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN doc = 52 THEN 1 ELSE 0 END) AS ratio FROM schools WHERE county = 'Orange' AND statustype = 'Merged'",
    "49": "SELECT s.county, s.school, s.closeddate FROM schools AS s JOIN (SELECT county, COUNT(cdscode) AS closed_count FROM schools WHERE statustype = 'Closed' GROUP BY county ORDER BY closed_count DESC LIMIT 1) AS top_county ON s.county = top_county.county WHERE s.statustype = 'Closed'",
    "50": "SELECT s.street, s.school FROM satscores AS sat INNER JOIN schools AS s ON sat.cds = s.cdscode ORDER BY sat.avgscrmath DESC LIMIT 1 OFFSET 6",
    "51": "SELECT t2.mailstreet, t2.school FROM satscores AS t1 INNER JOIN schools AS t2 ON t1.cds = t2.cdscode ORDER BY t1.avgscrread ASC LIMIT 1",
    "52": "SELECT COUNT(*) FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE schools.mailcity = 'Lakeport' AND (satscores.avgscrread + satscores.avgscrmath + satscores.avgscrwrite) >= 1500",
    "53": "SELECT SUM(satscores.numtsttakr) AS totaltesttakers FROM satscores INNER JOIN schools ON satscores.cds = schools.cdscode WHERE schools.mailcity = 'Fresno'",
    "54": "SELECT school, mailzip FROM schools WHERE admfname1 = 'Avetik' AND admlname1 = 'Atoian'",
    "55": "SELECT CAST(COUNT(CASE WHEN county = 'Colusa' THEN 1 END) AS REAL) / COUNT(CASE WHEN county = 'Humboldt' THEN 1 END) AS ratio FROM schools WHERE mailstate = 'CA' AND NOT county IS NULL",
    "56": "SELECT COUNT(*) FROM schools WHERE city = 'San Joaquin' AND mailstate = 'California' AND statustype = 'Active'",
    "57": "SELECT schools.phone, schools.ext FROM satscores INNER JOIN schools ON satscores.cds = schools.cdscode ORDER BY satscores.avgscrwrite DESC LIMIT 1 OFFSET 332",
    "58": "SELECT phone, ext, school FROM schools WHERE zip = '95203-3704'",
    "59": "SELECT website FROM schools WHERE (admfname1 = 'Mike' AND admlname1 = 'Larson') OR (admfname1 = 'Dante' AND admlname1 = 'Alvarez')",
    "60": "SELECT website FROM schools WHERE virtual = 'P' AND charter = 1 AND county = 'San Joaquin'",
    "61": "SELECT COUNT(cdscode) FROM schools WHERE city = 'Hickman' AND doc = 52 AND charter = 1",
    "62": "SELECT COUNT(schools.cdscode) AS total_schools FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.county = 'Los Angeles' AND frpm.\"Charter School (Y/N)\" = 0 AND frpm.\"Percent (%) Eligible Free (K-12)\" < 0.18",
    "63": "SELECT admfname1, admlname1, school, city FROM schools WHERE charter = 1 AND charternum = '00D2'",
    "64": "SELECT COUNT(cdscode) AS totalschools FROM schools WHERE mailcity = 'Hickman' AND charternum = '00D4'",
    "65": "SELECT CAST(SUM(CASE WHEN fundingtype = 'Locally funded' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS ratiopercentage FROM schools WHERE county = 'Santa Clara'",
    "66": "SELECT COUNT(*) FROM schools WHERE fundingtype = 'Directly Funded' AND county = 'Stanislaus' AND opendate BETWEEN '2000-01-01' AND '2005-12-31'",
    "67": "SELECT COUNT(*) FROM schools WHERE schools.city = 'San Francisco' AND schools.doctype = 'Community College District' AND STRFTIME('%Y', schools.closeddate) = '1989'",
    "68": "SELECT county FROM schools WHERE STRFTIME('%Y', closeddate) BETWEEN '1980' AND '1989' AND soc = '11' GROUP BY county ORDER BY COUNT(*) DESC LIMIT 1",
    "69": "SELECT DISTINCT \"NCESDist\" FROM \"schools\" WHERE \"SOC\" = '31'",
    "70": "SELECT COUNT(*) FROM schools WHERE soctype = 'District Community Day Schools' AND county = 'Alpine' AND (statustype = 'Active' OR statustype = 'Closed')",
    "71": "SELECT ncesdist FROM schools WHERE city = 'Fresno' AND magnet = 0",
    "72": "SELECT SUM(frpm.\"Enrollment (Ages 5-17)\") FROM frpm INNER JOIN schools ON frpm.cdscode = schools.cdscode WHERE frpm.\"Academic Year\" = '2014-2015' AND schools.city = 'Fremont' AND schools.edopscode = 'SSS'",
    "73": "SELECT frpm.\"FRPM Count (Ages 5-17)\" FROM frpm INNER JOIN schools ON frpm.cdscode = schools.cdscode WHERE schools.edopsname = 'Youth Authority School' AND schools.mailstreet = 'PO Box 1040'",
    "74": "SELECT \"Low Grade\" FROM frpm INNER JOIN schools ON frpm.cdscode = schools.cdscode WHERE schools.edopscode = 'SPECON' AND schools.ncesdist = '0613360'",
    "75": "SELECT schools.eilname, schools.school FROM frpm INNER JOIN schools ON frpm.cdscode = schools.cdscode WHERE frpm.\"County Code\" = '37' AND frpm.\"NSLP Provision Status\" = 'Breakfast Provision 2'",
    "76": "SELECT schools.city FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE frpm.\"County Name\" = 'Merced' AND frpm.\"NSLP Provision Status\" = 'Lunch Provision 2' AND frpm.\"Low Grade\" = '9' AND frpm.\"High Grade\" = '12'",
    "77": "SELECT schools.school, (frpm.\"FRPM Count (Ages 5-17)\" / frpm.\"Enrollment (Ages 5-17)\") * 100 AS percent_eligible_frpm FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.county = 'Los Angeles' AND schools.gsserved = 'K-9'",
    "78": "SELECT gsserved FROM schools WHERE city = 'Adelanto' GROUP BY gsserved ORDER BY COUNT(*) DESC LIMIT 1",
    "79": "SELECT \"County\", COUNT(*) AS \"SchoolCount\" FROM \"schools\" WHERE \"Virtual\" = 'F' AND \"County\" IN ('San Diego', 'Santa Barbara') GROUP BY \"County\" ORDER BY \"SchoolCount\" DESC LIMIT 1",
    "80": "SELECT \"School Type\", \"School\", \"Latitude\" FROM \"schools\" ORDER BY \"Latitude\" DESC LIMIT 1",
    "81": "SELECT city, school FROM schools WHERE state = 'CA' ORDER BY latitude ASC LIMIT 1",
    "82": "SELECT t1.gsoffered FROM schools AS t1 INNER JOIN (SELECT MAX(ABS(longitude)) AS maxabslongitude FROM schools) AS t2 ON ABS(t1.longitude) = t2.maxabslongitude",
    "83": "SELECT schools.city, COUNT(schools.cdscode) AS number_of_schools FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.gsoffered = 'K-8' AND schools.magnet = 1 AND frpm.\"NSLP Provision Status\" = 'Multiple Provision Types' GROUP BY schools.city",
    "84": "SELECT admfname, district, COUNT(*) AS namecount FROM (SELECT admfname1 AS admfname, district FROM schools WHERE NOT admfname1 IS NULL UNION ALL SELECT admfname2 AS admfname, district FROM schools WHERE NOT admfname2 IS NULL UNION ALL SELECT admfname3 AS admfname, district FROM schools WHERE NOT admfname3 IS NULL) AS admin_names GROUP BY admfname, district ORDER BY namecount DESC LIMIT 2",
    "85": "SELECT (frpm.\"Free Meal Count (K-12)\" / frpm.\"Enrollment (K-12)\" * 100) AS percent_eligible_free, frpm.\"District Code\" FROM frpm INNER JOIN schools ON frpm.cdscode = schools.cdscode WHERE schools.admfname1 = 'Alusine'",
    "86": "SELECT admlname1, district, county, school FROM schools WHERE charternum = '0040'",
    "87": "SELECT DISTINCT admemail1, admemail2, admemail3 FROM schools WHERE county = 'San Bernardino' AND district = 'San Bernardino City Unified' AND soc = '62' AND doc = '54' AND opendate BETWEEN '2009-01-01' AND '2010-12-31'",
    "88": "SELECT schools.admemail1, schools.school FROM satscores INNER JOIN schools ON satscores.cds = schools.cdscode WHERE satscores.numge1500 = (SELECT MAX(numge1500) FROM satscores)",
    "89": "SELECT COUNT(account.account_id) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.a3 = 'East Bohemia' AND account.frequency = 'POPLATEK PO OBRATU'",
    "90": "SELECT COUNT(account.account_id) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.a3 = 'Prague'",
    "91": "SELECT CASE WHEN AVG(a12) > AVG(a13) THEN '1995' ELSE '1996' END AS higher_unemployment_year FROM district",
    "92": "SELECT COUNT(DISTINCT d.district_id) FROM district AS d INNER JOIN client AS c ON d.district_id = c.district_id WHERE c.gender = 'F' AND d.a11 BETWEEN 6000 AND 10000",
    "93": "SELECT COUNT(client.client_id) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'M' AND district.a3 = 'north Bohemia' AND district.a11 > 8000",
    "94": "SELECT account.account_id, (SELECT MAX(a11) - MIN(a11) FROM district) AS salary_gap FROM account INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F' AND client.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F' AND district_id = (SELECT district_id FROM district WHERE a11 = (SELECT MIN(a11) FROM district)))",
    "95": "SELECT DISTINCT t2.account_id FROM client AS t1 INNER JOIN disp AS t2 ON t1.client_id = t2.client_id WHERE t1.district_id = (SELECT district_id FROM district ORDER BY a11 DESC LIMIT 1) AND t1.birth_date = (SELECT MIN(birth_date) FROM client WHERE district_id = (SELECT district_id FROM district ORDER BY a11 DESC LIMIT 1))",
    "96": "SELECT COUNT(DISTINCT disp.client_id) FROM disp INNER JOIN account ON disp.account_id = account.account_id WHERE account.frequency = 'POPLATEK TYDNE' AND disp.type = 'OWNER'",
    "97": "SELECT DISTINCT disp.client_id FROM account INNER JOIN disp ON account.account_id = disp.account_id WHERE account.frequency = 'POPLATEK PO OBRATU' AND disp.type = 'DISPONENT'",
    "98": "SELECT a.account_id FROM account AS a INNER JOIN loan AS l ON a.account_id = l.account_id WHERE STRFTIME('%Y', l.date) = '1997' AND a.frequency = 'POPLATEK TYDNE' ORDER BY l.amount ASC LIMIT 1",
    "99": "SELECT DISTINCT a.account_id FROM account AS a INNER JOIN loan AS l ON a.account_id = l.account_id WHERE a.date LIKE '1993%' AND l.duration > 12 AND l.amount = (SELECT MAX(amount) FROM loan WHERE account_id IN (SELECT account_id FROM account WHERE date LIKE '1993%') AND duration > 12)",
    "100": "SELECT COUNT(t1.client_id) FROM client AS t1 INNER JOIN district AS t2 ON t1.district_id = t2.district_id WHERE t1.gender = 'F' AND STRFTIME('%Y', t1.birth_date) < '1950' AND t2.a2 = 'Sokolov'",
    "101": "SELECT account_id FROM trans WHERE date = (SELECT MIN(date) AS min_date FROM trans WHERE STRFTIME('%Y', date) = '1995')",
    "102": "SELECT DISTINCT account.account_id FROM account INNER JOIN trans ON account.account_id = trans.account_id WHERE STRFTIME('%Y', account.date) < '1997' GROUP BY account.account_id HAVING MAX(trans.balance) > 3000",
    "103": "SELECT disp.client_id FROM disp INNER JOIN card ON disp.disp_id = card.disp_id WHERE card.issued = '1994-03-03'",
    "104": "SELECT t2.date FROM trans AS t1 INNER JOIN account AS t2 ON t1.account_id = t2.account_id WHERE t1.amount = 840 AND t1.date = '1998-10-14'",
    "105": "SELECT account.district_id FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.date = '1994-08-25'",
    "106": "SELECT MAX(trans.amount) AS max_transaction_amount FROM trans INNER JOIN disp ON trans.account_id = disp.account_id INNER JOIN card ON disp.disp_id = card.disp_id WHERE card.issued = '1996-10-21'",
    "107": "SELECT client.gender FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE district.a11 = (SELECT MAX(a11) FROM district) ORDER BY client.birth_date ASC LIMIT 1",
    "108": "SELECT t.amount FROM loan AS l INNER JOIN trans AS t ON l.account_id = t.account_id WHERE l.amount = (SELECT MAX(amount) FROM loan) ORDER BY t.date ASC LIMIT 1",
    "109": "SELECT COUNT(client.client_id) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE district.a2 = 'Jesenik' AND client.gender = 'F'",
    "110": "SELECT disp.disp_id FROM disp INNER JOIN trans ON disp.account_id = trans.account_id WHERE trans.amount = 5100 AND trans.date = '1998-09-02'",
    "111": "SELECT COUNT(*) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE STRFTIME('%Y', account.date) = '1996' AND district.a2 = 'Litomerice'",
    "112": "SELECT DISTINCT t4.a2 FROM client AS t1 INNER JOIN disp AS t2 ON t1.client_id = t2.client_id INNER JOIN account AS t3 ON t2.account_id = t3.account_id INNER JOIN district AS t4 ON t3.district_id = t4.district_id WHERE t1.gender = 'F' AND t1.birth_date = '1976-01-29'",
    "113": "SELECT client.birth_date FROM loan INNER JOIN disp ON loan.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE loan.amount = 98832 AND loan.date = '1996-01-03'",
    "114": "SELECT account.account_id FROM district INNER JOIN account ON district.district_id = account.district_id WHERE district.a3 = 'Prague' ORDER BY account.date ASC LIMIT 1",
    "115": "SELECT CAST(SUM(CASE WHEN client.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(client.client_id) AS male_percentage FROM client INNER JOIN district ON client.district_id = district.district_id WHERE district.a3 = 'south Bohemia' AND district.a4 = (SELECT MAX(a4) FROM district WHERE a3 = 'south Bohemia')",
    "116": "SELECT ((t2.balance - t1.balance) * 100.0 / t1.balance) AS increase_rate FROM trans AS t1 INNER JOIN trans AS t2 ON t1.account_id = t2.account_id INNER JOIN loan AS l ON t1.account_id = l.account_id WHERE t1.date = '1993-03-22' AND t2.date = '1998-12-27' AND l.date = '1993-07-05'",
    "117": "SELECT (SUM(CASE WHEN loan.status = 'A' THEN loan.amount ELSE 0 END) * 100.0 / SUM(loan.amount)) AS percentage_paid FROM loan",
    "118": "SELECT CAST(SUM(CASE WHEN status = 'C' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM loan WHERE amount < 100000",
    "119": "SELECT \"account\".\"account_id\", \"district\".\"A2\" AS district_name, \"district\".\"A3\" AS district_region FROM \"account\" INNER JOIN \"district\" ON \"account\".\"district_id\" = \"district\".\"district_id\" WHERE STRFTIME('%Y', \"account\".\"date\") = '1993' AND \"account\".\"frequency\" = 'POPLATEK PO OBRATU'",
    "120": "SELECT DISTINCT account.account_id, account.frequency FROM account INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN district ON account.district_id = district.district_id WHERE disp.type = 'OWNER' AND district.a3 = 'east Bohemia' AND STRFTIME('%Y', account.date) BETWEEN '1995' AND '2000'",
    "121": "SELECT account.account_id, account.date FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.a2 = 'Prachatice'",
    "122": "SELECT t3.a2 AS district, t3.a3 AS region FROM loan AS t1 INNER JOIN account AS t2 ON t1.account_id = t2.account_id INNER JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.loan_id = 4990",
    "123": "SELECT account.account_id, district.a2 AS district, district.a3 AS region FROM account INNER JOIN loan ON account.account_id = loan.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.amount > 300000",
    "124": "SELECT loan.loan_id, district.a3, district.a11 FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.duration = 60",
    "125": "SELECT district.a2 AS district_name, district.a3 AS state, ((district.a13 - district.a12) / district.a12) * 100 AS unemployment_rate_increment FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.status = 'D'",
    "126": "SELECT CAST(COUNT(CASE WHEN district.a2 = 'Decin' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) AS percentage FROM account INNER JOIN district ON account.district_id = district.district_id WHERE STRFTIME('%Y', account.date) = '1993'",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE'",
    "128": "SELECT district.a2, COUNT(client.client_id) AS female_account_holders FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F' GROUP BY district.district_id ORDER BY female_account_holders DESC LIMIT 9",
    "129": "SELECT d.a2 AS district_name, SUM(t.amount) AS total_withdrawals FROM trans AS t INNER JOIN account AS a ON t.account_id = a.account_id INNER JOIN district AS d ON a.district_id = d.district_id WHERE t.type = 'VYDAJ' AND STRFTIME('%Y-%m', t.date) = '1996-01' GROUP BY d.a2 ORDER BY total_withdrawals DESC LIMIT 10",
    "130": "SELECT COUNT(DISTINCT client.client_id) FROM district INNER JOIN client ON district.district_id = client.district_id INNER JOIN disp ON client.client_id = disp.client_id LEFT JOIN card ON disp.disp_id = card.disp_id WHERE district.a3 = 'South Bohemia' AND card.card_id IS NULL",
    "131": "SELECT d.a3 AS district_name FROM loan AS l INNER JOIN account AS a ON l.account_id = a.account_id INNER JOIN district AS d ON a.district_id = d.district_id WHERE l.status IN ('C', 'D') GROUP BY d.a3 ORDER BY COUNT(l.loan_id) DESC LIMIT 1",
    "132": "SELECT AVG(loan.amount) FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN loan ON disp.account_id = loan.account_id WHERE client.gender = 'M'",
    "133": "SELECT district_id, a2 FROM district ORDER BY a13 DESC LIMIT 1",
    "134": "SELECT COUNT(account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE a16 = (SELECT MAX(a16) FROM district))",
    "135": "SELECT COUNT(DISTINCT account.account_id) FROM trans INNER JOIN account ON trans.account_id = account.account_id WHERE trans.operation = 'VYBER KARTOU' AND trans.balance < 0 AND account.frequency = 'POPLATEK MESICNE'",
    "136": "SELECT COUNT(*) FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.date BETWEEN '1995-01-01' AND '1997-12-31' AND loan.amount >= 250000 AND account.frequency = 'POPLATEK MESICNE'",
    "137": "SELECT COUNT(DISTINCT loan.account_id) FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.status IN ('C', 'D') AND account.district_id = 1",
    "138": "SELECT COUNT(client_id) FROM client WHERE district_id = (SELECT district_id FROM district ORDER BY a15 DESC LIMIT 1 OFFSET 1) AND gender = 'M'",
    "139": "SELECT COUNT(*) FROM card INNER JOIN disp ON card.disp_id = disp.disp_id WHERE card.type = 'gold' AND disp.type = 'OWNER'",
    "140": "SELECT COUNT(account.account_id) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.a2 = 'Pisek'",
    "141": "SELECT DISTINCT d.a2 FROM trans AS t INNER JOIN account AS a ON t.account_id = a.account_id INNER JOIN district AS d ON a.district_id = d.district_id WHERE t.amount > 10000 AND STRFTIME('%Y', t.date) = '1997'",
    "142": "SELECT DISTINCT o.account_id FROM \"order\" AS o JOIN account AS a ON o.account_id = a.account_id JOIN district AS d ON a.district_id = d.district_id WHERE o.k_symbol = 'SIPO' AND d.a2 = 'Pisek'",
    "143": "SELECT DISTINCT disp.account_id FROM card INNER JOIN disp ON card.disp_id = disp.disp_id WHERE card.type = 'gold'",
    "144": "SELECT COALESCE(AVG(monthly_withdrawal), 0) AS average_monthly_withdrawal FROM (SELECT account_id, STRFTIME('%Y-%m', date) AS month, SUM(amount) AS monthly_withdrawal FROM trans WHERE STRFTIME('%Y', date) = '2021' AND operation = 'VYBER KARTOU' GROUP BY account_id, month) AS monthly_withdrawals",
    "145": "SELECT DISTINCT disp.client_id FROM disp INNER JOIN trans ON disp.account_id = trans.account_id WHERE STRFTIME('%Y', trans.date) = '1998' AND trans.operation = 'VYBER KARTOU' AND trans.amount < (SELECT AVG(amount) FROM trans WHERE STRFTIME('%Y', date) = '1998' AND operation = 'VYBER KARTOU')",
    "146": "SELECT DISTINCT client.client_id FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN card ON disp.disp_id = card.disp_id INNER JOIN loan ON disp.account_id = loan.account_id WHERE client.gender = 'F'",
    "147": "SELECT COUNT(account.account_id) FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE client.gender = 'F' AND district.a3 = 'south Bohemia'",
    "148": "SELECT DISTINCT account.account_id FROM district INNER JOIN account ON district.district_id = account.district_id INNER JOIN disp ON account.account_id = disp.account_id WHERE district.a2 = 'Tabor' AND disp.type = 'OWNER'",
    "149": "SELECT DISTINCT disp.type FROM disp INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE disp.type <> 'OWNER' AND district.a11 > 8000 AND district.a11 <= 9000",
    "150": "SELECT COUNT(DISTINCT t2.account_id) FROM district AS t1 INNER JOIN account AS t2 ON t1.district_id = t2.district_id INNER JOIN trans AS t3 ON t2.account_id = t3.account_id WHERE t1.a3 = 'north Bohemia' AND t3.bank = 'AB'",
    "151": "SELECT DISTINCT t3.a2 FROM trans AS t1 INNER JOIN account AS t2 ON t1.account_id = t2.account_id INNER JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.type = 'VYDAJ'",
    "152": "SELECT AVG(\"district\".\"A15\") AS average_crimes FROM \"district\" INNER JOIN \"account\" ON \"district\".\"district_id\" = \"account\".\"district_id\" WHERE \"district\".\"A15\" > 4000 AND STRFTIME('%Y', \"account\".\"date\") >= '1997'",
    "153": "SELECT COUNT(card.card_id) FROM card INNER JOIN disp ON card.disp_id = disp.disp_id WHERE card.type = 'classic' AND disp.type = 'OWNER'",
    "154": "SELECT COUNT(client.client_id) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'M' AND district.a2 = 'Hl.m. Praha'",
    "155": "SELECT CAST(SUM(CASE WHEN type = 'gold' AND STRFTIME('%Y', issued) < '1998' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percent_gold_cards FROM card",
    "156": "SELECT c.client_id, c.gender, c.birth_date FROM client AS c INNER JOIN disp AS d ON c.client_id = d.client_id INNER JOIN loan AS l ON d.account_id = l.account_id WHERE l.amount = (SELECT MAX(amount) FROM loan)",
    "157": "SELECT t2.a15 FROM account AS t1 INNER JOIN district AS t2 ON t1.district_id = t2.district_id WHERE t1.account_id = 532",
    "158": "SELECT t2.district_id FROM \"order\" AS t1 INNER JOIN \"account\" AS t2 ON t1.account_id = t2.account_id WHERE t1.order_id = 33333",
    "159": "SELECT t.amount FROM client AS c INNER JOIN disp AS d ON c.client_id = d.client_id INNER JOIN trans AS t ON d.account_id = t.account_id WHERE c.client_id = 3356 AND t.operation = 'VYBER'",
    "160": "SELECT COUNT(DISTINCT account.account_id) FROM account INNER JOIN loan ON account.account_id = loan.account_id WHERE account.frequency = 'POPLATEK TYDNE' AND loan.amount < 200000",
    "161": "SELECT card.type FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN card ON disp.disp_id = card.disp_id WHERE client.client_id = 13539",
    "162": "SELECT district.a3 FROM client INNER JOIN district ON client.district_id = district.district_id WHERE client.client_id = 3541",
    "163": "SELECT district.a2 FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.status = 'A' GROUP BY district.a2 ORDER BY COUNT(account.account_id) DESC LIMIT 1",
    "164": "SELECT t3.client_id FROM \"order\" AS t1 INNER JOIN disp AS t2 ON t1.account_id = t2.account_id INNER JOIN client AS t3 ON t2.client_id = t3.client_id WHERE t1.order_id = 32423",
    "165": "SELECT t.* FROM trans AS t INNER JOIN account AS a ON t.account_id = a.account_id INNER JOIN district AS d ON a.district_id = d.district_id WHERE d.district_id = 5",
    "166": "SELECT COUNT(account.account_id) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.a2 = 'Jesenik'",
    "167": "SELECT DISTINCT disp.client_id FROM card INNER JOIN disp ON card.disp_id = disp.disp_id WHERE card.type = 'junior' AND card.issued >= '1997-01-01'",
    "168": "SELECT (COUNT(IIF(client.gender = 'F', 1, NULL)) * 100.0 / COUNT(client.client_id)) AS percentage_female_clients FROM client INNER JOIN district ON client.district_id = district.district_id WHERE district.a11 > 10000",
    "169": "SELECT ((SUM(CASE WHEN STRFTIME('%Y', loan.date) = '1997' THEN loan.amount ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', loan.date) = '1996' THEN loan.amount ELSE 0 END)) / SUM(CASE WHEN STRFTIME('%Y', loan.date) = '1996' THEN loan.amount ELSE 0 END)) * 100 AS growth_rate FROM loan INNER JOIN disp ON loan.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'M' AND STRFTIME('%Y', loan.date) IN ('1996', '1997')",
    "170": "SELECT COUNT(*) FROM \"trans\" WHERE \"operation\" = 'VYBER KARTOU' AND STRFTIME('%Y', \"trans\".\"date\") > '1995'",
    "171": "SELECT SUM(CASE WHEN a3 = 'north Bohemia' THEN a16 ELSE 0 END) - SUM(CASE WHEN a3 = 'east Bohemia' THEN a16 ELSE 0 END) AS crime_difference FROM district",
    "172": "SELECT COUNT(*) FROM disp WHERE account_id BETWEEN 1 AND 10 AND type IN ('OWNER', 'DISPONENT')",
    "173": "SELECT COUNT(*) AS request_frequency, SUM(amount) AS total_debited_amount FROM trans WHERE account_id = 3 AND k_symbol = 'SLUZBY'",
    "174": "SELECT STRFTIME('%Y', birth_date) FROM client WHERE client_id = 130",
    "175": "SELECT COUNT(DISTINCT account.account_id) FROM account INNER JOIN disp ON account.account_id = disp.account_id WHERE disp.type = 'OWNER' AND account.frequency = 'POPLATEK PO OBRATU'",
    "176": "SELECT loan.amount, loan.status FROM loan INNER JOIN disp ON loan.account_id = disp.account_id WHERE disp.client_id = 992",
    "177": "SELECT SUM(trans.balance) AS sum_balance, client.gender FROM trans INNER JOIN disp ON trans.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE disp.client_id = 4 AND trans.trans_id > 851",
    "178": "SELECT card.type FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN card ON disp.disp_id = card.disp_id WHERE client.client_id = 9",
    "179": "SELECT SUM(trans.amount) AS total_amount FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN trans ON disp.account_id = trans.account_id WHERE client.client_id = 617 AND STRFTIME('%Y', trans.date) = '1998'",
    "180": "SELECT DISTINCT client.client_id FROM client INNER JOIN district ON client.district_id = district.district_id WHERE client.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND district.a3 = 'east Bohemia'",
    "181": "SELECT client.client_id FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN loan ON disp.account_id = loan.account_id WHERE client.gender = 'F' ORDER BY loan.amount DESC LIMIT 3",
    "182": "SELECT COUNT(DISTINCT c.client_id) FROM client AS c INNER JOIN disp AS d ON c.client_id = d.client_id INNER JOIN trans AS t ON d.account_id = t.account_id WHERE c.gender = 'M' AND STRFTIME('%Y', c.birth_date) BETWEEN '1974' AND '1976' AND t.k_symbol = 'SIPO' AND t.amount > 4000",
    "183": "SELECT COUNT(*) FROM account AS t1 INNER JOIN district AS t2 ON t1.district_id = t2.district_id WHERE STRFTIME('%Y', t1.\"date\") > '1996' AND t2.a2 = 'Beroun'",
    "184": "SELECT COUNT(DISTINCT client.client_id) FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN card ON disp.disp_id = card.disp_id WHERE client.gender = 'F' AND card.type = 'junior'",
    "185": "SELECT CAST(SUM(CASE WHEN t1.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM client AS t1 INNER JOIN disp AS t2 ON t1.client_id = t2.client_id INNER JOIN district AS t3 ON t1.district_id = t3.district_id WHERE t3.a3 = 'Prague'",
    "186": "SELECT CAST(COUNT(CASE WHEN client.gender = 'M' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) AS percentage FROM account INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE account.frequency = 'POPLATEK TYDNE'",
    "187": "SELECT COUNT(DISTINCT disp.client_id) FROM disp INNER JOIN account ON disp.account_id = account.account_id WHERE disp.type = 'OWNER' AND account.frequency = 'POPLATEK TYDNE'",
    "188": "SELECT t1.account_id FROM account AS t1 INNER JOIN loan AS t2 ON t1.account_id = t2.account_id WHERE t2.duration > 24 AND STRFTIME('%Y', t1.date) < '1997' AND t2.amount = (SELECT MIN(amount) FROM loan WHERE duration > 24 AND account_id IN (SELECT account_id FROM account WHERE STRFTIME('%Y', date) < '1997'))",
    "189": "SELECT disp.account_id FROM disp INNER JOIN client ON disp.client_id = client.client_id INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F' AND client.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F' AND district_id = (SELECT district_id FROM district ORDER BY a11 ASC LIMIT 1)) AND district.a11 = (SELECT MIN(a11) FROM district)",
    "190": "SELECT COUNT(DISTINCT client.client_id) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE STRFTIME('%Y', client.birth_date) = '1920' AND district.a3 = 'east Bohemia'",
    "191": "SELECT COUNT(loan.account_id) FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.duration = 24 AND account.frequency = 'POPLATEK TYDNE'",
    "192": "SELECT AVG(loan.amount) FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.status IN ('C', 'D') AND account.frequency = 'POPLATEK PO OBRATU'",
    "193": "SELECT client.client_id, client.district_id FROM client INNER JOIN disp ON client.client_id = disp.client_id WHERE disp.type = 'OWNER'",
    "194": "SELECT c.client_id, STRFTIME('%Y', 'now') - STRFTIME('%Y', c.birth_date) AS age FROM client AS c INNER JOIN disp AS d ON c.client_id = d.client_id INNER JOIN card AS cd ON d.disp_id = cd.disp_id WHERE cd.type = 'gold' AND d.type = 'OWNER'",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1",
    "196": "SELECT COUNT(DISTINCT t1.molecule_id) FROM (SELECT molecule_id FROM molecule WHERE label = '-') AS t1 INNER JOIN (SELECT molecule_id FROM atom WHERE element = 'cl') AS t2 ON t1.molecule_id = t2.molecule_id",
    "197": "SELECT AVG(CASE WHEN atom.element = 'o' THEN 1.0 ELSE 0 END) AS avg_oxygen_atoms FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE bond.bond_type = '-'",
    "198": "SELECT CAST(SUM(IIF(bond.bond_type = '-', 1, 0)) AS REAL) / COUNT(DISTINCT molecule.molecule_id) AS average_single_bonded_carcinogenic_molecules FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE molecule.label = '+'",
    "199": "SELECT COUNT(DISTINCT molecule.molecule_id) FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'na' AND molecule.label = '-'",
    "200": "SELECT DISTINCT m.molecule_id FROM molecule AS m INNER JOIN bond AS b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '#' AND m.label = '+'",
    "201": "SELECT CAST(SUM(CASE WHEN atom.element = 'c' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(atom.atom_id) AS carbon_percentage FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '='",
    "202": "SELECT COUNT(bond_id) FROM bond WHERE bond_type = '#'",
    "203": "SELECT COUNT(atom_id) FROM atom WHERE element <> 'br'",
    "204": "SELECT COUNT(molecule_id) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND label = '+'",
    "205": "SELECT DISTINCT molecule_id FROM atom WHERE element = 'c'",
    "206": "SELECT DISTINCT a1.element, a2.element FROM connected AS c INNER JOIN atom AS a1 ON c.atom_id = a1.atom_id INNER JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE c.bond_id = 'TR004_8_9'",
    "207": "SELECT DISTINCT t3.element FROM bond AS t1 INNER JOIN connected AS t2 ON t1.bond_id = t2.bond_id INNER JOIN atom AS t3 ON t2.atom_id = t3.atom_id WHERE t1.bond_type = '='",
    "208": "SELECT molecule.label FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'h' GROUP BY molecule.label ORDER BY COUNT(molecule.label) DESC LIMIT 1",
    "209": "SELECT DISTINCT bond.bond_type FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2 INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'cl'",
    "210": "SELECT connected.atom_id, connected.atom_id2 FROM connected INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '-'",
    "211": "SELECT DISTINCT c.atom_id, c.atom_id2 FROM molecule AS m INNER JOIN atom AS a1 ON m.molecule_id = a1.molecule_id INNER JOIN atom AS a2 ON m.molecule_id = a2.molecule_id INNER JOIN connected AS c ON a1.atom_id = c.atom_id AND a2.atom_id = c.atom_id2 WHERE m.label = '-'",
    "212": "SELECT atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '-' GROUP BY atom.element ORDER BY COUNT(atom.element) ASC LIMIT 1",
    "213": "SELECT DISTINCT bond.bond_type FROM connected INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE (connected.atom_id = 'TR004_8' AND connected.atom_id2 = 'TR004_20') OR (connected.atom_id = 'TR004_20' AND connected.atom_id2 = 'TR004_8')",
    "214": "SELECT DISTINCT label FROM molecule WHERE NOT molecule_id IN (SELECT molecule_id FROM atom WHERE element = 'sn')",
    "215": "SELECT COUNT(DISTINCT a.atom_id) FROM atom AS a INNER JOIN connected AS c ON a.atom_id = c.atom_id INNER JOIN bond AS b ON c.bond_id = b.bond_id WHERE a.element IN ('i', 's') AND b.bond_type = '-'",
    "216": "SELECT c.atom_id, c.atom_id2 FROM bond AS b INNER JOIN connected AS c ON b.bond_id = c.bond_id WHERE b.bond_type = '#'",
    "217": "SELECT DISTINCT t2.atom_id2 FROM atom AS t1 INNER JOIN connected AS t2 ON t1.atom_id = t2.atom_id WHERE t1.molecule_id = 'TR181' UNION SELECT DISTINCT t2.atom_id FROM atom AS t1 INNER JOIN connected AS t2 ON t1.atom_id = t2.atom_id2 WHERE t1.molecule_id = 'TR181'",
    "218": "SELECT CAST(SUM(CASE WHEN t2.molecule_id IS NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT t1.molecule_id) AS percentage FROM (SELECT DISTINCT molecule_id FROM molecule WHERE label = '+') AS t1 LEFT JOIN (SELECT DISTINCT molecule_id FROM atom WHERE element = 'f') AS t2 ON t1.molecule_id = t2.molecule_id",
    "219": "SELECT CAST(SUM(CASE WHEN molecule.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(bond.bond_id) AS percent FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '#'",
    "220": "SELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element ASC LIMIT 3",
    "221": "SELECT connected.atom_id, connected.atom_id2 FROM connected WHERE connected.bond_id = 'TR001_2_6'",
    "222": "SELECT SUM(IIF(molecule.label = '+', 1, 0)) - SUM(IIF(molecule.label = '-', 1, 0)) AS difference FROM molecule",
    "223": "SELECT atom_id, atom_id2 FROM connected WHERE bond_id = 'TR000_2_5'",
    "224": "SELECT bond_id FROM connected WHERE atom_id2 = 'TR000_2'",
    "225": "SELECT DISTINCT molecule.label FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '=' ORDER BY molecule.molecule_id ASC LIMIT 5",
    "226": "SELECT ROUND(SUM(IIF(bond.bond_type = '=', 1, 0)) * 100.0 / COUNT(bond.bond_id), 5) AS percentage FROM bond WHERE bond.molecule_id = 'TR008'",
    "227": "SELECT ROUND(SUM(CASE WHEN molecule.label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(molecule.molecule_id), 3) AS percentage FROM molecule",
    "228": "SELECT ROUND(CAST(SUM(element = 'h') AS REAL) * 100 / COUNT(atom_id), 4) FROM atom WHERE molecule_id = 'TR206'",
    "229": "SELECT bond_type FROM bond WHERE molecule_id = 'TR000'",
    "230": "SELECT DISTINCT atom.element, molecule.label FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.molecule_id = 'TR060'",
    "231": "SELECT b.bond_type, m.label FROM bond AS b INNER JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE b.molecule_id = 'TR010' GROUP BY b.bond_type ORDER BY COUNT(b.bond_type) DESC LIMIT 1",
    "232": "SELECT DISTINCT m.molecule_id FROM bond AS b INNER JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '-' AND m.label = '-' ORDER BY m.molecule_id ASC LIMIT 3",
    "233": "SELECT bond.bond_id FROM bond WHERE bond.molecule_id = 'TR006' ORDER BY bond.bond_id ASC LIMIT 2",
    "234": "SELECT COUNT(*) FROM connected WHERE atom_id = 'TR009_12' OR atom_id2 = 'TR009_12'",
    "235": "SELECT COUNT(DISTINCT molecule.molecule_id) FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '+' AND atom.element = 'br'",
    "236": "SELECT bond.bond_type, connected.atom_id, connected.atom_id2 FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.bond_id = 'TR001_6_9' GROUP BY bond.bond_type, connected.atom_id, connected.atom_id2",
    "237": "SELECT molecule.molecule_id, molecule.label FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.atom_id = 'TR001_10'",
    "238": "SELECT COUNT(DISTINCT \"bond\".\"molecule_id\") AS molecule_count FROM \"bond\" WHERE \"bond\".\"bond_type\" = '#'",
    "239": "SELECT COUNT(*) FROM connected WHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19'",
    "240": "SELECT element FROM atom WHERE molecule_id = 'TR004'",
    "241": "SELECT COUNT(*) FROM molecule WHERE label = '-'",
    "242": "SELECT DISTINCT molecule.molecule_id FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE SUBSTRING(atom.atom_id, 7, 2) BETWEEN '21' AND '25' AND molecule.label = '+'",
    "243": "SELECT DISTINCT c.bond_id FROM connected AS c INNER JOIN atom AS a1 ON c.atom_id = a1.atom_id INNER JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'p' AND a2.element = 'n'",
    "244": "SELECT m.label FROM molecule AS m INNER JOIN (SELECT molecule_id, COUNT(*) AS double_bond_count FROM bond WHERE bond_type = '=' GROUP BY molecule_id ORDER BY double_bond_count DESC LIMIT 1) AS b ON m.molecule_id = b.molecule_id",
    "245": "SELECT CAST(COUNT(c.bond_id) AS REAL) / COUNT(DISTINCT a.atom_id) AS average_bonds FROM atom AS a INNER JOIN connected AS c ON a.atom_id = c.atom_id WHERE a.element = 'i'",
    "246": "SELECT bond.bond_type, bond.bond_id FROM connected INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE SUBSTRING(connected.atom_id, 7, 2) + 0 = 45 OR SUBSTRING(connected.atom_id2, 7, 2) + 0 = 45",
    "247": "SELECT element FROM atom WHERE NOT atom_id IN (SELECT atom_id FROM connected)",
    "248": "SELECT DISTINCT c.atom_id, c.atom_id2 FROM connected AS c INNER JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.molecule_id = 'TR041' AND b.bond_type = '#'",
    "249": "SELECT t1.element AS element1, t2.element AS element2 FROM atom AS t1 JOIN connected AS c ON t1.atom_id = c.atom_id JOIN atom AS t2 ON t2.atom_id = c.atom_id2 WHERE c.bond_id = 'TR144_8_19'",
    "250": "SELECT m.molecule_id FROM molecule AS m INNER JOIN bond AS b ON m.molecule_id = b.molecule_id WHERE m.label = '+' AND b.bond_type = '=' GROUP BY m.molecule_id ORDER BY COUNT(b.bond_id) DESC LIMIT 1",
    "251": "SELECT atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' GROUP BY atom.element ORDER BY COUNT(atom.element) ASC LIMIT 1",
    "252": "SELECT DISTINCT c.atom_id2 FROM atom AS a INNER JOIN connected AS c ON a.atom_id = c.atom_id WHERE a.element = 'pb'",
    "253": "SELECT DISTINCT a1.element, a2.element FROM bond AS b INNER JOIN connected AS c ON b.bond_id = c.bond_id INNER JOIN atom AS a1 ON c.atom_id = a1.atom_id INNER JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = '#'",
    "254": "SELECT CAST((SELECT COUNT(*) FROM connected AS c INNER JOIN atom AS a ON c.atom_id = a.atom_id INNER JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE a.element || '-' || a2.element = (SELECT a.element || '-' || a2.element FROM connected AS c INNER JOIN atom AS a ON c.atom_id = a.atom_id INNER JOIN atom AS a2 ON c.atom_id2 = a2.atom_id GROUP BY a.element, a2.element ORDER BY COUNT(*) DESC LIMIT 1)) AS REAL) * 100 / (SELECT COUNT(*) FROM connected)",
    "255": "SELECT ROUND(CAST(SUM(CASE WHEN molecule.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(bond.bond_id), 5) AS proportion FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '-'",
    "256": "SELECT COUNT(*) FROM atom WHERE element IN ('c', 'h')",
    "257": "SELECT atom_id2 FROM connected JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.element = 's'",
    "258": "SELECT DISTINCT bond.bond_type FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'sn'",
    "259": "SELECT COUNT(DISTINCT atom.element) AS element_count FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE bond.bond_type = '-'",
    "260": "SELECT COUNT(DISTINCT a.atom_id) FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON b.bond_id = c.bond_id WHERE b.bond_type = '#' AND a.element IN ('p', 'br')",
    "261": "SELECT DISTINCT bond.bond_id FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE molecule.label = '+'",
    "262": "SELECT DISTINCT molecule.molecule_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '-' AND molecule.label = '-'",
    "263": "SELECT CAST(SUM(CASE WHEN atom.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(atom.atom_id) AS percent FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '-'",
    "264": "SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002')",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-'",
    "266": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '+' AND molecule_id BETWEEN 'TR000' AND 'TR030'",
    "267": "SELECT bond_type FROM bond WHERE molecule_id BETWEEN 'TR000' AND 'TR050'",
    "268": "SELECT a1.element AS element1, a2.element AS element2 FROM connected AS c INNER JOIN atom AS a1 ON c.atom_id = a1.atom_id INNER JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE c.bond_id = 'TR001_10_11'",
    "269": "SELECT COUNT(DISTINCT connected.bond_id) FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id WHERE atom.element = 'i'",
    "270": "SELECT molecule.label FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE atom.element = 'ca' GROUP BY molecule.label ORDER BY COUNT(*) DESC LIMIT 1",
    "271": "SELECT CASE WHEN EXISTS(SELECT 1 FROM connected AS c1 INNER JOIN atom AS a1 ON c1.atom_id = a1.atom_id WHERE c1.bond_id = 'TR001_1_8' AND a1.element = 'cl') AND EXISTS(SELECT 1 FROM connected AS c2 INNER JOIN atom AS a2 ON c2.atom_id = a2.atom_id WHERE c2.bond_id = 'TR001_1_8' AND a2.element = 'c') THEN 'Yes' ELSE 'No' END AS has_cl_and_c",
    "272": "SELECT DISTINCT m.molecule_id FROM molecule AS m INNER JOIN atom AS a ON m.molecule_id = a.molecule_id INNER JOIN connected AS c ON a.atom_id = c.atom_id INNER JOIN bond AS b ON c.bond_id = b.bond_id WHERE m.label = '-' AND a.element = 'c' AND b.bond_type = '#' LIMIT 2",
    "273": "SELECT CAST(SUM(CASE WHEN atom.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(atom.atom_id) AS percentage FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '+'",
    "274": "SELECT element FROM atom WHERE molecule_id = 'TR001'",
    "275": "SELECT DISTINCT molecule_id FROM bond WHERE bond_type = '='",
    "276": "SELECT DISTINCT t2.atom_id, t2.atom_id2 FROM bond AS t1 INNER JOIN connected AS t2 ON t1.bond_id = t2.bond_id WHERE t1.bond_type = '#'",
    "277": "SELECT DISTINCT t1.element FROM atom AS t1 INNER JOIN connected AS t2 ON t1.atom_id = t2.atom_id WHERE t2.bond_id = 'TR000_1_2' UNION SELECT DISTINCT t1.element FROM atom AS t1 INNER JOIN connected AS t2 ON t1.atom_id = t2.atom_id2 WHERE t2.bond_id = 'TR000_1_2'",
    "278": "SELECT COUNT(DISTINCT molecule.molecule_id) FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '-' AND molecule.label = '-'",
    "279": "SELECT molecule.label FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE bond.bond_id = 'TR001_10_11'",
    "280": "SELECT bond.bond_id, molecule.label FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '#'",
    "281": "SELECT atom.element, COUNT(*) FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' AND SUBSTRING(atom.atom_id, 7, 1) = '4' GROUP BY atom.element",
    "282": "SELECT CAST(COUNT(CASE WHEN atom.element = 'h' THEN 1 ELSE NULL END) AS REAL) / COUNT(atom.element) AS ratio, molecule.label FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.molecule_id = 'TR006'",
    "283": "SELECT molecule.label FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE atom.element = 'ca'",
    "284": "SELECT DISTINCT bond.bond_type FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'c'",
    "285": "SELECT DISTINCT t3.element FROM connected AS t1 INNER JOIN atom AS t2 ON t1.atom_id = t2.atom_id INNER JOIN atom AS t3 ON t1.atom_id2 = t3.atom_id WHERE t1.bond_id = 'TR001_10_11'",
    "286": "SELECT CAST(COUNT(DISTINCT CASE WHEN bond.bond_type = '#' THEN bond.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT molecule.molecule_id) AS percentage FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id",
    "287": "SELECT CAST(SUM(bond_type = '=') AS REAL) * 100 / COUNT(*) AS percent FROM bond WHERE molecule_id = 'TR047'",
    "288": "SELECT molecule.label FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.atom_id = 'TR001_1'",
    "289": "SELECT label FROM molecule WHERE molecule_id = 'TR151'",
    "290": "SELECT DISTINCT atom.element FROM atom WHERE atom.molecule_id = 'TR151'",
    "291": "SELECT COUNT(*) FROM molecule WHERE label = '+'",
    "292": "SELECT atom_id FROM atom WHERE element = 'c' AND CAST(SUBSTRING(molecule_id, 3, 3) AS INTEGER) BETWEEN 10 AND 50",
    "293": "SELECT COUNT(atom.atom_id) FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+'",
    "294": "SELECT bond.bond_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '=' AND molecule.label = '+'",
    "295": "SELECT COUNT(atom_id) FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'h' AND molecule.label = '+'",
    "296": "SELECT DISTINCT bond.molecule_id FROM connected INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE connected.bond_id = 'TR000_1_2' AND (connected.atom_id = 'TR000_1' OR connected.atom_id2 = 'TR000_1')",
    "297": "SELECT DISTINCT atom.atom_id FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'c' AND molecule.label = '-'",
    "298": "SELECT CAST(SUM(CASE WHEN m.label = '+' AND a.element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(m.molecule_id) AS percentage FROM molecule AS m INNER JOIN atom AS a ON m.molecule_id = a.molecule_id",
    "299": "SELECT label FROM molecule WHERE molecule_id = 'TR124'",
    "300": "SELECT atom_id FROM atom WHERE molecule_id = 'TR186'",
    "301": "SELECT bond_type FROM bond WHERE bond_id = 'TR007_4_19'",
    "302": "SELECT DISTINCT t2.element FROM connected AS t1 INNER JOIN atom AS t2 ON t1.atom_id = t2.atom_id OR t1.atom_id2 = t2.atom_id WHERE t1.bond_id = 'TR001_2_4'",
    "303": "SELECT COUNT(CASE WHEN t1.bond_type = '=' THEN 1 ELSE NULL END) AS double_bonds, t2.label FROM bond AS t1 INNER JOIN molecule AS t2 ON t1.molecule_id = t2.molecule_id WHERE t1.molecule_id = 'TR006'",
    "304": "SELECT m.molecule_id, a.element FROM molecule AS m INNER JOIN atom AS a ON m.molecule_id = a.molecule_id WHERE m.label = '+'",
    "305": "SELECT bond.bond_id, connected.atom_id, connected.atom_id2 FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.bond_type = '-'",
    "306": "SELECT DISTINCT a.element FROM bond AS b INNER JOIN connected AS c ON b.bond_id = c.bond_id INNER JOIN atom AS a ON c.atom_id = a.atom_id WHERE b.bond_type = '#'",
    "307": "SELECT DISTINCT t1.element, t2.element FROM atom AS t1 INNER JOIN connected AS c ON t1.atom_id = c.atom_id INNER JOIN atom AS t2 ON t2.atom_id = c.atom_id2 WHERE c.bond_id = 'TR000_2_3' ORDER BY t1.element, t2.element",
    "308": "SELECT COUNT(DISTINCT c.atom_id || c.atom_id2) AS bond_count FROM atom AS a INNER JOIN connected AS c ON a.atom_id = c.atom_id WHERE a.element = 'cl'",
    "309": "SELECT atom.atom_id, COUNT(DISTINCT bond.bond_type) AS bond_type_count FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = 'TR346' GROUP BY atom.atom_id",
    "310": "SELECT COUNT(DISTINCT b.molecule_id) AS total_double_bonds, COUNT(DISTINCT CASE WHEN m.label = '+' THEN b.molecule_id END) AS carcinogenic_double_bonds FROM bond AS b INNER JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '='",
    "311": "SELECT COUNT(*) FROM molecule WHERE NOT molecule_id IN (SELECT molecule_id FROM atom WHERE element = 's') AND NOT molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '=')",
    "312": "SELECT molecule.label FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE bond.bond_id = 'TR001_2_4'",
    "313": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id = 'TR001'",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-'",
    "315": "SELECT DISTINCT molecule.molecule_id FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'cl' AND molecule.label = '+'",
    "316": "SELECT DISTINCT molecule.molecule_id FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'c' AND molecule.label = '-'",
    "317": "SELECT SUM(CASE WHEN \"molecule\".\"label\" = '+' AND \"atom\".\"element\" = 'cl' THEN 1 ELSE 0 END) * 100.0 / COUNT(\"molecule\".\"molecule_id\") AS percentage FROM \"atom\" INNER JOIN \"molecule\" ON \"atom\".\"molecule_id\" = \"molecule\".\"molecule_id\"",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7'",
    "319": "SELECT COUNT(DISTINCT COALESCE(atom1.element, atom2.element)) AS unique_elements FROM connected INNER JOIN atom AS atom1 ON connected.atom_id = atom1.atom_id INNER JOIN atom AS atom2 ON connected.atom_id2 = atom2.atom_id WHERE connected.bond_id = 'TR001_3_4'",
    "320": "SELECT bond.bond_type FROM connected INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE connected.atom_id = 'TR000_1' AND connected.atom_id2 = 'TR000_2'",
    "321": "SELECT DISTINCT molecule_id FROM atom WHERE atom_id IN ('TR000_2', 'TR000_4')",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1'",
    "323": "SELECT label FROM molecule WHERE molecule_id = 'TR000'",
    "324": "SELECT (SUM(CASE WHEN bond.bond_type = '-' THEN 1 ELSE 0 END) * 100.0 / COUNT(bond.bond_id)) AS percentage FROM bond",
    "325": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule AS m INNER JOIN atom AS a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND a.element = 'n'",
    "326": "SELECT DISTINCT atom.molecule_id FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 's' AND bond.bond_type = '='",
    "327": "SELECT m.molecule_id FROM molecule AS m INNER JOIN atom AS a ON m.molecule_id = a.molecule_id WHERE m.label = '-' GROUP BY m.molecule_id HAVING COUNT(a.atom_id) > 5",
    "328": "SELECT DISTINCT atom.element FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '=' AND bond.molecule_id = 'TR024'",
    "329": "SELECT m.molecule_id FROM molecule AS m INNER JOIN atom AS a ON m.molecule_id = a.molecule_id WHERE m.label = '+' GROUP BY m.molecule_id ORDER BY COUNT(a.atom_id) DESC LIMIT 1",
    "330": "SELECT (CAST(SUM(CASE WHEN molecule.label = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT molecule.molecule_id)) * 100.0 AS percentage FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE atom.element = 'h' AND bond.bond_type = '#'",
    "331": "SELECT COUNT(*) FROM molecule WHERE label = '+'",
    "332": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '-' AND molecule_id BETWEEN 'TR004' AND 'TR010'",
    "333": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id = 'TR008' AND element = 'c'",
    "334": "SELECT atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.atom_id = 'TR004_7' AND molecule.label = '-'",
    "335": "SELECT COUNT(DISTINCT atom.molecule_id) FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'o' AND bond.bond_type = '='",
    "336": "SELECT COUNT(DISTINCT molecule.molecule_id) FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '#' AND molecule.label = '-'",
    "337": "SELECT atom.element, bond.bond_type FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = 'TR002' AND bond.molecule_id = 'TR002'",
    "338": "SELECT DISTINCT a.atom_id FROM atom AS a INNER JOIN connected AS c ON a.atom_id = c.atom_id INNER JOIN bond AS b ON c.bond_id = b.bond_id WHERE a.element = 'c' AND b.molecule_id = 'TR012' AND b.bond_type = '='",
    "339": "SELECT DISTINCT atom.atom_id FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '+' AND atom.element = 'o'",
    "340": "SELECT \"name\" FROM \"cards\" WHERE NOT \"cardKingdomFoilId\" IS NULL AND NOT \"cardKingdomId\" IS NULL",
    "341": "SELECT id FROM cards WHERE bordercolor = 'borderless' AND (cardkingdomid IS NULL OR cardkingdomfoilid IS NULL)",
    "342": "SELECT name FROM cards WHERE faceconvertedmanacost = (SELECT MAX(faceconvertedmanacost) FROM cards)",
    "343": "SELECT name FROM cards WHERE frameversion = '2015' AND edhrecrank < 100",
    "344": "SELECT DISTINCT c.name FROM cards AS c INNER JOIN legalities AS l ON c.uuid = l.uuid WHERE c.rarity = 'mythic' AND l.format = 'gladiator' AND l.status = 'Banned'",
    "345": "SELECT t2.status FROM cards AS t1 INNER JOIN legalities AS t2 ON t1.uuid = t2.uuid WHERE t1.types = 'Artifact' AND t1.side IS NULL AND t2.format = 'vintage'",
    "346": "SELECT c.id, c.artist FROM cards AS c INNER JOIN legalities AS l ON c.uuid = l.uuid WHERE (c.power = '*' OR c.power IS NULL) AND l.format = 'commander' AND l.status = 'Legal'",
    "347": "SELECT cards.id, rulings.text, cards.hascontentwarning FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Stephen Daniele'",
    "348": "SELECT rulings.text FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.name = 'Sublime Epiphany' AND cards.number = '74s'",
    "349": "SELECT cards.name, cards.artist, cards.ispromo FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid GROUP BY cards.uuid ORDER BY COUNT(rulings.id) DESC LIMIT 1",
    "350": "SELECT DISTINCT foreign_data.language FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.name = 'Annul' AND cards.number = '29'",
    "351": "SELECT DISTINCT cards.name FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Japanese'",
    "352": "SELECT CAST(SUM(CASE WHEN language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM foreign_data",
    "353": "SELECT sets.name, sets.totalsetsize FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE set_translations.language = 'Italian'",
    "354": "SELECT COUNT(DISTINCT type) FROM cards WHERE artist = 'Aaron Boyd'",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy'",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '*'",
    "357": "SELECT DISTINCT promotypes FROM cards WHERE name = 'Duress'",
    "358": "SELECT cards.bordercolor FROM cards WHERE cards.name = 'Ancestor''s Chosen'",
    "359": "SELECT originaltype FROM cards WHERE name = 'Ancestor''s Chosen'",
    "360": "SELECT DISTINCT set_translations.language FROM cards INNER JOIN set_translations ON cards.setcode = set_translations.setcode WHERE cards.name = 'Angel of Mercy'",
    "361": "SELECT COUNT(*) FROM cards AS t1 INNER JOIN legalities AS t2 ON t1.uuid = t2.uuid WHERE t2.status = 'restricted' AND t1.istextless = 0",
    "362": "SELECT r.text FROM rulings AS r INNER JOIN cards AS c ON r.uuid = c.uuid WHERE c.name = 'Condemn'",
    "363": "SELECT COUNT(cards.id) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'restricted' AND cards.isstarter = 1",
    "364": "SELECT legalities.status FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.name = 'Cloudchaser Eagle'",
    "365": "SELECT type FROM cards WHERE name = 'Benalish Knight'",
    "366": "SELECT t2.format FROM cards AS t1 INNER JOIN legalities AS t2 ON t1.uuid = t2.uuid WHERE t1.name = 'Benalish Knight'",
    "367": "SELECT DISTINCT cards.artist FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Phyrexian'",
    "368": "SELECT CAST(COUNT(CASE WHEN bordercolor = 'borderless' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(id) AS percentage FROM cards",
    "369": "SELECT COUNT(*) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND cards.isreprint = 1",
    "370": "SELECT COUNT(*) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.bordercolor = 'borderless' AND foreign_data.language = 'Russian'",
    "371": "SELECT CAST(SUM(CASE WHEN t2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(t1.id) AS percentage FROM cards AS t1 INNER JOIN foreign_data AS t2 ON t1.uuid = t2.uuid WHERE t1.isstoryspotlight = 1",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99'",
    "373": "SELECT name FROM cards WHERE TRIM(artist) = 'Aaron Boyd'",
    "374": "SELECT COUNT(id) FROM cards WHERE bordercolor = 'black' AND availability = 'mtgo'",
    "375": "SELECT id FROM cards WHERE convertedmanacost = 0",
    "376": "SELECT DISTINCT layout FROM cards WHERE keywords LIKE '%Flying%'",
    "377": "SELECT COUNT(*) FROM cards WHERE cards.originaltype = 'Summon - Angel' AND cards.subtypes <> 'Angel'",
    "378": "SELECT id FROM cards WHERE hasfoil = 1 AND hasnonfoil = 1 AND NOT cardkingdomfoilid IS NULL AND NOT cardkingdomid IS NULL",
    "379": "SELECT id FROM cards WHERE dueldeck = 'a'",
    "380": "SELECT edhrecrank FROM cards WHERE frameversion = '2015'",
    "381": "SELECT DISTINCT cards.artist FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Chinese Simplified'",
    "382": "SELECT cards.name FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.availability = 'paper' AND foreign_data.language = 'Japanese'",
    "383": "SELECT COUNT(*) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.bordercolor = 'white' AND legalities.status = 'Banned'",
    "384": "SELECT t1.uuid, t2.language FROM legalities AS t1 INNER JOIN foreign_data AS t2 ON t1.uuid = t2.uuid WHERE t1.format = 'legacy'",
    "385": "SELECT rulings.text FROM rulings INNER JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Beacon of Immortality'",
    "386": "SELECT COUNT(cards.id) AS card_count, legalities.status FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.frameversion = 'future' AND legalities.status = 'legal'",
    "387": "SELECT name, colors FROM cards WHERE setcode = 'OGW'",
    "388": "SELECT c.name, st.translation, st.language FROM cards AS c INNER JOIN set_translations AS st ON c.setcode = st.setcode WHERE c.convertedmanacost = 5 AND c.setcode = '10E'",
    "389": "SELECT cards.name, rulings.date FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.originaltype = 'Creature - Elf'",
    "390": "SELECT cards.colors, legalities.format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.id BETWEEN 1 AND 20",
    "391": "SELECT DISTINCT cards.name FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.originaltype = 'Artifact' AND cards.colors = 'B'",
    "392": "SELECT (cards.\"name\") FROM \"cards\" INNER JOIN \"rulings\" ON \"cards\".\"uuid\" = \"rulings\".\"uuid\" WHERE \"cards\".\"rarity\" = 'uncommon' ORDER BY \"rulings\".\"date\" ASC LIMIT 3",
    "393": "SELECT COUNT(id) FROM cards WHERE artist = 'John Avon' AND cardkingdomid IS NULL AND cardkingdomfoilid IS NULL",
    "394": "SELECT COUNT(id) FROM cards WHERE bordercolor = 'white' AND NOT cardkingdomfoilid IS NULL AND NOT cardkingdomid IS NULL",
    "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability = 'mtgo' AND hand = -1",
    "396": "SELECT COUNT(*) FROM cards WHERE frameversion = '1993' AND availability = 'paper' AND hascontentwarning = 1",
    "397": "SELECT manacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability LIKE '%mtgo,paper%'",
    "398": "SELECT SUM(CAST(SUBSTRING(SUBSTRING(manacost, 2), 1, INSTR(manacost, ']') - 2) AS INTEGER)) AS total_mana_cost FROM cards WHERE artist = 'Rob Alexander'",
    "399": "SELECT DISTINCT subtypes AS type FROM cards WHERE availability = 'arena' UNION SELECT DISTINCT supertypes AS type FROM cards WHERE availability = 'arena'",
    "400": "SELECT DISTINCT setcode FROM set_translations WHERE language = 'Spanish'",
    "401": "SELECT CAST(COUNT(CASE WHEN isonlineonly = 1 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(id) AS percentage FROM cards WHERE frameeffects = 'legendary'",
    "402": "SELECT CAST(SUM(CASE WHEN \"isTextless\" = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage, \"id\" FROM \"cards\" WHERE \"isStorySpotlight\" = 1",
    "403": "SELECT (SUM(CASE WHEN t1.language = 'Spanish' THEN 1 ELSE 0 END) * 100.0 / COUNT(t1.id)) AS percentage, t1.name FROM foreign_data AS t1 WHERE t1.language = 'Spanish'",
    "404": "SELECT set_translations.language FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE sets.basesetsize = 309",
    "405": "SELECT COUNT(*) FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE sets.block = 'Commander' AND set_translations.language = 'Portuguese (Brasil)'",
    "406": "SELECT DISTINCT cards.id FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.types = 'Creature' AND legalities.status = 'legal'",
    "407": "SELECT DISTINCT cards.subtypes, cards.supertypes FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND NOT cards.subtypes IS NULL AND NOT cards.supertypes IS NULL",
    "408": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%'",
    "409": "SELECT COUNT(cards.id) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE legalities.format = 'premodern' AND rulings.text = 'This is a triggered mana ability.' AND cards.side IS NULL",
    "410": "SELECT cards.id FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.artist = 'Erica Yang' AND cards.availability = 'paper' AND legalities.format = 'pauper'",
    "411": "SELECT c.artist FROM cards AS c INNER JOIN foreign_data AS f ON c.uuid = f.uuid WHERE LOWER(f.flavortext) LIKE '%das perfekte gegenmittel zu einer dichten formation%'",
    "412": "SELECT fd.name AS foreign_name FROM cards AS c INNER JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE c.type LIKE '%Creature%' AND c.layout = 'normal' AND c.bordercolor = 'black' AND c.artist = 'Matthew D. Wilson' AND fd.language = 'French'",
    "413": "SELECT COUNT(DISTINCT cards.id) FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.rarity = 'rare' AND rulings.date = '2007-02-01'",
    "414": "SELECT set_translations.language FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE sets.basesetsize = 180 AND sets.block = 'Ravnica'",
    "415": "SELECT CASE WHEN COUNT(*) = 0 THEN 0 ELSE CAST(SUM(CASE WHEN t1.hascontentwarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) END AS percentage FROM cards AS t1 INNER JOIN legalities AS t2 ON t1.uuid = t2.uuid WHERE t2.format = 'commander' AND t2.status = 'legal'",
    "416": "SELECT CAST(SUM(CASE WHEN foreign_data.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(cards.id) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.power IS NULL OR cards.power = '*'",
    "417": "SELECT CAST((SELECT COUNT(*) FROM set_translations INNER JOIN sets ON set_translations.setcode = sets.code WHERE set_translations.language = 'Japanese' AND sets.type = 'expansion') AS REAL) * 100 / (SELECT COUNT(*) FROM set_translations INNER JOIN sets ON set_translations.setcode = sets.code WHERE set_translations.language = 'Japanese') AS percentage",
    "418": "SELECT availability FROM cards WHERE artist = 'Daren Bader'",
    "419": "SELECT COUNT(*) FROM cards WHERE bordercolor = 'borderless' AND edhrecrank > 12000",
    "420": "SELECT COUNT(id) FROM cards WHERE isoversized = 1 AND isreprint = 1 AND ispromo = 1",
    "421": "SELECT name FROM cards WHERE (power IS NULL OR power = '*') AND promotypes = 'arenaleague' ORDER BY name ASC LIMIT 3",
    "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934",
    "423": "SELECT \"cards\".\"id\" FROM \"cards\" WHERE NOT \"cards\".\"cardKingdomFoilId\" IS NULL AND NOT \"cards\".\"cardKingdomId\" IS NULL ORDER BY \"cards\".\"cardKingdomFoilId\" ASC LIMIT 3",
    "424": "SELECT CAST(SUM(CASE WHEN \"cards\".\"isTextless\" = 1 AND \"cards\".\"layout\" = 'normal' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(\"cards\".\"id\") AS proportion FROM \"cards\"",
    "425": "SELECT number FROM cards WHERE side IS NULL AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%'",
    "426": "SELECT name FROM sets WHERE mtgocode IS NULL OR mtgocode = '' ORDER BY name ASC LIMIT 3",
    "427": "SELECT DISTINCT set_translations.language FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE sets.mcmname = 'Archenemy' AND set_translations.setcode = 'ARC'",
    "428": "SELECT sets.name, set_translations.translation FROM sets LEFT JOIN set_translations ON sets.code = set_translations.setcode WHERE sets.id = 5",
    "429": "SELECT set_translations.language, sets.type FROM sets LEFT JOIN set_translations ON sets.code = set_translations.setcode WHERE sets.id = 206",
    "430": "SELECT sets.id, sets.name FROM set_translations INNER JOIN sets ON set_translations.setcode = sets.code WHERE set_translations.language = 'Italian' AND sets.block = 'Shadowmoor' ORDER BY sets.name ASC LIMIT 2",
    "431": "SELECT sets.id FROM sets INNER JOIN foreign_data ON sets.id = foreign_data.id WHERE sets.isfoilonly = 1 AND foreign_data.language = 'Japanese' AND sets.isforeignonly = 0",
    "432": "SELECT sets.name FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE set_translations.language = 'Russian' AND sets.basesetsize = (SELECT MAX(basesetsize) FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE set_translations.language = 'Russian')",
    "433": "SELECT CAST(COUNT(CASE WHEN t1.isonlineonly = 1 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(t1.id) AS percentage FROM cards AS t1 INNER JOIN foreign_data AS t2 ON t1.uuid = t2.uuid WHERE t2.language = 'Chinese Simplified'",
    "434": "SELECT COUNT(*) FROM set_translations AS st INNER JOIN sets AS s ON st.setcode = s.code WHERE st.language = 'Japanese' AND COALESCE(s.mtgocode, '') = ''",
    "435": "SELECT id FROM cards WHERE bordercolor = 'black'",
    "436": "SELECT id FROM cards WHERE frameeffects = 'extendedart'",
    "437": "SELECT \"name\" FROM \"cards\" WHERE \"borderColor\" = 'black' AND \"isFullArt\" = 1",
    "438": "SELECT language FROM set_translations WHERE id = 174",
    "439": "SELECT name FROM sets WHERE code = 'ALL'",
    "440": "SELECT DISTINCT foreign_data.language FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.name = 'A Pedra Fellwar'",
    "441": "SELECT code FROM sets WHERE releasedate = '2007-07-13'",
    "442": "SELECT \"baseSetSize\", \"code\" FROM \"sets\" WHERE \"block\" = 'Masques' OR \"block\" = 'Mirage'",
    "443": "SELECT code FROM sets WHERE type = 'expansion'",
    "444": "SELECT foreign_data.name, foreign_data.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'boros'",
    "445": "SELECT foreign_data.language, foreign_data.flavortext, cards.type FROM foreign_data INNER JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.watermark = 'colorpie'",
    "446": "SELECT CASE WHEN COUNT(CASE WHEN cards.convertedmanacost = 10 THEN 1 ELSE NULL END) = 0 THEN 0 ELSE (COUNT(CASE WHEN cards.convertedmanacost = 10 THEN 1 ELSE NULL END) * 100.0 / COUNT(*)) END AS percentage FROM cards INNER JOIN sets ON cards.setcode = sets.code WHERE sets.name = 'Abyssal Horror'",
    "447": "SELECT code FROM sets WHERE type = 'commander'",
    "448": "SELECT fd.name, fd.type FROM cards AS c INNER JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE c.watermark = 'abzan'",
    "449": "SELECT foreign_data.language, foreign_data.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'azorius'",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND NOT cardkingdomfoilid IS NULL AND NOT cardkingdomid IS NULL",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand LIKE '+%'",
    "452": "SELECT name FROM cards WHERE istextless = 0",
    "453": "SELECT manacost FROM cards WHERE name = 'Ancestor''s Chosen'",
    "454": "SELECT COUNT(id) FROM cards WHERE bordercolor = 'white' AND (power = '*' OR power IS NULL)",
    "455": "SELECT name FROM cards WHERE ispromo = 1 AND NOT side IS NULL",
    "456": "SELECT subtypes, supertypes FROM cards WHERE name = 'Molimo, Maro-Sorcerer'",
    "457": "SELECT DISTINCT purchaseurls FROM cards WHERE promotypes = 'bundle'",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE bordercolor = 'black' AND availability LIKE '%arena,mtgo%'",
    "459": "SELECT CASE WHEN (SELECT convertedmanacost FROM cards WHERE name = 'Serra Angel') > (SELECT convertedmanacost FROM cards WHERE name = 'Shrine Keeper') THEN 'Serra Angel' ELSE 'Shrine Keeper' END AS more_expensive_card",
    "460": "SELECT artist FROM cards WHERE flavorname = 'Battra, Dark Destroyer'",
    "461": "SELECT name FROM cards WHERE frameversion = '2003' ORDER BY convertedmanacost DESC LIMIT 3",
    "462": "SELECT st.translation FROM cards AS c INNER JOIN sets AS s ON c.printings LIKE '%' || s.code || '%' INNER JOIN set_translations AS st ON s.code = st.setcode WHERE c.name = 'Ancestor''s Chosen' AND st.language = 'Italian'",
    "463": "SELECT COUNT(*) FROM cards INNER JOIN set_translations ON cards.setcode = set_translations.setcode WHERE cards.name = 'Angel of Mercy'",
    "464": "SELECT cards.name FROM cards INNER JOIN set_translations ON cards.setcode = set_translations.setcode WHERE set_translations.translation = 'Hauptset Zehnte Edition'",
    "465": "SELECT EXISTS(SELECT 1 FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.language = 'Korean') AS has_korean_version",
    "466": "SELECT COUNT(*) FROM \"set_translations\" AS st INNER JOIN \"sets\" AS s ON st.\"setCode\" = s.\"code\" INNER JOIN \"cards\" AS c ON s.\"code\" = c.\"setCode\" WHERE st.\"translation\" = 'Hauptset Zehnte Edition' AND c.\"artist\" = 'Adam Rex'",
    "467": "SELECT sets.basesetsize FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE set_translations.translation = 'Hauptset Zehnte Edition'",
    "468": "SELECT t2.translation FROM sets AS t1 INNER JOIN set_translations AS t2 ON t1.code = t2.setcode WHERE t1.name = 'Eighth Edition' AND t2.language = 'Chinese Simplified'",
    "469": "SELECT DISTINCT CASE WHEN NOT sets.mtgocode IS NULL THEN 'Yes' ELSE 'No' END AS appeared_online FROM cards INNER JOIN sets ON cards.setcode = sets.code WHERE cards.name = 'Angel of Mercy'",
    "470": "SELECT DISTINCT sets.releasedate FROM cards INNER JOIN sets ON cards.setcode = sets.code WHERE cards.name = 'Ancestor''s Chosen'",
    "471": "SELECT sets.type FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE set_translations.translation = 'Hauptset Zehnte Edition'",
    "472": "SELECT COUNT(*) FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE sets.block = 'Ice Age' AND set_translations.language = 'Italian' AND NOT set_translations.translation IS NULL",
    "473": "SELECT EXISTS(SELECT 1 FROM sets WHERE name = 'Adarkar Valkyrie' AND isforeignonly = 1) AS isforeignonlyonlyoutsideus",
    "474": "SELECT COUNT(*) FROM set_translations INNER JOIN sets ON set_translations.setcode = sets.code WHERE set_translations.language = 'Italian' AND sets.basesetsize < 100",
    "475": "SELECT COUNT(cards.id) FROM cards INNER JOIN sets ON cards.setcode = sets.code WHERE sets.name = 'Coldsnap' AND cards.bordercolor = 'black'",
    "476": "SELECT c.name FROM cards AS c INNER JOIN sets AS s ON c.setcode = s.code WHERE s.name = 'Coldsnap' AND c.convertedmanacost = (SELECT MAX(convertedmanacost) FROM cards WHERE setcode = (SELECT code FROM sets WHERE name = 'Coldsnap'))",
    "477": "SELECT DISTINCT artist FROM cards WHERE setcode = 'CSP' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')",
    "478": "SELECT cards.name FROM sets INNER JOIN cards ON sets.code = cards.setcode WHERE sets.name = 'Coldsnap' AND cards.number = 4",
    "479": "SELECT COUNT(t1.id) FROM cards AS t1 INNER JOIN sets AS t2 ON t2.code = t1.setcode WHERE t2.name = 'Coldsnap' AND t1.convertedmanacost > 5 AND (t1.power = '*' OR t1.power IS NULL)",
    "480": "SELECT foreign_data.flavortext FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.language = 'Italian'",
    "481": "SELECT DISTINCT foreign_data.language FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.name = 'Ancestor''s Chosen' AND NOT foreign_data.flavortext IS NULL",
    "482": "SELECT DISTINCT foreign_data.type FROM foreign_data INNER JOIN cards ON foreign_data.uuid = cards.uuid WHERE foreign_data.language = 'German' AND cards.name = 'Ancestor''s Chosen'",
    "483": "SELECT fd.text FROM sets AS s INNER JOIN cards AS c ON c.setcode = s.code INNER JOIN foreign_data AS fd ON fd.uuid = c.uuid WHERE s.name = 'Coldsnap' AND fd.language = 'Italian'",
    "484": "SELECT fd.name FROM sets AS s INNER JOIN cards AS c ON s.code = c.setcode INNER JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE s.name = 'Coldsnap' AND fd.language = 'Italian' AND c.convertedmanacost = (SELECT MAX(convertedmanacost) FROM cards WHERE setcode = (SELECT code FROM sets WHERE name = 'Coldsnap'))",
    "485": "SELECT rulings.date FROM rulings INNER JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Reminisce'",
    "486": "SELECT CAST(SUM(CASE WHEN c.convertedmanacost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(c.id) AS percentage FROM cards AS c INNER JOIN sets AS s ON c.setcode = s.code WHERE s.name = 'Coldsnap'",
    "487": "SELECT CAST(SUM(CASE WHEN NOT c.cardkingdomfoilid IS NULL AND NOT c.cardkingdomid IS NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM sets AS s INNER JOIN cards AS c ON s.code = c.setcode WHERE s.name = 'Coldsnap'",
    "488": "SELECT code FROM sets WHERE releasedate = '2017-07-14'",
    "489": "SELECT keyrunecode FROM sets WHERE code = 'PKHC'",
    "490": "SELECT mcmid FROM sets WHERE code = 'SS2'",
    "491": "SELECT mcmname FROM sets WHERE releasedate = '2017-06-09'",
    "492": "SELECT sets.type FROM sets WHERE sets.name = 'From the Vault: Lore'",
    "493": "SELECT parentcode FROM sets WHERE name = 'Commander 2014 Oversized'",
    "494": "SELECT r.text, c.hascontentwarning FROM cards AS c INNER JOIN rulings AS r ON c.uuid = r.uuid WHERE c.artist = 'Jim Pavelec'",
    "495": "SELECT s.releasedate FROM cards AS c INNER JOIN sets AS s ON c.setcode = s.code WHERE c.name = 'Evacuation'",
    "496": "SELECT sets.basesetsize FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE set_translations.translation = 'Rinascita di Alara'",
    "497": "SELECT sets.type FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE set_translations.translation = 'Huitième édition'",
    "498": "SELECT set_translations.translation FROM set_translations INNER JOIN sets ON set_translations.setcode = sets.code INNER JOIN cards ON sets.code = cards.setcode WHERE cards.name = 'Tendo Ice Bridge' AND set_translations.language = 'French'",
    "499": "SELECT COUNT(*) FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE sets.name = 'Tenth Edition' AND NOT set_translations.translation IS NULL",
    "500": "SELECT DISTINCT st.translation FROM cards AS c INNER JOIN set_translations AS st ON c.setcode = st.setcode WHERE c.name = 'Fellwar Stone' AND st.language = 'Japanese'",
    "501": "SELECT cards.name FROM cards INNER JOIN sets ON cards.setcode = sets.code WHERE sets.name = 'Journey into Nyx Hero''s Path' ORDER BY cards.convertedmanacost DESC LIMIT 1",
    "502": "SELECT s.releasedate FROM sets AS s INNER JOIN set_translations AS st ON s.code = st.setcode WHERE st.translation = 'Ola de frío'",
    "503": "SELECT t2.type FROM cards AS t1 INNER JOIN sets AS t2 ON t1.setcode = t2.code WHERE t1.name = 'Samite Pilgrim'",
    "504": "SELECT COUNT(*) FROM sets INNER JOIN cards ON sets.code = cards.setcode WHERE sets.name = 'World Championship Decks 2004' AND cards.convertedmanacost = 3",
    "505": "SELECT t2.translation FROM sets AS t1 INNER JOIN set_translations AS t2 ON t1.code = t2.setcode WHERE t1.name = 'Mirrodin' AND t2.language = 'Chinese Simplified'",
    "506": "SELECT (SUM(CASE WHEN sets.isnonfoilonly = 1 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE set_translations.language = 'Japanese'",
    "507": "SELECT CAST(SUM(CASE WHEN t1.isonlineonly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(t1.id) AS percentage_online_only FROM sets AS t1 INNER JOIN set_translations AS t2 ON t1.code = t2.setcode WHERE t2.language = 'Portuguese (Brazil)'",
    "508": "SELECT availability FROM cards WHERE artist = 'Aleksi Briclot' AND istextless = 1",
    "509": "SELECT id FROM sets WHERE basesetsize = (SELECT MAX(basesetsize) FROM sets)",
    "510": "SELECT artist FROM cards WHERE side IS NULL AND convertedmanacost = (SELECT MAX(convertedmanacost) FROM cards WHERE side IS NULL)",
    "511": "SELECT frameeffects FROM cards WHERE NOT cardkingdomfoilid IS NULL AND NOT cardkingdomid IS NULL GROUP BY frameeffects ORDER BY COUNT(frameeffects) DESC LIMIT 1",
    "512": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND hasfoil = 0 AND dueldeck = 'a'",
    "513": "SELECT id FROM sets WHERE type = 'commander' ORDER BY totalsetsize DESC LIMIT 1",
    "514": "SELECT c.name, c.manacost FROM cards AS c INNER JOIN legalities AS l ON c.uuid = l.uuid WHERE l.format = 'duel' ORDER BY c.manacost DESC LIMIT 10",
    "515": "SELECT cards.originalreleasedate, legalities.format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.rarity = 'mythic' AND cards.originalreleasedate = (SELECT MIN(originalreleasedate) FROM cards WHERE rarity = 'mythic')",
    "516": "SELECT COUNT(cards.id) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.artist = 'Volkan Baǵa' AND foreign_data.language = 'French'",
    "517": "SELECT COUNT(DISTINCT cards.id) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.name = 'Abundance' AND cards.rarity = 'rare' AND cards.type = 'Enchantment' GROUP BY cards.id HAVING COUNT(CASE WHEN legalities.status = 'Legal' THEN 1 ELSE NULL END) = COUNT(*)",
    "518": "SELECT DISTINCT l.format, c.name FROM cards AS c INNER JOIN legalities AS l ON c.uuid = l.uuid WHERE l.status = 'Banned' AND l.format = (SELECT l.format FROM legalities AS l WHERE l.status = 'Banned' GROUP BY l.format ORDER BY COUNT(l.id) DESC LIMIT 1)",
    "519": "SELECT DISTINCT set_translations.language FROM set_translations INNER JOIN sets ON set_translations.setcode = sets.code WHERE sets.name = 'Battlebond'",
    "520": "SELECT t2.artist, t1.format FROM legalities AS t1 INNER JOIN cards AS t2 ON t1.uuid = t2.uuid GROUP BY t2.artist ORDER BY COUNT(t2.id) ASC LIMIT 1",
    "521": "SELECT legalities.status FROM legalities INNER JOIN cards ON legalities.uuid = cards.uuid WHERE cards.frameversion = '1997' AND cards.artist = 'D. Alexander Gregory' AND cards.hascontentwarning = 1 AND legalities.format = 'legacy'",
    "522": "SELECT DISTINCT cards.name, legalities.format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.edhrecrank = 1 AND legalities.status = 'Banned'",
    "523": "SELECT AVG(yearly_count) AS annual_average_sets, (SELECT language FROM foreign_data GROUP BY language ORDER BY COUNT(language) DESC LIMIT 1) AS common_language FROM (SELECT STRFTIME('%Y', releasedate) AS year, COUNT(*) AS yearly_count FROM sets WHERE releasedate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY year) AS yearly_sets",
    "524": "SELECT DISTINCT artist FROM cards WHERE bordercolor = 'black' AND availability = 'arena'",
    "525": "SELECT uuid FROM legalities WHERE format = 'oldschool' AND status IN ('banned', 'restricted')",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper'",
    "527": "SELECT rulings.text FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Kev Walker' ORDER BY rulings.date DESC",
    "528": "SELECT t1.name, t3.format FROM cards AS t1 INNER JOIN sets AS t2 ON t1.setcode = t2.code INNER JOIN legalities AS t3 ON t1.uuid = t3.uuid WHERE t2.name = 'Hour of Devastation' AND t3.status = 'Legal'",
    "529": "SELECT DISTINCT s.name FROM sets AS s INNER JOIN set_translations AS st_korean ON s.code = st_korean.setcode LEFT JOIN set_translations AS st_japanese ON s.code = st_japanese.setcode WHERE st_korean.language = 'Korean' AND (st_japanese.id IS NULL OR st_japanese.language <> 'Japanese')",
    "530": "SELECT DISTINCT cards.frameversion, cards.name, legalities.status FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.artist = 'Allen Williams' AND (legalities.status = 'Legal' OR legalities.status = 'Banned')",
    "531": "SELECT displayname FROM users WHERE displayname IN ('Harlan', 'Jarrod Dixon') ORDER BY reputation DESC LIMIT 1",
    "532": "SELECT displayname FROM users WHERE STRFTIME('%Y', creationdate) = '2011'",
    "533": "SELECT COUNT(id) FROM users WHERE lastaccessdate > '2014-09-01'",
    "534": "SELECT displayname FROM users WHERE views = (SELECT MAX(views) FROM users)",
    "535": "SELECT COUNT(*) FROM users WHERE upvotes > 100 AND downvotes > 1",
    "536": "SELECT COUNT(\"Id\") FROM \"users\" WHERE \"Views\" > 10 AND STRFTIME('%Y', \"CreationDate\") > '2013'",
    "537": "SELECT COUNT(posts.id) FROM users INNER JOIN posts ON users.id = posts.owneruserid WHERE users.displayname = 'csgillespie'",
    "538": "SELECT posts.title FROM users INNER JOIN posts ON users.id = posts.owneruserid WHERE users.displayname = 'csgillespie'",
    "539": "SELECT users.displayname FROM users INNER JOIN posts ON users.id = posts.owneruserid WHERE posts.title = 'Eliciting priors from experts'",
    "540": "SELECT title FROM posts WHERE owneruserid = (SELECT id FROM users WHERE displayname = 'csgillespie') AND viewcount = (SELECT MAX(viewcount) FROM posts WHERE owneruserid = (SELECT id FROM users WHERE displayname = 'csgillespie'))",
    "541": "SELECT users.displayname FROM users INNER JOIN posts ON users.id = posts.owneruserid WHERE posts.favoritecount = (SELECT MAX(favoritecount) FROM posts)",
    "542": "SELECT SUM(posts.commentcount) AS totalcomments FROM users INNER JOIN posts ON users.id = posts.owneruserid WHERE users.displayname = 'csgillespie'",
    "543": "SELECT posts.answercount FROM posts INNER JOIN users ON posts.owneruserid = users.id WHERE users.displayname = 'csgillespie' AND posts.answercount = (SELECT MAX(answercount) FROM posts INNER JOIN users ON posts.owneruserid = users.id WHERE users.displayname = 'csgillespie')",
    "544": "SELECT users.displayname FROM users INNER JOIN posts ON users.id = posts.lasteditoruserid WHERE posts.title = 'Examples for teaching: Correlation does not mean causation'",
    "545": "SELECT COUNT(posts.id) FROM users INNER JOIN posts ON users.id = posts.owneruserid WHERE users.displayname = 'csgillespie' AND posts.parentid IS NULL",
    "546": "SELECT DISTINCT users.displayname FROM users INNER JOIN posts ON users.id = posts.owneruserid WHERE NOT posts.closeddate IS NULL",
    "547": "SELECT COUNT(*) FROM posts INNER JOIN users ON posts.owneruserid = users.id WHERE users.age > 65 AND posts.score >= 20",
    "548": "SELECT users.location FROM posts INNER JOIN users ON posts.owneruserid = users.id WHERE posts.title = 'Eliciting priors from experts'",
    "549": "SELECT posts.body FROM tags INNER JOIN posts ON tags.excerptpostid = posts.id WHERE tags.tagname = 'bayesian'",
    "550": "SELECT p.body FROM tags AS t INNER JOIN posts AS p ON t.excerptpostid = p.id WHERE t.count = (SELECT MAX(count) FROM tags)",
    "551": "SELECT COUNT(b.id) AS badgecount FROM users AS u INNER JOIN badges AS b ON u.id = b.userid WHERE u.displayname = 'csgillespie'",
    "552": "SELECT DISTINCT badges.name FROM badges INNER JOIN users ON badges.userid = users.id WHERE users.displayname = 'csgillespie'",
    "553": "SELECT COUNT(b.id) FROM badges AS b INNER JOIN users AS u ON b.userid = u.id WHERE u.displayname = 'csgillespie' AND STRFTIME('%Y', b.date) = '2011'",
    "554": "SELECT u.displayname FROM users AS u INNER JOIN badges AS b ON u.id = b.userid GROUP BY b.userid ORDER BY COUNT(b.id) DESC LIMIT 1",
    "555": "SELECT AVG(posts.score) FROM users INNER JOIN posts ON users.id = posts.owneruserid WHERE users.displayname = 'csgillespie'",
    "556": "SELECT CAST(COUNT(badges.id) AS REAL) / COUNT(DISTINCT badges.userid) AS averagebadges FROM badges INNER JOIN users ON badges.userid = users.id WHERE users.views > 200",
    "557": "SELECT CAST(COUNT(CASE WHEN users.age > 65 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) AS elderuserpostpercentage FROM posts INNER JOIN users ON posts.owneruserid = users.id WHERE posts.score > 5",
    "558": "SELECT COUNT(*) AS vote_count FROM votes WHERE userid = 58 AND STRFTIME('%Y-%m-%d', votes.creationdate) = '2010-07-19'",
    "559": "SELECT creationdate FROM (SELECT creationdate, COUNT(id) AS votecount FROM votes GROUP BY creationdate) AS vote_counts ORDER BY votecount DESC LIMIT 1",
    "560": "SELECT COUNT(id) FROM badges WHERE name = 'Revival'",
    "561": "SELECT posts.title FROM posts INNER JOIN comments ON posts.id = comments.postid WHERE comments.score = (SELECT MAX(score) FROM comments)",
    "562": "SELECT commentcount FROM posts WHERE viewcount = 1910",
    "563": "SELECT posts.favoritecount FROM comments INNER JOIN posts ON comments.postid = posts.id WHERE comments.userid = 3025 AND comments.creationdate = '2014-04-23 20:29:39.0'",
    "564": "SELECT c.text FROM comments AS c INNER JOIN posts AS p ON c.postid = p.id WHERE p.parentid = 107829 AND p.commentcount = 1",
    "565": "SELECT CASE WHEN posts.closeddate IS NULL THEN 'Not Well-Finished' ELSE 'Well-Finished' END AS poststatus FROM comments INNER JOIN posts ON comments.postid = posts.id WHERE comments.userid = 23853 AND comments.creationdate = '2013-07-12 09:08:18.0'",
    "566": "SELECT users.reputation FROM posts INNER JOIN users ON posts.owneruserid = users.id WHERE posts.id = 65041",
    "567": "SELECT COUNT(*) FROM users INNER JOIN posts ON users.id = posts.owneruserid WHERE users.displayname = 'Tiago Pasqualini'",
    "568": "SELECT users.displayname FROM votes INNER JOIN users ON votes.userid = users.id WHERE votes.id = 6347",
    "569": "SELECT COUNT(votes.id) AS numberofvotes FROM votes INNER JOIN posts ON votes.postid = posts.id WHERE posts.title LIKE '%data visualization%'",
    "570": "SELECT DISTINCT badges.name FROM badges INNER JOIN users ON badges.userid = users.id WHERE users.displayname = 'DatEpicCoderGuyWhoPrograms'",
    "571": "SELECT CAST(COUNT(DISTINCT p.id) AS REAL) / COUNT(DISTINCT v.id) AS times FROM posts AS p INNER JOIN votes AS v ON p.id = v.postid WHERE p.owneruserid = 24 AND v.userid = 24",
    "572": "SELECT viewcount FROM posts WHERE title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'",
    "573": "SELECT text FROM comments WHERE score = 17",
    "574": "SELECT displayname FROM users WHERE websiteurl = 'http://stackoverflow.com'",
    "575": "SELECT badges.name FROM badges INNER JOIN users ON badges.userid = users.id WHERE users.displayname = 'SilentGhost'",
    "576": "SELECT users.displayname FROM users INNER JOIN comments ON users.id = comments.userid WHERE TRIM(comments.text) = 'thank you user93!'",
    "577": "SELECT \"comments\".\"Text\" FROM \"comments\" INNER JOIN \"users\" ON \"comments\".\"UserId\" = \"users\".\"Id\" WHERE \"users\".\"DisplayName\" = 'A Lion'",
    "578": "SELECT users.displayname, users.reputation FROM posts INNER JOIN users ON posts.owneruserid = users.id WHERE posts.title = 'Understanding what Dassault iSight is doing?'",
    "579": "SELECT comments.text FROM comments INNER JOIN posts ON comments.postid = posts.id WHERE posts.title = 'How does gentle boosting differ from AdaBoost?'",
    "580": "SELECT DISTINCT users.displayname FROM badges INNER JOIN users ON badges.userid = users.id WHERE badges.name = 'Necromancer' LIMIT 10",
    "581": "SELECT users.displayname FROM posts INNER JOIN users ON posts.lasteditoruserid = users.id WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?'",
    "582": "SELECT posts.title FROM posts INNER JOIN users ON posts.lasteditoruserid = users.id WHERE users.displayname = 'Vebjorn Ljosa'",
    "583": "SELECT SUM(posts.score) AS totalscore, users.websiteurl FROM posts INNER JOIN users ON posts.lasteditoruserid = users.id WHERE users.displayname = 'Yevgeny'",
    "584": "SELECT comments.text FROM comments INNER JOIN posthistory ON comments.userid = posthistory.userid INNER JOIN posts ON posthistory.postid = posts.id WHERE posts.title = 'Why square the difference instead of taking the absolute value in standard deviation?'",
    "585": "SELECT SUM(votes.bountyamount) AS totalbountyamount FROM posts INNER JOIN votes ON posts.id = votes.postid WHERE posts.title LIKE '%data%'",
    "586": "SELECT DISTINCT users.displayname FROM users INNER JOIN votes ON users.id = votes.userid INNER JOIN posts ON votes.postid = posts.id WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%'",
    "587": "SELECT posts.title, posthistory.text, AVG(posts.viewcount) FROM posts INNER JOIN posthistory ON posthistory.postid = posts.id WHERE posts.tags = '<humor>' GROUP BY posts.title, posthistory.text",
    "588": "SELECT COUNT(*) FROM comments WHERE userid = 13",
    "589": "SELECT id FROM users WHERE reputation = (SELECT MAX(reputation) FROM users)",
    "590": "SELECT users.id FROM users WHERE users.views = (SELECT MIN(users.views) FROM users)",
    "591": "SELECT COUNT(badges.userid) FROM badges WHERE badges.name = 'Supporter' AND STRFTIME('%Y', badges.date) = '2011'",
    "592": "SELECT COUNT(*) FROM (SELECT badges.userid FROM badges GROUP BY badges.userid HAVING COUNT(badges.name) > 5)",
    "593": "SELECT COUNT(DISTINCT u.id) AS numberofusers FROM users AS u INNER JOIN badges AS b1 ON u.id = b1.userid AND b1.name = 'Supporter' INNER JOIN badges AS b2 ON u.id = b2.userid AND b2.name = 'Teacher' WHERE u.location = 'New York'",
    "594": "SELECT users.displayname, users.reputation FROM users INNER JOIN posts ON users.id = posts.owneruserid WHERE posts.id = 1",
    "595": "SELECT DISTINCT posthistory.userid FROM posthistory INNER JOIN users ON posthistory.userid = users.id WHERE users.views >= 1000 GROUP BY posthistory.userid, posthistory.postid HAVING COUNT(*) = 1",
    "596": "SELECT badges.name FROM badges INNER JOIN (SELECT userid, COUNT(id) AS comment_count FROM comments GROUP BY userid ORDER BY comment_count DESC LIMIT 1) AS most_commenting_users ON badges.userid = most_commenting_users.userid",
    "597": "SELECT COUNT(DISTINCT users.id) FROM users INNER JOIN badges ON users.id = badges.userid WHERE users.location = 'India' AND badges.name = 'Teacher'",
    "598": "WITH counts AS (SELECT COUNT(CASE WHEN STRFTIME('%Y', date) = '2010' THEN 1 END) AS count_2010, COUNT(CASE WHEN STRFTIME('%Y', date) = '2011' THEN 1 END) AS count_2011, COUNT(*) AS total_count FROM badges WHERE name = 'Student') SELECT ((count_2010 / CAST(total_count AS REAL)) * 100) - ((count_2011 / CAST(total_count AS REAL)) * 100) AS percentage_difference FROM counts",
    "599": "SELECT ph.posthistorytypeid, COUNT(DISTINCT c.userid) AS uniqueusercount FROM posthistory AS ph INNER JOIN comments AS c ON ph.postid = c.postid WHERE ph.postid = 3720 GROUP BY ph.posthistorytypeid",
    "600": "SELECT posts.id, posts.viewcount FROM posts INNER JOIN postlinks ON posts.id = postlinks.relatedpostid WHERE postlinks.postid = 61217",
    "601": "SELECT p.score, pl.linktypeid FROM posts AS p INNER JOIN postlinks AS pl ON p.id = pl.postid WHERE p.id = 395",
    "602": "SELECT id, owneruserid FROM posts WHERE score > 60",
    "603": "SELECT SUM(favoritecount) FROM posts WHERE owneruserid = 686 AND STRFTIME('%Y', creaiondate) = '2011'",
    "604": "SELECT SUM(users.upvotes) / COUNT(users.id) AS avgupvotes, SUM(users.age) / COUNT(users.id) AS avgage FROM users INNER JOIN posts ON users.id = posts.owneruserid GROUP BY users.id HAVING COUNT(posts.id) > 10",
    "605": "SELECT COUNT(DISTINCT userid) FROM badges WHERE name = 'Announcer'",
    "606": "SELECT DISTINCT \"badges\".\"Name\" FROM \"badges\" WHERE \"badges\".\"Date\" = '2010-07-19 19:39:08.0'",
    "607": "SELECT COUNT(id) FROM comments WHERE score > 60",
    "608": "SELECT text FROM comments WHERE creationdate = '2010-07-19 19:25:47.0'",
    "609": "SELECT COUNT(id) FROM posts WHERE score = 10",
    "610": "SELECT b.name FROM badges AS b INNER JOIN users AS u ON b.userid = u.id WHERE u.reputation = (SELECT MAX(reputation) FROM users)",
    "611": "SELECT DISTINCT users.reputation FROM users INNER JOIN badges ON users.id = badges.userid WHERE badges.date = '2010-07-19 19:39:08.0'",
    "612": "SELECT badges.name FROM users INNER JOIN badges ON users.id = badges.userid WHERE users.displayname = 'Pierre'",
    "613": "SELECT badges.date FROM badges INNER JOIN users ON badges.userid = users.id WHERE users.location = 'Rochester, NY'",
    "614": "SELECT CAST(COUNT(DISTINCT CASE WHEN badges.name = 'Teacher' THEN badges.userid ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT users.id) FROM users INNER JOIN badges ON users.id = badges.userid",
    "615": "SELECT (CAST(COUNT(CASE WHEN users.age BETWEEN 13 AND 18 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(users.id)) AS percentage FROM badges INNER JOIN users ON badges.userid = users.id WHERE badges.name = 'Organizer'",
    "616": "SELECT score FROM comments WHERE postid IN (SELECT id FROM posts)",
    "617": "SELECT text FROM comments WHERE creationdate = '2010-07-19 19:37:33.0'",
    "618": "SELECT DISTINCT users.age FROM users INNER JOIN badges ON users.id = badges.userid WHERE users.location = 'Vienna, Austria'",
    "619": "SELECT COUNT(b.userid) FROM badges AS b INNER JOIN users AS u ON b.userid = u.id WHERE b.name = 'Supporter' AND u.age BETWEEN 19 AND 65",
    "620": "SELECT users.views FROM users INNER JOIN badges ON users.id = badges.userid WHERE badges.date = '2010-07-19 19:39:08.0'",
    "621": "SELECT DISTINCT b.name FROM badges AS b INNER JOIN users AS u ON b.userid = u.id WHERE u.reputation = (SELECT MIN(reputation) FROM users)",
    "622": "SELECT badges.name FROM users INNER JOIN badges ON users.id = badges.userid WHERE users.displayname = 'Sharpie'",
    "623": "SELECT COUNT(DISTINCT users.id) FROM users INNER JOIN badges ON users.id = badges.userid WHERE users.age > 65 AND badges.name = 'Supporter'",
    "624": "SELECT displayname FROM users WHERE id = 30",
    "625": "SELECT COUNT(id) FROM users WHERE location = 'New York'",
    "626": "SELECT COUNT(votes.id) FROM votes WHERE STRFTIME('%Y', votes.creationdate) = '2010'",
    "627": "SELECT COUNT(id) AS adult_count FROM users WHERE age BETWEEN 19 AND 65",
    "628": "SELECT displayname FROM users WHERE views = (SELECT MAX(views) FROM users)",
    "629": "SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', creationdate) = '2010' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN STRFTIME('%Y', creationdate) = '2011' THEN 1 ELSE 0 END) AS vote_ratio FROM votes",
    "630": "SELECT DISTINCT posts.tags FROM posts INNER JOIN users ON posts.owneruserid = users.id WHERE users.displayname = 'John Salvatier'",
    "631": "SELECT COUNT(posts.id) FROM posts INNER JOIN users ON posts.owneruserid = users.id WHERE users.displayname = 'Daniel Vassallo'",
    "632": "SELECT COUNT(votes.id) FROM users INNER JOIN votes ON users.id = votes.userid WHERE users.displayname = 'Harlan'",
    "633": "SELECT posts.id FROM posts INNER JOIN users ON posts.owneruserid = users.id WHERE users.displayname = 'slashnick' ORDER BY posts.answercount DESC LIMIT 1",
    "634": "SELECT t2.displayname, SUM(t1.viewcount) AS totalviewcount FROM posts AS t1 INNER JOIN users AS t2 ON t1.owneruserid = t2.id WHERE t2.displayname IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY t2.displayname ORDER BY totalviewcount DESC LIMIT 1",
    "635": "SELECT COUNT(*) FROM (SELECT votes.postid FROM votes INNER JOIN posts ON votes.postid = posts.id INNER JOIN users ON posts.owneruserid = users.id WHERE users.displayname = 'Matt Parker' GROUP BY votes.postid HAVING COUNT(votes.id) > 4) AS valid_posts",
    "636": "SELECT COUNT(*) AS numberofnegativecomments FROM posts INNER JOIN comments ON posts.id = comments.postid INNER JOIN users ON posts.owneruserid = users.id WHERE users.displayname = 'Neil McGuigan' AND comments.score < 60",
    "637": "SELECT DISTINCT posts.tags FROM posts INNER JOIN users ON posts.owneruserid = users.id WHERE users.displayname = 'Mark Meckes' AND posts.commentcount = 0",
    "638": "SELECT DISTINCT users.displayname FROM users INNER JOIN badges ON users.id = badges.userid WHERE badges.name = 'Organizer'",
    "639": "SELECT CAST(SUM(CASE WHEN INSTR(tags, '|r|') > 0 OR tags = 'r' OR INSTR(tags, 'r|') = 1 OR INSTR(tags, '|r') = LENGTH(tags) - 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM posts INNER JOIN users ON posts.owneruserid = users.id WHERE users.displayname = 'Community'",
    "640": "SELECT SUM(CASE WHEN t2.displayname = 'Mornington' THEN t1.viewcount ELSE 0 END) - SUM(CASE WHEN t2.displayname = 'Amos' THEN t1.viewcount ELSE 0 END) AS viewcountdifference FROM posts AS t1 INNER JOIN users AS t2 ON t1.owneruserid = t2.id",
    "641": "SELECT COUNT(badges.userid) AS numberofusers FROM badges WHERE badges.name = 'Commentator' AND STRFTIME('%Y', badges.date) = '2014'",
    "642": "SELECT COUNT(*) FROM posts WHERE STRFTIME('%Y-%m-%d', \"CreationDate\") = '2010-07-21'",
    "643": "SELECT displayname, age FROM users WHERE views = (SELECT MAX(views) FROM users)",
    "644": "SELECT lasteditdate, lasteditoruserid FROM posts WHERE title = 'Detecting a given face in a database of facial images'",
    "645": "SELECT COUNT(*) FROM comments WHERE userid = 13 AND score < 60",
    "646": "SELECT posts.title, comments.userdisplayname FROM comments INNER JOIN posts ON comments.postid = posts.id WHERE comments.score > 60",
    "647": "SELECT DISTINCT badges.name FROM badges INNER JOIN users ON badges.userid = users.id WHERE STRFTIME('%Y', badges.date) = '2011' AND users.location = 'North Pole'",
    "648": "SELECT users.displayname, users.websiteurl FROM posts INNER JOIN users ON posts.owneruserid = users.id WHERE posts.favoritecount > 150",
    "649": "SELECT COUNT(posthistory.id) AS post_history_counts, MAX(posthistory.creationdate) AS last_edit_date FROM posts INNER JOIN posthistory ON posts.id = posthistory.postid WHERE posts.title = 'What is the best introductory Bayesian statistics textbook?'",
    "650": "SELECT users.lastaccessdate, users.location FROM users INNER JOIN badges ON users.id = badges.userid WHERE badges.name = 'outliers'",
    "651": "SELECT p2.title AS relatedposttitle FROM posts AS p1 INNER JOIN postlinks AS pl ON p1.id = pl.postid INNER JOIN posts AS p2 ON pl.relatedpostid = p2.id WHERE p1.title = 'How to tell if something happened in a data set which monitors a value over time'",
    "652": "SELECT DISTINCT posthistory.postid, badges.name FROM posthistory INNER JOIN users ON posthistory.userid = users.id INNER JOIN badges ON users.id = badges.userid WHERE posthistory.userdisplayname = 'Samuel' AND STRFTIME('%Y', posthistory.creationdate) = '2013' AND STRFTIME('%Y', badges.date) = '2013'",
    "653": "SELECT u.displayname AS ownerdisplayname FROM posts AS p INNER JOIN users AS u ON p.owneruserid = u.id ORDER BY p.viewcount DESC LIMIT 1",
    "654": "SELECT users.displayname, users.location FROM tags INNER JOIN posts ON tags.excerptpostid = posts.id INNER JOIN users ON posts.owneruserid = users.id WHERE tags.tagname = 'hypothesis-testing'",
    "655": "SELECT p2.title, pl.linktypeid FROM posts AS p1 INNER JOIN postlinks AS pl ON p1.id = pl.postid INNER JOIN posts AS p2 ON pl.relatedpostid = p2.id WHERE p1.title = 'What are principal component scores?'",
    "656": "SELECT p1.ownerdisplayname FROM posts AS p1 INNER JOIN (SELECT parentid, MAX(score) AS maxscore FROM posts WHERE NOT parentid IS NULL GROUP BY parentid) AS p2 ON p1.id = p2.parentid INNER JOIN posts AS p3 ON p2.parentid = p3.id WHERE p2.maxscore = p3.score",
    "657": "SELECT users.displayname, users.websiteurl FROM votes INNER JOIN users ON votes.userid = users.id WHERE votes.bountyamount = (SELECT MAX(bountyamount) FROM votes WHERE votetypeid = 8) AND votes.votetypeid = 8",
    "658": "SELECT t1.title FROM posts AS t1 INNER JOIN (SELECT id FROM posts ORDER BY viewcount DESC LIMIT 5) AS t2 ON t1.id = t2.id",
    "659": "SELECT COUNT(*) FROM tags WHERE tags.count BETWEEN 5000 AND 7000",
    "660": "SELECT owneruserid FROM posts WHERE favoritecount = (SELECT MAX(favoritecount) FROM posts)",
    "661": "SELECT age FROM users WHERE reputation = (SELECT MAX(reputation) FROM users)",
    "662": "SELECT COUNT(DISTINCT posts.id) FROM posts INNER JOIN votes ON posts.id = votes.postid WHERE STRFTIME('%Y', votes.creationdate) = '2011' AND votes.bountyamount = 50",
    "663": "SELECT id FROM users WHERE age = (SELECT MIN(age) FROM users)",
    "664": "SELECT SUM(posts.score) AS totalscore FROM posts WHERE STRFTIME('%Y-%m-%d', posts.lasactivitydate) = '2010-07-19'",
    "665": "SELECT CAST(COUNT(postlinks.id) AS REAL) / 12 AS averagemonthlylinks FROM postlinks INNER JOIN posts ON postlinks.postid = posts.id WHERE STRFTIME('%Y', postlinks.creationdate) = '2010' AND posts.answercount <= 2",
    "666": "SELECT posts.id FROM votes INNER JOIN posts ON votes.postid = posts.id WHERE votes.userid = 1465 ORDER BY posts.favoritecount DESC LIMIT 1",
    "667": "SELECT DISTINCT posts.title FROM posts INNER JOIN postlinks ON posts.id = postlinks.postid ORDER BY postlinks.creationdate ASC LIMIT 1",
    "668": "SELECT users.displayname FROM users INNER JOIN badges ON users.id = badges.userid GROUP BY users.id ORDER BY COUNT(badges.name) DESC LIMIT 1",
    "669": "SELECT MIN(votes.creationdate) FROM votes INNER JOIN users ON votes.userid = users.id WHERE users.displayname = 'chl'",
    "670": "SELECT MIN(posts.creaiondate) AS firstpostdate FROM users INNER JOIN posts ON users.id = posts.owneruserid WHERE users.age = (SELECT MIN(age) FROM users)",
    "671": "SELECT users.displayname FROM users INNER JOIN badges ON users.id = badges.userid WHERE badges.name = 'Autobiographer' ORDER BY badges.date ASC LIMIT 1",
    "672": "SELECT COUNT(DISTINCT users.id) AS usercount FROM users INNER JOIN posts ON users.id = posts.owneruserid WHERE users.location = 'United Kingdom' AND posts.favoritecount >= 4",
    "673": "SELECT AVG(vote_count) FROM (SELECT COUNT(t2.postid) AS vote_count FROM users AS t1 INNER JOIN votes AS t2 ON t1.id = t2.userid WHERE t1.age = (SELECT MAX(age) FROM users) GROUP BY t1.id) AS vote_counts",
    "674": "SELECT displayname FROM users WHERE reputation = (SELECT MAX(reputation) FROM users)",
    "675": "SELECT COUNT(id) FROM users WHERE reputation > 2000 AND views > 1000",
    "676": "SELECT displayname FROM users WHERE age BETWEEN 19 AND 65",
    "677": "SELECT COUNT(*) FROM posts WHERE owneruserid = (SELECT id FROM users WHERE displayname = 'Jay Stevens')",
    "678": "SELECT posts.id, posts.title FROM users INNER JOIN posts ON users.id = posts.owneruserid WHERE users.displayname = 'Harvey Motulsky' ORDER BY posts.viewcount DESC LIMIT 1",
    "679": "SELECT id, title FROM posts WHERE score = (SELECT MAX(score) FROM posts)",
    "680": "SELECT AVG(posts.score) FROM users INNER JOIN posts ON users.id = posts.owneruserid WHERE users.displayname = 'Stephen Turner'",
    "681": "SELECT users.displayname FROM users INNER JOIN posts ON users.id = posts.owneruserid WHERE posts.viewcount > 20000",
    "682": "SELECT id, ownerdisplayname FROM posts WHERE favoritecount = (SELECT MAX(favoritecount) FROM posts)",
    "683": "SELECT CAST(SUM(CASE WHEN users.reputation > 1000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(posts.id) AS percentage FROM posts INNER JOIN users ON posts.owneruserid = users.id",
    "684": "SELECT CAST(COUNT(CASE WHEN age BETWEEN 13 AND 18 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(id) AS percentage FROM users",
    "685": "SELECT p.viewcount, u.displayname FROM posts AS p INNER JOIN posthistory AS ph ON p.id = ph.postid INNER JOIN users AS u ON p.lasteditoruserid = u.id WHERE ph.text = 'Computer Game Datasets'",
    "686": "SELECT COUNT(id) AS totalpostsaboveaverage FROM posts WHERE viewcount > (SELECT AVG(viewcount) FROM posts)",
    "687": "SELECT commentcount FROM posts WHERE score = (SELECT MAX(score) FROM posts) LIMIT 1",
    "688": "SELECT COUNT(id) FROM posts WHERE viewcount > 35000 AND commentcount = 0",
    "689": "SELECT users.displayname, users.location FROM users INNER JOIN posts ON users.id = posts.lasteditoruserid WHERE posts.id = 183",
    "690": "SELECT badges.name FROM badges INNER JOIN users ON badges.userid = users.id WHERE users.displayname = 'Emmett' ORDER BY badges.date DESC LIMIT 1",
    "691": "SELECT COUNT(*) FROM users WHERE age BETWEEN 19 AND 65 AND upvotes > 5000",
    "692": "SELECT STRFTIME('%J', badges.date) - STRFTIME('%J', users.creationdate) AS daystogetbadge FROM badges INNER JOIN users ON badges.userid = users.id WHERE users.displayname = 'Zolomon'",
    "693": "SELECT COUNT(DISTINCT p.id) AS numberofposts, COUNT(DISTINCT c.id) AS numberofcomments FROM users AS u INNER JOIN posts AS p ON u.id = p.owneruserid INNER JOIN comments AS c ON u.id = c.userid WHERE u.creationdate = (SELECT MAX(creationdate) FROM users)",
    "694": "SELECT comments.text, comments.userdisplayname FROM comments INNER JOIN posts ON comments.postid = posts.id WHERE posts.title = 'Analysing wind data with R' ORDER BY comments.creationdate DESC LIMIT 10",
    "695": "SELECT COUNT(DISTINCT userid) FROM badges WHERE name = 'Citizen Patrol'",
    "696": "SELECT COUNT(posts.id) FROM posts WHERE INSTR(posts.tags, '<careers>') > 0",
    "697": "SELECT reputation, views FROM users WHERE displayname = 'Jarrod Dixon'",
    "698": "SELECT (SELECT COUNT(*) FROM comments WHERE postid = p.id) AS commentcount, p.answercount AS answercount FROM posts AS p WHERE p.title = 'Clustering 1D data'",
    "699": "SELECT creationdate FROM users WHERE displayname = 'IrishStat'",
    "700": "SELECT COUNT(DISTINCT votes.postid) FROM votes WHERE votes.bountyamount >= 30",
    "701": "SELECT CAST(SUM(CASE WHEN t2.score > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(t2.id) AS percentage FROM users AS t1 INNER JOIN posts AS t2 ON t1.id = t2.owneruserid WHERE t1.reputation = (SELECT MAX(reputation) FROM users)",
    "702": "SELECT COUNT(id) FROM posts WHERE score < 20",
    "703": "SELECT COUNT(*) FROM tags WHERE tags.id < 15 AND tags.count <= 20",
    "704": "SELECT excerptpostid, wikipostid FROM tags WHERE tagname = 'sample'",
    "705": "SELECT users.reputation, users.upvotes FROM users INNER JOIN comments ON users.id = comments.userid WHERE comments.text = 'fine, you win :)'",
    "706": "SELECT comments.text FROM posts INNER JOIN comments ON comments.postid = posts.id WHERE posts.title LIKE '%linear regression%'",
    "707": "SELECT c.text FROM posts AS p INNER JOIN comments AS c ON p.id = c.postid WHERE p.viewcount BETWEEN 100 AND 150 ORDER BY c.score DESC LIMIT 1",
    "708": "SELECT DISTINCT users.creationdate, users.age FROM comments INNER JOIN users ON comments.userid = users.id WHERE comments.text LIKE '%http://%'",
    "709": "SELECT COUNT(DISTINCT \"PostId\") FROM \"comments\" INNER JOIN \"posts\" ON \"comments\".\"PostId\" = \"posts\".\"Id\" WHERE \"comments\".\"Score\" = 0 AND \"posts\".\"ViewCount\" < 5",
    "710": "SELECT COUNT(comments.id) FROM posts INNER JOIN comments ON posts.id = comments.postid WHERE posts.commentcount = 1 AND comments.score = 0",
    "711": "SELECT COUNT(DISTINCT users.id) FROM comments INNER JOIN users ON comments.userid = users.id WHERE comments.score = 0 AND users.age = 40",
    "712": "SELECT posts.id, comments.text FROM posts INNER JOIN comments ON posts.id = comments.postid WHERE posts.title = 'Group differences on a five point Likert item'",
    "713": "SELECT users.upvotes FROM users INNER JOIN comments ON users.id = comments.userid WHERE comments.text = 'R is also lazy evaluated.'",
    "714": "SELECT comments.text FROM comments INNER JOIN users ON comments.userid = users.id WHERE users.displayname = 'Harvey Motulsky'",
    "715": "SELECT DISTINCT users.displayname FROM users INNER JOIN comments ON users.id = comments.userid WHERE comments.score BETWEEN 1 AND 5 AND users.downvotes = 0",
    "716": "SELECT CAST(COUNT(IIF(users.upvotes = 0, 1, NULL)) AS REAL) * 100 / COUNT(users.id) AS percentage FROM comments INNER JOIN users ON comments.userid = users.id WHERE comments.score BETWEEN 5 AND 10",
    "717": "SELECT DISTINCT t3.power_name FROM superhero AS t1 INNER JOIN hero_power AS t2 ON t1.id = t2.hero_id INNER JOIN superpower AS t3 ON t2.power_id = t3.id WHERE t1.superhero_name = '3-D Man'",
    "718": "SELECT COUNT(DISTINCT hero_power.hero_id) FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength'",
    "719": "SELECT COUNT(DISTINCT sh.id) AS num_superheroes FROM superhero AS sh INNER JOIN hero_power AS hp ON sh.id = hp.hero_id INNER JOIN superpower AS sp ON hp.power_id = sp.id WHERE sp.power_name = 'Super Strength' AND sh.height_cm > 200",
    "720": "SELECT superhero.full_name FROM superhero INNER JOIN (SELECT hero_id FROM hero_power GROUP BY hero_id HAVING COUNT(DISTINCT power_id) > 15) AS power_count ON superhero.id = power_count.hero_id",
    "721": "SELECT COUNT(superhero.id) FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue'",
    "722": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.skin_colour_id = colour.id WHERE superhero.superhero_name = 'Apocalypse'",
    "723": "SELECT COUNT(superhero.id) FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE colour.colour = 'Blue' AND superpower.power_name = 'Agility'",
    "724": "SELECT superhero.superhero_name FROM superhero INNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id INNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'Blue' AND hair_colour.colour = 'Blond'",
    "725": "SELECT COUNT(superhero.id) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics'",
    "726": "SELECT superhero_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' ORDER BY superhero.height_cm DESC",
    "727": "SELECT publisher.publisher_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name = 'Sauron'",
    "728": "SELECT colour.colour, COUNT(superhero.id) AS eye_color_count FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' GROUP BY colour.colour ORDER BY eye_color_count DESC",
    "729": "SELECT AVG(superhero.height_cm) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics'",
    "730": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' AND superpower.power_name = 'Super Strength'",
    "731": "SELECT COUNT(*) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'DC Comics'",
    "732": "SELECT publisher_name FROM publisher INNER JOIN superhero ON publisher.id = superhero.publisher_id INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Speed' ORDER BY hero_attribute.attribute_value ASC LIMIT 1",
    "733": "SELECT COUNT(superhero.id) FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics'",
    "734": "SELECT publisher.\"publisher_name\" FROM superhero INNER JOIN publisher ON superhero.\"publisher_id\" = publisher.\"id\" WHERE superhero.\"superhero_name\" = 'Blue Beetle II'",
    "735": "SELECT COUNT(superhero.id) FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'Blond'",
    "736": "SELECT s.superhero_name FROM superhero AS s INNER JOIN hero_attribute AS ha ON s.id = ha.hero_id INNER JOIN attribute AS a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Intelligence' AND ha.attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Intelligence'))",
    "737": "SELECT race FROM race INNER JOIN superhero ON race.id = superhero.race_id WHERE superhero.superhero_name = 'Copycat'",
    "738": "SELECT DISTINCT superhero.superhero_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Durability' AND hero_attribute.attribute_value < 50",
    "739": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Death Touch'",
    "740": "SELECT COUNT(DISTINCT superhero.id) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE gender.gender = 'Female' AND attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = 100",
    "741": "SELECT superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id GROUP BY superhero.id ORDER BY COUNT(hero_power.hero_id) DESC LIMIT 1",
    "742": "SELECT COUNT(superhero.id) FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE race.race = 'Vampire'",
    "743": "SELECT CAST(SUM(CASE WHEN a.alignment = 'Bad' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(s.id) AS percentage_bad, SUM(CASE WHEN a.alignment = 'Bad' AND p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS count_bad_marvel FROM superhero AS s INNER JOIN alignment AS a ON s.alignment_id = a.id INNER JOIN publisher AS p ON s.publisher_id = p.id",
    "744": "SELECT COUNT(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN superhero.id ELSE NULL END) - COUNT(CASE WHEN publisher.publisher_name = 'DC Comics' THEN superhero.id ELSE NULL END) AS difference FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id",
    "745": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'",
    "746": "SELECT AVG(attribute_value) FROM hero_attribute",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL",
    "748": "SELECT colour.colour FROM colour INNER JOIN superhero ON colour.id = superhero.eye_colour_id WHERE superhero.id = 75",
    "749": "SELECT superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Deathlok'",
    "750": "SELECT AVG(superhero.weight_kg) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female'",
    "751": "SELECT superpower.power_name FROM superpower INNER JOIN hero_power ON superpower.id = hero_power.power_id INNER JOIN superhero ON hero_power.hero_id = superhero.id INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Male' LIMIT 5",
    "752": "SELECT superhero.superhero_name FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE race.race = 'Alien'",
    "753": "SELECT superhero.superhero_name FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.height_cm BETWEEN 170 AND 190 AND colour.colour = 'No Colour'",
    "754": "SELECT superpower.power_name FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE hero_power.hero_id = 56",
    "755": "SELECT superhero.full_name FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE race.race = 'Demi-God' LIMIT 5",
    "756": "SELECT COUNT(superhero.id) FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Bad'",
    "757": "SELECT race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.weight_kg = 169",
    "758": "SELECT \"colour\".\"colour\" FROM \"superhero\" INNER JOIN \"race\" ON \"superhero\".\"race_id\" = \"race\".\"id\" INNER JOIN \"colour\" ON \"superhero\".\"hair_colour_id\" = \"colour\".\"id\" WHERE \"superhero\".\"height_cm\" = 185 AND \"race\".\"race\" = 'Human'",
    "759": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.weight_kg = (SELECT MAX(weight_kg) FROM superhero)",
    "760": "SELECT CAST(SUM(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(superhero.id) AS percentage FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.height_cm BETWEEN 150 AND 180",
    "761": "SELECT s.superhero_name FROM superhero AS s INNER JOIN gender AS g ON s.gender_id = g.id WHERE g.gender = 'Male' AND s.weight_kg > (0.79 * (SELECT AVG(weight_kg) FROM superhero))",
    "762": "SELECT sp.power_name FROM superpower AS sp INNER JOIN hero_power AS hp ON sp.id = hp.power_id GROUP BY sp.power_name ORDER BY COUNT(sp.power_name) DESC LIMIT 1",
    "763": "SELECT hero_attribute.attribute_value FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE superhero.superhero_name = 'Abomination'",
    "764": "SELECT superpower.power_name FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE hero_power.hero_id = 1",
    "765": "SELECT COUNT(DISTINCT hero_id) FROM hero_power WHERE power_id = (SELECT id FROM superpower WHERE power_name = 'Stealth')",
    "766": "SELECT superhero.full_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength')",
    "767": "SELECT CAST(SUM(CASE WHEN colour.id = 1 THEN 1 ELSE 0 END) AS REAL) / COUNT(superhero.id) AS average_no_skin_colour FROM superhero INNER JOIN colour ON superhero.skin_colour_id = colour.id",
    "768": "SELECT COUNT(superhero.id) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics'",
    "769": "SELECT s.superhero_name FROM superhero AS s INNER JOIN publisher AS p ON s.publisher_id = p.id INNER JOIN hero_attribute AS ha ON s.id = ha.hero_id INNER JOIN attribute AS a ON ha.attribute_id = a.id WHERE p.publisher_name = 'Dark Horse Comics' AND a.attribute_name = 'Durability' ORDER BY ha.attribute_value DESC LIMIT 1",
    "770": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.full_name = 'Abraham Sapien'",
    "771": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Flight'",
    "772": "SELECT eye_colour.colour AS eye_colour, hair_colour.colour AS hair_colour, skin_colour.colour AS skin_colour FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id INNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id INNER JOIN colour AS skin_colour ON superhero.skin_colour_id = skin_colour.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'",
    "773": "SELECT superhero.superhero_name, publisher.publisher_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.hair_colour_id = superhero.skin_colour_id AND superhero.hair_colour_id = superhero.eye_colour_id",
    "774": "SELECT race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.superhero_name = 'A-Bomb'",
    "775": "SELECT CAST(SUM(CASE WHEN colour.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN colour ON superhero.skin_colour_id = colour.id WHERE gender.gender = 'Female'",
    "776": "SELECT superhero_name, race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'",
    "777": "SELECT gender.gender FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE superhero.superhero_name = 'Agent 13'",
    "778": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Adaptation'",
    "779": "SELECT COUNT(hero_power.power_id) FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id WHERE superhero.superhero_name = 'Amazo'",
    "780": "SELECT DISTINCT superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.full_name = 'Hunter Zolomon'",
    "781": "SELECT height_cm FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Amber'",
    "782": "SELECT DISTINCT superhero.superhero_name FROM superhero INNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id INNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black'",
    "783": "SELECT DISTINCT c2.colour FROM superhero INNER JOIN colour AS c1 ON superhero.skin_colour_id = c1.id INNER JOIN colour AS c2 ON superhero.eye_colour_id = c2.id WHERE c1.colour = 'Gold'",
    "784": "SELECT t2.full_name FROM race AS t1 INNER JOIN superhero AS t2 ON t1.id = t2.race_id WHERE t1.race = 'Vampire'",
    "785": "SELECT superhero.superhero_name FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Neutral'",
    "786": "SELECT COUNT(DISTINCT hero_id) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength') AND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength'))",
    "787": "SELECT race.race, alignment.alignment FROM superhero INNER JOIN race ON superhero.race_id = race.id INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE superhero.superhero_name = 'Cameron Hicks'",
    "788": "SELECT CAST(SUM(CASE WHEN gender.gender = 'Female' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics'",
    "789": "SELECT AVG(superhero.weight_kg) FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE race.race = 'Alien'",
    "790": "SELECT (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler') AS difference",
    "791": "SELECT AVG(superhero.height_cm) AS average_height FROM superhero",
    "792": "SELECT DISTINCT t3.power_name FROM superhero AS t1 INNER JOIN hero_power AS t2 ON t1.id = t2.hero_id INNER JOIN superpower AS t3 ON t2.power_id = t3.id WHERE t1.superhero_name = 'Abomination'",
    "793": "SELECT COUNT(id) FROM superhero WHERE race_id = 21 AND gender_id = 1",
    "794": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Speed' AND hero_attribute.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed'))",
    "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3",
    "796": "SELECT attribute.attribute_name, hero_attribute.attribute_value FROM hero_attribute INNER JOIN superhero ON hero_attribute.hero_id = superhero.id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = '3-D Man'",
    "797": "SELECT DISTINCT s.superhero_name FROM superhero AS s INNER JOIN colour AS c1 ON s.eye_colour_id = c1.id INNER JOIN colour AS c2 ON s.hair_colour_id = c2.id WHERE c1.colour = 'Blue' AND c2.colour = 'Brown'",
    "798": "SELECT DISTINCT p.publisher_name FROM superhero AS s INNER JOIN publisher AS p ON s.publisher_id = p.id WHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id = 1",
    "800": "SELECT CAST(SUM(CASE WHEN t2.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(t1.id) AS percentage FROM superhero AS t1 INNER JOIN colour AS t2 ON t1.eye_colour_id = t2.id",
    "801": "SELECT CAST(SUM(CASE WHEN gender.gender = 'Male' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN gender.gender = 'Female' THEN 1 ELSE 0 END) AS ratio FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id",
    "802": "SELECT superhero_name FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero WHERE NOT height_cm IS NULL)",
    "803": "SELECT id FROM superpower WHERE power_name = 'Cryokinesis'",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294",
    "805": "SELECT full_name FROM superhero WHERE weight_kg = 0 OR weight_kg IS NULL",
    "806": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.full_name = 'Karen Beecher-Duncan'",
    "807": "SELECT superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.full_name = 'Helen Parr'",
    "808": "SELECT DISTINCT race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.weight_kg = 108 AND superhero.height_cm = 188",
    "809": "SELECT publisher.publisher_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.id = 38",
    "810": "SELECT race.race FROM race INNER JOIN superhero ON race.id = superhero.race_id INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute)",
    "811": "SELECT t1.alignment, t3.power_name FROM alignment AS t1 INNER JOIN superhero AS t2 ON t1.id = t2.alignment_id INNER JOIN hero_power AS t4 ON t2.id = t4.hero_id INNER JOIN superpower AS t3 ON t4.power_id = t3.id WHERE t2.superhero_name = 'Atom IV'",
    "812": "SELECT superhero.full_name FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue' LIMIT 5",
    "813": "SELECT AVG(hero_attribute.attribute_value) FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE superhero.alignment_id = 3",
    "814": "SELECT DISTINCT colour.colour FROM hero_attribute INNER JOIN superhero ON hero_attribute.hero_id = superhero.id INNER JOIN colour ON superhero.skin_colour_id = colour.id WHERE hero_attribute.attribute_value = 100",
    "815": "SELECT COUNT(superhero.id) FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id INNER JOIN gender ON superhero.gender_id = gender.id WHERE alignment.id = 1 AND gender.id = 2",
    "816": "SELECT DISTINCT t1.superhero_name FROM superhero AS t1 INNER JOIN hero_attribute AS t2 ON t1.id = t2.hero_id WHERE t2.attribute_value BETWEEN 75 AND 80",
    "817": "SELECT DISTINCT race.race FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN colour ON superhero.hair_colour_id = colour.id INNER JOIN race ON superhero.race_id = race.id WHERE gender.gender = 'Male' AND colour.colour = 'Blue'",
    "818": "SELECT (SUM(CASE WHEN superhero.gender_id = 2 THEN 1 ELSE 0 END) * 100.0 / COUNT(superhero.id)) AS percentage FROM superhero WHERE superhero.alignment_id = 2",
    "819": "SELECT SUM(CASE WHEN colour.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN colour.id = 1 THEN 1 ELSE 0 END) AS difference FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.weight_kg = 0 OR superhero.weight_kg IS NULL",
    "820": "SELECT ha.attribute_value FROM hero_attribute AS ha INNER JOIN attribute AS a ON ha.attribute_id = a.id INNER JOIN superhero AS s ON ha.hero_id = s.id WHERE a.attribute_name = 'Strength' AND s.superhero_name = 'Hulk'",
    "821": "SELECT DISTINCT superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Ajax'",
    "822": "SELECT COUNT(*) FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id INNER JOIN colour ON superhero.skin_colour_id = colour.id WHERE colour.colour = 'Green' AND alignment.alignment = 'Bad'",
    "823": "SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics'",
    "824": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Wind Control' ORDER BY superhero.superhero_name ASC",
    "825": "SELECT DISTINCT gender.gender FROM gender INNER JOIN superhero ON gender.id = superhero.gender_id INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Phoenix Force'",
    "826": "SELECT superhero_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'DC Comics' AND superhero.weight_kg = (SELECT MAX(weight_kg) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'DC Comics')",
    "827": "SELECT AVG(superhero.height_cm) AS average FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id INNER JOIN race ON superhero.race_id = race.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND race.race <> 'Human'",
    "828": "SELECT COUNT(hero_attribute.hero_id) FROM hero_attribute INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Speed' AND hero_attribute.attribute_value = 100",
    "829": "SELECT (SUM(CASE WHEN publisher.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END)) AS difference FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id",
    "830": "SELECT a.attribute_name FROM attribute AS a INNER JOIN hero_attribute AS ha ON a.id = ha.attribute_id INNER JOIN superhero AS s ON ha.hero_id = s.id WHERE s.superhero_name = 'Black Panther' GROUP BY a.id ORDER BY MIN(ha.attribute_value) ASC LIMIT 1",
    "831": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.superhero_name = 'Abomination'",
    "832": "SELECT superhero_name FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero)",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'",
    "834": "SELECT CAST(SUM(CASE WHEN gender.gender = 'Female' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS female_percentage FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id INNER JOIN gender ON superhero.gender_id = gender.id WHERE publisher.publisher_name = 'George Lucas'",
    "835": "SELECT CAST(SUM(CASE WHEN t3.alignment = 'Good' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage_of_good_superheroes FROM superhero AS t1 INNER JOIN publisher AS t2 ON t1.publisher_id = t2.id INNER JOIN alignment AS t3 ON t1.alignment_id = t3.id WHERE t2.publisher_name = 'Marvel Comics'",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%'",
    "837": "SELECT ha.hero_id FROM hero_attribute AS ha INNER JOIN (SELECT MIN(attribute_value) AS min_attr_value FROM hero_attribute) AS sub ON ha.attribute_value = sub.min_attr_value",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien'",
    "839": "SELECT superhero.full_name FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.weight_kg < 100 AND colour.colour = 'Brown'",
    "840": "SELECT hero_attribute.attribute_value FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE superhero.superhero_name = 'Aquababy'",
    "841": "SELECT superhero.weight_kg, race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.id = 40",
    "842": "SELECT AVG(superhero.height_cm) AS average_height FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Neutral'",
    "843": "SELECT hero_power.hero_id FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Intelligence'",
    "844": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.superhero_name = 'Blackwulf'",
    "845": "SELECT DISTINCT sp.power_name FROM superhero AS sh INNER JOIN hero_power AS hp ON sh.id = hp.hero_id INNER JOIN superpower AS sp ON hp.power_id = sp.id WHERE sh.height_cm > (SELECT AVG(height_cm) * 0.8 FROM superhero)",
    "846": "SELECT DISTINCT t2.driverref FROM qualifying AS t1 INNER JOIN drivers AS t2 ON t1.driverid = t2.driverid WHERE t1.raceid = 20 ORDER BY t1.q1 DESC LIMIT 5",
    "847": "SELECT drivers.surname FROM drivers INNER JOIN qualifying ON drivers.driverid = qualifying.driverid WHERE qualifying.raceid = 19 AND qualifying.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceid = 19)",
    "848": "SELECT races.year FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.location = 'Shanghai'",
    "849": "SELECT races.url FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.name = 'Circuit de Barcelona-Catalunya'",
    "850": "SELECT races.name FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.country = 'Germany'",
    "851": "SELECT DISTINCT c.location AS circuit_position FROM constructors AS con INNER JOIN constructorresults AS cr ON con.constructorid = cr.constructorid INNER JOIN races AS r ON cr.raceid = r.raceid INNER JOIN circuits AS c ON r.circuitid = c.circuitid WHERE con.name = 'Renault'",
    "852": "SELECT COUNT(*) FROM races AS r INNER JOIN circuits AS c ON r.circuitid = c.circuitid WHERE r.year = 2010 AND NOT c.country IN ('Asia', 'Europe')",
    "853": "SELECT races.name FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.country = 'Spain'",
    "854": "SELECT DISTINCT circuits.lat, circuits.lng FROM circuits INNER JOIN races ON circuits.circuitid = races.circuitid WHERE races.name = 'Australian Grand Prix'",
    "855": "SELECT races.url FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.name = 'Sepang International Circuit'",
    "856": "SELECT races.time FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.name = 'Sepang International Circuit'",
    "857": "SELECT DISTINCT circuits.lat, circuits.lng FROM circuits INNER JOIN races ON circuits.circuitid = races.circuitid WHERE races.name = 'Abu Dhabi Grand Prix'",
    "858": "SELECT DISTINCT constructors.constructorid FROM constructorresults INNER JOIN constructors ON constructorresults.constructorid = constructors.constructorid WHERE constructorresults.raceid = 24 AND constructorresults.points = 1",
    "859": "SELECT qualifying.q1 FROM qualifying INNER JOIN drivers ON qualifying.driverid = drivers.driverid WHERE qualifying.raceid = 354 AND drivers.forename = 'Bruno' AND drivers.surname = 'Senna'",
    "860": "SELECT drivers.nationality FROM qualifying INNER JOIN drivers ON qualifying.driverid = drivers.driverid WHERE qualifying.q2 = '0:01:40' AND qualifying.raceid = 355",
    "861": "SELECT \"number\" FROM \"qualifying\" WHERE \"raceId\" = 903 AND \"q3\" LIKE '1:54%'",
    "862": "SELECT COUNT(*) FROM races INNER JOIN results ON races.raceid = results.raceid WHERE races.name = 'Bahrain Grand Prix' AND races.year = 2007 AND results.time IS NULL",
    "863": "SELECT seasons.url FROM races INNER JOIN seasons ON races.year = seasons.year WHERE races.raceid = 901",
    "864": "SELECT COUNT(t1.resultid) FROM results AS t1 INNER JOIN races AS t2 ON t1.raceid = t2.raceid WHERE t2.date = '2015-11-29' AND NOT t1.time IS NULL",
    "865": "SELECT drivers.driverid, drivers.dob FROM drivers INNER JOIN results ON drivers.driverid = results.driverid WHERE results.raceid = 592 AND NOT results.time IS NULL ORDER BY drivers.dob ASC LIMIT 1",
    "866": "SELECT DISTINCT drivers.url FROM drivers INNER JOIN laptimes ON drivers.driverid = laptimes.driverid WHERE laptimes.time LIKE '1:27%' AND laptimes.raceid = 161",
    "867": "SELECT t2.nationality FROM results AS t1 INNER JOIN drivers AS t2 ON t1.driverid = t2.driverid WHERE t1.raceid = 933 ORDER BY t1.fastestlapspeed DESC LIMIT 1",
    "868": "SELECT \"circuits\".\"lat\", \"circuits\".\"lng\" FROM \"races\" INNER JOIN \"circuits\" ON \"races\".\"circuitId\" = \"circuits\".\"circuitId\" WHERE \"races\".\"name\" = 'Malaysian Grand Prix'",
    "869": "SELECT constructors.url FROM constructors INNER JOIN constructorresults ON constructors.constructorid = constructorresults.constructorid WHERE constructorresults.raceid = 9 AND constructorresults.points = (SELECT MAX(points) FROM constructorresults WHERE raceid = 9)",
    "870": "SELECT t2.q1 FROM drivers AS t1 INNER JOIN qualifying AS t2 ON t1.driverid = t2.driverid WHERE t2.raceid = 345 AND t1.forename = 'Lucas' AND t1.surname = 'di Grassi'",
    "871": "SELECT drivers.nationality FROM qualifying INNER JOIN drivers ON qualifying.driverid = drivers.driverid WHERE qualifying.q2 = '0:01:15' AND qualifying.raceid = 347",
    "872": "SELECT drivers.code FROM qualifying INNER JOIN drivers ON qualifying.driverid = drivers.driverid WHERE qualifying.raceid = 45 AND qualifying.q3 LIKE '1:33%'",
    "873": "SELECT results.milliseconds FROM drivers INNER JOIN results ON drivers.driverid = results.driverid WHERE drivers.forename = 'Bruce' AND drivers.surname = 'McLaren' AND results.raceid = 743",
    "874": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN results ON drivers.driverid = results.driverid INNER JOIN races ON results.raceid = races.raceid WHERE races.name = 'San Marino Grand Prix' AND races.year = 2006 AND results.position = 2",
    "875": "SELECT seasons.url FROM seasons INNER JOIN races ON seasons.year = races.year WHERE races.raceid = 901",
    "876": "SELECT COUNT(*) - COUNT(CASE WHEN NOT results.time IS NULL THEN 1 ELSE NULL END) AS drivers_not_finishing FROM races INNER JOIN results ON races.raceid = results.raceid WHERE races.date = '2015-11-29'",
    "877": "SELECT d.forename, d.surname FROM drivers AS d INNER JOIN results AS r ON d.driverid = r.driverid WHERE r.raceid = 872 AND NOT r.time IS NULL ORDER BY d.dob DESC LIMIT 1",
    "878": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN laptimes ON drivers.driverid = laptimes.driverid WHERE laptimes.raceid = 348 AND laptimes.time = (SELECT MIN(time) FROM laptimes WHERE raceid = 348)",
    "879": "SELECT drivers.nationality FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE results.fastestlapspeed = (SELECT MAX(fastestlapspeed) FROM results)",
    "880": "SELECT ((CASE WHEN r1.raceid = 853 THEN CAST(r1.fastestlapspeed AS REAL) ELSE 0 END) - CASE WHEN r2.raceid = 854 THEN CAST(r2.fastestlapspeed AS REAL) ELSE 0 END) / CASE WHEN r1.raceid = 853 THEN CAST(r1.fastestlapspeed AS REAL) ELSE 0 END * 100 AS percentage FROM drivers AS d INNER JOIN results AS r1 ON d.driverid = r1.driverid INNER JOIN results AS r2 ON d.driverid = r2.driverid WHERE d.forename = 'Paul' AND d.surname = 'di Resta' AND r1.raceid = 853 AND r2.raceid = 854",
    "881": "SELECT CAST(SUM(CASE WHEN NOT t1.time IS NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(t1.driverid) AS race_completion_rate FROM results AS t1 INNER JOIN races AS t2 ON t1.raceid = t2.raceid WHERE t2.date = '1983-07-16'",
    "882": "SELECT races.year FROM races WHERE races.name = 'Singapore Grand Prix' ORDER BY races.year ASC LIMIT 1",
    "883": "SELECT COUNT(*) AS race_count, name FROM races WHERE year = 2005 ORDER BY name DESC",
    "884": "SELECT r1.name FROM races AS r1 INNER JOIN (SELECT MIN(date) AS mindate FROM races) AS r2 ON STRFTIME('%Y', r1.date) = STRFTIME('%Y', r2.mindate) AND STRFTIME('%m', r1.date) = STRFTIME('%m', r2.mindate)",
    "885": "SELECT name, date FROM races WHERE year = 1999 AND round = (SELECT MAX(round) FROM races WHERE year = 1999)",
    "886": "SELECT year FROM races GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1",
    "887": "SELECT DISTINCT \"races\".\"name\" FROM \"races\" WHERE \"races\".\"year\" = 2017",
    "888": "SELECT circuits.country, circuits.name, circuits.location FROM circuits INNER JOIN races ON circuits.circuitid = races.circuitid WHERE races.raceid = (SELECT raceid FROM races WHERE name = 'European Grand Prix' ORDER BY year ASC LIMIT 1)",
    "889": "SELECT MAX(races.year) FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE races.name = 'British Grand Prix' AND circuits.name = 'Brands Hatch'",
    "890": "SELECT COUNT(DISTINCT t1.year) FROM races AS t1 INNER JOIN circuits AS t2 ON t1.circuitid = t2.circuitid WHERE t2.name = 'Silverstone Circuit' AND t1.name = 'British Grand Prix'",
    "891": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN results ON drivers.driverid = results.driverid INNER JOIN races ON results.raceid = races.raceid WHERE races.year = 2010 AND races.name = 'Singapore Grand Prix' ORDER BY results.position ASC",
    "892": "SELECT drivers.forename, drivers.surname, SUM(results.points) AS total_points FROM results INNER JOIN drivers ON results.driverid = drivers.driverid GROUP BY drivers.driverid ORDER BY total_points DESC LIMIT 1",
    "893": "SELECT d.forename, d.surname, r.points FROM drivers AS d INNER JOIN results AS r ON d.driverid = r.driverid INNER JOIN races AS ra ON r.raceid = ra.raceid WHERE ra.year = 2017 AND ra.name = 'Chinese Grand Prix' ORDER BY r.points DESC LIMIT 3",
    "894": "SELECT d.forename, d.surname, r.name FROM laptimes AS lt INNER JOIN drivers AS d ON lt.driverid = d.driverid INNER JOIN races AS r ON lt.raceid = r.raceid WHERE lt.milliseconds = (SELECT MIN(milliseconds) FROM laptimes)",
    "895": "SELECT AVG(laptimes.milliseconds) AS average_lap_time FROM laptimes INNER JOIN drivers ON laptimes.driverid = drivers.driverid INNER JOIN races ON laptimes.raceid = races.raceid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Malaysian Grand Prix' AND races.year = 2009",
    "896": "SELECT CAST(SUM(CASE WHEN results.position > 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(results.raceid) AS percentage FROM drivers INNER JOIN results ON drivers.driverid = results.driverid INNER JOIN races ON results.raceid = races.raceid WHERE drivers.surname = 'Hamilton' AND races.year >= 2010",
    "897": "SELECT d.forename, d.surname, d.nationality, MAX(ds.points) AS max_points FROM drivers AS d INNER JOIN driverstandings AS ds ON d.driverid = ds.driverid GROUP BY d.driverid ORDER BY SUM(ds.wins) DESC LIMIT 1",
    "898": "SELECT (STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', drivers.dob)) AS age, drivers.forename, drivers.surname FROM drivers WHERE drivers.nationality = 'Japanese' ORDER BY drivers.dob DESC LIMIT 1",
    "899": "SELECT circuits.name FROM circuits INNER JOIN races ON circuits.circuitid = races.circuitid WHERE STRFTIME('%Y', races.date) BETWEEN '1990' AND '2000' GROUP BY races.circuitid HAVING COUNT(races.raceid) = 4",
    "900": "SELECT \"circuits\".\"name\", \"circuits\".\"location\", \"races\".\"name\" FROM \"circuits\" INNER JOIN \"races\" ON \"circuits\".\"circuitId\" = \"races\".\"circuitId\" WHERE \"circuits\".\"country\" = 'USA' AND STRFTIME('%Y', \"races\".\"date\") = '2006'",
    "901": "SELECT races.name AS race_name, circuits.name AS circuit_name, circuits.location AS circuit_location FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE STRFTIME('%Y-%m', races.date) = '2005-09'",
    "902": "SELECT DISTINCT races.name FROM drivers INNER JOIN results ON drivers.driverid = results.driverid INNER JOIN races ON results.raceid = races.raceid WHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND results.position < 20",
    "903": "SELECT SUM(CASE WHEN t2.points = (SELECT MAX(points) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE circuitid = (SELECT circuitid FROM circuits WHERE name = 'Sepang International Circuit')) AND driverid = (SELECT driverid FROM drivers WHERE forename = 'Michael' AND surname = 'Schumacher')) THEN 1 ELSE 0 END) AS win_count FROM drivers AS t1 INNER JOIN results AS t2 ON t1.driverid = t2.driverid INNER JOIN races AS t3 ON t2.raceid = t3.raceid INNER JOIN circuits AS t4 ON t3.circuitid = t4.circuitid WHERE t1.forename = 'Michael' AND t1.surname = 'Schumacher' AND t4.name = 'Sepang International Circuit'",
    "904": "SELECT r.name, r.year FROM races AS r INNER JOIN results AS res ON r.raceid = res.raceid INNER JOIN drivers AS d ON res.driverid = d.driverid WHERE d.forename = 'Michael' AND d.surname = 'Schumacher' AND res.milliseconds = (SELECT MIN(milliseconds) FROM results WHERE driverid = (SELECT driverid FROM drivers WHERE forename = 'Michael' AND surname = 'Schumacher'))",
    "905": "SELECT AVG(results.points) FROM results INNER JOIN drivers ON results.driverid = drivers.driverid INNER JOIN races ON results.raceid = races.raceid WHERE drivers.forename = 'Eddie' AND drivers.surname = 'Irvine' AND races.year = 2000",
    "906": "SELECT r.name, res.points FROM races AS r INNER JOIN results AS res ON r.raceid = res.raceid INNER JOIN drivers AS d ON res.driverid = d.driverid WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND r.year = (SELECT MIN(r2.year) FROM races AS r2 INNER JOIN results AS res2 ON r2.raceid = res2.raceid INNER JOIN drivers AS d2 ON res2.driverid = d2.driverid WHERE d2.forename = 'Lewis' AND d2.surname = 'Hamilton') ORDER BY r.date LIMIT 1",
    "907": "SELECT races.name, circuits.country FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE STRFTIME('%Y', races.date) = '2017' ORDER BY races.date",
    "908": "SELECT t2.name, t2.year, t3.location FROM results AS t1 INNER JOIN races AS t2 ON t1.raceid = t2.raceid INNER JOIN circuits AS t3 ON t2.circuitid = t3.circuitid WHERE t1.laps = (SELECT MAX(laps) FROM results)",
    "909": "SELECT CAST(SUM(CASE WHEN circuits.country = 'Germany' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(races.name) AS percentage FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE races.name = 'European Grand Prix'",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'",
    "911": "SELECT name FROM circuits WHERE lat = (SELECT MAX(lat) FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring'))",
    "912": "SELECT circuitref FROM circuits WHERE name = 'Marina Bay Street Circuit'",
    "913": "SELECT country FROM circuits ORDER BY alt DESC LIMIT 1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL",
    "915": "SELECT nationality FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers)",
    "916": "SELECT DISTINCT drivers.surname FROM drivers WHERE drivers.nationality = 'Italian'",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson'",
    "918": "SELECT driverref FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'",
    "919": "SELECT t2.name AS circuit_name FROM races AS t1 INNER JOIN circuits AS t2 ON t1.circuitid = t2.circuitid WHERE t1.name = 'Spanish Grand Prix' AND t1.year = 2009",
    "920": "SELECT DISTINCT races.year FROM circuits INNER JOIN races ON circuits.circuitid = races.circuitid WHERE circuits.name = 'Silverstone Circuit'",
    "921": "SELECT t1.url FROM races AS t1 INNER JOIN circuits AS t2 ON t1.circuitid = t2.circuitid WHERE t2.name = 'Silverstone Circuit'",
    "922": "SELECT races.time FROM races WHERE races.year BETWEEN 2010 AND 2019 AND races.name = 'Abu Dhabi Grand Prix'",
    "923": "SELECT COUNT(races.raceid) AS numberofraces FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.country = 'Italy'",
    "924": "SELECT races.date FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.name = 'Circuit de Barcelona-Catalunya'",
    "925": "SELECT t2.url FROM races AS t1 INNER JOIN circuits AS t2 ON t1.circuitid = t2.circuitid WHERE t1.name = 'Spanish Grand Prix' AND t1.year = 2009",
    "926": "SELECT MIN(results.fastestlaptime) FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'",
    "927": "SELECT t1.forename, t1.surname FROM drivers AS t1 INNER JOIN results AS t2 ON t1.driverid = t2.driverid WHERE t2.fastestlapspeed = (SELECT MAX(fastestlapspeed) FROM results)",
    "928": "SELECT drivers.driverref FROM results INNER JOIN races ON results.raceid = races.raceid INNER JOIN drivers ON results.driverid = drivers.driverid WHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.position = 1",
    "929": "SELECT name FROM races WHERE raceid IN (SELECT raceid FROM results WHERE driverid = (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'))",
    "930": "SELECT races.name FROM results INNER JOIN drivers ON results.driverid = drivers.driverid INNER JOIN races ON results.raceid = races.raceid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY results.rank ASC LIMIT 1",
    "931": "SELECT MAX(results.fastestlapspeed) AS fastestlapspeed FROM results INNER JOIN races ON results.raceid = races.raceid WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009",
    "932": "SELECT DISTINCT races.year FROM races INNER JOIN results ON races.raceid = results.raceid INNER JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'",
    "933": "SELECT results.positionorder FROM results INNER JOIN drivers ON results.driverid = drivers.driverid INNER JOIN races ON results.raceid = races.raceid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Chinese Grand Prix' AND races.year = 2008",
    "934": "SELECT DISTINCT t1.forename, t1.surname FROM drivers AS t1 INNER JOIN results AS t2 ON t1.driverid = t2.driverid INNER JOIN races AS t3 ON t2.raceid = t3.raceid WHERE t3.year = 1989 AND t3.name = 'Australian Grand Prix' AND t2.grid = 4",
    "935": "SELECT COUNT(r.driverid) FROM results AS r INNER JOIN races AS ra ON r.raceid = ra.raceid WHERE ra.name = 'Australian Grand Prix' AND ra.year = 2008 AND NOT r.time IS NULL",
    "936": "SELECT r.fastestlaptime FROM results AS r INNER JOIN races AS rc ON r.raceid = rc.raceid INNER JOIN drivers AS d ON r.driverid = d.driverid WHERE rc.year = 2008 AND rc.name = 'Australian Grand Prix' AND d.forename = 'Lewis' AND d.surname = 'Hamilton'",
    "937": "SELECT results.time FROM results INNER JOIN races ON results.raceid = races.raceid WHERE races.name = 'Chinese Grand Prix' AND races.year = 2008 AND results.position = 2",
    "938": "SELECT d.forename, d.surname, d.url FROM drivers AS d INNER JOIN results AS r ON d.driverid = r.driverid INNER JOIN races AS ra ON r.raceid = ra.raceid WHERE ra.name = 'Australian Grand Prix' AND ra.year = 2008 AND r.time LIKE '%:%:%.%'",
    "939": "SELECT COUNT(DISTINCT d.driverid) AS driver_count FROM drivers AS d INNER JOIN results AS r ON d.driverid = r.driverid INNER JOIN races AS ra ON r.raceid = ra.raceid WHERE ra.year = 2008 AND ra.name = 'Australian Grand Prix' AND d.nationality = 'British'",
    "940": "SELECT COUNT(DISTINCT results.driverid) FROM results INNER JOIN races ON results.raceid = races.raceid WHERE races.name = 'Chinese Grand Prix' AND races.year = 2008 AND NOT results.time IS NULL",
    "941": "SELECT SUM(results.points) FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'",
    "942": "SELECT AVG(CAST(SUBSTRING(t2.fastestlaptime, INSTR(t2.fastestlaptime, ':') + 1) AS REAL) + 60 * CAST(SUBSTRING(t2.fastestlaptime, 1, INSTR(t2.fastestlaptime, ':') - 1) AS REAL)) AS avg_fastest_lap_time_seconds FROM drivers AS t1 INNER JOIN results AS t2 ON t1.driverid = t2.driverid WHERE t1.forename = 'Lewis' AND t1.surname = 'Hamilton'",
    "943": "SELECT CAST(SUM(CASE WHEN NOT t2.time IS NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(*) AS rate FROM races AS t1 INNER JOIN results AS t2 ON t1.raceid = t2.raceid WHERE t1.name = 'Australian Grand Prix' AND t1.year = 2008",
    "944": "SELECT CAST((MAX(r1.milliseconds) - (SUBSTRING(r2.time, 1, INSTR(r2.time, ':') - 1) * 3600000 + SUBSTRING(r2.time, INSTR(r2.time, ':') + 1, INSTR(r2.time, '.') - INSTR(r2.time, ':') - 1) * 60000 + SUBSTRING(r2.time, INSTR(r2.time, '.') - 2, 3) * 1000 + SUBSTRING(r2.time, INSTR(r2.time, '.') + 1))) AS REAL) * 100 / MAX(r1.milliseconds) AS percentage_difference FROM results AS r1 INNER JOIN races ON r1.raceid = races.raceid INNER JOIN results AS r2 ON r1.raceid = r2.raceid WHERE races.name = 'Australian Grand Prix' AND races.year = 2008 AND r2.time LIKE '%:%'",
    "945": "SELECT COUNT(circuitid) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia'",
    "946": "SELECT lat, lng FROM circuits WHERE country = 'USA'",
    "947": "SELECT COUNT(driverid) FROM drivers WHERE nationality = 'British' AND STRFTIME('%Y', dob) > '1980'",
    "948": "SELECT MAX(constructorstandings.points) AS max_points FROM constructors INNER JOIN constructorstandings ON constructors.constructorid = constructorstandings.constructorid WHERE constructors.nationality = 'British'",
    "949": "SELECT constructors.name FROM constructors INNER JOIN constructorstandings ON constructors.constructorid = constructorstandings.constructorid GROUP BY constructors.name ORDER BY SUM(constructorstandings.points) DESC LIMIT 1",
    "950": "SELECT DISTINCT constructors.name FROM constructorresults INNER JOIN constructors ON constructorresults.constructorid = constructors.constructorid WHERE constructorresults.raceid = 291 AND constructorresults.points = 0",
    "951": "SELECT COUNT(DISTINCT constructors.constructorid) FROM constructors INNER JOIN constructorresults ON constructors.constructorid = constructorresults.constructorid WHERE constructors.nationality = 'Japanese' AND constructorresults.points = 0 GROUP BY constructors.constructorid HAVING COUNT(constructorresults.raceid) = 2",
    "952": "SELECT DISTINCT constructors.name FROM constructors INNER JOIN constructorstandings ON constructors.constructorid = constructorstandings.constructorid WHERE constructorstandings.position = 1",
    "953": "SELECT COUNT(DISTINCT constructors.constructorid) FROM constructors INNER JOIN results ON constructors.constructorid = results.constructorid WHERE constructors.nationality = 'French' AND results.laps > 50",
    "954": "SELECT (COUNT(CASE WHEN drivers.nationality = 'Japanese' AND NOT results.time IS NULL THEN 1 END) * 100.0 / COUNT(CASE WHEN drivers.nationality = 'Japanese' THEN 1 END)) AS completion_percentage FROM results INNER JOIN races ON results.raceid = races.raceid INNER JOIN drivers ON results.driverid = drivers.driverid WHERE races.year BETWEEN 2007 AND 2009",
    "955": "SELECT races.year, AVG(CAST(SUBSTRING(results.time, 1, INSTR(results.time, ':') - 1) AS INTEGER) * 3600 + CAST(SUBSTRING(results.time, INSTR(results.time, ':') + 1, INSTR(results.time, ':') - INSTR(results.time, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTRING(results.time, INSTR(results.time, ':') + 1, INSTR(results.time, '.') - INSTR(results.time, ':') - 1) AS INTEGER)) AS avg_time_seconds FROM results INNER JOIN races ON results.raceid = races.raceid WHERE NOT results.time IS NULL AND results.time LIKE '%%:%%:%%.%%' AND races.year < 1975 GROUP BY races.year",
    "956": "SELECT DISTINCT d.forename, d.surname FROM drivers AS d INNER JOIN results AS r ON d.driverid = r.driverid WHERE STRFTIME('%Y', d.dob) > '1975' AND r.rank = 2",
    "957": "SELECT COUNT(*) FROM drivers INNER JOIN results ON drivers.driverid = results.driverid WHERE drivers.nationality = 'Italian' AND results.time IS NULL",
    "958": "SELECT d.forename, d.surname FROM results AS r INNER JOIN drivers AS d ON r.driverid = d.driverid WHERE r.fastestlaptime = (SELECT MIN(fastestlaptime) FROM results)",
    "959": "SELECT results.fastestlap FROM results INNER JOIN races ON results.raceid = races.raceid WHERE races.year = 2009 AND results.time LIKE '%:%:%.%'",
    "960": "SELECT AVG(results.fastestlapspeed) FROM results INNER JOIN races ON results.raceid = races.raceid WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix'",
    "961": "SELECT races.name, races.year FROM races INNER JOIN results ON races.raceid = results.raceid WHERE NOT results.milliseconds IS NULL ORDER BY results.milliseconds ASC LIMIT 1",
    "962": "SELECT (SUM(CASE WHEN STRFTIME('%Y', drivers.dob) < '1985' AND results.laps > 50 THEN 1 ELSE 0 END) * 100.0 / COUNT(results.driverid)) AS percentage FROM results INNER JOIN drivers ON results.driverid = drivers.driverid INNER JOIN races ON results.raceid = races.raceid WHERE races.year BETWEEN 2000 AND 2005",
    "963": "SELECT COUNT(DISTINCT drivers.driverid) FROM drivers INNER JOIN laptimes ON drivers.driverid = laptimes.driverid WHERE drivers.nationality = 'French' AND (SUBSTRING(laptimes.time, INSTR(laptimes.time, ':') + 1) * 1 + SUBSTRING(laptimes.time, 1, INSTR(laptimes.time, ':') - 1) * 60) < 120",
    "964": "SELECT code FROM drivers WHERE nationality = 'American'",
    "965": "SELECT raceid FROM races WHERE year = 2009",
    "966": "SELECT COUNT(DISTINCT driverid) FROM results WHERE raceid = 18",
    "967": "SELECT code, SUM(CASE WHEN nationality IN ('Netherlandic', 'Dutch') THEN 1 ELSE 0 END) AS netherlandic_count FROM (SELECT code, nationality FROM drivers ORDER BY dob ASC LIMIT 3) AS top_drivers",
    "968": "SELECT driverref FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica'",
    "969": "SELECT COUNT(drivers.driverid) FROM drivers WHERE drivers.nationality = 'British' AND STRFTIME('%Y', drivers.dob) = '1980'",
    "970": "SELECT d.driverid, d.forename, d.surname, MIN(l.time) AS earliest_lap_time FROM drivers AS d INNER JOIN laptimes AS l ON d.driverid = l.driverid WHERE d.nationality = 'German' AND STRFTIME('%Y', d.dob) BETWEEN '1980' AND '1990' GROUP BY d.driverid ORDER BY earliest_lap_time ASC LIMIT 3",
    "971": "SELECT driverref FROM drivers WHERE nationality = 'German' AND dob = (SELECT MIN(dob) FROM drivers WHERE nationality = 'German')",
    "972": "SELECT DISTINCT drivers.driverid, drivers.code FROM drivers INNER JOIN results ON drivers.driverid = results.driverid WHERE STRFTIME('%Y', drivers.dob) = '1971' AND NOT results.fastestlaptime IS NULL",
    "973": "SELECT d.forename, d.surname, lt.time FROM drivers AS d INNER JOIN (SELECT driverid, MAX(time) AS time FROM laptimes GROUP BY driverid) AS lt ON d.driverid = lt.driverid WHERE d.nationality = 'Spanish' AND d.dob < '1982-01-01' ORDER BY lt.time DESC LIMIT 10",
    "974": "SELECT races.year FROM results INNER JOIN races ON results.raceid = races.raceid WHERE results.fastestlaptime = (SELECT MIN(fastestlaptime) FROM results)",
    "975": "SELECT races.year FROM races INNER JOIN results ON races.raceid = results.raceid WHERE results.fastestlapspeed = (SELECT MIN(results.fastestlapspeed) FROM results)",
    "976": "SELECT t1.driverid FROM laptimes AS t1 INNER JOIN (SELECT driverid, MIN(time) AS min_time FROM laptimes WHERE lap = 1 GROUP BY driverid) AS t2 ON t1.driverid = t2.driverid AND t1.time = t2.min_time WHERE t1.lap = 1 ORDER BY t2.min_time ASC LIMIT 5",
    "977": "SELECT COUNT(*) FROM results WHERE raceid > 50 AND raceid < 100 AND NOT time IS NULL AND statusid = 2",
    "978": "SELECT COUNT(*) AS count, location, lat, lng FROM circuits WHERE country = 'Austria'",
    "979": "SELECT raceid FROM (SELECT raceid, COUNT(raceid) AS finisher_count FROM results WHERE NOT time IS NULL GROUP BY raceid) ORDER BY finisher_count DESC LIMIT 1",
    "980": "SELECT DISTINCT t1.driverref, t1.nationality, t1.dob FROM drivers AS t1 INNER JOIN qualifying AS t2 ON t1.driverid = t2.driverid WHERE t2.raceid = 23 AND NOT t2.q2 IS NULL",
    "981": "SELECT STRFTIME('%Y', races.date) AS year, drivers.forename, drivers.surname, races.date, races.time FROM qualifying INNER JOIN races ON qualifying.raceid = races.raceid INNER JOIN drivers ON qualifying.driverid = drivers.driverid WHERE drivers.dob = (SELECT MAX(dob) FROM drivers) ORDER BY races.date ASC LIMIT 1",
    "982": "SELECT COUNT(DISTINCT drivers.driverid) FROM drivers INNER JOIN results ON drivers.driverid = results.driverid INNER JOIN status ON results.statusid = status.statusid WHERE drivers.nationality = 'American' AND status.status = 'Puncture'",
    "983": "SELECT t1.url FROM constructors AS t1 INNER JOIN (SELECT constructorid, SUM(points) AS total_points FROM constructorstandings GROUP BY constructorid ORDER BY total_points DESC LIMIT 1) AS t2 ON t1.constructorid = t2.constructorid WHERE t1.nationality = 'Italian'",
    "984": "SELECT constructors.url FROM constructors INNER JOIN (SELECT constructorid, SUM(wins) AS total_wins FROM constructorstandings GROUP BY constructorid ORDER BY total_wins DESC LIMIT 1) AS top_constructor ON constructors.constructorid = top_constructor.constructorid",
    "985": "SELECT d.forename, d.surname FROM drivers AS d JOIN laptimes AS l ON d.driverid = l.driverid JOIN races AS r ON l.raceid = r.raceid WHERE r.name = 'French Grand Prix' AND l.lap = 3 ORDER BY l.time DESC LIMIT 1",
    "986": "SELECT races.name, laptimes.milliseconds FROM races INNER JOIN laptimes ON races.raceid = laptimes.raceid WHERE laptimes.lap = 1 AND laptimes.milliseconds = (SELECT MIN(milliseconds) FROM laptimes WHERE lap = 1)",
    "987": "SELECT AVG(results.fastestlaptime) AS average_fastest_lap_time FROM results INNER JOIN races ON results.raceid = races.raceid WHERE races.year = 2006 AND races.name = 'United States Grand Prix' AND results.rank < 11",
    "988": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN pitstops ON drivers.driverid = pitstops.driverid WHERE drivers.nationality = 'German' AND STRFTIME('%Y', drivers.dob) BETWEEN '1980' AND '1985' GROUP BY drivers.driverid ORDER BY AVG(pitstops.duration) ASC LIMIT 3",
    "989": "SELECT drivers.forename, drivers.surname, results.time FROM races INNER JOIN results ON races.raceid = results.raceid INNER JOIN drivers ON results.driverid = drivers.driverid WHERE races.name = 'Canadian Grand Prix' AND races.year = 2008 AND results.position = 1",
    "990": "SELECT t3.constructorref, t3.url FROM results AS t2 INNER JOIN (SELECT raceid FROM races WHERE year = 2009 AND name = 'Singapore Grand Prix') AS t1 ON t1.raceid = t2.raceid INNER JOIN constructors AS t3 ON t3.constructorid = t2.constructorid WHERE t2.milliseconds = (SELECT MIN(milliseconds) FROM results WHERE raceid = t1.raceid)",
    "991": "SELECT forename, surname, dob FROM drivers WHERE nationality = 'Austrian' AND STRFTIME('%Y', dob) BETWEEN '1981' AND '1991'",
    "992": "SELECT forename || ' ' || surname AS fullname, url, dob FROM drivers WHERE nationality = 'German' AND STRFTIME('%Y', dob) BETWEEN '1971' AND '1985' ORDER BY dob DESC",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring'",
    "994": "SELECT c.name, c.nationality, SUM(cs.points) AS total_points FROM races AS r INNER JOIN constructorstandings AS cs ON r.raceid = cs.raceid INNER JOIN constructors AS c ON cs.constructorid = c.constructorid WHERE r.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 GROUP BY c.constructorid ORDER BY total_points DESC LIMIT 1",
    "995": "SELECT AVG(results.points) AS average_score FROM drivers INNER JOIN results ON drivers.driverid = results.driverid INNER JOIN races ON results.raceid = races.raceid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Turkish Grand Prix'",
    "996": "SELECT CAST(COUNT(raceid) AS REAL) / 11 AS annual_average_races FROM races WHERE date BETWEEN '2000-01-01' AND '2010-12-31'",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(nationality) DESC LIMIT 1",
    "998": "SELECT driverstandings.wins FROM driverstandings WHERE driverstandings.position = 91",
    "999": "SELECT t1.name FROM races AS t1 INNER JOIN results AS t2 ON t1.raceid = t2.raceid WHERE t2.fastestlaptime = (SELECT MIN(fastestlaptime) FROM results)",
    "1000": "SELECT circuits.location, circuits.country FROM circuits INNER JOIN races ON circuits.circuitid = races.circuitid WHERE races.date = (SELECT MAX(date) FROM races)",
    "1001": "SELECT d.forename, d.surname FROM drivers AS d INNER JOIN qualifying AS q ON d.driverid = q.driverid INNER JOIN races AS r ON q.raceid = r.raceid INNER JOIN circuits AS c ON r.circuitid = c.circuitid WHERE r.year = 2008 AND c.name = 'Marina Bay Street Circuit' AND NOT q.q3 IS NULL ORDER BY q.q3 ASC LIMIT 1",
    "1002": "SELECT d.forename, d.surname, d.nationality, r.name FROM drivers AS d INNER JOIN results AS res ON d.driverid = res.driverid INNER JOIN races AS r ON res.raceid = r.raceid WHERE d.dob = (SELECT MAX(dob) FROM drivers) ORDER BY r.date ASC LIMIT 1",
    "1003": "SELECT COUNT(t2.driverid) AS accident_count FROM races AS t1 INNER JOIN results AS t2 ON t1.raceid = t2.raceid WHERE t1.name = 'Canadian Grand Prix' AND t2.statusid = 3 GROUP BY t2.driverid ORDER BY accident_count DESC LIMIT 1",
    "1004": "SELECT ds.wins, d.forename, d.surname FROM drivers AS d INNER JOIN driverstandings AS ds ON d.driverid = ds.driverid WHERE d.dob = (SELECT MIN(dob) FROM drivers)",
    "1005": "SELECT MAX(duration) AS longest_pit_stop_time FROM pitstops",
    "1006": "SELECT MIN(milliseconds) AS fastest_lap_time FROM laptimes",
    "1007": "SELECT MAX(pitstops.duration) FROM pitstops INNER JOIN drivers ON pitstops.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'",
    "1008": "SELECT ps.lap FROM pitstops AS ps INNER JOIN races AS r ON ps.raceid = r.raceid INNER JOIN drivers AS d ON ps.driverid = d.driverid WHERE r.year = 2011 AND r.name = 'Australian Grand Prix' AND d.forename = 'Lewis' AND d.surname = 'Hamilton'",
    "1009": "SELECT pitstops.duration FROM pitstops INNER JOIN races ON pitstops.raceid = races.raceid WHERE races.year = 2011 AND races.name = 'Australian Grand Prix'",
    "1010": "SELECT MIN(t.\"time\") AS lap_record FROM \"drivers\" AS d INNER JOIN \"laptimes\" AS t ON d.driverid = t.driverid WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'",
    "1011": "SELECT d.forename, d.surname FROM drivers AS d INNER JOIN (SELECT driverid, MIN(CAST(SUBSTRING(time, 1, INSTR(time, ':') - 1) AS REAL) * 60 + CAST(SUBSTRING(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL) + CAST(SUBSTRING(time, INSTR(time, '.') + 1) AS REAL) / 1000) AS numeric_time FROM laptimes GROUP BY driverid) AS lt ON d.driverid = lt.driverid ORDER BY lt.numeric_time ASC LIMIT 20",
    "1012": "SELECT lt.position FROM drivers AS d INNER JOIN laptimes AS lt ON d.driverid = lt.driverid WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND lt.time = (SELECT MIN(lt.time) FROM drivers AS d INNER JOIN laptimes AS lt ON d.driverid = lt.driverid WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton')",
    "1013": "SELECT MIN(laptimes.milliseconds) FROM races INNER JOIN laptimes ON races.raceid = laptimes.raceid WHERE races.name = 'Austrian Grand Prix'",
    "1014": "SELECT c.name AS circuit_name, MIN(l.time) AS fastest_lap_time FROM laptimes AS l INNER JOIN races AS r ON l.raceid = r.raceid INNER JOIN circuits AS c ON r.circuitid = c.circuitid WHERE c.country = 'Italy' GROUP BY c.circuitid, c.name",
    "1015": "SELECT r.name FROM races AS r INNER JOIN laptimes AS l ON r.raceid = l.raceid WHERE r.name = 'Austrian Grand Prix' ORDER BY l.milliseconds ASC LIMIT 1",
    "1016": "SELECT pitstops.duration FROM races INNER JOIN pitstops ON races.raceid = pitstops.raceid WHERE races.name = 'Austrian Grand Prix'",
    "1017": "SELECT DISTINCT circuits.lat, circuits.lng FROM laptimes INNER JOIN races ON laptimes.raceid = races.raceid INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE laptimes.time = '1:29.488'",
    "1018": "SELECT AVG(pitstops.milliseconds) FROM drivers INNER JOIN pitstops ON drivers.driverid = pitstops.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'",
    "1019": "SELECT AVG(laptimes.milliseconds) FROM laptimes INNER JOIN races ON laptimes.raceid = races.raceid INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.country = 'Italy'",
    "1020": "SELECT player_api_id FROM player_attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM player_attributes)",
    "1021": "SELECT player_name, height FROM player WHERE height = (SELECT MAX(height) FROM player)",
    "1022": "SELECT preferred_foot FROM player_attributes WHERE potential = (SELECT MIN(potential) FROM player_attributes)",
    "1023": "SELECT COUNT(id) FROM player_attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low'",
    "1024": "SELECT player_api_id FROM player_attributes ORDER BY crossing DESC LIMIT 5",
    "1025": "SELECT t2.name FROM (SELECT league_id, SUM(home_team_goal + away_team_goal) AS league_total_goals FROM match WHERE season = '2015/2016' GROUP BY league_id) AS t1 INNER JOIN league AS t2 ON t1.league_id = t2.id ORDER BY t1.league_total_goals DESC LIMIT 1",
    "1026": "SELECT team.team_long_name FROM team INNER JOIN (SELECT home_team_api_id, COUNT(*) AS losses FROM match WHERE season = '2015/2016' AND home_team_goal - away_team_goal < 0 GROUP BY home_team_api_id ORDER BY losses ASC LIMIT 1) AS losses ON team.team_api_id = losses.home_team_api_id",
    "1027": "SELECT p.player_name FROM player AS p INNER JOIN player_attributes AS pa ON p.player_api_id = pa.player_api_id ORDER BY pa.penalties DESC LIMIT 10",
    "1028": "SELECT t2.team_long_name FROM match AS m1 INNER JOIN team AS t2 ON m1.away_team_api_id = t2.team_api_id INNER JOIN league AS l1 ON m1.league_id = l1.id WHERE l1.name = 'Scotland Premier League' AND m1.season = '2009/2010' AND m1.away_team_goal > m1.home_team_goal GROUP BY t2.id ORDER BY COUNT(*) DESC LIMIT 1",
    "1029": "SELECT buildupplayspeed FROM team_attributes ORDER BY buildupplayspeed DESC LIMIT 4",
    "1030": "SELECT t2.name FROM match AS t1 INNER JOIN league AS t2 ON t1.league_id = t2.id WHERE t1.season = '2015/2016' GROUP BY t2.name ORDER BY SUM(CASE WHEN t1.home_team_goal = t1.away_team_goal THEN 1 ELSE 0 END) DESC LIMIT 1",
    "1031": "SELECT STRFTIME('%Y', DATETIME('now')) - STRFTIME('%Y', p.birthday) AS age FROM player_attributes AS pa INNER JOIN player AS p ON pa.player_api_id = p.player_api_id WHERE pa.sprint_speed >= 97 AND STRFTIME('%Y', pa.date) BETWEEN '2013' AND '2015'",
    "1032": "SELECT league.name, COUNT(match.id) AS match_count FROM match INNER JOIN league ON match.league_id = league.id GROUP BY match.league_id ORDER BY match_count DESC LIMIT 1",
    "1033": "SELECT AVG(height) FROM player WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00'",
    "1034": "SELECT player_api_id FROM player_attributes WHERE STRFTIME('%Y', date) = '2010' AND overall_rating > (SELECT AVG(overall_rating) FROM player_attributes WHERE STRFTIME('%Y', date) = '2010')",
    "1035": "SELECT team_fifa_api_id FROM team_attributes WHERE buildupplayspeed > 50 AND buildupplayspeed < 60",
    "1036": "SELECT DISTINCT \"Team\".\"team_long_name\" FROM \"Team_Attributes\" INNER JOIN \"Team\" ON \"Team_Attributes\".\"team_api_id\" = \"Team\".\"team_api_id\" WHERE STRFTIME('%Y', \"Team_Attributes\".\"date\") = '2012' AND \"Team_Attributes\".\"buildUpPlayPassing\" > (SELECT AVG(\"buildUpPlayPassing\") FROM \"Team_Attributes\" WHERE STRFTIME('%Y', \"date\") = '2012' AND NOT \"buildUpPlayPassing\" IS NULL)",
    "1037": "SELECT CAST(SUM(CASE WHEN player_attributes.preferred_foot = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(player_attributes.player_fifa_api_id) AS percentage_of_left_foot_players FROM player INNER JOIN player_attributes ON player.player_fifa_api_id = player_attributes.player_fifa_api_id WHERE STRFTIME('%Y', player.birthday) BETWEEN '1987' AND '1992'",
    "1038": "SELECT league.name, SUM(match.home_team_goal + match.away_team_goal) AS total_goals FROM match INNER JOIN league ON match.league_id = league.id GROUP BY league.name ORDER BY total_goals ASC LIMIT 5",
    "1039": "SELECT AVG(player_attributes.long_shots) AS average_long_shots FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'Ahmed Samir Farag'",
    "1040": "SELECT DISTINCT player.player_name FROM player INNER JOIN (SELECT player_fifa_api_id, AVG(heading_accuracy) AS avg_accuracy FROM player_attributes GROUP BY player_fifa_api_id) AS player_attributes_avg ON player.player_fifa_api_id = player_attributes_avg.player_fifa_api_id WHERE player.height > 180 ORDER BY player_attributes_avg.avg_accuracy DESC LIMIT 10",
    "1041": "SELECT t1.team_long_name FROM team AS t1 INNER JOIN team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildupplaydribblingclass = 'Normal' AND STRFTIME('%Y', t2.date) = '2014' AND t2.chancecreationpassing < (SELECT AVG(chancecreationpassing) FROM team_attributes) ORDER BY t2.chancecreationpassing DESC",
    "1042": "SELECT league.name FROM league INNER JOIN (SELECT league_id, SUM(home_team_goal) AS total_home_goals, COUNT(*) AS home_team_count FROM match WHERE season = '2009/2010' GROUP BY league_id) AS homegoals ON league.id = homegoals.league_id INNER JOIN (SELECT league_id, SUM(away_team_goal) AS total_away_goals, COUNT(*) AS away_team_count FROM match WHERE season = '2009/2010' GROUP BY league_id) AS awaygoals ON league.id = awaygoals.league_id WHERE homegoals.total_home_goals * awaygoals.away_team_count > awaygoals.total_away_goals * homegoals.home_team_count",
    "1043": "SELECT team_short_name FROM team WHERE team_long_name = 'Queens Park Rangers'",
    "1044": "SELECT player_name FROM player WHERE STRFTIME('%Y-%m', birthday) = '1970-10'",
    "1045": "SELECT DISTINCT t2.attacking_work_rate FROM player AS t1 INNER JOIN player_attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Franco Zennaro'",
    "1046": "SELECT DISTINCT team_attributes.buildupplaypositioningclass FROM team INNER JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team.team_long_name = 'ADO Den Haag'",
    "1047": "SELECT player_attributes.heading_accuracy FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'Francois Affolter' AND player_attributes.date = '2014-09-18 00:00:00'",
    "1048": "SELECT player_attributes.overall_rating FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'Gabriel Tamas' AND STRFTIME('%Y', player_attributes.date) = '2011'",
    "1049": "SELECT COUNT(*) FROM match AS t1 JOIN league AS t2 ON t1.league_id = t2.id WHERE t1.season = '2015/2016' AND t2.name = 'Scotland Premier League'",
    "1050": "SELECT t2.preferred_foot FROM player AS t1 INNER JOIN player_attributes AS t2 ON t1.player_api_id = t2.player_api_id ORDER BY t1.birthday DESC LIMIT 1",
    "1051": "SELECT DISTINCT player.player_name FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.potential = (SELECT MAX(potential) FROM player_attributes)",
    "1052": "SELECT COUNT(*) FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.weight < 130 AND player_attributes.preferred_foot = 'left'",
    "1053": "SELECT DISTINCT t.team_short_name FROM team AS t INNER JOIN team_attributes AS ta ON t.team_api_id = ta.team_api_id WHERE ta.chancecreationpassingclass = 'Risky'",
    "1054": "SELECT player_attributes.defensive_work_rate FROM player_attributes INNER JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'David Wilson'",
    "1055": "SELECT player.birthday FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id ORDER BY player_attributes.overall_rating DESC LIMIT 1",
    "1056": "SELECT league.name FROM country INNER JOIN league ON country.id = league.country_id WHERE country.name = 'Netherlands'",
    "1057": "SELECT AVG(\"Match\".\"home_team_goal\") AS average_home_team_goal FROM \"Match\" INNER JOIN \"Country\" ON \"Match\".\"country_id\" = \"Country\".\"id\" WHERE \"Country\".\"name\" = 'Poland' AND \"Match\".\"season\" = '2010/2011'",
    "1058": "WITH maxheight AS (SELECT MAX(height) AS max_height FROM player), minheight AS (SELECT MIN(height) AS min_height FROM player), avgfinishingmaxheight AS (SELECT AVG(finishing) AS avg_finishing FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE height = (SELECT max_height FROM maxheight))), avgfinishingminheight AS (SELECT AVG(finishing) AS avg_finishing FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE height = (SELECT min_height FROM minheight))) SELECT player.player_name FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height = (CASE WHEN (SELECT avg_finishing FROM avgfinishingmaxheight) > (SELECT avg_finishing FROM avgfinishingminheight) THEN (SELECT max_height FROM maxheight) ELSE (SELECT min_height FROM minheight) END)",
    "1059": "SELECT player_name FROM player WHERE height > 180",
    "1060": "SELECT COUNT(*) FROM player WHERE STRFTIME('%Y', birthday) > '1990'",
    "1061": "SELECT COUNT(*) FROM player WHERE player_name LIKE 'Adam%' AND weight > 170",
    "1062": "SELECT DISTINCT p.player_name FROM player_attributes AS pa INNER JOIN player AS p ON pa.player_api_id = p.player_api_id WHERE pa.overall_rating > 80 AND STRFTIME('%Y', pa.date) BETWEEN '2008' AND '2010'",
    "1063": "SELECT player_attributes.potential FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'Aaron Doran'",
    "1064": "SELECT DISTINCT player.player_name FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.preferred_foot = 'left'",
    "1065": "SELECT team.team_long_name FROM team INNER JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplayspeedclass = 'Fast'",
    "1066": "SELECT team_attributes.buildupplaypassingclass FROM team INNER JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team.team_short_name = 'CLB'",
    "1067": "SELECT DISTINCT team.team_short_name FROM team INNER JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplaypassing > 70",
    "1068": "SELECT AVG(t2.overall_rating) FROM player AS t1 INNER JOIN player_attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.height > 170 AND STRFTIME('%Y', t2.date) BETWEEN '2010' AND '2015'",
    "1069": "SELECT player_name FROM player WHERE height = (SELECT MIN(height) FROM player)",
    "1070": "SELECT country.name FROM country JOIN league ON country.id = league.country_id WHERE league.name = 'Italy Serie A'",
    "1071": "SELECT DISTINCT team.team_short_name FROM team INNER JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplayspeed = 31 AND team_attributes.buildupplaydribbling = 53 AND team_attributes.buildupplaypassing = 32",
    "1072": "SELECT AVG(player_attributes.overall_rating) AS average_overall_rating FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'Aaron Doran'",
    "1073": "SELECT COUNT(*) FROM match INNER JOIN league ON match.league_id = league.id WHERE league.name = 'Germany 1. Bundesliga' AND STRFTIME('%Y-%m', match.date) BETWEEN '2008-08' AND '2008-10'",
    "1074": "SELECT DISTINCT t1.team_short_name FROM team AS t1 INNER JOIN match AS t2 ON t1.team_api_id = t2.home_team_api_id WHERE t2.home_team_goal = 10",
    "1075": "SELECT player.player_name FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.potential = 61 AND player_attributes.balance = (SELECT MAX(balance) FROM player_attributes WHERE potential = 61)",
    "1076": "SELECT (SUM(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.ball_control ELSE 0 END) / COUNT(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.id ELSE NULL END)) - (SUM(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.ball_control ELSE 0 END) / COUNT(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.id ELSE NULL END)) AS difference FROM player AS t1 INNER JOIN player_attributes AS t2 ON t1.player_api_id = t2.player_api_id",
    "1077": "SELECT team_long_name FROM team WHERE team_short_name = 'GEN'",
    "1078": "SELECT player_name FROM player WHERE birthday = (SELECT MIN(birthday) FROM player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada')) AND player_name IN ('Aaron Lennon', 'Abdelaziz Barrada')",
    "1079": "SELECT player_name FROM player WHERE height = (SELECT MAX(height) FROM player)",
    "1080": "SELECT COUNT(id) FROM player_attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'",
    "1081": "SELECT country.name FROM league INNER JOIN country ON league.country_id = country.id WHERE league.name = 'Belgium Jupiler League'",
    "1082": "SELECT league.name FROM league INNER JOIN country ON league.country_id = country.id WHERE country.name = 'Germany'",
    "1083": "SELECT t1.player_name FROM player AS t1 INNER JOIN player_attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.overall_rating = (SELECT MAX(overall_rating) FROM player_attributes)",
    "1084": "SELECT COUNT(DISTINCT t1.player_api_id) FROM player AS t1 INNER JOIN player_attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y', t1.birthday) < '1986' AND t2.defensive_work_rate = 'high'",
    "1085": "SELECT player.player_name FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY player_attributes.crossing DESC LIMIT 1",
    "1086": "SELECT player_attributes.heading_accuracy FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'Ariel Borysiuk'",
    "1087": "SELECT COUNT(player.id) FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height > 180 AND player_attributes.volleys > 70",
    "1088": "SELECT DISTINCT player.player_name FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.volleys > 70 AND player_attributes.dribbling > 70",
    "1089": "SELECT COUNT(match.id) FROM match INNER JOIN country ON match.country_id = country.id WHERE match.season = '2008/2009' AND country.name = 'Belgium'",
    "1090": "SELECT t2.long_passing FROM player AS t1 INNER JOIN player_attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.birthday = (SELECT MIN(birthday) FROM player) LIMIT 1",
    "1091": "SELECT COUNT(match.id) FROM match INNER JOIN league ON match.league_id = league.id WHERE SUBSTRING(match.date, 1, 7) = '2009-04' AND league.name = 'Belgium Jupiler League'",
    "1092": "SELECT t1.name FROM league AS t1 INNER JOIN match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2008/2009' GROUP BY t1.name ORDER BY COUNT(*) DESC LIMIT 1",
    "1093": "SELECT AVG(player_attributes.overall_rating) AS average_overall_rating FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE STRFTIME('%Y', player.birthday) < '1986'",
    "1094": "SELECT CAST((aborysiuk.overall_rating - ppuel.overall_rating) AS REAL) * 100 / ppuel.overall_rating AS percentage_difference FROM player_attributes AS aborysiuk INNER JOIN player AS p1 ON aborysiuk.player_api_id = p1.player_api_id INNER JOIN player_attributes AS ppuel ON ppuel.player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel') WHERE p1.player_name = 'Ariel Borysiuk'",
    "1095": "SELECT AVG(team_attributes.buildupplayspeed) FROM team INNER JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team.team_long_name = 'Heart of Midlothian'",
    "1096": "SELECT AVG(t2.overall_rating) FROM player AS t1 INNER JOIN player_attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Pietro Marino'",
    "1097": "SELECT SUM(t1.crossing) AS total_crossing_score FROM player_attributes AS t1 INNER JOIN player AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.player_name = 'Aaron Lennox'",
    "1098": "SELECT t2.chancecreationpassing, t2.chancecreationpassingclass FROM team AS t1 INNER JOIN team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'Ajax' AND t2.chancecreationpassing = (SELECT MAX(chancecreationpassing) FROM team_attributes WHERE team_api_id = (SELECT team_api_id FROM team WHERE team_long_name = 'Ajax'))",
    "1099": "SELECT t2.preferred_foot FROM player AS t1 INNER JOIN player_attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Abdou Diallo'",
    "1100": "SELECT MAX(overall_rating) FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'Dorlan Pabon'",
    "1101": "SELECT AVG(\"Match\".\"away_team_goal\") AS average_away_goals FROM \"Country\" INNER JOIN \"Match\" ON \"Country\".\"id\" = \"Match\".\"country_id\" INNER JOIN \"Team\" ON \"Match\".\"away_team_api_id\" = \"Team\".\"team_api_id\" WHERE \"Country\".\"name\" = 'Italy' AND \"Team\".\"team_long_name\" = 'Parma'",
    "1102": "SELECT \"Player\".\"player_name\" FROM \"Player\" INNER JOIN \"Player_Attributes\" ON \"Player\".\"player_api_id\" = \"Player_Attributes\".\"player_api_id\" WHERE \"Player_Attributes\".\"overall_rating\" = 77 AND STRFTIME('%Y-%m-%d', \"Player_Attributes\".\"date\") = '2016-06-23' ORDER BY \"Player\".\"birthday\" ASC LIMIT 1",
    "1103": "SELECT player_attributes.overall_rating FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'Aaron Mooy' AND player_attributes.date LIKE '2016-02-04%'",
    "1104": "SELECT t2.potential FROM player AS t1 INNER JOIN player_attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Francesco Parravicini' AND STRFTIME('%Y-%m-%d', t2.date) = '2010-08-30'",
    "1105": "SELECT player_attributes.attacking_work_rate FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'Francesco Migliore' AND player_attributes.date LIKE '2015-05-01%'",
    "1106": "SELECT player_attributes.defensive_work_rate FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'Kevin Berigaud' AND player_attributes.date = '2013-02-22 00:00:00'",
    "1107": "SELECT t2.date FROM player AS t1 INNER JOIN player_attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Kevin Constant' ORDER BY t2.crossing DESC, t2.date ASC LIMIT 1",
    "1108": "SELECT team_attributes.buildupplayspeedclass FROM team INNER JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team.team_long_name = 'Willem II' AND STRFTIME('%Y-%m-%d', team_attributes.date) = '2011-02-22'",
    "1109": "SELECT team_attributes.buildupplaydribblingclass FROM team INNER JOIN team_attributes ON team.team_fifa_api_id = team_attributes.team_fifa_api_id WHERE team.team_short_name = 'LEI' AND team_attributes.date = '2015-09-10 00:00:00'",
    "1110": "SELECT t2.buildupplaypassingclass FROM team AS t1 INNER JOIN team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'FC Lorient' AND t2.date LIKE '2010-02-22%'",
    "1111": "SELECT team_attributes.chancecreationpassingclass FROM team INNER JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team.team_long_name = 'PEC Zwolle' AND STRFTIME('%Y-%m-%d', team_attributes.date) = '2013-09-20'",
    "1112": "SELECT \"Team_Attributes\".\"chanceCreationCrossingClass\" FROM \"Team\" INNER JOIN \"Team_Attributes\" ON \"Team\".\"team_api_id\" = \"Team_Attributes\".\"team_api_id\" WHERE \"Team\".\"team_long_name\" = 'Hull City' AND \"Team_Attributes\".\"date\" = '2010-02-22 00:00:00'",
    "1113": "SELECT \"Team_Attributes\".\"defenceAggressionClass\" FROM \"Team_Attributes\" INNER JOIN \"Team\" ON \"Team_Attributes\".\"team_api_id\" = \"Team\".\"team_api_id\" WHERE \"Team\".\"team_long_name\" = 'Hannover 96' AND STRFTIME('%Y-%m-%d', \"Team_Attributes\".\"date\") = '2015-09-10'",
    "1114": "SELECT AVG(player_attributes.overall_rating) FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'Marko Arnautovic' AND STRFTIME('%Y-%m-%d', player_attributes.date) BETWEEN '2007-02-22' AND '2016-04-21'",
    "1115": "SELECT CAST((donovan.overall_rating - bowery.overall_rating) AS REAL) * 100 / donovan.overall_rating AS percentage_difference FROM player_attributes AS donovan JOIN player_attributes AS bowery ON STRFTIME('%Y-%m-%d', donovan.date) = '2013-07-12' AND STRFTIME('%Y-%m-%d', bowery.date) = '2013-07-12' JOIN player AS donovan_player ON donovan.player_api_id = donovan_player.player_api_id JOIN player AS bowery_player ON bowery.player_api_id = bowery_player.player_api_id WHERE donovan_player.player_name = 'Landon Donovan' AND bowery_player.player_name = 'Jordan Bowery'",
    "1116": "SELECT player.player_name FROM player WHERE player.height = (SELECT MAX(player.height) FROM player)",
    "1117": "SELECT player_api_id FROM player ORDER BY weight DESC LIMIT 10",
    "1118": "SELECT player_name FROM player WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', birthday) - (STRFTIME('%m-%d', CURRENT_TIMESTAMP) < STRFTIME('%m-%d', birthday)) >= 35",
    "1119": "SELECT SUM(CASE WHEN t1.player_api_id IN (t2.home_player_1, t2.home_player_2, t2.home_player_3, t2.home_player_4, t2.home_player_5, t2.home_player_6, t2.home_player_7, t2.home_player_8, t2.home_player_9, t2.home_player_10, t2.home_player_11) THEN t2.home_team_goal ELSE 0 END) AS total_home_team_goals FROM player AS t1 INNER JOIN match AS t2 ON t1.player_api_id IN (t2.home_player_1, t2.home_player_2, t2.home_player_3, t2.home_player_4, t2.home_player_5, t2.home_player_6, t2.home_player_7, t2.home_player_8, t2.home_player_9, t2.home_player_10, t2.home_player_11) WHERE t1.player_name = 'Aaron Lennon'",
    "1120": "SELECT SUM(m.away_team_goal) FROM match AS m INNER JOIN (SELECT player_api_id FROM player WHERE player_name = 'Daan Smith' OR player_name = 'Filipe Ferreira') AS p ON m.away_player_1 = p.player_api_id OR m.away_player_2 = p.player_api_id OR m.away_player_3 = p.player_api_id OR m.away_player_4 = p.player_api_id OR m.away_player_5 = p.player_api_id OR m.away_player_6 = p.player_api_id OR m.away_player_7 = p.player_api_id OR m.away_player_8 = p.player_api_id OR m.away_player_9 = p.player_api_id OR m.away_player_10 = p.player_api_id OR m.away_player_11 = p.player_api_id",
    "1121": "SELECT SUM(m.home_team_goal) AS total_home_team_goals FROM player AS p INNER JOIN match AS m ON p.player_api_id IN (m.home_player_1, m.home_player_2, m.home_player_3, m.home_player_4, m.home_player_5, m.home_player_6, m.home_player_7, m.home_player_8, m.home_player_9, m.home_player_10, m.home_player_11) WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', p.birthday) <= 30",
    "1122": "SELECT player.player_name FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.overall_rating = (SELECT MAX(overall_rating) FROM player_attributes)",
    "1123": "SELECT player.player_name FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.potential = (SELECT MAX(potential) FROM player_attributes)",
    "1124": "SELECT player.player_name FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.attacking_work_rate = 'high'",
    "1125": "SELECT player.player_name FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.finishing = 1 ORDER BY player.birthday ASC LIMIT 1",
    "1126": "SELECT DISTINCT player.player_name FROM player INNER JOIN match ON player.player_api_id IN (match.home_player_1, match.home_player_2, match.home_player_3, match.home_player_4, match.home_player_5, match.home_player_6, match.home_player_7, match.home_player_8, match.home_player_9, match.home_player_10, match.home_player_11, match.away_player_1, match.away_player_2, match.away_player_3, match.away_player_4, match.away_player_5, match.away_player_6, match.away_player_7, match.away_player_8, match.away_player_9, match.away_player_10, match.away_player_11) INNER JOIN league ON league.id = match.league_id INNER JOIN country ON country.id = league.country_id WHERE country.name = 'Belgium'",
    "1127": "SELECT DISTINCT c.name FROM player_attributes AS pa INNER JOIN player AS p ON pa.player_api_id = p.player_api_id INNER JOIN match AS m ON p.player_api_id = m.home_player_1 OR p.player_api_id = m.home_player_2 OR p.player_api_id = m.home_player_3 OR p.player_api_id = m.home_player_4 OR p.player_api_id = m.home_player_5 OR p.player_api_id = m.home_player_6 OR p.player_api_id = m.home_player_7 OR p.player_api_id = m.home_player_8 OR p.player_api_id = m.home_player_9 OR p.player_api_id = m.home_player_10 OR p.player_api_id = m.home_player_11 OR p.player_api_id = m.away_player_1 OR p.player_api_id = m.away_player_2 OR p.player_api_id = m.away_player_3 OR p.player_api_id = m.away_player_4 OR p.player_api_id = m.away_player_5 OR p.player_api_id = m.away_player_6 OR p.player_api_id = m.away_player_7 OR p.player_api_id = m.away_player_8 OR p.player_api_id = m.away_player_9 OR p.player_api_id = m.away_player_10 OR p.player_api_id = m.away_player_11 INNER JOIN country AS c ON m.country_id = c.id WHERE pa.vision > 89",
    "1128": "SELECT c.name FROM country AS c JOIN league AS l ON c.id = l.country_id JOIN match AS m ON l.id = m.league_id JOIN team AS t ON m.home_team_api_id = t.team_api_id OR m.away_team_api_id = t.team_api_id JOIN player AS p ON p.player_api_id = m.home_player_1 OR p.player_api_id = m.home_player_2 OR p.player_api_id = m.home_player_3 OR p.player_api_id = m.home_player_4 OR p.player_api_id = m.home_player_5 OR p.player_api_id = m.home_player_6 OR p.player_api_id = m.home_player_7 OR p.player_api_id = m.home_player_8 OR p.player_api_id = m.home_player_9 OR p.player_api_id = m.home_player_10 OR p.player_api_id = m.home_player_11 OR p.player_api_id = m.away_player_1 OR p.player_api_id = m.away_player_2 OR p.player_api_id = m.away_player_3 OR p.player_api_id = m.away_player_4 OR p.player_api_id = m.away_player_5 OR p.player_api_id = m.away_player_6 OR p.player_api_id = m.away_player_7 OR p.player_api_id = m.away_player_8 OR p.player_api_id = m.away_player_9 OR p.player_api_id = m.away_player_10 OR p.player_api_id = m.away_player_11 GROUP BY c.name ORDER BY AVG(p.weight) DESC LIMIT 1",
    "1129": "SELECT team.team_long_name FROM team INNER JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplayspeedclass = 'Slow'",
    "1130": "SELECT DISTINCT team.team_short_name FROM team_attributes INNER JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team_attributes.chancecreationpassingclass = 'Safe'",
    "1131": "SELECT AVG(p.height) AS average_height FROM player AS p INNER JOIN match AS m ON p.player_api_id IN (m.home_player_1, m.home_player_2, m.home_player_3, m.home_player_4, m.home_player_5, m.home_player_6, m.home_player_7, m.home_player_8, m.home_player_9, m.home_player_10, m.home_player_11, m.away_player_1, m.away_player_2, m.away_player_3, m.away_player_4, m.away_player_5, m.away_player_6, m.away_player_7, m.away_player_8, m.away_player_9, m.away_player_10, m.away_player_11) INNER JOIN league AS l ON m.league_id = l.id INNER JOIN country AS c ON l.country_id = c.id WHERE c.name = 'Italy'",
    "1132": "SELECT player_name FROM player WHERE height > 180 ORDER BY player_name ASC LIMIT 3",
    "1133": "SELECT COUNT(*) FROM player WHERE player_name LIKE 'Aaron%' AND birthday > '1990-12-31'",
    "1134": "SELECT SUM(CASE WHEN id = 6 THEN jumping ELSE 0 END) - SUM(CASE WHEN id = 23 THEN jumping ELSE 0 END) AS difference FROM player_attributes",
    "1135": "SELECT player_api_id FROM player_attributes WHERE preferred_foot = 'right' ORDER BY potential ASC LIMIT 5",
    "1136": "SELECT COUNT(*) FROM player_attributes WHERE crossing = (SELECT MAX(crossing) FROM player_attributes WHERE preferred_foot = 'left') AND preferred_foot = 'left'",
    "1137": "SELECT CAST(SUM(CASE WHEN strength > 80 AND stamina > 80 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM player_attributes",
    "1138": "SELECT country.name FROM league INNER JOIN country ON league.country_id = country.id WHERE league.name = 'Poland Ekstraklasa'",
    "1139": "SELECT home_team_goal, away_team_goal FROM \"Match\" INNER JOIN \"League\" ON \"Match\".\"league_id\" = \"League\".\"id\" WHERE \"League\".\"name\" = 'Belgium Jupiler League' AND \"Match\".\"date\" LIKE '2008-09-24%'",
    "1140": "SELECT DISTINCT t2.sprint_speed, t2.agility, t2.acceleration FROM player AS t1 INNER JOIN player_attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Alexis Blin'",
    "1141": "SELECT team_attributes.buildupplayspeedclass FROM team INNER JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team.team_long_name = 'KSV Cercle Brugge'",
    "1142": "SELECT COUNT(match.id) FROM match INNER JOIN league ON match.league_id = league.id WHERE match.season = '2015/2016' AND league.name = 'Italy Serie A'",
    "1143": "SELECT MAX(m.home_team_goal) FROM match AS m INNER JOIN league AS l ON m.league_id = l.id WHERE l.name = 'Netherlands Eredivisie'",
    "1144": "SELECT t2.finishing, t2.curve FROM player AS t1 INNER JOIN player_attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.weight = (SELECT MAX(weight) FROM player)",
    "1145": "SELECT l.name FROM league AS l INNER JOIN (SELECT league_id, COUNT(id) AS match_count FROM match WHERE season = '2015/2016' GROUP BY league_id) AS m ON l.id = m.league_id ORDER BY m.match_count DESC LIMIT 4",
    "1146": "SELECT t1.team_long_name FROM team AS t1 INNER JOIN match AS t2 ON t1.team_api_id = t2.away_team_api_id WHERE t2.away_team_goal = (SELECT MAX(away_team_goal) FROM match)",
    "1147": "SELECT player_name FROM player AS p INNER JOIN player_attributes AS pa ON p.player_api_id = pa.player_api_id WHERE pa.overall_rating = (SELECT MAX(overall_rating) FROM player_attributes)",
    "1148": "SELECT CAST(SUM(CASE WHEN player.height < 180 AND player_attributes.overall_rating > 70 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(player.id) FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id",
    "1149": "SELECT ((SUM(CASE WHEN admission = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN admission = '-' THEN 1 ELSE 0 END)) * 100.0) / (SUM(CASE WHEN admission = '+' THEN 1 ELSE 0 END) + SUM(CASE WHEN admission = '-' THEN 1 ELSE 0 END)) AS percentage_deviation FROM patient WHERE sex = 'M'",
    "1150": "SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', birthday) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM patient WHERE sex = 'F'",
    "1151": "SELECT CAST(SUM(CASE WHEN admission = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage_inpatients FROM patient WHERE STRFTIME('%Y', birthday) BETWEEN '1930' AND '1940'",
    "1152": "SELECT CAST(SUM(CASE WHEN admission = '+' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN admission = '-' THEN 1 ELSE 0 END) AS ratio FROM patient WHERE diagnosis = 'SLE'",
    "1153": "SELECT patient.diagnosis, laboratory.date FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.id = '30609'",
    "1154": "SELECT patient.sex, patient.birthday, examination.\"Examination Date\", examination.symptoms FROM patient INNER JOIN examination ON patient.id = examination.id WHERE patient.id = 163109",
    "1155": "SELECT patient.id, patient.sex, patient.birthday FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh > 500",
    "1156": "SELECT patient.id, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', patient.birthday) AS age FROM patient INNER JOIN examination ON patient.id = examination.id WHERE examination.rvvt = '+'",
    "1157": "SELECT patient.id, patient.sex, patient.diagnosis FROM patient INNER JOIN examination ON patient.id = examination.id WHERE examination.thrombosis = 2",
    "1158": "SELECT DISTINCT patient.id FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE STRFTIME('%Y', patient.birthday) = '1937' AND laboratory.\"T-CHO\" >= 250",
    "1159": "SELECT DISTINCT patient.id, patient.sex, patient.diagnosis FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.alb < 3.5",
    "1160": "SELECT CAST(COUNT(CASE WHEN laboratory.tp < 6.0 OR laboratory.tp > 8.5 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(patient.id) AS percentage FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'F'",
    "1161": "SELECT AVG(t2.\"aCL IgG\") AS average_acl_igg_concentration FROM patient AS t1 INNER JOIN examination AS t2 ON t1.id = t2.id WHERE t1.admission = '+' AND (STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', t1.birthday)) >= 50",
    "1162": "SELECT COUNT(*) FROM patient WHERE sex = 'F' AND STRFTIME('%Y', description) = '1997' AND admission = '-'",
    "1163": "SELECT MIN(STRFTIME('%Y', \"First Date\") - STRFTIME('%Y', birthday)) AS youngest_age FROM patient",
    "1164": "SELECT COUNT(*) FROM patient INNER JOIN examination ON patient.id = examination.id WHERE examination.thrombosis = 1 AND STRFTIME('%Y', examination.\"Examination Date\") = '1997' AND patient.sex = 'F'",
    "1165": "SELECT MAX(STRFTIME('%Y', patient.birthday)) - MIN(STRFTIME('%Y', patient.birthday)) AS agegap FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.tg < 200",
    "1166": "SELECT t2.symptoms, t2.diagnosis FROM patient AS t1 INNER JOIN examination AS t2 ON t1.id = t2.id WHERE t1.birthday = (SELECT MAX(t1.birthday) FROM patient AS t1 INNER JOIN examination AS t2 ON t1.id = t2.id WHERE NOT t2.symptoms IS NULL)",
    "1167": "SELECT CAST(COUNT(DISTINCT p.id) AS REAL) / 12 AS average_male_patients_per_month FROM laboratory AS l INNER JOIN patient AS p ON l.id = p.id WHERE p.sex = 'M' AND l.date BETWEEN '1998-01-01' AND '1998-12-31'",
    "1168": "SELECT t2.date, STRFTIME('%Y', t1.\"First Date\") - STRFTIME('%Y', t1.birthday) AS age FROM patient AS t1 INNER JOIN laboratory AS t2 ON t1.id = t2.id WHERE t1.diagnosis = 'SJS' ORDER BY t1.birthday ASC LIMIT 1",
    "1169": "SELECT CAST(SUM(CASE WHEN patient.sex = 'M' AND laboratory.ua <= 8.0 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN patient.sex = 'F' AND laboratory.ua <= 6.5 THEN 1 ELSE 0 END) AS maletofemaleratio FROM patient INNER JOIN laboratory ON patient.id = laboratory.id",
    "1170": "SELECT COUNT(DISTINCT p.id) FROM patient AS p INNER JOIN examination AS e ON p.id = e.id WHERE STRFTIME('%Y', e.\"Examination Date\") - STRFTIME('%Y', p.\"First Date\") >= 1",
    "1171": "SELECT COUNT(DISTINCT patient.id) FROM patient INNER JOIN examination ON patient.id = examination.id WHERE STRFTIME('%Y', examination.\"Examination Date\") BETWEEN '1990' AND '1993' AND (STRFTIME('%Y', examination.\"Examination Date\") - STRFTIME('%Y', patient.birthday)) - (STRFTIME('%m%d', examination.\"Examination Date\") < STRFTIME('%m%d', patient.birthday)) < 18",
    "1172": "SELECT COUNT(DISTINCT patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'M' AND laboratory.\"T-BIL\" >= 2.0",
    "1173": "SELECT diagnosis FROM examination WHERE \"Examination Date\" BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY COUNT(diagnosis) DESC LIMIT 1",
    "1174": "SELECT AVG(1999 - STRFTIME('%Y', patient.birthday)) AS averageage FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.date BETWEEN '1991-10-01' AND '1991-10-31'",
    "1175": "SELECT STRFTIME('%Y', \"Examination\".\"Examination Date\") - STRFTIME('%Y', \"Patient\".\"Birthday\") AS age, \"Examination\".\"Diagnosis\" FROM \"Laboratory\" INNER JOIN \"Patient\" ON \"Laboratory\".\"ID\" = \"Patient\".\"ID\" INNER JOIN \"Examination\" ON \"Laboratory\".\"ID\" = \"Examination\".\"ID\" ORDER BY \"Laboratory\".\"HGB\" DESC LIMIT 1",
    "1176": "SELECT ana FROM examination WHERE id = 3605340 AND \"Examination Date\" = '1996-12-02'",
    "1177": "SELECT CASE WHEN \"Laboratory\".\"T-CHO\" < 250 THEN 'Normal' ELSE 'Not Normal' END AS tcho_status FROM \"Laboratory\" WHERE \"Laboratory\".\"ID\" = 2927464 AND \"Laboratory\".\"Date\" = '1995-09-04'",
    "1178": "SELECT sex FROM patient WHERE diagnosis = 'AORTITIS' ORDER BY \"First Date\" ASC LIMIT 1",
    "1179": "SELECT examination.\"aCL IgM\" FROM patient INNER JOIN examination ON patient.id = examination.id WHERE patient.description = '1994-02-19' AND examination.\"Examination Date\" = '1993-11-12'",
    "1180": "SELECT t2.sex FROM laboratory AS t1 INNER JOIN patient AS t2 ON t1.id = t2.id WHERE t1.date = '1992-06-12' AND t1.gpt = 9",
    "1181": "SELECT STRFTIME('%Y', t2.date) - STRFTIME('%Y', t1.birthday) AS age FROM patient AS t1 INNER JOIN laboratory AS t2 ON t1.id = t2.id WHERE t2.ua = '8.4' AND t2.date = '1991-10-21'",
    "1182": "SELECT COUNT(l.id) FROM patient AS p INNER JOIN laboratory AS l ON p.id = l.id WHERE p.\"First Date\" = '1991-06-13' AND p.diagnosis = 'SJS' AND STRFTIME('%Y', l.date) = '1995'",
    "1183": "SELECT DISTINCT patient.diagnosis FROM patient INNER JOIN examination ON patient.id = examination.id WHERE examination.\"Examination Date\" = '1997-01-27' AND examination.diagnosis = 'SLE'",
    "1184": "SELECT examination.symptoms FROM patient INNER JOIN examination ON patient.id = examination.id WHERE patient.birthday = '1959-03-01' AND examination.\"Examination Date\" = '1993-09-27'",
    "1185": "SELECT (SUM(CASE WHEN STRFTIME('%Y-%m', \"Laboratory\".\"Date\") = '1981-11' THEN \"Laboratory\".\"T-CHO\" ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y-%m', \"Laboratory\".\"Date\") = '1981-12' THEN \"Laboratory\".\"T-CHO\" ELSE 0 END)) / SUM(CASE WHEN STRFTIME('%Y-%m', \"Laboratory\".\"Date\") = '1981-11' THEN \"Laboratory\".\"T-CHO\" ELSE 0 END) AS decrease_rate FROM \"Patient\" INNER JOIN \"Laboratory\" ON \"Patient\".\"ID\" = \"Laboratory\".\"ID\" WHERE \"Patient\".\"Birthday\" = '1959-02-18'",
    "1186": "SELECT DISTINCT patient.id FROM patient INNER JOIN examination ON patient.id = examination.id WHERE examination.diagnosis = 'Behcet' AND examination.\"Examination Date\" BETWEEN '1997-01-01' AND '1997-12-31'",
    "1187": "SELECT DISTINCT laboratory.id FROM laboratory WHERE laboratory.date BETWEEN '1987-07-06' AND '1996-01-31' AND laboratory.gpt > 30 AND laboratory.alb < 4 ORDER BY laboratory.id ASC",
    "1188": "SELECT patient.id FROM patient WHERE patient.sex = 'F' AND STRFTIME('%Y', patient.birthday) = '1964' AND patient.admission = '+'",
    "1189": "SELECT COUNT(*) AS patient_count FROM examination WHERE \"Thrombosis\" = 2 AND \"ANA Pattern\" = 'S' AND \"aCL IgM\" > 1.2 * (SELECT AVG(\"aCL IgM\") FROM examination)",
    "1190": "SELECT CAST(SUM(CASE WHEN \"U-PRO\" > 0 AND \"U-PRO\" < 30 AND \"UA\" <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN \"U-PRO\" > 0 AND \"U-PRO\" < 30 THEN 1 ELSE 0 END) AS percentage FROM laboratory",
    "1191": "SELECT CAST(SUM(CASE WHEN diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM patient WHERE sex = 'M' AND STRFTIME('%Y', \"First Date\") = '1981'",
    "1192": "SELECT DISTINCT patient.id FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.admission = '-' AND STRFTIME('%Y-%m', laboratory.date) = '1991-10' AND laboratory.\"T-BIL\" < 2.0",
    "1193": "SELECT COUNT(*) FROM patient INNER JOIN examination ON patient.id = examination.id WHERE patient.sex = 'F' AND STRFTIME('%Y', patient.birthday) BETWEEN '1980' AND '1989' AND examination.\"ANA Pattern\" <> 'P'",
    "1194": "SELECT DISTINCT patient.sex FROM patient INNER JOIN examination ON patient.id = examination.id INNER JOIN laboratory ON patient.id = laboratory.id WHERE examination.diagnosis = 'PSS' AND laboratory.cre = 1",
    "1195": "SELECT AVG(laboratory.alb) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'F' AND laboratory.plt > 400 AND patient.diagnosis = 'SLE'",
    "1196": "SELECT symptoms FROM examination WHERE diagnosis = 'SLE' GROUP BY symptoms ORDER BY COUNT(symptoms) DESC LIMIT 1",
    "1197": "SELECT description, diagnosis FROM patient WHERE id = 48473",
    "1198": "SELECT COUNT(*) FROM patient WHERE sex = 'F' AND diagnosis = 'APS'",
    "1199": "SELECT COUNT(DISTINCT id) FROM laboratory WHERE STRFTIME('%Y', date) = '1997' AND (tp <= 6.0 OR tp >= 8.5)",
    "1200": "SELECT CAST(SUM(CASE WHEN patient.diagnosis = 'SLE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS proportion FROM examination INNER JOIN patient ON examination.id = patient.id WHERE examination.symptoms LIKE '%thrombocytopenia%'",
    "1201": "SELECT CAST(SUM(CASE WHEN patient.sex = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(patient.id) AS percentage FROM patient WHERE STRFTIME('%Y', patient.birthday) = '1980' AND patient.diagnosis = 'RA'",
    "1202": "SELECT COUNT(DISTINCT patient.id) FROM patient INNER JOIN examination ON patient.id = examination.id WHERE patient.sex = 'M' AND examination.\"Examination Date\" BETWEEN '1995-01-01' AND '1997-12-31' AND examination.diagnosis = 'Behcet' AND patient.admission = '-'",
    "1203": "SELECT COUNT(DISTINCT patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'F' AND laboratory.wbc < 3.5",
    "1204": "SELECT STRFTIME('%J', examination.\"Examination Date\") - STRFTIME('%J', patient.\"First Date\") AS days_difference FROM examination INNER JOIN patient ON examination.id = patient.id WHERE examination.id = 821298 AND patient.id = 821298 ORDER BY examination.\"Examination Date\" ASC LIMIT 1",
    "1205": "SELECT CASE WHEN (patient.sex = 'M' AND laboratory.ua > 8.0) OR (patient.sex = 'F' AND laboratory.ua > 6.5) THEN 'Yes' ELSE 'No' END AS is_within_normal_range FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.id = 57266",
    "1206": "SELECT DISTINCT \"Laboratory\".\"Date\" FROM \"Laboratory\" WHERE \"Laboratory\".\"ID\" = 48473 AND \"Laboratory\".\"GOT\" >= 60",
    "1207": "SELECT patient.sex, patient.birthday FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE STRFTIME('%Y', laboratory.date) = '1994' AND laboratory.got < 60",
    "1208": "SELECT DISTINCT patient.id FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'M' AND laboratory.gpt >= 60",
    "1209": "SELECT DISTINCT patient.diagnosis FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.gpt > 60 ORDER BY patient.birthday ASC",
    "1210": "SELECT AVG(ldh) FROM laboratory WHERE ldh < 500",
    "1211": "SELECT DISTINCT patient.id, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', patient.birthday) AS age FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh BETWEEN 600 AND 800",
    "1212": "SELECT DISTINCT p.admission FROM patient AS p INNER JOIN laboratory AS l ON p.id = l.id WHERE l.alp < 300",
    "1213": "SELECT DISTINCT patient.id FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.birthday = '1982-04-01' AND laboratory.alp < 300",
    "1214": "SELECT DISTINCT patient.id, patient.sex, patient.birthday FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.tp < 6.0",
    "1215": "SELECT (laboratory.tp - 8.5) AS deviation FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'F' AND laboratory.tp > 8.5",
    "1216": "SELECT DISTINCT patient.id, patient.birthday FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'M' AND (laboratory.alb <= 3.5 OR laboratory.alb >= 5.5) ORDER BY patient.birthday DESC",
    "1217": "SELECT patient.id, CASE WHEN laboratory.alb BETWEEN 3.5 AND 5.5 THEN 'Within Normal Range' ELSE 'Outside Normal Range' END AS albuminstatus FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE STRFTIME('%Y', patient.birthday) = '1982'",
    "1218": "SELECT CAST(COUNT(CASE WHEN laboratory.ua > 6.5 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(laboratory.id) AS percentage FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE patient.sex = 'F'",
    "1219": "SELECT AVG(l.ua) FROM patient AS p INNER JOIN laboratory AS l ON p.id = l.id INNER JOIN (SELECT id, MAX(date) AS latestdate FROM laboratory GROUP BY id) AS latestlab ON p.id = latestlab.id AND l.date = latestlab.latestdate WHERE (p.sex = 'M' AND l.ua < 8.0) OR (p.sex = 'F' AND l.ua < 6.5)",
    "1220": "SELECT DISTINCT patient.id, patient.sex, patient.birthday FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.un = 29",
    "1221": "SELECT patient.id, patient.sex, patient.birthday FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'RA' AND laboratory.un < 30",
    "1222": "SELECT COUNT(DISTINCT patient.id) AS malepatientswithhighcre FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'M' AND laboratory.cre >= 1.5",
    "1223": "SELECT SUM(CASE WHEN patient.sex = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN patient.sex = 'F' THEN 1 ELSE 0 END) AS result FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.cre >= 1.5",
    "1224": "SELECT p.id, p.sex, p.birthday FROM patient AS p INNER JOIN laboratory AS l ON p.id = l.id WHERE l.\"T-BIL\" = (SELECT MAX(\"T-BIL\") FROM laboratory)",
    "1225": "SELECT patient.sex, GROUP_CONCAT(DISTINCT patient.id) AS patient_ids FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.\"T-BIL\" >= 2.0 GROUP BY patient.sex",
    "1226": "SELECT p.id, l.\"T-CHO\" FROM patient AS p INNER JOIN laboratory AS l ON p.id = l.id WHERE l.\"T-CHO\" = (SELECT MAX(\"T-CHO\") FROM laboratory) ORDER BY p.birthday ASC LIMIT 1",
    "1227": "SELECT AVG(STRFTIME('%Y', CURRENT_DATE) - STRFTIME('%Y', patient.birthday)) AS average_age FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'M' AND laboratory.\"T-CHO\" >= 250",
    "1228": "SELECT DISTINCT patient.id, patient.diagnosis FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.tg > 300",
    "1229": "SELECT COUNT(DISTINCT p.id) FROM laboratory AS l INNER JOIN patient AS p ON l.id = p.id WHERE l.tg >= 200 AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', p.birthday) > 50",
    "1230": "SELECT DISTINCT patient.id FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.admission = '-' AND laboratory.cpk < 250",
    "1231": "SELECT COUNT(DISTINCT \"Patient\".\"ID\") FROM \"Patient\" INNER JOIN \"Laboratory\" ON \"Patient\".\"ID\" = \"Laboratory\".\"ID\" WHERE STRFTIME('%Y', \"Patient\".\"Birthday\") BETWEEN '1936' AND '1956' AND \"Patient\".\"SEX\" = 'M' AND \"Laboratory\".\"CPK\" >= 250",
    "1232": "SELECT DISTINCT p.id, p.sex, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', p.birthday) AS age FROM patient AS p INNER JOIN laboratory AS l ON p.id = l.id WHERE l.glu >= 180 AND l.\"T-CHO\" < 250",
    "1233": "SELECT DISTINCT \"Patient\".\"ID\", \"Laboratory\".\"GLU\" FROM \"Patient\" INNER JOIN \"Laboratory\" ON \"Patient\".\"ID\" = \"Laboratory\".\"ID\" WHERE STRFTIME('%Y', \"Patient\".\"Description\") = '1991' AND \"Laboratory\".\"GLU\" < 180",
    "1234": "SELECT patient.id, patient.sex, patient.birthday FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.wbc <= 3.5 OR laboratory.wbc >= 9.0 GROUP BY patient.sex ORDER BY STRFTIME('%Y', 'now') - STRFTIME('%Y', patient.birthday) ASC",
    "1235": "SELECT patient.id, patient.diagnosis, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', patient.birthday) AS age FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rbc < 3.5",
    "1236": "SELECT DISTINCT p.id, p.admission FROM patient AS p INNER JOIN laboratory AS l ON p.id = l.id WHERE p.sex = 'F' AND (STRFTIME('%Y', 'now') - STRFTIME('%Y', p.birthday) - (STRFTIME('%m-%d', 'now') < STRFTIME('%m-%d', p.birthday))) >= 50 AND (l.rbc <= 3.5 OR l.rbc >= 6.0)",
    "1237": "SELECT DISTINCT patient.id, patient.sex FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.admission = '-' AND laboratory.hgb < 10",
    "1238": "SELECT DISTINCT t1.id, t1.sex FROM patient AS t1 INNER JOIN laboratory AS t2 ON t1.id = t2.id WHERE t1.diagnosis = 'SLE' AND t2.hgb > 10 AND t2.hgb < 17 ORDER BY t1.birthday ASC LIMIT 1",
    "1239": "SELECT \"Patient\".\"ID\", STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', \"Patient\".\"Birthday\") AS age FROM \"Patient\" INNER JOIN \"Laboratory\" ON \"Patient\".\"ID\" = \"Laboratory\".\"ID\" WHERE \"Laboratory\".\"HCT\" >= 52 GROUP BY \"Patient\".\"ID\" HAVING COUNT(*) >= 2",
    "1240": "SELECT AVG(laboratory.hct) AS averagehct FROM laboratory WHERE STRFTIME('%Y', laboratory.date) = '1991' AND laboratory.hct < 29",
    "1241": "SELECT SUM(CASE WHEN laboratory.plt < 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN laboratory.plt > 400 THEN 1 ELSE 0 END) AS difference FROM laboratory WHERE laboratory.plt <= 100 OR laboratory.plt >= 400",
    "1242": "SELECT DISTINCT patient.id FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE STRFTIME('%Y', laboratory.date) = '1984' AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', patient.birthday) < 50 AND laboratory.plt BETWEEN 100 AND 400",
    "1243": "SELECT CAST(SUM(CASE WHEN patient.sex = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', patient.birthday) > 55 AND laboratory.pt >= 14",
    "1244": "SELECT DISTINCT patient.id FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE STRFTIME('%Y', patient.\"First Date\") > '1992' AND laboratory.pt < 14",
    "1245": "SELECT COUNT(*) FROM examination INNER JOIN laboratory ON examination.id = laboratory.id WHERE examination.\"Examination Date\" > '1997-01-01' AND laboratory.aptt >= 45",
    "1246": "SELECT COUNT(DISTINCT t1.id) AS patientcount FROM laboratory AS t1 INNER JOIN examination AS t2 ON t1.id = t2.id WHERE t1.aptt > 45 AND t2.thrombosis = 0",
    "1247": "SELECT COUNT(DISTINCT t1.id) AS num_patients FROM patient AS t1 INNER JOIN laboratory AS t2 ON t1.id = t2.id WHERE t1.sex = 'M' AND t2.wbc > 3.5 AND t2.wbc < 9.0 AND (t2.fg <= 150 OR t2.fg >= 450)",
    "1248": "SELECT COUNT(DISTINCT patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.birthday > '1980-01-01' AND (laboratory.fg < 150 OR laboratory.fg > 450)",
    "1249": "SELECT DISTINCT patient.diagnosis FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.\"U-PRO\" >= 30",
    "1250": "SELECT DISTINCT patient.id FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.\"U-PRO\" > 0 AND laboratory.\"U-PRO\" < 30 AND patient.diagnosis = 'SLE'",
    "1251": "SELECT COUNT(DISTINCT \"ID\") FROM \"Laboratory\" WHERE \"IGG\" >= 2000",
    "1252": "SELECT COUNT(DISTINCT t1.id) FROM laboratory AS t1 INNER JOIN examination AS t2 ON t1.id = t2.id WHERE t1.igg > 900 AND t1.igg < 2000 AND NOT t2.symptoms IS NULL",
    "1253": "SELECT patient.diagnosis FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.iga = (SELECT MAX(iga) FROM laboratory WHERE iga BETWEEN 80 AND 500)",
    "1254": "SELECT COUNT(DISTINCT \"Patient\".\"ID\") FROM \"Laboratory\" INNER JOIN \"Patient\" ON \"Laboratory\".\"ID\" = \"Patient\".\"ID\" WHERE \"Laboratory\".\"IGA\" > 80 AND \"Laboratory\".\"IGA\" < 500 AND STRFTIME('%Y', \"Patient\".\"First Date\") >= '1990'",
    "1255": "SELECT patient.diagnosis FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE laboratory.igm <= 40 OR laboratory.igm >= 400 GROUP BY patient.diagnosis ORDER BY COUNT(patient.diagnosis) DESC LIMIT 1",
    "1256": "SELECT COUNT(DISTINCT p.id) FROM patient AS p INNER JOIN laboratory AS l ON p.id = l.id WHERE l.crp = '+' AND p.description IS NULL",
    "1257": "SELECT COUNT(DISTINCT patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.cre >= 1.5 AND (STRFTIME('%Y', CURRENT_DATE) - STRFTIME('%Y', patient.birthday)) < 70",
    "1258": "SELECT COUNT(DISTINCT e.id) FROM examination AS e INNER JOIN laboratory AS l ON e.id = l.id WHERE l.ra IN ('-', '+-') AND e.kct = '+'",
    "1259": "SELECT DISTINCT \"Patient\".\"Diagnosis\" FROM \"Patient\" INNER JOIN \"Laboratory\" ON \"Patient\".\"ID\" = \"Laboratory\".\"ID\" WHERE STRFTIME('%Y', \"Patient\".\"Birthday\") > '1985' AND \"Laboratory\".\"RA\" IN ('-', '+-')",
    "1260": "SELECT DISTINCT p.id FROM patient AS p INNER JOIN laboratory AS l ON p.id = l.id WHERE l.rf < 20 AND STRFTIME('%Y', 'now') - STRFTIME('%Y', p.birthday) > 60",
    "1261": "SELECT COUNT(DISTINCT laboratory.id) FROM laboratory INNER JOIN examination ON laboratory.id = examination.id WHERE laboratory.rf < 20 AND examination.thrombosis = 0",
    "1262": "SELECT COUNT(DISTINCT laboratory.id) FROM laboratory INNER JOIN examination ON laboratory.id = examination.id WHERE laboratory.c3 > 35 AND examination.\"ANA Pattern\" = 'P'",
    "1263": "SELECT e.id FROM examination AS e INNER JOIN laboratory AS l ON e.id = l.id WHERE l.hct <= 29 OR l.hct >= 52 ORDER BY e.\"aCL IgA\" DESC LIMIT 1",
    "1264": "SELECT COUNT(DISTINCT patient.id) FROM patient INNER JOIN examination ON patient.id = examination.id INNER JOIN laboratory ON patient.id = laboratory.id WHERE examination.diagnosis = 'APS' AND laboratory.c4 > 10",
    "1265": "SELECT COUNT(DISTINCT patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE (laboratory.rnp = '-' OR laboratory.rnp = '+-') AND patient.admission = '+'",
    "1266": "SELECT patient.birthday FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE NOT laboratory.rnp IN ('-', '+-') ORDER BY patient.birthday DESC LIMIT 1",
    "1267": "SELECT COUNT(DISTINCT patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id INNER JOIN examination ON patient.id = examination.id WHERE laboratory.sm IN ('-', '+-') AND examination.thrombosis = 0",
    "1268": "SELECT DISTINCT t2.id FROM laboratory AS t1 INNER JOIN patient AS t2 ON t1.id = t2.id WHERE NOT t1.sm IN ('negative', '0') ORDER BY t2.birthday ASC LIMIT 3",
    "1269": "SELECT DISTINCT l.id FROM laboratory AS l WHERE l.date > '1997-01-01' AND l.sc170 IN ('negative', '0')",
    "1270": "SELECT COUNT(DISTINCT \"Patient\".\"ID\") FROM \"Patient\" INNER JOIN \"Examination\" ON \"Patient\".\"ID\" = \"Examination\".\"ID\" INNER JOIN \"Laboratory\" ON \"Patient\".\"ID\" = \"Laboratory\".\"ID\" WHERE \"Patient\".\"Sex\" = 'F' AND \"Examination\".\"Symptoms\" IS NULL AND \"Laboratory\".\"SC170\" IN ('negative', '0')",
    "1271": "SELECT COUNT(DISTINCT patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE STRFTIME('%Y', patient.\"First Date\") < '2000' AND laboratory.ssa IN ('-', '+-')",
    "1272": "SELECT p.id FROM patient AS p INNER JOIN laboratory AS l ON p.id = l.id WHERE NOT l.ssa IN ('negative', '0') ORDER BY p.\"First Date\" ASC LIMIT 1",
    "1273": "SELECT COUNT(DISTINCT examination.id) FROM examination INNER JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.ssb IN ('negative', '0') AND examination.diagnosis = 'SLE'",
    "1274": "SELECT COUNT(DISTINCT l.id) FROM laboratory AS l INNER JOIN examination AS e ON l.id = e.id WHERE l.ssb IN ('negative', '0') AND NOT e.symptoms IS NULL",
    "1275": "SELECT COUNT(DISTINCT patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'M' AND laboratory.centromea IN ('-', '+-') AND laboratory.ssb IN ('-', '+-')",
    "1276": "SELECT DISTINCT patient.diagnosis FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.dna >= 8",
    "1277": "SELECT COUNT(DISTINCT \"Patient\".\"ID\") FROM \"Patient\" INNER JOIN \"Laboratory\" ON \"Patient\".\"ID\" = \"Laboratory\".\"ID\" WHERE \"Laboratory\".\"DNA\" < 8 AND \"Patient\".\"Description\" IS NULL",
    "1278": "SELECT COUNT(DISTINCT p.id) FROM patient AS p INNER JOIN laboratory AS l ON p.id = l.id WHERE p.admission = '+' AND l.igg > 900 AND l.igg < 2000",
    "1279": "SELECT CAST(SUM(CASE WHEN t2.diagnosis = 'SLE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(t1.id) * 1.0 AS percentage FROM laboratory AS t1 INNER JOIN patient AS t2 ON t1.id = t2.id WHERE t1.got >= 60",
    "1280": "SELECT COUNT(DISTINCT patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'M' AND laboratory.got < 60",
    "1281": "SELECT MAX(patient.birthday) AS youngest_birthday FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.got >= 60",
    "1282": "SELECT DISTINCT patient.birthday FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE laboratory.gpt < 60 ORDER BY laboratory.gpt DESC LIMIT 3",
    "1283": "SELECT COUNT(DISTINCT patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'M' AND laboratory.got < 60",
    "1284": "SELECT MIN(patient.\"First Date\") AS first_date FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh = (SELECT MAX(ldh) FROM laboratory WHERE ldh < 500)",
    "1285": "SELECT MAX(patient.\"First Date\") AS latest_first_date FROM patient INNER JOIN (SELECT id, MAX(date) AS latest_ldh_date FROM laboratory WHERE id IN (SELECT id FROM laboratory WHERE ldh >= 500 GROUP BY id HAVING MAX(ldh) >= 500) GROUP BY id) AS lab ON patient.id = lab.id",
    "1286": "SELECT COUNT(DISTINCT patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.alp >= 300 AND patient.admission = '+'",
    "1287": "SELECT COUNT(DISTINCT \"Patient\".\"ID\") FROM \"Patient\" INNER JOIN \"Laboratory\" ON \"Patient\".\"ID\" = \"Laboratory\".\"ID\" WHERE \"Patient\".\"Admission\" = '-' AND \"Laboratory\".\"ALP\" < 300",
    "1288": "SELECT DISTINCT patient.diagnosis FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE laboratory.tp < 6.0",
    "1289": "SELECT COUNT(DISTINCT patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'SJS' AND laboratory.tp > 6.0 AND laboratory.tp < 8.5",
    "1290": "SELECT laboratory.date FROM laboratory WHERE laboratory.alb = (SELECT MAX(laboratory.alb) FROM laboratory WHERE laboratory.alb > 3.5 AND laboratory.alb < 5.5)",
    "1291": "SELECT COUNT(DISTINCT patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'M' AND laboratory.alb > 3.5 AND laboratory.alb < 5.5 AND laboratory.tp >= 6.0 AND laboratory.tp <= 8.5",
    "1292": "SELECT e.\"aCL IgG\", e.\"aCL IgM\", e.\"aCL IgA\" FROM patient AS p INNER JOIN laboratory AS l ON p.id = l.id INNER JOIN examination AS e ON p.id = e.id WHERE p.sex = 'F' AND l.ua > 6.5 ORDER BY l.ua DESC LIMIT 1",
    "1293": "SELECT MAX(examination.ana) AS highest_ana_level FROM laboratory INNER JOIN examination ON laboratory.id = examination.id WHERE laboratory.cre < 1.5",
    "1294": "SELECT DISTINCT e.id FROM examination AS e INNER JOIN laboratory AS l ON e.id = l.id WHERE l.cre < 1.5 ORDER BY e.\"aCL IgA\" DESC LIMIT 1",
    "1295": "SELECT COUNT(DISTINCT t1.id) FROM laboratory AS t1 INNER JOIN examination AS t2 ON t1.id = t2.id WHERE t1.\"T-BIL\" > 2.0 AND t2.\"ANA Pattern\" LIKE '%P%'",
    "1296": "SELECT e.ana FROM examination AS e INNER JOIN laboratory AS l ON e.id = l.id WHERE l.\"T-BIL\" < 2.0 ORDER BY l.\"T-BIL\" DESC LIMIT 1",
    "1297": "SELECT COUNT(DISTINCT l.id) FROM laboratory AS l INNER JOIN examination AS e ON l.id = e.id WHERE l.\"T-CHO\" >= 250 AND e.kct = '-'",
    "1298": "SELECT COUNT(DISTINCT laboratory.id) AS patientcount FROM laboratory INNER JOIN examination ON laboratory.id = examination.id WHERE laboratory.\"T-CHO\" < 250 AND examination.\"ANA Pattern\" = 'P'",
    "1299": "SELECT COUNT(DISTINCT laboratory.id) FROM laboratory INNER JOIN examination ON laboratory.id = examination.id WHERE laboratory.tg < 200 AND NOT examination.symptoms IS NULL",
    "1300": "SELECT patient.diagnosis FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.tg = (SELECT MAX(tg) FROM laboratory WHERE tg < 200)",
    "1301": "SELECT DISTINCT laboratory.id FROM laboratory INNER JOIN examination ON laboratory.id = examination.id WHERE examination.thrombosis = 0 AND laboratory.cpk > 250",
    "1302": "SELECT COUNT(DISTINCT t1.id) FROM laboratory AS t1 INNER JOIN examination AS t2 ON t1.id = t2.id WHERE t1.cpk < 250 AND (t2.kct = '+' OR t2.rvvt = '+' OR t2.lac = '+')",
    "1303": "SELECT patient.birthday FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.glu > 180 ORDER BY patient.birthday ASC LIMIT 1",
    "1304": "SELECT COUNT(DISTINCT lab.id) FROM laboratory AS lab INNER JOIN examination AS exam ON lab.id = exam.id WHERE lab.glu < 180 AND exam.thrombosis = 0",
    "1305": "SELECT COUNT(DISTINCT patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.admission = '+' AND laboratory.wbc BETWEEN 3.5 AND 9.0",
    "1306": "SELECT COUNT(DISTINCT patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'SLE' AND laboratory.wbc BETWEEN 3.5 AND 9.0",
    "1307": "SELECT DISTINCT laboratory.id FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE (laboratory.rbc <= 3.5 OR laboratory.rbc >= 6.0) AND patient.admission = '-'",
    "1308": "SELECT COUNT(DISTINCT p.id) FROM patient AS p INNER JOIN laboratory AS l ON p.id = l.id INNER JOIN examination AS e ON p.id = e.id WHERE l.plt > 100 AND l.plt < 400 AND NOT e.symptoms IS NULL",
    "1309": "SELECT DISTINCT laboratory.plt FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE patient.diagnosis = 'MCTD' AND laboratory.plt > 100 AND laboratory.plt < 400",
    "1310": "SELECT AVG(t2.pt) FROM patient AS t1 INNER JOIN laboratory AS t2 ON t1.id = t2.id WHERE t1.sex = 'M' AND t2.pt < 14",
    "1311": "SELECT COUNT(DISTINCT examination.id) FROM examination INNER JOIN laboratory ON examination.id = laboratory.id WHERE (examination.thrombosis = 2 OR examination.thrombosis = 1) AND laboratory.pt < 14",
    "1312": "SELECT major.major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Angela' AND member.last_name = 'Sanders'",
    "1313": "SELECT COUNT(DISTINCT member.member_id) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.college = 'College of Engineering'",
    "1314": "SELECT member.first_name, member.last_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.department = 'Art and Design Department'",
    "1315": "SELECT COUNT(DISTINCT t2.link_to_member) FROM event AS t1 INNER JOIN attendance AS t2 ON t1.event_id = t2.link_to_event WHERE t1.event_name = 'Women''s Soccer'",
    "1316": "SELECT DISTINCT member.phone FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women''s Soccer'",
    "1317": "SELECT COUNT(DISTINCT member.member_id) FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women''s Soccer' AND member.t_shirt_size = 'Medium'",
    "1318": "SELECT e.event_name FROM event AS e INNER JOIN attendance AS a ON e.event_id = a.link_to_event GROUP BY e.event_id ORDER BY COUNT(a.link_to_member) DESC LIMIT 1",
    "1319": "SELECT DISTINCT major.college FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President'",
    "1320": "SELECT DISTINCT e.event_name FROM member AS m INNER JOIN attendance AS a ON m.member_id = a.link_to_member INNER JOIN event AS e ON a.link_to_event = e.event_id WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean'",
    "1321": "SELECT COUNT(*) FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id INNER JOIN member ON attendance.link_to_member = member.member_id WHERE STRFTIME('%Y', event.event_date) = '2019' AND member.first_name = 'Sacha' AND member.last_name = 'Harrison'",
    "1322": "SELECT COUNT(*) AS meeting_count FROM (SELECT e.event_id FROM event AS e INNER JOIN attendance AS a ON e.event_id = a.link_to_event WHERE e.type = 'Meeting' GROUP BY e.event_id HAVING COUNT(a.link_to_member) > 10) AS subquery",
    "1323": "SELECT DISTINCT event.event_name FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event WHERE event.type <> 'fundraiser' GROUP BY event.event_id HAVING COUNT(attendance.link_to_member) > 20",
    "1324": "SELECT CAST(COUNT(event_id) AS REAL) / COUNT(DISTINCT event_name) AS average_attendance FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event WHERE event.type = 'Meeting' AND STRFTIME('%Y', event.event_date) = '2020'",
    "1325": "SELECT expense_description FROM expense WHERE cost = (SELECT MAX(cost) FROM expense)",
    "1326": "SELECT COUNT(member.member_id) AS number_of_members FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Environmental Engineering'",
    "1327": "SELECT DISTINCT member.first_name, member.last_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Laugh Out Loud'",
    "1328": "SELECT DISTINCT member.last_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Law and Constitutional Studies'",
    "1329": "SELECT zip_code.county FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Sherri' AND member.last_name = 'Ramsey'",
    "1330": "SELECT major.college FROM major INNER JOIN member ON major.major_id = member.link_to_major WHERE member.first_name = 'Tyler' AND member.last_name = 'Hewitt'",
    "1331": "SELECT SUM(income.amount) AS total_funds FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE member.position = 'Vice President'",
    "1332": "SELECT budget.spent FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Meeting' AND budget.category = 'Food'",
    "1333": "SELECT t2.city, t2.state FROM member AS t1 INNER JOIN zip_code AS t2 ON t1.zip = t2.zip_code WHERE t1.position = 'President'",
    "1334": "SELECT member.first_name, member.last_name FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.state = 'Illinois'",
    "1335": "SELECT budget.spent FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE budget.category = 'Advertisement' AND event.event_name = 'September Meeting'",
    "1336": "SELECT DISTINCT major.department FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Pierce' OR member.last_name = 'Guidi'",
    "1337": "SELECT SUM(budget.amount) AS total_budgeted_amount FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE event.event_name = 'October Speaker'",
    "1338": "SELECT e.expense_id, e.approved FROM expense AS e INNER JOIN attendance AS a ON e.link_to_member = a.link_to_member INNER JOIN event AS ev ON a.link_to_event = ev.event_id WHERE ev.event_name = 'October Meeting' AND ev.event_date = '2019-10-08T12:00:00'",
    "1339": "SELECT AVG(expense.cost) AS average_cost FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE SUBSTRING(expense.expense_date, 6, 2) IN ('09', '10') AND member.first_name = 'Elijah' AND member.last_name = 'Allen'",
    "1340": "SELECT (SELECT SUM(budget.spent) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE SUBSTRING(event.event_date, 1, 4) = '2019') - (SELECT SUM(budget.spent) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE SUBSTRING(event.event_date, 1, 4) = '2020') AS difference",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review'",
    "1342": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04'",
    "1343": "SELECT remaining FROM budget WHERE category = 'Food' AND amount = (SELECT MAX(amount) FROM budget WHERE category = 'Food')",
    "1344": "SELECT notes FROM income WHERE date_received = '2019-09-14' AND source = 'Fundraising'",
    "1345": "SELECT COUNT(*) FROM major WHERE major.college = 'College of Humanities and Social Sciences'",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'",
    "1347": "SELECT t2.county FROM member AS t1 INNER JOIN zip_code AS t2 ON t1.zip = t2.zip_code WHERE t1.first_name = 'Adela' AND t1.last_name = 'O''Gallagher'",
    "1348": "SELECT COUNT(*) FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'November Meeting') AND remaining < 0",
    "1349": "SELECT SUM(budget.amount) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker'",
    "1350": "SELECT budget.event_status FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id WHERE expense.expense_description = 'Post Cards, Posters' AND expense.expense_date = '2019-08-20'",
    "1351": "SELECT major.major_name FROM major INNER JOIN member ON major.major_id = member.link_to_major WHERE member.first_name = 'Brent' AND member.last_name = 'Thomason'",
    "1352": "SELECT COUNT(*) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium'",
    "1353": "SELECT zip_code.type FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Christof' AND member.last_name = 'Nielson'",
    "1354": "SELECT DISTINCT major.major_name FROM major INNER JOIN member ON major.major_id = member.link_to_major WHERE member.position = 'Vice President'",
    "1355": "SELECT t2.state FROM member AS t1 INNER JOIN zip_code AS t2 ON t1.zip = t2.zip_code WHERE t1.first_name = 'Sacha' AND t1.last_name = 'Harrison'",
    "1356": "SELECT DISTINCT major.department FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'President'",
    "1357": "SELECT income.date_received FROM member INNER JOIN income ON member.member_id = income.link_to_member WHERE member.first_name = 'Connor' AND member.last_name = 'Hilton' AND income.source = 'Dues'",
    "1358": "SELECT m.first_name, m.last_name FROM income AS i INNER JOIN member AS m ON i.link_to_member = m.member_id WHERE i.source = 'Dues' ORDER BY i.date_received ASC LIMIT 1",
    "1359": "SELECT SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN b.amount ELSE 0 END) / SUM(CASE WHEN e.event_name = 'October Meeting' THEN b.amount ELSE 0 END) AS budget_ratio FROM event AS e INNER JOIN budget AS b ON e.event_id = b.link_to_event WHERE b.category = 'Advertisement'",
    "1360": "SELECT CAST(SUM(CASE WHEN budget.category = 'Parking' THEN budget.amount ELSE 0 END) AS REAL) * 100 / SUM(budget.amount) AS parking_percentage FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'November Speaker'",
    "1361": "SELECT SUM(cost) AS total_cost FROM expense WHERE expense_description = 'Pizza'",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'",
    "1363": "SELECT DISTINCT department FROM major WHERE college = 'College of Humanities and Social Sciences'",
    "1364": "SELECT t2.city, t2.county, t2.state FROM member AS t1 INNER JOIN zip_code AS t2 ON t1.zip = t2.zip_code WHERE t1.first_name = 'Amy' AND t1.last_name = 'Firth'",
    "1365": "SELECT e.expense_description FROM expense AS e INNER JOIN budget AS b ON e.link_to_budget = b.budget_id WHERE b.remaining = (SELECT MIN(remaining) FROM budget)",
    "1366": "SELECT DISTINCT member.first_name, member.last_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'October Meeting'",
    "1367": "SELECT major.college FROM member INNER JOIN major ON member.link_to_major = major.major_id GROUP BY major.college ORDER BY COUNT(member.member_id) DESC LIMIT 1",
    "1368": "SELECT major.major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.phone = '809-555-3360'",
    "1369": "SELECT event.event_name FROM budget INNER JOIN event ON budget.link_to_event = event.event_id ORDER BY budget.amount DESC LIMIT 1",
    "1370": "SELECT expense.expense_description FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE member.position = 'Vice President'",
    "1371": "SELECT COUNT(attendance.link_to_member) FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event WHERE event.event_name = 'Women''s Soccer'",
    "1372": "SELECT income.date_received FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE member.first_name = 'Casey' AND member.last_name = 'Mason'",
    "1373": "SELECT COUNT(member.member_id) FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.state = 'Maryland'",
    "1374": "SELECT COUNT(attendance.link_to_event) FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member WHERE member.phone = '954-555-6240'",
    "1375": "SELECT DISTINCT t1.first_name, t1.last_name FROM member AS t1 INNER JOIN major AS t2 ON t1.link_to_major = t2.major_id WHERE t2.department = 'School of Applied Sciences, Technology and Education'",
    "1376": "SELECT event.event_name FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE event.status = 'Closed' ORDER BY budget.spent / budget.amount DESC LIMIT 1",
    "1377": "SELECT COUNT(member_id) FROM member WHERE position = 'President'",
    "1378": "SELECT MAX(spent) FROM budget",
    "1379": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND STRFTIME('%Y', event_date) = '2020'",
    "1380": "SELECT SUM(spent) AS total_spent_food FROM budget WHERE category = 'Food'",
    "1381": "SELECT m.first_name, m.last_name FROM attendance AS a INNER JOIN member AS m ON a.link_to_member = m.member_id GROUP BY a.link_to_member HAVING COUNT(a.link_to_event) > 7",
    "1382": "SELECT DISTINCT member.first_name, member.last_name FROM member INNER JOIN major ON member.link_to_major = major.major_id INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE major.major_name = 'Interior Design' AND event.event_name = 'Community Theater'",
    "1383": "SELECT member.first_name, member.last_name FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.city = 'Georgetown' AND zip_code.state = 'South Carolina'",
    "1384": "SELECT SUM(income.amount) AS total_income FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE member.first_name = 'Grant' AND member.last_name = 'Gilmour'",
    "1385": "SELECT m.first_name, m.last_name FROM member AS m INNER JOIN income AS i ON m.member_id = i.link_to_member WHERE i.amount > 40",
    "1386": "SELECT SUM(expense.cost) AS total_expense FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'Yearly Kickoff'",
    "1387": "SELECT DISTINCT m.first_name, m.last_name FROM member AS m INNER JOIN expense AS e ON m.member_id = e.link_to_member INNER JOIN budget AS b ON e.link_to_budget = b.budget_id INNER JOIN event AS ev ON b.link_to_event = ev.event_id WHERE ev.event_name = 'Yearly Kickoff'",
    "1388": "SELECT m.first_name, m.last_name, i.source FROM income AS i INNER JOIN member AS m ON i.link_to_member = m.member_id ORDER BY i.amount DESC LIMIT 1",
    "1389": "SELECT event_name FROM event WHERE event_id = (SELECT event_id FROM expense WHERE cost = (SELECT MIN(cost) FROM expense))",
    "1390": "SELECT (SELECT SUM(cost) FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'Yearly Kickoff') * 100.0 / (SELECT SUM(cost) FROM expense) AS yearly_kickoff_percentage",
    "1391": "SELECT SUM(IIF(m.major_name = 'Finance', 1, 0)) AS finance_count, SUM(IIF(m.major_name = 'Physics', 1, 0)) AS physics_count, CAST(SUM(IIF(m.major_name = 'Finance', 1, 0)) AS REAL) / SUM(IIF(m.major_name = 'Physics', 1, 0)) AS finance_to_physics_ratio FROM member AS mem INNER JOIN major AS m ON mem.link_to_major = m.major_id",
    "1392": "SELECT income.source FROM income WHERE income.date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY income.source ORDER BY SUM(income.amount) DESC LIMIT 1",
    "1393": "SELECT first_name, last_name, email FROM member WHERE position = 'Secretary'",
    "1394": "SELECT COUNT(member.member_id) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Physics Teaching'",
    "1395": "SELECT COUNT(DISTINCT attendance.link_to_member) FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community Theater' AND STRFTIME('%Y', event.event_date) = '2019'",
    "1396": "SELECT COUNT(t2.link_to_event) AS number_of_events, t3.major_name FROM member AS t1 INNER JOIN attendance AS t2 ON t1.member_id = t2.link_to_member INNER JOIN major AS t3 ON t1.link_to_major = t3.major_id WHERE t1.first_name = 'Luisa' AND t1.last_name = 'Guidi'",
    "1397": "SELECT SUM(spent) / COUNT(spent) AS average_spent FROM budget WHERE category = 'Food' AND event_status = 'Closed'",
    "1398": "SELECT t1.event_name FROM event AS t1 INNER JOIN budget AS t2 ON t1.event_id = t2.link_to_event WHERE t2.category = 'Advertisement' AND t2.spent = (SELECT MAX(spent) FROM budget WHERE category = 'Advertisement')",
    "1399": "SELECT DISTINCT CASE WHEN t1.first_name = 'Maya' AND t1.last_name = 'McLean' AND t3.event_name = 'Women''s Soccer' THEN 'Yes' ELSE 'No' END AS attended FROM member AS t1 INNER JOIN attendance AS t2 ON t1.member_id = t2.link_to_member INNER JOIN event AS t3 ON t2.link_to_event = t3.event_id",
    "1400": "SELECT CAST(SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(event_id) AS percentage FROM event WHERE STRFTIME('%Y', event_date) = '2019'",
    "1401": "SELECT expense.cost FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE expense.expense_description = 'Posters' AND event.event_name = 'September Speaker'",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(t_shirt_size) DESC LIMIT 1",
    "1403": "SELECT e.event_name FROM event AS e INNER JOIN budget AS b ON e.event_id = b.link_to_event WHERE e.status = 'Closed' AND b.remaining < 0 ORDER BY b.remaining ASC LIMIT 1",
    "1404": "SELECT budget.category, SUM(expense.cost) AS total_value FROM event INNER JOIN budget ON event.event_id = budget.link_to_event INNER JOIN expense ON budget.budget_id = expense.link_to_budget WHERE event.event_name = 'October Meeting' AND expense.approved = 'true' GROUP BY budget.category",
    "1405": "SELECT budget.category, SUM(budget.amount) AS total_amount_budgeted FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE event.event_name = 'April Speaker' GROUP BY budget.category ORDER BY total_amount_budgeted ASC",
    "1406": "SELECT budget_id, category, amount FROM budget WHERE category = 'Food' AND amount = (SELECT MAX(amount) FROM budget WHERE category = 'Food')",
    "1407": "SELECT budget.budget_id, budget.category, budget.amount FROM budget WHERE budget.category = 'Advertisement' ORDER BY budget.amount DESC LIMIT 3",
    "1408": "SELECT SUM(cost) AS total_cost FROM expense WHERE expense_description = 'Parking'",
    "1409": "SELECT SUM(cost) AS total_expense FROM expense WHERE expense_date = '2019-08-20'",
    "1410": "SELECT m.first_name, m.last_name, SUM(e.cost) AS total_cost FROM member AS m INNER JOIN expense AS e ON m.member_id = e.link_to_member WHERE m.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY m.member_id",
    "1411": "SELECT expense.expense_description FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison'",
    "1412": "SELECT DISTINCT expense.expense_description FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE member.t_shirt_size = 'X-Large'",
    "1413": "SELECT DISTINCT member.zip FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE expense.cost < 50",
    "1414": "SELECT major.major_name FROM major INNER JOIN member ON major.major_id = member.link_to_major WHERE member.first_name = 'Phillip' AND member.last_name = 'Cullen'",
    "1415": "SELECT member.position FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business'",
    "1416": "SELECT COUNT(member.member_id) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium'",
    "1417": "SELECT DISTINCT event.type FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE budget.remaining > 30",
    "1418": "SELECT DISTINCT budget.category FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.location = 'MU 215'",
    "1419": "SELECT budget.category FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_date = '2020-03-24T12:00:00'",
    "1420": "SELECT major.major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President'",
    "1421": "SELECT CAST(SUM(CASE WHEN t1.position = 'Member' AND t2.major_name = 'Business' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(t1.member_id) AS percentage FROM member AS t1 INNER JOIN major AS t2 ON t1.link_to_major = t2.major_id",
    "1422": "SELECT DISTINCT budget.category FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE event.location = 'MU 215'",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50",
    "1424": "SELECT COUNT(*) FROM member WHERE t_shirt_size = 'X-Large' AND position = 'Member'",
    "1425": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education'",
    "1426": "SELECT member.last_name, major.department, major.college FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Environmental Engineering'",
    "1427": "SELECT budget.category FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.location = 'MU 215' AND event.type = 'Guest Speaker' AND budget.spent = 0",
    "1428": "SELECT zip_code.city, zip_code.state FROM member INNER JOIN major ON member.link_to_major = major.major_id INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.position = 'Member' AND major.department = 'Electrical and Computer Engineering Department'",
    "1429": "SELECT event.event_name FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN member ON attendance.link_to_member = member.member_id WHERE event.type = 'Social' AND event.location = '900 E. Washington St.' AND member.position = 'Vice President'",
    "1430": "SELECT member.last_name, member.position FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE expense.expense_description = 'Pizza' AND expense.expense_date = '2019-09-10'",
    "1431": "SELECT DISTINCT member.last_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE member.position = 'Member' AND event.event_name = 'Women''s Soccer'",
    "1432": "SELECT CAST(SUM(CASE WHEN income.amount = 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(member.member_id) AS percentage FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE member.t_shirt_size = 'Medium' AND member.position = 'Member'",
    "1433": "SELECT DISTINCT county FROM zip_code WHERE type = 'PO Box'",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND county = 'San Juan Municipio' AND state = 'Puerto Rico'",
    "1435": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'",
    "1436": "SELECT expense_id FROM expense GROUP BY expense_id HAVING SUM(cost) > 50",
    "1437": "SELECT t1.link_to_member, t2.link_to_event FROM expense AS t1 INNER JOIN attendance AS t2 ON t1.link_to_member = t2.link_to_member WHERE t1.approved = 'true' AND t1.expense_date BETWEEN '2019-01-10' AND '2019-11-19'",
    "1438": "SELECT major.college FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Katy' AND member.link_to_major = 'rec1N0upiVLy5esTO'",
    "1439": "SELECT member.phone FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business' AND major.college = 'College of Agriculture and Applied Sciences'",
    "1440": "SELECT t2.email FROM expense AS t1 INNER JOIN member AS t2 ON t1.link_to_member = t2.member_id WHERE t1.expense_date BETWEEN '2019-09-10' AND '2019-11-19' AND t1.cost > 20",
    "1441": "SELECT COUNT(member_id) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major_name = 'education' AND college = 'College of Education & Human Services' AND position = 'Member'",
    "1442": "SELECT (SUM(CASE WHEN budget.remaining < 0 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_over_budget FROM budget",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31'",
    "1444": "SELECT expense_description FROM expense GROUP BY expense_description HAVING SUM(cost) / COUNT(expense_id) > 50",
    "1445": "SELECT first_name, last_name FROM member WHERE t_shirt_size = 'X-Large'",
    "1446": "SELECT (SUM(CASE WHEN type = 'PO Box' THEN 1 ELSE 0 END) * 100.0 / COUNT(zip_code)) AS po_box_percentage FROM zip_code",
    "1447": "SELECT e.event_name, e.location FROM budget AS b INNER JOIN event AS e ON b.link_to_event = e.event_id WHERE b.remaining > 0",
    "1448": "SELECT DISTINCT e.event_name, e.event_date FROM event AS e INNER JOIN budget AS b ON e.event_id = b.link_to_event INNER JOIN expense AS ex ON b.budget_id = ex.link_to_budget WHERE ex.expense_description = 'Pizza' AND ex.cost > 50 AND ex.cost < 100",
    "1449": "SELECT member.first_name, member.last_name, major.major_name FROM expense INNER JOIN member ON expense.link_to_member = member.member_id INNER JOIN major ON member.link_to_major = major.major_id WHERE expense.cost > 100",
    "1450": "SELECT DISTINCT z.city, z.county FROM event AS e JOIN attendance AS a ON e.event_id = a.link_to_event JOIN income AS i ON a.link_to_member = i.link_to_member JOIN member AS m ON a.link_to_member = m.member_id JOIN zip_code AS z ON m.zip = z.zip_code GROUP BY e.event_id HAVING SUM(i.amount) > 40",
    "1451": "SELECT e.link_to_member FROM expense AS e INNER JOIN attendance AS a ON e.link_to_member = a.link_to_member GROUP BY e.link_to_member HAVING COUNT(DISTINCT a.link_to_event) > 1 ORDER BY SUM(e.cost) DESC LIMIT 1",
    "1452": "SELECT AVG(expense.cost) AS average_amount_paid FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE member.position <> 'Member'",
    "1453": "SELECT event.event_name FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id INNER JOIN event ON budget.link_to_event = event.event_id WHERE expense.cost < (SELECT AVG(cost) FROM expense)",
    "1454": "SELECT SUM(t1.cost) * 100.0 / COUNT(DISTINCT t2.event_id) AS percentage FROM expense AS t1 INNER JOIN budget AS t3 ON t1.link_to_budget = t3.budget_id INNER JOIN event AS t2 ON t3.link_to_event = t2.event_id WHERE t2.type = 'Meeting'",
    "1455": "SELECT budget.budget_id FROM budget INNER JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense.expense_description = 'Water, chips, cookies' GROUP BY budget.budget_id ORDER BY SUM(expense.cost) DESC LIMIT 1",
    "1456": "SELECT member.first_name, member.last_name FROM member JOIN (SELECT link_to_member, SUM(cost) AS total_spending FROM expense GROUP BY link_to_member ORDER BY total_spending DESC LIMIT 5) AS top_spenders ON member.member_id = top_spenders.link_to_member ORDER BY top_spenders.total_spending DESC",
    "1457": "SELECT member.first_name, member.last_name, member.phone FROM member INNER JOIN expense ON member.member_id = expense.link_to_member WHERE expense.cost > (SELECT AVG(cost) FROM expense)",
    "1458": "SELECT (CAST(SUM(CASE WHEN t2.state = 'New Jersey' THEN 1 ELSE 0 END) AS REAL) / COUNT(t1.member_id)) - (CAST(SUM(CASE WHEN t2.state = 'Vermont' THEN 1 ELSE 0 END) AS REAL) / COUNT(t1.member_id)) AS diff_percentage FROM member AS t1 INNER JOIN zip_code AS t2 ON t1.zip = t2.zip_code WHERE t1.position = 'Member'",
    "1459": "SELECT major.major_name, major.department FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Garrett' AND member.last_name = 'Gerke'",
    "1460": "SELECT member.first_name, member.last_name, expense.cost FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE expense.expense_description = 'Water, Veggie tray, supplies'",
    "1461": "SELECT member.last_name, member.phone FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education'",
    "1462": "SELECT budget.category, budget.amount FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'January Speaker'",
    "1463": "SELECT event.event_name FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE budget.category = 'Food'",
    "1464": "SELECT DISTINCT member.first_name, member.last_name, income.amount FROM member INNER JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'",
    "1465": "SELECT budget.category FROM budget INNER JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense.expense_description = 'Posters'",
    "1466": "SELECT member.first_name, member.last_name, major.college FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Secretary'",
    "1467": "SELECT SUM(b.spent) AS total_spent, e.event_name FROM budget AS b INNER JOIN event AS e ON b.link_to_event = e.event_id WHERE b.category = 'Speaker Gifts'",
    "1468": "SELECT zip_code.city FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Garrett' AND member.last_name = 'Gerke'",
    "1469": "SELECT member.first_name, member.last_name, member.position FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.city = 'Lincolnton' AND zip_code.state = 'North Carolina' AND member.zip = 28092",
    "1470": "SELECT COUNT(gasstationid) FROM gasstations WHERE country = 'CZE' AND segment = 'Premium'",
    "1471": "SELECT CAST(COUNT(CASE WHEN currency = 'EUR' THEN 1 ELSE NULL END) AS REAL) / NULLIF(COUNT(CASE WHEN currency = 'CZK' THEN 1 ELSE NULL END), 0) AS ratio FROM customers",
    "1472": "SELECT c.customerid FROM customers AS c INNER JOIN yearmonth AS ym ON c.customerid = ym.customerid WHERE c.segment = 'LAM' AND SUBSTRING(ym.date, 1, 4) = '2012' GROUP BY c.customerid ORDER BY SUM(ym.consumption) ASC LIMIT 1",
    "1473": "SELECT AVG(y.consumption) / 12 AS averagemonthlyconsumption FROM customers AS c INNER JOIN yearmonth AS y ON c.customerid = y.customerid WHERE c.segment = 'SME' AND SUBSTRING(y.date, 1, 4) = '2013'",
    "1474": "SELECT c.customerid FROM customers AS c INNER JOIN yearmonth AS ym ON c.customerid = ym.customerid WHERE c.currency = 'CZK' AND ym.date BETWEEN '201101' AND '201112' GROUP BY c.customerid ORDER BY SUM(ym.consumption) DESC LIMIT 1",
    "1475": "SELECT COUNT(DISTINCT yearmonth.customerid) FROM yearmonth INNER JOIN customers ON yearmonth.customerid = customers.customerid WHERE customers.segment = 'KAM' AND STRFTIME('%Y%m', yearmonth.date) BETWEEN '201201' AND '201212' AND yearmonth.consumption < 30000",
    "1476": "SELECT SUM(CASE WHEN customers.currency = 'CZK' THEN yearmonth.consumption ELSE 0 END) - SUM(CASE WHEN customers.currency = 'EUR' THEN yearmonth.consumption ELSE 0 END) AS consumptiondifference FROM yearmonth INNER JOIN customers ON yearmonth.customerid = customers.customerid WHERE SUBSTRING(yearmonth.date, 1, 4) = '2012'",
    "1477": "SELECT STRFTIME('%Y', \"transactions_1k\".\"Date\") AS year, SUM(\"transactions_1k\".\"Amount\") AS total_gas_use FROM \"transactions_1k\" INNER JOIN \"customers\" ON \"transactions_1k\".\"CustomerID\" = \"customers\".\"CustomerID\" WHERE \"customers\".\"Currency\" = 'EUR' GROUP BY year ORDER BY total_gas_use DESC LIMIT 1",
    "1478": "SELECT customers.segment FROM yearmonth INNER JOIN customers ON yearmonth.customerid = customers.customerid GROUP BY customers.segment ORDER BY SUM(yearmonth.consumption) ASC LIMIT 1",
    "1479": "SELECT SUBSTRING(yearmonth.date, 1, 4) AS year, SUM(yearmonth.consumption) AS totalconsumption FROM yearmonth INNER JOIN customers ON yearmonth.customerid = customers.customerid WHERE customers.currency = 'CZK' GROUP BY year ORDER BY totalconsumption DESC LIMIT 1",
    "1480": "SELECT SUBSTRING(yearmonth.date, 5, 2) AS month, SUM(yearmonth.consumption) AS total_consumption FROM customers INNER JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE yearmonth.date BETWEEN '201301' AND '201312' AND customers.segment = 'SME' GROUP BY month ORDER BY total_consumption DESC LIMIT 1",
    "1481": "WITH leastconsumption AS (SELECT c.segment, MIN(y.consumption) AS minconsumption FROM customers AS c INNER JOIN yearmonth AS y ON c.customerid = y.customerid WHERE SUBSTRING(y.date, 1, 4) = '2013' AND c.currency = 'CZK' GROUP BY c.segment), annualaverage AS (SELECT c.segment, SUM(y.consumption) / COUNT(DISTINCT c.customerid) AS avgconsumption FROM customers AS c INNER JOIN yearmonth AS y ON c.customerid = y.customerid WHERE SUBSTRING(y.date, 1, 4) = '2013' AND c.currency = 'CZK' AND y.consumption = (SELECT minconsumption FROM leastconsumption AS lc WHERE lc.segment = c.segment) GROUP BY c.segment) SELECT (SELECT avgconsumption FROM annualaverage WHERE segment = 'SME') - (SELECT avgconsumption FROM annualaverage WHERE segment = 'LAM') AS sme_lam_difference, (SELECT avgconsumption FROM annualaverage WHERE segment = 'LAM') - (SELECT avgconsumption FROM annualaverage WHERE segment = 'KAM') AS lam_kam_difference, (SELECT avgconsumption FROM annualaverage WHERE segment = 'KAM') - (SELECT avgconsumption FROM annualaverage WHERE segment = 'SME') AS kam_sme_difference",
    "1482": "SELECT c.segment, ((COALESCE(SUM(CASE WHEN STRFTIME('%Y', ym.date) = '2013' THEN ym.consumption ELSE 0 END), 0) - COALESCE(SUM(CASE WHEN STRFTIME('%Y', ym.date) = '2012' THEN ym.consumption ELSE 0 END), 0)) * 100.0 / NULLIF(COALESCE(SUM(CASE WHEN STRFTIME('%Y', ym.date) = '2013' THEN ym.consumption ELSE 0 END), 0), 0)) AS percentageincrease FROM customers AS c INNER JOIN yearmonth AS ym ON c.customerid = ym.customerid WHERE c.currency = 'EUR' GROUP BY c.segment ORDER BY percentageincrease DESC",
    "1483": "SELECT SUM(yearmonth.consumption) AS totalconsumption FROM yearmonth WHERE yearmonth.customerid = 6 AND yearmonth.date BETWEEN '201308' AND '201311'",
    "1484": "SELECT SUM(CASE WHEN country = 'CZE' AND segment = 'Discount' THEN 1 ELSE 0 END) - SUM(CASE WHEN country = 'SVK' AND segment = 'Discount' THEN 1 ELSE 0 END) AS more_discount_gas_stations_in_cze FROM gasstations",
    "1485": "SELECT (SUM(CASE WHEN customerid = 7 THEN consumption ELSE 0 END) - SUM(CASE WHEN customerid = 5 THEN consumption ELSE 0 END)) AS consumptiondifference FROM yearmonth WHERE date = '201304'",
    "1486": "SELECT (czk_count - eur_count) AS difference FROM (SELECT COUNT(*) AS czk_count FROM transactions_1k AS t INNER JOIN customers AS c ON t.customerid = c.customerid WHERE c.currency = 'CZK' AND c.segment = 'SME') AS czk, (SELECT COUNT(*) AS eur_count FROM transactions_1k AS t INNER JOIN customers AS c ON t.customerid = c.customerid WHERE c.currency = 'EUR' AND c.segment = 'SME') AS eur",
    "1487": "SELECT c.customerid FROM customers AS c INNER JOIN yearmonth AS y ON c.customerid = y.customerid WHERE c.segment = 'LAM' AND c.currency = 'EUR' AND y.date = '201310' ORDER BY y.consumption DESC LIMIT 1",
    "1488": "SELECT c.customerid, SUM(y.consumption) AS totalconsumption FROM customers AS c INNER JOIN yearmonth AS y ON c.customerid = y.customerid WHERE c.segment = 'KAM' GROUP BY c.customerid ORDER BY totalconsumption DESC LIMIT 1",
    "1489": "SELECT SUM(yearmonth.consumption) FROM customers INNER JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE customers.segment = 'KAM' AND yearmonth.date = '201305'",
    "1490": "SELECT CAST(SUM(CASE WHEN y.consumption > 46.73 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(c.customerid) AS percentage FROM customers AS c INNER JOIN yearmonth AS y ON c.customerid = y.customerid WHERE c.segment = 'LAM'",
    "1491": "SELECT gasstations.country, COUNT(gasstations.gasstationid) AS totalstations FROM gasstations WHERE gasstations.segment = 'Value for money' GROUP BY gasstations.country",
    "1492": "SELECT CAST(COUNT(CASE WHEN currency = 'euro' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) AS percentageofkamcustomerspayingineuros FROM customers INNER JOIN transactions_1k ON customers.customerid = transactions_1k.customerid WHERE customers.segment = 'KAM'",
    "1493": "SELECT (SUM(CASE WHEN consumption > 528.3 THEN 1 ELSE 0 END) * 100.0 / COUNT(customerid)) AS percentage FROM yearmonth WHERE SUBSTRING(date, 1, 6) = '201202'",
    "1494": "SELECT CASE WHEN COUNT(*) = 0 THEN 0 ELSE CAST(SUM(IIF(segment = 'Premium', 1, 0)) AS REAL) * 100 / COUNT(*) END AS premium_percentage FROM gasstations WHERE country = 'Slovakia'",
    "1495": "SELECT yearmonth.customerid FROM yearmonth INNER JOIN (SELECT MAX(consumption) AS max_consumption FROM yearmonth WHERE date = '201309') AS max_values ON yearmonth.consumption = max_values.max_consumption AND yearmonth.date = '201309'",
    "1496": "SELECT c.segment FROM yearmonth AS y INNER JOIN customers AS c ON y.customerid = c.customerid WHERE y.date = '201309' GROUP BY c.segment ORDER BY SUM(y.consumption) ASC LIMIT 1",
    "1497": "SELECT yearmonth.customerid FROM yearmonth INNER JOIN customers ON yearmonth.customerid = customers.customerid WHERE yearmonth.date = '201206' AND customers.segment = 'SME' ORDER BY yearmonth.consumption ASC LIMIT 1",
    "1498": "SELECT MAX(yearmonth.consumption) AS highestmonthlyconsumption FROM yearmonth WHERE SUBSTRING(yearmonth.date, 1, 4) = '2012'",
    "1499": "SELECT MAX(t2.consumption) AS maxmonthlyconsumption FROM customers AS t1 INNER JOIN yearmonth AS t2 ON t1.customerid = t2.customerid WHERE t1.currency = 'EUR'",
    "1500": "SELECT DISTINCT products.description FROM transactions_1k INNER JOIN products ON transactions_1k.productid = products.productid INNER JOIN yearmonth ON transactions_1k.customerid = yearmonth.customerid WHERE yearmonth.date = '201309'",
    "1501": "SELECT DISTINCT gasstations.country FROM transactions_1k INNER JOIN yearmonth ON transactions_1k.customerid = yearmonth.customerid INNER JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE SUBSTRING(yearmonth.date, 1, 6) = '201306'",
    "1502": "SELECT DISTINCT gasstations.chainid FROM gasstations INNER JOIN transactions_1k ON gasstations.gasstationid = transactions_1k.gasstationid INNER JOIN customers ON transactions_1k.customerid = customers.customerid WHERE customers.currency IN ('Euro', 'EUR')",
    "1503": "SELECT DISTINCT products.description FROM transactions_1k INNER JOIN customers ON transactions_1k.customerid = customers.customerid INNER JOIN products ON transactions_1k.productid = products.productid WHERE customers.currency = 'EUR'",
    "1504": "SELECT AVG(amount * price) AS averagetotalprice FROM transactions_1k WHERE STRFTIME('%Y-%m', \"transactions_1k\".\"Date\") = '2012-01'",
    "1505": "SELECT COUNT(DISTINCT customers.customerid) FROM customers INNER JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE customers.currency = 'EUR' AND yearmonth.consumption > 1000",
    "1506": "SELECT DISTINCT products.description FROM transactions_1k INNER JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid INNER JOIN products ON transactions_1k.productid = products.productid WHERE gasstations.country = 'CZE'",
    "1507": "SELECT DISTINCT transactions_1k.time FROM transactions_1k INNER JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE gasstations.chainid = 11",
    "1508": "SELECT COUNT(t1.transactionid) FROM transactions_1k AS t1 INNER JOIN gasstations AS t2 ON t1.gasstationid = t2.gasstationid WHERE t2.country = 'CZE' AND t1.price > 1000",
    "1509": "SELECT COUNT(transactionid) FROM transactions_1k INNER JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE date > '2012-01-01' AND gasstations.country = 'CZE'",
    "1510": "SELECT AVG(transactions_1k.amount * transactions_1k.price) AS averagetotalprice FROM transactions_1k INNER JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE gasstations.country = 'CZE'",
    "1511": "SELECT AVG(transactions_1k.amount * transactions_1k.price) AS averagetotalprice FROM customers INNER JOIN transactions_1k ON customers.customerid = transactions_1k.customerid WHERE customers.currency = 'EUR'",
    "1512": "SELECT \"transactions_1k\".\"CustomerID\" FROM \"transactions_1k\" WHERE \"transactions_1k\".\"Date\" = '2012-08-25' GROUP BY \"transactions_1k\".\"CustomerID\" ORDER BY SUM(\"transactions_1k\".\"Amount\" * \"transactions_1k\".\"Price\") DESC LIMIT 1",
    "1513": "SELECT gasstations.country FROM transactions_1k INNER JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE transactions_1k.date = '2012-08-25' ORDER BY transactions_1k.transactionid ASC LIMIT 1",
    "1514": "SELECT DISTINCT customers.currency FROM transactions_1k INNER JOIN customers ON transactions_1k.customerid = customers.customerid WHERE transactions_1k.date = '2012-08-24' AND transactions_1k.time = '16:25:00'",
    "1515": "SELECT DISTINCT customers.segment FROM customers INNER JOIN transactions_1k ON customers.customerid = transactions_1k.customerid WHERE transactions_1k.date = '2012-08-23' AND transactions_1k.time = '21:20:00'",
    "1516": "SELECT COUNT(transactions_1k.transactionid) FROM transactions_1k INNER JOIN customers ON transactions_1k.customerid = customers.customerid WHERE transactions_1k.date = '2012-08-26' AND STRFTIME('%H', transactions_1k.time) < '13' AND customers.currency = 'CZK'",
    "1517": "SELECT c.segment FROM customers AS c WHERE c.customerid = (SELECT t.customerid FROM transactions_1k AS t ORDER BY t.date ASC LIMIT 1)",
    "1518": "SELECT t2.country FROM transactions_1k AS t1 INNER JOIN gasstations AS t2 ON t1.gasstationid = t2.gasstationid WHERE t1.date = '2012-08-24' AND t1.time = '12:42:00'",
    "1519": "SELECT productid FROM transactions_1k WHERE date = '2012-08-23' AND time = '21:20:00'",
    "1520": "SELECT date, amount FROM transactions_1k WHERE customerid = (SELECT customerid FROM transactions_1k WHERE date = '2012-08-24' AND amount = 124.05) AND STRFTIME('%Y-%m', date) = '2012-01'",
    "1521": "SELECT COUNT(t1.transactionid) FROM transactions_1k AS t1 INNER JOIN gasstations AS t2 ON t1.gasstationid = t2.gasstationid WHERE t1.date = '2012-08-26' AND t1.time BETWEEN '08:00:00' AND '09:00:00' AND t2.country = 'CZE'",
    "1522": "SELECT DISTINCT customers.currency FROM customers INNER JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE SUBSTRING(yearmonth.date, 1, 6) = '201306' AND yearmonth.consumption = 214582.17",
    "1523": "SELECT gasstations.country FROM gasstations INNER JOIN transactions_1k ON gasstations.gasstationid = transactions_1k.gasstationid WHERE transactions_1k.cardid = 667467",
    "1524": "SELECT DISTINCT customers.segment FROM customers INNER JOIN transactions_1k ON customers.customerid = transactions_1k.customerid WHERE STRFTIME('%Y-%m-%d', transactions_1k.date) = '2012-08-24' AND transactions_1k.price = 548.4",
    "1525": "SELECT CAST(COUNT(DISTINCT t1.customerid) AS REAL) * 100 / (SELECT COUNT(DISTINCT customerid) FROM transactions_1k WHERE date = '2012-08-25') AS percentage FROM transactions_1k AS t1 INNER JOIN customers AS t2 ON t1.customerid = t2.customerid WHERE t1.date = '2012-08-25' AND t2.currency = 'EUR'",
    "1526": "SELECT (y12.consumption - y13.consumption) / y12.consumption AS consumptiondecreaserate FROM transactions_1k AS t INNER JOIN yearmonth AS y12 ON t.customerid = y12.customerid AND STRFTIME('%Y', y12.date) = '2012' INNER JOIN yearmonth AS y13 ON t.customerid = y13.customerid AND STRFTIME('%Y', y13.date) = '2013' WHERE t.date = '2012-08-25' AND t.amount = 634.8",
    "1527": "SELECT gasstationid FROM transactions_1k GROUP BY gasstationid ORDER BY SUM(amount * price) DESC LIMIT 1",
    "1528": "SELECT CAST(SUM(CASE WHEN t.segment = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(t.gasstationid) AS premiumpercentage FROM gasstations AS t WHERE t.country = 'SVK'",
    "1529": "SELECT SUM(amount * price) AS totalamountspent, SUM(CASE WHEN STRFTIME('%Y%m', date) = '201201' THEN amount * price ELSE 0 END) AS january2012amountspent FROM transactions_1k WHERE customerid = 38508",
    "1530": "SELECT p.description FROM products AS p INNER JOIN (SELECT productid, SUM(amount) AS totalsales FROM transactions_1k GROUP BY productid ORDER BY totalsales DESC LIMIT 5) AS t ON p.productid = t.productid",
    "1531": "SELECT c.customerid, SUM(t.amount * t.price) / SUM(t.amount) AS averagepriceperitem, c.currency FROM transactions_1k AS t INNER JOIN customers AS c ON t.customerid = c.customerid GROUP BY t.customerid ORDER BY SUM(t.amount * t.price) DESC LIMIT 1",
    "1532": "SELECT DISTINCT gs.country FROM gasstations AS gs INNER JOIN transactions_1k AS t ON gs.gasstationid = t.gasstationid WHERE t.productid = 2 AND t.price = (SELECT MAX(price) FROM transactions_1k WHERE productid = 2)",
    "1533": "SELECT ym.consumption FROM yearmonth AS ym INNER JOIN (SELECT customerid FROM transactions_1k WHERE productid = 5 AND (price / amount) > 29.00) AS t ON ym.customerid = t.customerid WHERE ym.date = '201208'"
}