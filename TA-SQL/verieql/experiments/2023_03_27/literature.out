{"index":0,"pair":["SELECT ITM.ITEMN, ITPV.VENDN FROM ITM ITM, (SELECT DISTINCT ITP.ITEMN, PUR.VENDN FROM ITP ITP, PUR PUR WHERE ITP.PONUM = PUR.PONUM AND PUR.ODATE > 85) ITPV WHERE ITM.ITEMN = ITPV.ITEMN AND ITM.ITEMN > 1 AND ITM.ITEMN < 20","SELECT DISTINCT ITM.ITEMN, PUR.VENDN FROM ITM ITM, ITP ITP, PUR PUR WHERE ITP.PONUM = PUR.PONUM AND ITM.ITEMN = ITP.ITEMN AND PUR.ODATE > 85 AND ITM.ITEMN > 1 AND ITM.ITEMN < 20"],"states":["EQU","EQU","EQU","TMO"],"times":[[0.191576,0.516248],[0.251312,0.326905],[0.512665,92.472179],null],"counterexample":null,"err":null,"file":"ex1sigmod92","schema":{"ITP":{"ITEMN":"INT","PONUM":"INT"},"ITM":{"ITEMN":"INT","TYPE":"INT"},"PUR":{"PONUM":"INT","ODATE":"INT","VENDN":"INT"}},"constraint":[{"primary":[{"value":"ITM__ITEMN"}]}]}
{"index":1,"pair":["SELECT Z.A, Z.B FROM R1 X, R2 Y, R2 Z WHERE X.A = Y.A AND Y.A = Z.A AND X.A = Z.A AND Y.B = Z.B","SELECT Z.A, Z.B FROM R1 X, R2 Y, R2 Z WHERE X.A = Y.A AND Y.A = Z.A AND X.A = Z.A"],"states":["NEQ"],"times":[[0.185946,0.855879]],"counterexample":"CREATE TABLE R1 (\n\tA INTEGER,\n\tB INTEGER\n);\nINSERT INTO R1 VALUES (0, 0);\n\nCREATE TABLE R2 (\n\tA INTEGER,\n\tB INTEGER\n);\nINSERT INTO R2 VALUES (0, NULL);\n\nSELECT Z.A, Z.B FROM R1 X, R2 Y, R2 Z WHERE X.A = Y.A AND Y.A = Z.A AND X.A = Z.A AND Y.B = Z.B;\nSELECT Z.A, Z.B FROM R1 X, R2 Y, R2 Z WHERE X.A = Y.A AND Y.A = Z.A AND X.A = Z.A;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"ex2sigmod83","schema":{"R1":{"A":"INT","B":"INT"},"R2":{"A":"INT","B":"INT"}},"constraint":[{"primary":[{"value":"R2__A"}]}]}
{"index":2,"pair":["SELECT ITEMPRICE.NP, ITM.TYPE, ITM.ITEMNO FROM (SELECT DISTINCT ITP.ITEMNO AS ITN, ITP.NP AS NP FROM ITP ITP WHERE ITP.NP > 1000) ITEMPRICE, ITM ITM WHERE ITEMPRICE.ITN = ITM.ITEMNO","SELECT DISTINCT ITP.NP, ITM.TYPE, ITM.ITEMNO FROM ITP ITP, ITM ITM WHERE ITP.NP > 1000 AND ITP.ITEMNO = ITM.ITEMNO"],"states":["EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.180995,0.366147],[0.19971,0.073889],[0.243649,0.426595],[0.32578,7.567056],[0.480545,65.686651],null],"counterexample":null,"err":null,"file":"ex2sigmod92","schema":{"ITP":{"ITEMNO":"INT","NP":"INT"},"ITM":{"ITEMNO":"INT","TYPE":"INT"}},"constraint":[{"primary":[{"value":"ITM__ITEMNO"}]}]}
{"index":3,"pair":["SELECT ITM.ITEMNO, ITEMPRICE.NP FROM (SELECT DISTINCT ITP.ITEMNO AS ITN, ITP.NP AS NP FROM ITP ITP) ITEMPRICE, ITM ITM WHERE ITEMPRICE.ITN = ITM.ITEMNO","SELECT DISTINCT ITM.ITEMNO, ITP.NP FROM ITP ITP, ITM ITM WHERE ITP.ITEMNO = ITM.ITEMNO"],"states":["EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.177881,0.724726],[0.193406,0.056097],[0.231017,0.340853],[0.296565,5.509317],[0.418329,52.973735],null],"counterexample":null,"err":null,"file":"ex2sigmod92simpl","schema":{"ITP":{"ITEMNO":"INT","NP":"INT"},"ITM":{"ITEMNO":"INT","TYPE":"INT"}},"constraint":[{"primary":[{"value":"ITM__ITEMNO"}]}]}
{"index":4,"pair":["SELECT * FROM ITP ITP WHERE ITP.ITEMN IN (SELECT ITL.ITEMN FROM ITL ITL WHERE ITL.WKCEN = 468 AND ITL.LOCAN = 0)","SELECT DISTINCT ITP.* FROM ITP ITP, ITL ITL WHERE ITP.ITEMN = ITL.ITEMN AND ITL.WKCEN = 468 AND ITL.LOCAN = 0"],"states":["EQU","EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.17751,0.194558],[0.19077,0.046834],[0.215477,0.157733],[0.260787,0.702282],[0.337325,6.51542],[0.44876,70.594173],null],"counterexample":null,"err":null,"file":"ex3sigmod92","schema":{"ITP":{"ITEMN":"INT","PONUM":"INT"},"ITL":{"ITEMN":"INT","WKCEN":"INT","LOCAN":"INT"}},"constraint":[{"primary":[{"value":"ITP__ITEMN"}]}]}
{"index":5,"pair":["SELECT T.TMEMBER FROM DEPTS D, TEAMS T WHERE D.DPROJ = T.TPROJ AND D.DNAME = 'SECURITY'","SELECT V1.E FROM (SELECT D.DNAME AS D, D.DPROJ AS P, P.EMPL AS E FROM DEPTS D, PAYROLL P WHERE D.DNAME = P.PDEPT) V1, (SELECT T.TMEMBER AS E, P.PDEPT AS D, T.TPROJ AS P FROM TEAMS T, PAYROLL P WHERE T.TMEMBER = P.EMPL) V2 WHERE V1.D = 'SECURITY' AND V1.P = V2.P AND V1.E = V2.E AND V1.D = V2.D"],"states":["EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.193472,0.647578],[0.251764,0.096003],[0.677557,0.933994],[3.442081,19.636053],[17.73562,409.70948],null],"counterexample":null,"err":null,"file":"fkPennTR","schema":{"DEPTS":{"DNAME":"INT","DPROJ":"INT"},"TEAMS":{"TMEMBER":null,"TPROJ":"INT"},"PAYROLL":{"EMPL":"INT","PDEPT":"INT"}},"constraint":[{"foreign":[{"value":"TEAMS__TMEMBER"},{"value":"PAYROLL__EMPL"}]},{"primary":[{"value":"PAYROLL__EMPL"}]}]}
{"index":6,"pair":["SELECT Y.* FROM PAYROLL X, APPLICANT Y WHERE X.SSNO = Y.SSNO AND X.DEPTNO = 29","SELECT C.* FROM PAYROLL A, (SELECT Y.SSNO, Y.DEPTNO FROM PAYROLL Y) B, APPLICANT C WHERE A.SSNO = B.SSNO AND C.SSNO = A.SSNO AND B.DEPTNO = 29"],"states":["EQU","NEQ"],"times":[[0.180281,0.348845],[0.214215,0.080101]],"counterexample":"CREATE TABLE PAYROLL (\n\tSSNO INTEGER,\n\tDEPTNO INTEGER\n);\nINSERT INTO PAYROLL VALUES (0, 0);\nINSERT INTO PAYROLL VALUES (0, 29);\n\nCREATE TABLE APPLICANT (\n\tSSNO INTEGER,\n\tJOBTITILE INTEGER,\n\tOFFICENO INTEGER\n);\nINSERT INTO APPLICANT VALUES (0, 0, 1);\nINSERT INTO APPLICANT VALUES (0, 0, 0);\n\nSELECT Y.* FROM PAYROLL X, APPLICANT Y WHERE X.SSNO = Y.SSNO AND X.DEPTNO = 29;\nSELECT C.* FROM PAYROLL A, (SELECT Y.SSNO, Y.DEPTNO FROM PAYROLL Y) B, APPLICANT C WHERE A.SSNO = B.SSNO AND C.SSNO = A.SSNO AND B.DEPTNO = 29;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"index_sigmod82","schema":{"PAYROLL":{"SSNO":"INT","DEPTNO":"INT"},"APPLICANT":{"SSNO":"INT","JOBTITILE":"INT","OFFICENO":"INT"}},"constraint":null}
{"index":7,"pair":["SELECT X.NAME AS XN FROM EMP X WHERE (X.EMP, X.DEPT) IN (SELECT Y.MGR, Y.DEPT FROM DEPT Y WHERE Y.LOC = 3)","SELECT X.NAME AS XN FROM EMP X, DEPT Y WHERE X.DEPT = Y.DEPT AND Y.LOC = 3 AND X.EMP = Y.MGR"],"states":["EQU","NEQ"],"times":[[0.179097,0.270921],[0.195747,0.045463]],"counterexample":"CREATE TABLE EMP (\n\tNAME INTEGER,\n\tDEPT INTEGER,\n\tEMP INTEGER\n);\nINSERT INTO EMP VALUES (0, -1, 1);\nINSERT INTO EMP VALUES (0, 0, 0);\n\nCREATE TABLE DEPT (\n\tDEPT INTEGER,\n\tLOC INTEGER,\n\tMGR INTEGER\n);\nINSERT INTO DEPT VALUES (0, 3, 0);\nINSERT INTO DEPT VALUES (0, 3, 0);\n\nSELECT X.NAME AS XN FROM EMP X WHERE (X.EMP, X.DEPT) IN (SELECT Y.MGR, Y.DEPT FROM DEPT Y WHERE Y.LOC = 3);\nSELECT X.NAME AS XN FROM EMP X, DEPT Y WHERE X.DEPT = Y.DEPT AND Y.LOC = 3 AND X.EMP = Y.MGR;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"inline-exists","schema":{"EMP":{"NAME":"INT","DEPT":"INT","EMP":"INT"},"DEPT":{"DEPT":"INT","LOC":"INT","MGR":"INT"}},"constraint":null}
{"index":8,"pair":["SELECT X.B AS XB FROM R X WHERE X.A = 5 AND X.C < 1","SELECT X.B AS XB FROM R X WHERE X.A < 10"],"states":["NEQ"],"times":[[0.172275,0.271378]],"counterexample":"CREATE TABLE R (\n\tA INTEGER,\n\tB INTEGER,\n\tC INTEGER\n);\nINSERT INTO R VALUES (0, 0, 0);\n\nSELECT X.B AS XB FROM R X WHERE X.A = 5 AND X.C < 1;\nSELECT X.B AS XB FROM R X WHERE X.A < 10;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"missing-pred","schema":{"R":{"A":"INT","B":"INT","C":"INT"}},"constraint":null}
{"index":9,"pair":["SELECT UID, UNAME, IF(CNT IS NULL, 0, CNT) AS CNT FROM (SELECT X.UID AS UID, X.UNAME FROM USER X WHERE X.CITY = 3) P LEFT JOIN (SELECT Y.UID AS UID, COUNT(*) AS CNT FROM PICTURE Y WHERE Y.SIZE > 1000000 GROUP BY Y.UID) Q USING (UID)","SELECT X.UID AS UID, X.UNAME AS UNAME, COUNT(*) AS CNT FROM USER X, PICTURE Y WHERE X.UID = Y.UID AND Y.SIZE > 1000000 AND X.CITY = 3 GROUP BY X.UID, X.UNAME"],"states":["NEQ"],"times":[[0.201932,0.858728]],"counterexample":"CREATE TABLE USER (\n\tUID INTEGER,\n\tUNAME INTEGER,\n\tCITY INTEGER\n);\nINSERT INTO USER VALUES (-1, 0, 3);\n\nCREATE TABLE PICTURE (\n\tUID INTEGER,\n\tSIZE INTEGER\n);\nINSERT INTO PICTURE VALUES (0, 1000001);\n\nSELECT UID, UNAME, IF(CNT IS NULL, 0, CNT) AS CNT FROM (SELECT X.UID AS UID, X.UNAME FROM USER X WHERE X.CITY = 3) P LEFT JOIN (SELECT Y.UID AS UID, COUNT(*) AS CNT FROM PICTURE Y WHERE Y.SIZE > 1000000 GROUP BY Y.UID) Q USING (UID);\nSELECT X.UID AS UID, X.UNAME AS UNAME, COUNT(*) AS CNT FROM USER X, PICTURE Y WHERE X.UID = Y.UID AND Y.SIZE > 1000000 AND X.CITY = 3 GROUP BY X.UID, X.UNAME;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"344-exam-1","schema":{"USER":{"UID":"INT","UNAME":"INT","CITY":"INT"},"PICTURE":{"UID":"INT","SIZE":"INT"}},"constraint":null}
{"index":10,"pair":["SELECT DISTINCT X.USRUID AS XID, X.USRNAME AS XNAME FROM USR X, PIC U, PIC V, PIC W WHERE X.USRUID = U.PICUID AND X.USRUID = V.PICUID AND X.USRUID = W.PICUID AND W.PICSIZE = V.PICSIZE AND B1(U) AND B2(V)","SELECT DISTINCT X.USRUID AS XID, X.USRNAME AS XNAME FROM USR X, PIC U, PIC V WHERE X.USRUID = U.PICUID AND X.USRUID = V.PICUID AND B1(U) AND B2(V)"],"states":["NEQ"],"times":[[0.191547,0.679009]],"counterexample":"CREATE TABLE USR (\n\tUSRUID INTEGER,\n\tUSRNAME VARCHAR(20)\n);\nINSERT INTO USR VALUES (0, '2147483648');\n\nCREATE TABLE PIC (\n\tPICUID INTEGER,\n\tPICSIZE INTEGER\n);\nINSERT INTO PIC VALUES (0, NULL);\n\nSELECT DISTINCT X.USRUID AS XID, X.USRNAME AS XNAME FROM USR X, PIC U, PIC V, PIC W WHERE X.USRUID = U.PICUID AND X.USRUID = V.PICUID AND X.USRUID = W.PICUID AND W.PICSIZE = V.PICSIZE AND B1(U) AND B2(V);\nSELECT DISTINCT X.USRUID AS XID, X.USRNAME AS XNAME FROM USR X, PIC U, PIC V WHERE X.USRUID = U.PICUID AND X.USRUID = V.PICUID AND B1(U) AND B2(V);","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"344Q1","schema":{"USR":{"USRUID":"INT","USRNAME":"VARCHAR"},"PIC":{"PICUID":"INT","PICSIZE":"INT"}},"constraint":null}
{"index":11,"pair":["SELECT X.UID AS XU, X.UNAME AS XN, (SELECT COUNT(*) AS CT FROM PIC Y FROM X.UID = Y.UID AND Y.SIZE > 100000) AS CNT FROM USR X WHERE X.CITY = 3","SELECT X.UID AS XU, X.NAME AS XN, COUNT(*) AS CNT FROM USR X, PIC Y WHERE X.UID = Y.UID AND Y.SIZE > 100000 GROUP BY X.UID, X.UNAME"],"states":["SYN"],"times":[[0.162429,null]],"counterexample":null,"err":"ParserSyntaxError: cannot parse `SELECT X.UID AS XU, X.UNAME AS XN, (SELECT COUNT(*) AS CT FROM PIC Y FROM X.UID = Y.UID AND Y.SIZE > 100000) AS CNT FROM USR X WHERE X.CITY = 3`","file":"344Q2","schema":{"USR":{"UID":"INT","UNAME":"INT","CITY":"INT"},"PIC":{"UID":"INT","SIZE":"INT"}},"constraint":null}
{"index":12,"pair":["SELECT X.PNUM AS XP FROM PARTS X WHERE (X.PNUM, X.QOH) IN (SELECT Y.PNUM, COUNT(Y.SHIPDATE) AS CNT FROM SUPPLY Y WHERE Y.SHIPDATE < 10)","SELECT X.PNUM AS XP FROM PARTS X, (SELECT Y.PNUM AS SUPPNUM, COUNT(Y.SHIPDATE) AS CT FROM SUPPLY Y WHERE Y.SHIPDATE < 10 GROUP BY Y.PNUM) TEMP WHERE X.QOH = TEMP.CT AND X.PNUM = TEMP.SUPPNUM"],"states":["EQU","NEQ"],"times":[[0.191138,0.581466],[0.204581,0.044695]],"counterexample":"CREATE TABLE PARTS (\n\tPNUM INTEGER,\n\tQOH INTEGER\n);\nINSERT INTO PARTS VALUES (0, 3);\nINSERT INTO PARTS VALUES (0, 1);\n\nCREATE TABLE SUPPLY (\n\tPNUM INTEGER,\n\tSHIPDATE INTEGER\n);\nINSERT INTO SUPPLY VALUES (1, 0);\nINSERT INTO SUPPLY VALUES (0, 0);\n\nSELECT X.PNUM AS XP FROM PARTS X WHERE (X.PNUM, X.QOH) IN (SELECT Y.PNUM, COUNT(Y.SHIPDATE) AS CNT FROM SUPPLY Y WHERE Y.SHIPDATE < 10);\nSELECT X.PNUM AS XP FROM PARTS X, (SELECT Y.PNUM AS SUPPNUM, COUNT(Y.SHIPDATE) AS CT FROM SUPPLY Y WHERE Y.SHIPDATE < 10 GROUP BY Y.PNUM) TEMP WHERE X.QOH = TEMP.CT AND X.PNUM = TEMP.SUPPNUM;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"countbug","schema":{"PARTS":{"PNUM":"INT","QOH":"INT"},"SUPPLY":{"PNUM":"INT","SHIPDATE":"INT"}},"constraint":null}
{"index":13,"pair":["SELECT X.NAME AS XN FROM EMP X WHERE (X.EMP, X.DEPT) IN (SELECT Y.MGR, Y.DEPT FROM DEPT Y WHERE Y.LOC = 3)","SELECT X.NAME AS XN FROM EMP X"],"states":["NEQ"],"times":[[0.173091,0.473026]],"counterexample":"CREATE TABLE EMP (\n\tNAME INTEGER,\n\tDEPT INTEGER,\n\tEMP INTEGER\n);\nINSERT INTO EMP VALUES (0, 1, 0);\n\nCREATE TABLE DEPT (\n\tDEPT INTEGER,\n\tLOC INTEGER,\n\tMGR INTEGER\n);\nINSERT INTO DEPT VALUES (0, 3, 0);\n\nSELECT X.NAME AS XN FROM EMP X WHERE (X.EMP, X.DEPT) IN (SELECT Y.MGR, Y.DEPT FROM DEPT Y WHERE Y.LOC = 3);\nSELECT X.NAME AS XN FROM EMP X;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"inline-exists","schema":{"EMP":{"NAME":"INT","DEPT":"INT","EMP":"INT"},"DEPT":{"DEPT":"INT","LOC":"INT","MGR":"INT"}},"constraint":null}
{"index":14,"pair":["SELECT DISTINCT X.X AS AX FROM A X, B Y WHERE X.YA = Y.YB","(SELECT X.X AS AX FROM A X, A Y, B Z WHERE X.X = Y.X AND X.YA = Z.YB) UNION ALL (SELECT 1 AS AX FROM A X WHERE 1 = 0)"],"states":["NEQ"],"times":[[0.187208,0.105073]],"counterexample":"CREATE TABLE A (\n\tX INTEGER,\n\tYA INTEGER\n);\nINSERT INTO A VALUES (NULL, 0);\n\nCREATE TABLE B (\n\tYB INTEGER\n);\nINSERT INTO B VALUES (0);\n\nSELECT DISTINCT X.X AS AX FROM A X, B Y WHERE X.YA = Y.YB;\n(SELECT X.X AS AX FROM A X, A Y, B Z WHERE X.X = Y.X AND X.YA = Z.YB) UNION ALL (SELECT 1 AS AX FROM A X WHERE 1 = 0);","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"issue29","schema":{"A":{"X":"INT","YA":"INT"},"B":{"YB":"INT"}},"constraint":null}
{"index":15,"pair":["SELECT X.X AS AX FROM A X WHERE X.YX = 'HELLO'","SELECT X.X AS AX FROM A X WHERE X.YX = 'HELLO HI'"],"states":["NEQ"],"times":[[0.167289,0.784105]],"counterexample":"CREATE TABLE A (\n\tX INTEGER,\n\tYA INTEGER,\n\tYX VARCHAR(20)\n);\nINSERT INTO A VALUES (0, 0, 'HELLO HI');\n\nSELECT X.X AS AX FROM A X WHERE X.YX = 'HELLO';\nSELECT X.X AS AX FROM A X WHERE X.YX = 'HELLO HI';","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"string_ex1","schema":{"A":{"X":"INT","YA":"INT","YX":"VARCHAR"}},"constraint":null}
{"index":16,"pair":["SELECT DISTINCT X.X AS X FROM R1 X, R2 Y WHERE X.Y = Y.Y AND X.X = 1","SELECT DISTINCT X.X AS X FROM R1 X, R1 Y, R2 Z WHERE X.X = Y.X AND X.Y = Z.Y AND X.X = 1"],"states":["EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.18583,0.701969],[0.214827,0.074048],[0.32795,0.724556],[0.729389,14.332202],[2.029474,217.48737],null],"counterexample":null,"err":null,"file":"CQExample0","schema":{"R1":{"X":"INT","Y":"INT"},"R2":{"Y":"INT"}},"constraint":null}
{"index":17,"pair":["SELECT DISTINCT * FROM R X WHERE X.A1 = X.A2 AND X.A2 = X.A3","SELECT DISTINCT * FROM R X WHERE X.A1 = X.A2 AND X.A1 = X.A3"],"states":["EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.168005,0.726055],[0.175478,0.032851],[0.180826,0.047184],[0.1881,0.082702],[0.19727,0.160919],[0.204462,0.287907],[0.213555,0.528441],[0.225976,1.065749],[0.2349,1.980118],[0.247049,3.259441],[0.262363,3.765667],[0.272082,7.766136],[0.288283,11.848774],[0.303257,17.269048],[0.319156,27.495828],[0.338152,48.338575],[0.356245,177.086593],null],"counterexample":null,"err":null,"file":"CQExample1","schema":{"R":{"A1":"INT","A2":"INT","A3":"INT"}},"constraint":null}
{"index":18,"pair":["SELECT DISTINCT X.* FROM R X, R Y","SELECT DISTINCT X.* FROM R X"],"states":["EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.163867,0.219985],[0.170679,0.044119],[0.184021,0.052431],[0.208684,0.104621],[0.258774,0.210732],[0.321469,0.466597],[0.421064,1.010279],[0.58715,2.238313],[0.792589,3.780202],[1.092529,7.691641],[1.534596,12.503603],[2.093147,33.656103],[7.453267,147.021935],[7.87598,67.247343],[4.830318,262.860407],null],"counterexample":null,"err":null,"file":"SelfJoin0","schema":{"R":{"X":"INT"}},"constraint":null}
{"index":19,"pair":["SELECT DISTINCT Y.A AS A FROM R X, R Y WHERE X.A = Y.A","SELECT DISTINCT X.A AS A FROM R X"],"states":["NEQ"],"times":[[0.165553,0.827547]],"counterexample":"CREATE TABLE R (\n\tA INTEGER\n);\nINSERT INTO R VALUES (NULL);\n\nSELECT DISTINCT Y.A AS A FROM R X, R Y WHERE X.A = Y.A;\nSELECT DISTINCT X.A AS A FROM R X;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"SelfJoin1","schema":{"R":{"A":"INT"}},"constraint":null}
{"index":20,"pair":["SELECT DISTINCT Y.A1 AS A1, Y.A2 AS A2 FROM R X, R Y WHERE X.A1 = Y.A1 AND X.A2 = Y.A2","SELECT DISTINCT X.A1 AS A1, X.A2 AS A2 FROM R X"],"states":["NEQ"],"times":[[0.173067,0.825929]],"counterexample":"CREATE TABLE R (\n\tA1 INTEGER,\n\tA2 INTEGER\n);\nINSERT INTO R VALUES (NULL, 0);\n\nSELECT DISTINCT Y.A1 AS A1, Y.A2 AS A2 FROM R X, R Y WHERE X.A1 = Y.A1 AND X.A2 = Y.A2;\nSELECT DISTINCT X.A1 AS A1, X.A2 AS A2 FROM R X;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"SelfJoin2","schema":{"R":{"A1":"INT","A2":"INT"}},"constraint":null}
{"index":21,"pair":["SELECT X.A, SUM(X.A + X.B) FROM R X GROUP BY X.A","SELECT Y.A, SUM(Y.A + Y.B) FROM R Y GROUP BY Y.A"],"states":["EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.179392,0.215974],[0.182299,0.03181],[0.190171,0.046066],[0.204884,0.07624],[0.213641,0.140601],[0.227761,0.32162],[0.243822,0.774693],[0.259641,2.290181],[0.280725,3.635093],[0.30462,6.552029],[0.328594,12.656635],[0.346284,20.510779],[0.402037,72.273098],[1.097039,118.815298],[0.437572,77.969284],[0.464105,247.337126],null],"counterexample":null,"err":null,"file":"aggOnExpr","schema":{"R":{"A":"INT","B":"INT"}},"constraint":null}
{"index":22,"pair":["SELECT * FROM (SELECT * FROM R X WHERE B1(X)) Y WHERE B2(Y)","SELECT * FROM (SELECT * FROM R X WHERE B2(X)) Y WHERE B1(Y)"],"states":["EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.173829,0.843274],[0.178071,0.029089],[0.178002,0.037625],[0.182269,0.053134],[0.186074,0.118559],[0.193738,0.340119],[0.194099,1.024413],[0.201761,3.593706],[0.20581,8.146043],[0.211295,14.148523],[0.222726,36.041322],[0.603686,171.145134],[0.23502,114.631652],null],"counterexample":null,"err":null,"file":"commutativeSelect","schema":{"R":{"X":"INT"}},"constraint":null}
{"index":23,"pair":["SELECT * FROM R X WHERE B1(X) AND B2(X)","SELECT * FROM (SELECT * FROM R X WHERE B1(X)) Y WHERE B2(Y)"],"states":["EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.16988,0.713239],[0.173016,0.034432],[0.175576,0.03579],[0.181988,0.063239],[0.182767,0.12268],[0.187407,0.329446],[0.191328,0.954759],[0.20228,3.215544],[0.202509,11.765912],[0.212111,17.781871],[0.213263,42.294338],[0.591958,158.956063],[0.230004,96.189756],null],"counterexample":null,"err":null,"file":"conjunctSelect","schema":{"R":{"X":"INT"}},"constraint":null}
{"index":24,"pair":["SELECT COUNT(*) AS A FROM R X","SELECT COUNT(Y.B) FROM R Y"],"states":["NEQ"],"times":[[0.164427,0.821559]],"counterexample":"CREATE TABLE R (\n\tA INTEGER,\n\tB INTEGER\n);\nINSERT INTO R VALUES (0, NULL);\n\nSELECT COUNT(*) AS A FROM R X;\nSELECT COUNT(Y.B) FROM R Y;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"countProject","schema":{"R":{"A":"INT","B":"INT"}},"constraint":null}
{"index":25,"pair":["SELECT DISTINCT * FROM R X WHERE B1(X) OR B2(X)","SELECT DISTINCT * FROM ((SELECT * FROM R X WHERE B1(X)) UNION ALL (SELECT * FROM R Y WHERE B2(Y))) X"],"states":["EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.161677,0.243268],[0.169524,0.031905],[0.173075,0.053459],[0.197658,0.088998],[0.205966,0.192289],[0.217747,0.454379],[0.23198,0.961522],[0.243954,2.564483],[0.250548,5.036366],[0.271709,10.208106],[0.27755,16.600434],[0.292951,43.066198],[0.824482,108.849218],[0.890573,98.749395],[0.346682,81.848221],[0.368199,200.976936],null],"counterexample":null,"err":null,"file":"disjointSelect","schema":{"R":{"X":"INT"}},"constraint":null}
{"index":26,"pair":["SELECT DEPT.NAME AS DNAME, COUNT(*) AS C FROM DEPT AS DEPT GROUP BY DEPT.NAME HAVING DEPT.NAME = 10","SELECT T2.DNAME, T2.CNT AS C FROM (SELECT DEPT0.NAME AS DNAME, COUNT(*) AS CNT FROM DEPT AS DEPT0 GROUP BY DEPT0.NAME) AS T2 WHERE T2.DNAME = 10"],"states":["EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.17851,0.819512],[0.189631,0.032949],[0.194102,0.048877],[0.204505,0.07016],[0.216991,0.120093],[0.229197,0.177073],[0.246192,0.347316],[0.270017,0.774292],[0.287634,1.110484],[0.305923,2.343939],[0.32826,3.95112],[0.344375,7.863363],[0.369423,32.883156],[0.427825,116.746801],[1.149416,244.926211],null],"counterexample":null,"err":null,"file":"havingToWhere","schema":{"DEPT":{"DEPTNO":"INT","NAME":"INT"}},"constraint":null}
{"index":27,"pair":["SELECT * FROM (SELECT * FROM R X WHERE B(X)) Y WHERE B(Y)","SELECT * FROM R X WHERE B(X)"],"states":["EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.181092,0.328224],[0.183643,0.059634],[0.187363,0.037958],[0.191653,0.062473],[0.194695,0.139203],[0.190415,0.39896],[0.187736,1.060905],[0.192117,1.649635],[0.197586,5.956911],[0.204006,21.264409],[0.209766,40.402745],[0.540776,176.850879],[0.567321,201.880048],null],"counterexample":null,"err":null,"file":"idempotentSelect","schema":{"R":{"X":"INT"}},"constraint":null}
{"index":28,"pair":["SELECT * FROM A X WHERE X.C IN (SELECT Y.C FROM A Y)","SELECT * FROM A X"],"states":["NEQ"],"times":[[0.183288,0.347587]],"counterexample":"CREATE TABLE A (\n\tC INTEGER\n);\nINSERT INTO A VALUES (NULL);\n\nSELECT * FROM A X WHERE X.C IN (SELECT Y.C FROM A Y);\nSELECT * FROM A X;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"inlineCorrelatedSubqueries","schema":{"A":{"C":"INT"}},"constraint":null}
{"index":29,"pair":["SELECT X.A1 AS A1, X.A2 AS A2, Y.B1 AS B1, Y.B2 AS B2 FROM A X, B Y WHERE X.A1 = Y.B1","SELECT Y.A1 AS A1, Y.A2 AS A2, X.B1 AS B1, X.B2 AS B2 FROM B X, A Y WHERE Y.A1 = X.B1"],"states":["EQU","EQU","EQU","EQU","TMO"],"times":[[0.177083,0.402284],[0.199111,0.099475],[0.229594,2.980217],[0.304323,214.536235],null],"counterexample":null,"err":null,"file":"joinCommute","schema":{"A":{"A1":"INT","A2":"INT"},"B":{"B1":"INT","B2":"INT"}},"constraint":null}
{"index":30,"pair":["SELECT * FROM R1 X, (SELECT * FROM R2 UNION ALL SELECT * FROM R3) Y","(SELECT * FROM R1 X, R2 Y) UNION ALL (SELECT * FROM R1 X, R3 Y)"],"states":["EQU","EQU","EQU","EQU","TMO"],"times":[[0.183033,0.284754],[0.203541,0.069983],[0.269871,0.882406],[0.426284,33.876836],null],"counterexample":null,"err":null,"file":"productDistributesOverUnion","schema":{"R1":{"X":"INT"},"R2":{"X":"INT"},"R3":{"X":"INT"}},"constraint":null}
{"index":31,"pair":["SELECT X.B AS XB, Y.B AS YB FROM R1 X, R2 Y","SELECT X1.XB AS XB, Y1.YB AS YB FROM (SELECT X.B AS XB FROM R1 X) X1, (SELECT Y.B AS YB FROM R2 Y) Y1"],"states":["EQU","EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.191377,0.515286],[0.202492,0.038146],[0.223641,0.077371],[0.273292,0.392501],[0.334794,3.126537],[0.480647,54.032446],null],"counterexample":null,"err":null,"file":"projectJoinTranspose","schema":{"R1":{"A":"INT","B":"INT"},"R2":{"A":"INT","B":"INT"}},"constraint":null}
{"index":32,"pair":["SELECT * FROM (SELECT * FROM R UNION ALL SELECT * FROM S) X","(SELECT * FROM R X) UNION ALL (SELECT * FROM S Y)"],"states":["EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.174127,0.291702],[0.180359,0.03295],[0.18529,0.105873],[0.186281,0.504967],[0.19611,2.1762],[0.209233,7.086177],[0.212408,18.057316],[0.22025,68.329195],null],"counterexample":null,"err":null,"file":"projectionDistributesOverUnion","schema":{"R":{"X":"INT"},"S":{"X":"INT"}},"constraint":null}
{"index":33,"pair":["SELECT * FROM A X, (SELECT * FROM B Y WHERE B0(Y)) Z WHERE B1(X, Z)","SELECT * FROM A X, B Y WHERE B1(X, Y) AND B0(Y)"],"states":["EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.173239,0.505941],[0.184276,0.061479],[0.214495,0.525666],[0.265684,17.043509],[0.352711,291.626553],null],"counterexample":null,"err":null,"file":"pullsubquery","schema":{"A":{"X":"INT"},"B":{"X":"INT"}},"constraint":null}
{"index":34,"pair":["SELECT X.A AS A FROM X X, Y Y WHERE X.K = Y.K","SELECT X1.A AS X1A FROM (SELECT X.A AS A, X.K AS K FROM X X) X1, Y Y WHERE X1.K = Y.K"],"states":["EQU","EQU","EQU","EQU","TMO"],"times":[[0.177871,0.313111],[0.188581,0.065184],[0.208186,1.491769],[0.250681,124.570276],null],"counterexample":null,"err":null,"file":"pushProj","schema":{"X":{"A":"INT","K":"INT"},"Y":{"A":"INT","K":"INT"}},"constraint":null}
{"index":35,"pair":["SELECT * FROM R1 X, (SELECT * FROM R2 Y WHERE B(Y)) Z","SELECT * FROM R1 X, R2 Y WHERE B(Y)"],"states":["EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.173301,0.47709],[0.187764,0.057488],[0.213076,0.472104],[0.259004,13.323526],[0.345751,343.160974],null],"counterexample":null,"err":null,"file":"pushdownSelect","schema":{"R1":{"X":"INT"},"R2":{"X":"INT"}},"constraint":null}
{"index":36,"pair":["SELECT X.A + X.B, X.A\/X.B AS A FROM R X","SELECT Y.A + Y.B, Y.A\/Y.B AS A FROM R Y"],"states":["EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.176521,0.339682],[0.177027,0.029859],[0.184423,0.04564],[0.185952,0.096445],[0.191136,0.242558],[0.194094,1.058885],[0.20405,4.054384],[0.204827,8.028655],[0.210143,19.124668],[0.214648,21.106013],[0.221952,62.73866],[0.224645,336.197566],null],"counterexample":null,"err":null,"file":"timesAndDiv","schema":{"R":{"A":"INT","B":"INT"}},"constraint":null}
{"index":37,"pair":["SELECT * FROM A X UNION ALL SELECT * FROM A X WHERE FALSE","SELECT * FROM A X"],"states":["EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.16086,0.411625],[0.164929,0.066516],[0.16835,0.022824],[0.171113,0.029227],[0.175022,0.044151],[0.17858,0.087664],[0.185934,0.142902],[0.194116,0.381434],[0.200421,1.042281],[0.208076,2.216333],[0.215376,4.744382],[0.222632,11.186789],[0.231637,14.749851],[0.240488,14.310377],[0.249752,28.177894],[0.259723,44.813534],[0.268341,203.57648],null],"counterexample":null,"err":null,"file":"unionEmpty","schema":{"A":{"X":"INT"}},"constraint":null}
{"index":38,"pair":["SELECT C.DEPT_NAME, SUM(C.CREDITS) FROM COURSE C INNER JOIN DEPARTMENT D ON (C.DEPT_NAME = D.DEPT_NAME) GROUP BY C.DEPT_NAME HAVING SUM(C.CREDITS) > 10 AND COUNT(DISTINCT C.CREDITS) > 5","SELECT C.DEPT_NAME, SUM(C.CREDITS) FROM COURSE C INNER JOIN DEPARTMENT D ON (C.DEPT_NAME = D.DEPT_NAME) GROUP BY C.DEPT_NAME HAVING SUM(C.CREDITS) > 10 AND COUNT(DISTINCT C.CREDITS) > 8"],"states":["EQU","EQU","EQU","EQU","EQU","NEQ"],"times":[[0.21016,0.390558],[0.281777,0.098459],[0.441927,0.540363],[0.821542,7.960902],[1.724242,56.935657],[3.679532,13.843055]],"counterexample":"CREATE TABLE COURSE (\n\tCOURSE_ID INTEGER,\n\tTITLE INTEGER,\n\tDEPT_NAME INTEGER,\n\tCREDITS INTEGER\n);\nINSERT INTO COURSE VALUES (0, 0, 0, -2);\nINSERT INTO COURSE VALUES (0, 0, 0, -1);\nINSERT INTO COURSE VALUES (0, 0, 0, 4);\nINSERT INTO COURSE VALUES (NULL, 1, 0, 3);\nINSERT INTO COURSE VALUES (0, 0, 0, 2);\nINSERT INTO COURSE VALUES (0, 0, 0, 1);\n\nCREATE TABLE DEPARTMENT (\n\tDEPT_NAME INTEGER,\n\tBUILDING INTEGER,\n\tBUDGET INTEGER\n);\nINSERT INTO DEPARTMENT VALUES (0, 0, 0);\nINSERT INTO DEPARTMENT VALUES (1, 0, 0);\nINSERT INTO DEPARTMENT VALUES (-1, 0, 0);\nINSERT INTO DEPARTMENT VALUES (0, NULL, 0);\nINSERT INTO DEPARTMENT VALUES (-1, 0, 0);\nINSERT INTO DEPARTMENT VALUES (0, NULL, 0);\n\nCREATE TABLE INSTRUCTOR (\n\tID INTEGER,\n\tNAME INTEGER,\n\tSALARY INTEGER,\n\tDEPT_NAME INTEGER\n);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\n\nCREATE TABLE TEACHES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tINSTRUCTOR INTEGER\n);\nINSERT INTO TEACHES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TEACHES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TEACHES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TEACHES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TEACHES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TEACHES VALUES (0, 0, 0, 0, 0);\n\nCREATE TABLE SECTION (\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tBUILDING INTEGER,\n\tROOM_NUMBER INTEGER,\n\tTIME_SLOT_ID INTEGER\n);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\n\nCREATE TABLE TAKES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tGRADE INTEGER\n);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\n\nCREATE TABLE STUDENT (\n\tID INTEGER,\n\tNAME INTEGER,\n\tDEPT_NAME INTEGER,\n\tTOT_CRED INTEGER\n);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\n\nSELECT C.DEPT_NAME, SUM(C.CREDITS) FROM COURSE C INNER JOIN DEPARTMENT D ON (C.DEPT_NAME = D.DEPT_NAME) GROUP BY C.DEPT_NAME HAVING SUM(C.CREDITS) > 10 AND COUNT(DISTINCT C.CREDITS) > 5;\nSELECT C.DEPT_NAME, SUM(C.CREDITS) FROM COURSE C INNER JOIN DEPARTMENT D ON (C.DEPT_NAME = D.DEPT_NAME) GROUP BY C.DEPT_NAME HAVING SUM(C.CREDITS) > 10 AND COUNT(DISTINCT C.CREDITS) > 8;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"cex-benchmarks-CA1","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
{"index":39,"pair":["SELECT C.DEPT_NAME, AVG(I.SALARY) FROM COURSE C INNER JOIN DEPARTMENT D ON (C.DEPT_NAME = D.DEPT_NAME) INNER JOIN TEACHES T ON (C.COURSE_ID = T.COURSE_ID) INNER JOIN INSTRUCTOR I ON (D.DEPT_NAME = I.DEPT_NAME) GROUP BY C.DEPT_NAME HAVING AVG(I.SALARY)>50000 AND COUNT(DISTINCT I.SALARY)=4","SELECT C.DEPT_NAME, AVG(I.SALARY) FROM COURSE C INNER JOIN DEPARTMENT D ON (C.DEPT_NAME = D.DEPT_NAME) INNER JOIN TEACHES T ON (C.COURSE_ID = T.COURSE_ID) INNER JOIN INSTRUCTOR I ON (D.DEPT_NAME = I.DEPT_NAME) GROUP BY C.DEPT_NAME HAVING AVG(I.SALARY)>50000 AND COUNT(DISTINCT I.SALARY)>4"],"states":["EQU","EQU","TMO"],"times":[[0.242828,0.609227],[0.985518,27.015553],null],"counterexample":null,"err":null,"file":"cex-benchmarks-CA4","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
{"index":40,"pair":["SELECT STUDENT.ID FROM COURSE NATURAL JOIN DEPARTMENT NATURAL JOIN STUDENT NATURAL JOIN TAKES NATURAL JOIN SECTION GROUP BY STUDENT.ID,STUDENT.DEPT_NAME HAVING COUNT(DEPT_NAME) >= 2","SELECT STUDENT.ID FROM COURSE NATURAL JOIN DEPARTMENT NATURAL JOIN STUDENT NATURAL JOIN TAKES NATURAL JOIN SECTION GROUP BY STUDENT.ID HAVING COUNT(DEPT_NAME) >= 2"],"states":["EQU","NEQ"],"times":[[0.228619,0.20798],[1.351711,8.395255]],"counterexample":"CREATE TABLE COURSE (\n\tCOURSE_ID INTEGER,\n\tTITLE INTEGER,\n\tDEPT_NAME INTEGER,\n\tCREDITS INTEGER\n);\nINSERT INTO COURSE VALUES (0, NULL, 0, 0);\nINSERT INTO COURSE VALUES (0, 0, -1, 0);\n\nCREATE TABLE DEPARTMENT (\n\tDEPT_NAME INTEGER,\n\tBUILDING INTEGER,\n\tBUDGET INTEGER\n);\nINSERT INTO DEPARTMENT VALUES (-1, 0, 0);\nINSERT INTO DEPARTMENT VALUES (0, 0, 0);\n\nCREATE TABLE INSTRUCTOR (\n\tID INTEGER,\n\tNAME INTEGER,\n\tSALARY INTEGER,\n\tDEPT_NAME INTEGER\n);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\n\nCREATE TABLE TEACHES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tINSTRUCTOR INTEGER\n);\nINSERT INTO TEACHES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TEACHES VALUES (0, 0, 0, 0, 0);\n\nCREATE TABLE SECTION (\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tBUILDING INTEGER,\n\tROOM_NUMBER INTEGER,\n\tTIME_SLOT_ID INTEGER\n);\nINSERT INTO SECTION VALUES (0, 0, 0, -1, 0, 0);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, NULL, NULL);\n\nCREATE TABLE TAKES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tGRADE INTEGER\n);\nINSERT INTO TAKES VALUES (0, 0, 0, NULL, NULL);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\n\nCREATE TABLE STUDENT (\n\tID INTEGER,\n\tNAME INTEGER,\n\tDEPT_NAME INTEGER,\n\tTOT_CRED INTEGER\n);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\nINSERT INTO STUDENT VALUES (0, 0, -1, 0);\n\nSELECT STUDENT.ID FROM COURSE NATURAL JOIN DEPARTMENT NATURAL JOIN STUDENT NATURAL JOIN TAKES NATURAL JOIN SECTION GROUP BY STUDENT.ID,STUDENT.DEPT_NAME HAVING COUNT(DEPT_NAME) >= 2;\nSELECT STUDENT.ID FROM COURSE NATURAL JOIN DEPARTMENT NATURAL JOIN STUDENT NATURAL JOIN TAKES NATURAL JOIN SECTION GROUP BY STUDENT.ID HAVING COUNT(DEPT_NAME) >= 2;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"cex-benchmarks-CA6","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
{"index":41,"pair":["SELECT DISTINCT DEPT_NAME FROM COURSE WHERE CREDITS = (SELECT MAX(CREDITS) FROM COURSE NATURAL JOIN DEPARTMENT WHERE TITLE='CS' GROUP BY DEPT_NAME HAVING COUNT(DISTINCT COURSE_ID)>4)","SELECT DEPT_NAME FROM COURSE WHERE CREDITS = (SELECT MAX(CREDITS) FROM COURSE NATURAL JOIN DEPARTMENT WHERE TITLE='CS' GROUP BY DEPT_NAME HAVING COUNT(DISTINCT COURSE_ID)>4)"],"states":["EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.214269,0.757658],[0.274952,0.096056],[0.436189,0.135049],[0.939917,0.342593],[2.158984,1.127103],[5.026508,3.444342],[10.536256,13.043659],[20.911637,20.070354],[38.57701,145.492589],[74.808403,252.176317],null],"counterexample":null,"err":null,"file":"cex-benchmarks-CA7","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
{"index":42,"pair":["SELECT STUDENT.ID, STUDENT.NAME FROM STUDENT JOIN (SELECT TAKES.ID, S.TIME_SLOT_ID, S.YEAR FROM TAKES JOIN SECTION AS S ON TAKES.COURSE_ID = S.COURSE_ID AND TAKES.SEC_ID = S.SEC_ID GROUP BY TAKES.ID, S.TIME_SLOT_ID, S.YEAR HAVING COUNT(S.TIME_SLOT_ID) > 1) AS A ON STUDENT.ID = A.ID GROUP BY STUDENT.ID, STUDENT.NAME HAVING COUNT(DISTINCT STUDENT.ID) > 2","SELECT STUDENT.ID, STUDENT.NAME FROM STUDENT JOIN (SELECT TAKES.ID, S.TIME_SLOT_ID, S.YEAR FROM TAKES JOIN SECTION AS S ON TAKES.COURSE_ID = S.COURSE_ID AND TAKES.SEC_ID = S.SEC_ID GROUP BY TAKES.ID, S.TIME_SLOT_ID, S.YEAR HAVING SUM(S.TIME_SLOT_ID) > 1) AS A ON STUDENT.ID = A.ID GROUP BY STUDENT.ID, STUDENT.NAME HAVING COUNT(DISTINCT STUDENT.ID) > 2"],"states":["EQU","EQU","EQU","TMO"],"times":[[0.244487,0.570682],[0.422116,0.225746],[1.917497,14.780055],null],"counterexample":null,"err":null,"file":"cex-benchmarks-CA8","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
{"index":43,"pair":["SELECT SUM(T) AS SU FROM (SELECT YEAR AS T FROM TEACHES NATURAL JOIN INSTRUCTOR GROUP BY YEAR, COURSE_ID HAVING COUNT(ID)>4) AS TEMP GROUP BY T","SELECT SUM(T) AS SU FROM (SELECT YEAR AS T FROM TEACHES NATURAL JOIN INSTRUCTOR GROUP BY YEAR HAVING COUNT(ID)>4) AS TEMP GROUP BY T"],"states":["EQU","EQU","NEQ"],"times":[[0.206525,0.697348],[0.267953,0.140898],[0.412293,0.261556]],"counterexample":"CREATE TABLE COURSE (\n\tCOURSE_ID INTEGER,\n\tTITLE INTEGER,\n\tDEPT_NAME INTEGER,\n\tCREDITS INTEGER\n);\nINSERT INTO COURSE VALUES (0, 0, 0, 0);\nINSERT INTO COURSE VALUES (0, 0, 0, 0);\nINSERT INTO COURSE VALUES (0, 0, 0, 0);\n\nCREATE TABLE DEPARTMENT (\n\tDEPT_NAME INTEGER,\n\tBUILDING INTEGER,\n\tBUDGET INTEGER\n);\nINSERT INTO DEPARTMENT VALUES (0, 0, 0);\nINSERT INTO DEPARTMENT VALUES (0, 0, 0);\nINSERT INTO DEPARTMENT VALUES (0, 0, 0);\n\nCREATE TABLE INSTRUCTOR (\n\tID INTEGER,\n\tNAME INTEGER,\n\tSALARY INTEGER,\n\tDEPT_NAME INTEGER\n);\nINSERT INTO INSTRUCTOR VALUES (-1, 0, NULL, 0);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\n\nCREATE TABLE TEACHES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tINSTRUCTOR INTEGER\n);\nINSERT INTO TEACHES VALUES (-1, 0, NULL, 1, 0);\nINSERT INTO TEACHES VALUES (0, 0, NULL, 1, 0);\nINSERT INTO TEACHES VALUES (0, 1, 0, 1, 0);\n\nCREATE TABLE SECTION (\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tBUILDING INTEGER,\n\tROOM_NUMBER INTEGER,\n\tTIME_SLOT_ID INTEGER\n);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\n\nCREATE TABLE TAKES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tGRADE INTEGER\n);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\n\nCREATE TABLE STUDENT (\n\tID INTEGER,\n\tNAME INTEGER,\n\tDEPT_NAME INTEGER,\n\tTOT_CRED INTEGER\n);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\n\nSELECT SUM(T) AS SU FROM (SELECT YEAR AS T FROM TEACHES NATURAL JOIN INSTRUCTOR GROUP BY YEAR, COURSE_ID HAVING COUNT(ID)>4) AS TEMP GROUP BY T;\nSELECT SUM(T) AS SU FROM (SELECT YEAR AS T FROM TEACHES NATURAL JOIN INSTRUCTOR GROUP BY YEAR HAVING COUNT(ID)>4) AS TEMP GROUP BY T;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"cex-benchmarks-CA9","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
{"index":44,"pair":["WITH S AS (SELECT ID, TIME_SLOT_ID, YEAR FROM TAKES NATURAL JOIN SECTION GROUP BY ID, TIME_SLOT_ID, YEAR HAVING COUNT(TIME_SLOT_ID)>4) SELECT DISTINCT ID,NAME FROM S NATURAL JOIN STUDENT","WITH S AS (SELECT ID, TIME_SLOT_ID, YEAR FROM TAKES NATURAL JOIN SECTION GROUP BY ID, TIME_SLOT_ID, YEAR HAVING COUNT(TIME_SLOT_ID)>5) SELECT DISTINCT ID,NAME FROM S NATURAL JOIN STUDENT"],"states":["EQU","EQU","NEQ"],"times":[[0.215442,0.72148],[0.306193,0.17518],[0.677026,1.223027]],"counterexample":"CREATE TABLE COURSE (\n\tCOURSE_ID INTEGER,\n\tTITLE INTEGER,\n\tDEPT_NAME INTEGER,\n\tCREDITS INTEGER\n);\nINSERT INTO COURSE VALUES (0, 0, 0, 0);\nINSERT INTO COURSE VALUES (0, 0, 0, 0);\nINSERT INTO COURSE VALUES (0, 0, 0, 0);\n\nCREATE TABLE DEPARTMENT (\n\tDEPT_NAME INTEGER,\n\tBUILDING INTEGER,\n\tBUDGET INTEGER\n);\nINSERT INTO DEPARTMENT VALUES (0, 0, 0);\nINSERT INTO DEPARTMENT VALUES (0, 0, 0);\nINSERT INTO DEPARTMENT VALUES (0, 0, 0);\n\nCREATE TABLE INSTRUCTOR (\n\tID INTEGER,\n\tNAME INTEGER,\n\tSALARY INTEGER,\n\tDEPT_NAME INTEGER\n);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\n\nCREATE TABLE TEACHES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tINSTRUCTOR INTEGER\n);\nINSERT INTO TEACHES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TEACHES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TEACHES VALUES (0, 0, 0, 0, 0);\n\nCREATE TABLE SECTION (\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tBUILDING INTEGER,\n\tROOM_NUMBER INTEGER,\n\tTIME_SLOT_ID INTEGER\n);\nINSERT INTO SECTION VALUES (1, -1, 0, 0, -1, 0);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\nINSERT INTO SECTION VALUES (0, 0, 0, -1, NULL, 0);\n\nCREATE TABLE TAKES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tGRADE INTEGER\n);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TAKES VALUES (0, 1, -1, 0, NULL);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\n\nCREATE TABLE STUDENT (\n\tID INTEGER,\n\tNAME INTEGER,\n\tDEPT_NAME INTEGER,\n\tTOT_CRED INTEGER\n);\nINSERT INTO STUDENT VALUES (0, NULL, NULL, NULL);\nINSERT INTO STUDENT VALUES (0, -1, 0, 0);\nINSERT INTO STUDENT VALUES (1, 0, 0, 0);\n\nWITH S AS (SELECT ID, TIME_SLOT_ID, YEAR FROM TAKES NATURAL JOIN SECTION GROUP BY ID, TIME_SLOT_ID, YEAR HAVING COUNT(TIME_SLOT_ID)>4) SELECT DISTINCT ID,NAME FROM S NATURAL JOIN STUDENT;\nWITH S AS (SELECT ID, TIME_SLOT_ID, YEAR FROM TAKES NATURAL JOIN SECTION GROUP BY ID, TIME_SLOT_ID, YEAR HAVING COUNT(TIME_SLOT_ID)>5) SELECT DISTINCT ID,NAME FROM S NATURAL JOIN STUDENT;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"cex-benchmarks-CQ9","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
{"index":45,"pair":["SELECT DISTINCT DEPT_NAME FROM COURSE JOIN (SELECT MAX(CREDITS) AS MAX_CREDITS FROM COURSE) AS A ON COURSE.CREDITS = A.MAX_CREDITS","SELECT DISTINCT DEPT_NAME FROM COURSE JOIN (SELECT MAX(CREDITS) AS MAX_CREDITS FROM COURSE GROUP BY DEPT_NAME) AS A ON COURSE.CREDITS = A.MAX_CREDITS"],"states":["EQU","NEQ"],"times":[[0.20528,0.68962],[0.235388,0.044647]],"counterexample":"CREATE TABLE COURSE (\n\tCOURSE_ID INTEGER,\n\tTITLE INTEGER,\n\tDEPT_NAME INTEGER,\n\tCREDITS INTEGER\n);\nINSERT INTO COURSE VALUES (0, 0, -1, 2);\nINSERT INTO COURSE VALUES (0, 0, 0, 1);\n\nCREATE TABLE DEPARTMENT (\n\tDEPT_NAME INTEGER,\n\tBUILDING INTEGER,\n\tBUDGET INTEGER\n);\nINSERT INTO DEPARTMENT VALUES (0, 0, 0);\nINSERT INTO DEPARTMENT VALUES (0, 0, 0);\n\nCREATE TABLE INSTRUCTOR (\n\tID INTEGER,\n\tNAME INTEGER,\n\tSALARY INTEGER,\n\tDEPT_NAME INTEGER\n);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\n\nCREATE TABLE TEACHES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tINSTRUCTOR INTEGER\n);\nINSERT INTO TEACHES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TEACHES VALUES (0, 0, 0, 0, 0);\n\nCREATE TABLE SECTION (\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tBUILDING INTEGER,\n\tROOM_NUMBER INTEGER,\n\tTIME_SLOT_ID INTEGER\n);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\n\nCREATE TABLE TAKES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tGRADE INTEGER\n);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\n\nCREATE TABLE STUDENT (\n\tID INTEGER,\n\tNAME INTEGER,\n\tDEPT_NAME INTEGER,\n\tTOT_CRED INTEGER\n);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\n\nSELECT DISTINCT DEPT_NAME FROM COURSE JOIN (SELECT MAX(CREDITS) AS MAX_CREDITS FROM COURSE) AS A ON COURSE.CREDITS = A.MAX_CREDITS;\nSELECT DISTINCT DEPT_NAME FROM COURSE JOIN (SELECT MAX(CREDITS) AS MAX_CREDITS FROM COURSE GROUP BY DEPT_NAME) AS A ON COURSE.CREDITS = A.MAX_CREDITS;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"cex-benchmarks-CQ10","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
{"index":46,"pair":["SELECT C.NAME FROM CARRIERS AS C JOIN FLIGHTS AS F ON C.CID = F.CARRIER_ID GROUP BY C.NAME, F.YEAR, F.MONTH_ID, F.DAY_OF_MONTH HAVING COUNT(F.FID) > 1000","SELECT C.NAME FROM CARRIERS AS C JOIN FLIGHTS AS F ON C.CID = F.CARRIER_ID GROUP BY C.NAME, F.DAY_OF_MONTH HAVING COUNT(C.CID) > 1000"],"states":["EQU","EQU","EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.194983,0.742474],[0.237966,0.149838],[0.325142,0.298291],[0.523317,1.695985],[0.8457,13.561596],[1.435343,83.684954],[6.248322,277.885969],null],"counterexample":null,"err":null,"file":"cex-benchmarks-cse344au_hw2_cse344au_hw2_q4_1","schema":{"MONTHS":{"MID":"INT","MONTH":"INT"},"WEEKDAYS":{"DID":"INT","DAY_OF_WEEK":"INT"},"CARRIERS":{"CID":"INT","NAME":"INT"},"FLIGHTS":{"FID":"INT","YEAR":"INT","MONTH_ID":"INT","DAY_OF_MONTH":"INT","CARRIER_ID":"INT"}},"constraint":null}
{"index":47,"pair":["SELECT C.NAME FROM CARRIERS AS C JOIN FLIGHTS AS F ON C.CID = F.CARRIER_ID GROUP BY C.CID, C.NAME, F.YEAR, F.MONTH_ID, F.DAY_OF_MONTH HAVING COUNT(F.FID) > 1000","SELECT C.NAME FROM CARRIERS AS C JOIN FLIGHTS AS F ON C.CID = F.CARRIER_ID GROUP BY C.NAME, F.DAY_OF_MONTH HAVING COUNT(F.FID) > 1000"],"states":["EQU","EQU","EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.197232,0.545223],[0.234335,0.116238],[0.327293,0.265259],[0.526617,2.211214],[0.874498,11.331032],[1.441242,88.412709],[6.37557,289.352154],null],"counterexample":null,"err":null,"file":"cex-benchmarks-cse344au_hw2_csep544_hw2_q4_3","schema":{"MONTHS":{"MID":"INT","MONTH":"INT"},"WEEKDAYS":{"DID":"INT","DAY_OF_WEEK":"INT"},"CARRIERS":{"CID":"INT","NAME":"INT"},"FLIGHTS":{"FID":"INT","YEAR":"INT","MONTH_ID":"INT","DAY_OF_MONTH":"INT","CARRIER_ID":"INT"}},"constraint":null}
{"index":48,"pair":["SELECT DISTINCT F.ORIGIN_CITY, F.DEST_CITY, F.ACTUAL_TIME FROM FLIGHTS AS F JOIN (SELECT A.ORIGIN_CITY, MAX(A.ACTUAL_TIME) AS MAX_TIME FROM FLIGHTS AS A GROUP BY A.ORIGIN_CITY) AS X ON F.ORIGIN_CITY = X.ORIGIN_CITY AND F.ACTUAL_TIME = X.MAX_TIME","SELECT S.ORIGIN_CITY, F2.DEST_CITY, MAX(F2.ACTUAL_TIME) FROM (SELECT F1.ORIGIN_CITY, MAX(F1.ACTUAL_TIME) AS MAX_TIME FROM FLIGHTS AS F1 GROUP BY F1.ORIGIN_CITY) AS S JOIN FLIGHTS AS F2 ON S.ORIGIN_CITY = F2.ORIGIN_CITY AND F2.ACTUAL_TIME = S.MAX_TIME GROUP BY S.ORIGIN_CITY, F2.DEST_CITY"],"states":["EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.231034,0.19201],[0.282208,0.09457],[0.361326,0.52689],[0.556417,3.754783],[0.922458,40.539836],null],"counterexample":null,"err":null,"file":"cex-benchmarks-csep544_hw3_csep544_hw3_q1_1","schema":{"MONTHS":{"MID":"INT","MONTH":"INT"},"WEEKDAYS":{"DID":"INT","DAY_OF_WEEK":"INT"},"CARRIERS":{"CID":"INT","NAME":"INT"},"FLIGHTS":{"FID":"INT","ORIGIN_CITY":"INT","DEST_CITY":"INT","ACTUAL_TIME":"INT"}},"constraint":null}
{"index":49,"pair":["SELECT DISTINCT F.ORIGIN_CITY, F.DEST_CITY, F.ACTUAL_TIME FROM FLIGHTS AS F JOIN (SELECT A.ORIGIN_CITY, MAX(A.ACTUAL_TIME) AS MAX_TIME FROM FLIGHTS AS A GROUP BY A.ORIGIN_CITY) AS X ON F.ORIGIN_CITY = X.ORIGIN_CITY AND F.ACTUAL_TIME = X.MAX_TIME","SELECT P.ORIGIN_CITY, P.DEST_CITY, P.ACTUAL_TIME FROM (SELECT F1.ORIGIN_CITY, F1.DEST_CITY, F1.ACTUAL_TIME, MAX(F2.ACTUAL_TIME) AS MAX_ACTUAL_TIME FROM FLIGHTS AS F1 JOIN FLIGHTS AS F2 ON F1.ORIGIN_CITY = F2.ORIGIN_CITY GROUP BY F1.ORIGIN_CITY, F1.DEST_CITY, F1.ACTUAL_TIME) AS P WHERE P.ACTUAL_TIME = P.MAX_ACTUAL_TIME"],"states":["EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.212291,0.781665],[0.253726,0.090985],[0.363559,0.758934],[0.550325,7.011472],[0.914646,163.334526],null],"counterexample":null,"err":null,"file":"cex-benchmarks-csep544_hw3_csep544_hw3_q1_2","schema":{"MONTHS":{"MID":"INT","MONTH":"INT"},"WEEKDAYS":{"DID":"INT","DAY_OF_WEEK":"INT"},"CARRIERS":{"CID":"INT","NAME":"INT"},"FLIGHTS":{"FID":"INT","ORIGIN_CITY":"INT","DEST_CITY":"INT","ACTUAL_TIME":"INT"}},"constraint":null}
{"index":50,"pair":["SELECT C.DEPT_NAME, SUM(C.CREDITS) FROM COURSE C INNER JOIN DEPARTMENT D ON (C.DEPT_NAME = D.DEPT_NAME) GROUP BY C.DEPT_NAME HAVING SUM(C.CREDITS)>10 AND COUNT(C.CREDITS)>5","SELECT C.DEPT_NAME, SUM(C.CREDITS) FROM COURSE C INNER JOIN DEPARTMENT D ON (C.DEPT_NAME = D.DEPT_NAME) GROUP BY C.DEPT_NAME HAVING SUM(C.CREDITS)>10 AND COUNT(C.CREDITS)>8"],"states":["EQU","EQU","NEQ"],"times":[[0.210136,0.582603],[0.274495,0.109291],[0.402167,0.213788]],"counterexample":"CREATE TABLE COURSE (\n\tCOURSE_ID INTEGER,\n\tTITLE INTEGER,\n\tDEPT_NAME INTEGER,\n\tCREDITS INTEGER\n);\nINSERT INTO COURSE VALUES (-2147483648, -2147483648, -2147483648, -1);\nINSERT INTO COURSE VALUES (-2147483648, -2147483648, -2147483648, NULL);\nINSERT INTO COURSE VALUES (-2147483648, -2147483648, -2147483648, 5);\n\nCREATE TABLE DEPARTMENT (\n\tDEPT_NAME INTEGER,\n\tBUILDING INTEGER,\n\tBUDGET INTEGER\n);\nINSERT INTO DEPARTMENT VALUES (-2147483648, -2147483648, -2147483648);\nINSERT INTO DEPARTMENT VALUES (-2147483648, -2147483648, -2147483648);\nINSERT INTO DEPARTMENT VALUES (-2147483648, 2147483647, 2147483647);\n\nCREATE TABLE INSTRUCTOR (\n\tID INTEGER,\n\tNAME INTEGER,\n\tSALARY INTEGER,\n\tDEPT_NAME INTEGER\n);\nINSERT INTO INSTRUCTOR VALUES (-2147483648, -2147483648, 2147483647, 2147483647);\nINSERT INTO INSTRUCTOR VALUES (2147483647, 2147483647, -2147483648, 2147483647);\nINSERT INTO INSTRUCTOR VALUES (2147483647, -2147483648, 2147483647, -2147483648);\n\nCREATE TABLE TEACHES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tSEMESTER INTEGER,\n\tINSTRUCTOR INTEGER\n);\nINSERT INTO TEACHES VALUES (2147483647, 2147483647, -2147483648, -2147483648, -2147483648, 2147483647);\nINSERT INTO TEACHES VALUES (-2147483648, -2147483648, 2147483647, 2147483647, 2147483647, 2147483647);\nINSERT INTO TEACHES VALUES (2147483647, 2147483647, -2147483648, 2147483647, 2147483647, -2147483648);\n\nCREATE TABLE SECTION (\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tBUILDING INTEGER,\n\tROOM_NUMBER INTEGER,\n\tTIME_SLOT_ID INTEGER\n);\nINSERT INTO SECTION VALUES (2147483647, 2147483647, -2147483648, 2147483647, -2147483648, -2147483648);\nINSERT INTO SECTION VALUES (2147483647, -2147483648, 2147483647, 2147483647, -2147483648, -2147483648);\nINSERT INTO SECTION VALUES (2147483647, 2147483647, 2147483647, -2147483648, -2147483648, -2147483648);\n\nCREATE TABLE TAKES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tGRADE INTEGER\n);\nINSERT INTO TAKES VALUES (-2147483648, 2147483647, 2147483647, -2147483648, 2147483647);\nINSERT INTO TAKES VALUES (-2147483648, -2147483648, -2147483648, 2147483647, -2147483648);\nINSERT INTO TAKES VALUES (2147483647, -2147483648, 2147483647, 2147483647, -2147483648);\n\nCREATE TABLE STUDENT (\n\tID INTEGER,\n\tNAME INTEGER,\n\tDEPT_NAME INTEGER,\n\tTOT_CRED INTEGER\n);\nINSERT INTO STUDENT VALUES (2147483647, 2147483647, 2147483647, -2147483648);\nINSERT INTO STUDENT VALUES (2147483647, -2147483648, -2147483648, -2147483648);\nINSERT INTO STUDENT VALUES (-2147483648, 2147483647, 2147483647, -2147483648);\n\nSELECT C.DEPT_NAME, SUM(C.CREDITS) FROM COURSE C INNER JOIN DEPARTMENT D ON (C.DEPT_NAME = D.DEPT_NAME) GROUP BY C.DEPT_NAME HAVING SUM(C.CREDITS)>10 AND COUNT(C.CREDITS)>5;\nSELECT C.DEPT_NAME, SUM(C.CREDITS) FROM COURSE C INNER JOIN DEPARTMENT D ON (C.DEPT_NAME = D.DEPT_NAME) GROUP BY C.DEPT_NAME HAVING SUM(C.CREDITS)>10 AND COUNT(C.CREDITS)>8;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"mutation-test-CA1","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","SEMESTER":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
{"index":51,"pair":["SELECT C.DEPT_NAME, SUM(I.SALARY) FROM COURSE C INNER JOIN DEPARTMENT D ON (C.DEPT_NAME = D.DEPT_NAME) INNER JOIN INSTRUCTOR I ON (D.DEPT_NAME = I.DEPT_NAME) GROUP BY C.DEPT_NAME HAVING SUM(I.SALARY)>100 AND MAX(I.SALARY)<75","SELECT C.DEPT_NAME, SUM(I.SALARY) FROM COURSE C INNER JOIN DEPARTMENT D ON (C.DEPT_NAME = D.DEPT_NAME) INNER JOIN INSTRUCTOR I ON (D.DEPT_NAME = I.DEPT_NAME) GROUP BY C.DEPT_NAME HAVING SUM(I.SALARY)>=100 AND MAX(I.SALARY)<75"],"states":["EQU","NEQ"],"times":[[0.230759,0.767576],[0.424355,0.269342]],"counterexample":"CREATE TABLE COURSE (\n\tCOURSE_ID INTEGER,\n\tTITLE INTEGER,\n\tDEPT_NAME INTEGER,\n\tCREDITS INTEGER\n);\nINSERT INTO COURSE VALUES (0, 0, 1, 0);\nINSERT INTO COURSE VALUES (0, 0, 0, 0);\n\nCREATE TABLE DEPARTMENT (\n\tDEPT_NAME INTEGER,\n\tBUILDING INTEGER,\n\tBUDGET INTEGER\n);\nINSERT INTO DEPARTMENT VALUES (0, 0, 0);\nINSERT INTO DEPARTMENT VALUES (0, 0, 0);\n\nCREATE TABLE INSTRUCTOR (\n\tID INTEGER,\n\tNAME INTEGER,\n\tSALARY INTEGER,\n\tDEPT_NAME INTEGER\n);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 1, 0);\nINSERT INTO INSTRUCTOR VALUES (NULL, 0, 49, 0);\n\nCREATE TABLE TEACHES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tSEMESTER INTEGER,\n\tINSTRUCTOR INTEGER\n);\nINSERT INTO TEACHES VALUES (0, 0, 0, 0, 0, 0);\nINSERT INTO TEACHES VALUES (0, 0, 0, 0, 0, 0);\n\nCREATE TABLE SECTION (\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tBUILDING INTEGER,\n\tROOM_NUMBER INTEGER,\n\tTIME_SLOT_ID INTEGER\n);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\n\nCREATE TABLE TAKES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tGRADE INTEGER\n);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\n\nCREATE TABLE STUDENT (\n\tID INTEGER,\n\tNAME INTEGER,\n\tDEPT_NAME INTEGER,\n\tTOT_CRED INTEGER\n);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\n\nSELECT C.DEPT_NAME, SUM(I.SALARY) FROM COURSE C INNER JOIN DEPARTMENT D ON (C.DEPT_NAME = D.DEPT_NAME) INNER JOIN INSTRUCTOR I ON (D.DEPT_NAME = I.DEPT_NAME) GROUP BY C.DEPT_NAME HAVING SUM(I.SALARY)>100 AND MAX(I.SALARY)<75;\nSELECT C.DEPT_NAME, SUM(I.SALARY) FROM COURSE C INNER JOIN DEPARTMENT D ON (C.DEPT_NAME = D.DEPT_NAME) INNER JOIN INSTRUCTOR I ON (D.DEPT_NAME = I.DEPT_NAME) GROUP BY C.DEPT_NAME HAVING SUM(I.SALARY)>=100 AND MAX(I.SALARY)<75;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"mutation-test-CA2","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","SEMESTER":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
{"index":52,"pair":["SELECT C.DEPT_NAME, SUM(D.BUDGET) FROM COURSE C INNER JOIN DEPARTMENT D ON (C.DEPT_NAME = D.DEPT_NAME) INNER JOIN TEACHES T ON (C.COURSE_ID = T.COURSE_ID) GROUP BY C.DEPT_NAME HAVING SUM(D.BUDGET)>100000 AND COUNT(D.BUDGET)>10","SELECT C.DEPT_NAME, SUM(D.BUDGET) FROM COURSE C INNER JOIN DEPARTMENT D ON (C.DEPT_NAME = D.DEPT_NAME) INNER JOIN TEACHES T ON (C.COURSE_ID = T.COURSE_ID) GROUP BY C.DEPT_NAME HAVING SUM(D.BUDGET)>100000 AND COUNT(DISTINCT D.BUDGET)>10"],"states":["EQU","EQU","NEQ"],"times":[[0.227716,0.6348],[0.429731,0.418516],[1.809218,1.6954]],"counterexample":"CREATE TABLE COURSE (\n\tCOURSE_ID INTEGER,\n\tTITLE INTEGER,\n\tDEPT_NAME INTEGER,\n\tCREDITS INTEGER\n);\nINSERT INTO COURSE VALUES (2147483647, -2147483648, 2147483646, -2147483648);\nINSERT INTO COURSE VALUES (2147483647, -2147483648, 2147483647, 2147483647);\nINSERT INTO COURSE VALUES (2147483647, 2147483647, 2147483647, NULL);\n\nCREATE TABLE DEPARTMENT (\n\tDEPT_NAME INTEGER,\n\tBUILDING INTEGER,\n\tBUDGET INTEGER\n);\nINSERT INTO DEPARTMENT VALUES (2147483647, -2147483648, -1);\nINSERT INTO DEPARTMENT VALUES (2147483647, -2147483648, 16668);\nINSERT INTO DEPARTMENT VALUES (2147483646, -2147483648, 16669);\n\nCREATE TABLE INSTRUCTOR (\n\tID INTEGER,\n\tNAME INTEGER,\n\tSALARY INTEGER,\n\tDEPT_NAME INTEGER\n);\nINSERT INTO INSTRUCTOR VALUES (-2147483648, 2147483647, 2147483647, 2147483647);\nINSERT INTO INSTRUCTOR VALUES (-2147483648, 2147483647, -2147483648, 2147483647);\nINSERT INTO INSTRUCTOR VALUES (2147483647, -2147483648, 2147483647, 2147483647);\n\nCREATE TABLE TEACHES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tSEMESTER INTEGER,\n\tINSTRUCTOR INTEGER\n);\nINSERT INTO TEACHES VALUES (-2147483648, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647);\nINSERT INTO TEACHES VALUES (NULL, 2147483647, NULL, NULL, NULL, NULL);\nINSERT INTO TEACHES VALUES (-2147483648, 2147483647, -2147483648, 2147483647, -2147483648, -2147483648);\n\nCREATE TABLE SECTION (\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tBUILDING INTEGER,\n\tROOM_NUMBER INTEGER,\n\tTIME_SLOT_ID INTEGER\n);\nINSERT INTO SECTION VALUES (-2147483648, -2147483648, 2147483647, -2147483648, -2147483648, -2147483648);\nINSERT INTO SECTION VALUES (-2147483648, 2147483647, -2147483648, 2147483647, -2147483648, 2147483647);\nINSERT INTO SECTION VALUES (2147483647, -2147483648, 2147483647, -2147483648, 2147483647, 2147483647);\n\nCREATE TABLE TAKES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tGRADE INTEGER\n);\nINSERT INTO TAKES VALUES (2147483647, -2147483648, 2147483647, -2147483648, -2147483648);\nINSERT INTO TAKES VALUES (-2147483648, -2147483648, 2147483647, 2147483647, -2147483648);\nINSERT INTO TAKES VALUES (2147483647, 2147483647, 2147483647, -2147483648, 2147483647);\n\nCREATE TABLE STUDENT (\n\tID INTEGER,\n\tNAME INTEGER,\n\tDEPT_NAME INTEGER,\n\tTOT_CRED INTEGER\n);\nINSERT INTO STUDENT VALUES (2147483647, 2147483647, -2147483648, 2147483647);\nINSERT INTO STUDENT VALUES (2147483647, -2147483648, -2147483648, 2147483647);\nINSERT INTO STUDENT VALUES (2147483647, 2147483647, -2147483648, -2147483648);\n\nSELECT C.DEPT_NAME, SUM(D.BUDGET) FROM COURSE C INNER JOIN DEPARTMENT D ON (C.DEPT_NAME = D.DEPT_NAME) INNER JOIN TEACHES T ON (C.COURSE_ID = T.COURSE_ID) GROUP BY C.DEPT_NAME HAVING SUM(D.BUDGET)>100000 AND COUNT(D.BUDGET)>10;\nSELECT C.DEPT_NAME, SUM(D.BUDGET) FROM COURSE C INNER JOIN DEPARTMENT D ON (C.DEPT_NAME = D.DEPT_NAME) INNER JOIN TEACHES T ON (C.COURSE_ID = T.COURSE_ID) GROUP BY C.DEPT_NAME HAVING SUM(D.BUDGET)>100000 AND COUNT(DISTINCT D.BUDGET)>10;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"mutation-test-CA3","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","SEMESTER":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
{"index":53,"pair":["SELECT C.DEPT_NAME, AVG(I.SALARY) FROM COURSE C INNER JOIN DEPARTMENT D ON (C.DEPT_NAME = D.DEPT_NAME) INNER JOIN TEACHES T ON (C.COURSE_ID = T.COURSE_ID) INNER JOIN INSTRUCTOR I ON (D.DEPT_NAME = I.DEPT_NAME) GROUP BY C.DEPT_NAME HAVING AVG(I.SALARY)>50000 AND COUNT(DISTINCT I.SALARY)=4","SELECT C.DEPT_NAME, AVG(I.SALARY) FROM COURSE C INNER JOIN DEPARTMENT D ON (C.DEPT_NAME = D.DEPT_NAME) INNER JOIN TEACHES T ON (C.COURSE_ID = T.COURSE_ID) INNER JOIN INSTRUCTOR I ON (D.DEPT_NAME = I.DEPT_NAME) GROUP BY C.DEPT_NAME HAVING AVG(I.SALARY)>50000 AND COUNT(DISTINCT I.SALARY)>4"],"states":["EQU","EQU","TMO"],"times":[[0.248156,0.130886],[0.992555,48.327664],null],"counterexample":null,"err":null,"file":"mutation-test-CA4","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","SEMESTER":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
{"index":54,"pair":["SELECT T.SEMESTER, SUM(C.CREDITS) FROM DEPARTMENT D INNER JOIN TEACHES T ON (D.BUDGET = T.YEAR + 4) INNER JOIN COURSE C ON (C.DEPT_NAME = D.DEPT_NAME) GROUP BY T.SEMESTER HAVING AVG(C.CREDITS)>2 AND COUNT(D.BUILDING)=2","SELECT T.SEMESTER, SUM(C.CREDITS) FROM DEPARTMENT D INNER JOIN TEACHES T ON (D.BUDGET = T.YEAR + 4) INNER JOIN COURSE C ON (C.DEPT_NAME = D.DEPT_NAME) GROUP BY T.SEMESTER HAVING AVG(C.CREDITS)>2 AND COUNT(D.BUILDING)>=2"],"states":["EQU","NEQ"],"times":[[0.229668,0.811667],[0.435889,0.448391]],"counterexample":"CREATE TABLE COURSE (\n\tCOURSE_ID INTEGER,\n\tTITLE INTEGER,\n\tDEPT_NAME INTEGER,\n\tCREDITS INTEGER\n);\nINSERT INTO COURSE VALUES (2147483647, NULL, -2147483648, 3);\nINSERT INTO COURSE VALUES (NULL, -2147483648, -2147483648, NULL);\n\nCREATE TABLE DEPARTMENT (\n\tDEPT_NAME INTEGER,\n\tBUILDING INTEGER,\n\tBUDGET INTEGER\n);\nINSERT INTO DEPARTMENT VALUES (-2147483647, -2147483648, -2147483643);\nINSERT INTO DEPARTMENT VALUES (-2147483648, -2147483648, -2147483644);\n\nCREATE TABLE INSTRUCTOR (\n\tID INTEGER,\n\tNAME INTEGER,\n\tSALARY INTEGER,\n\tDEPT_NAME INTEGER\n);\nINSERT INTO INSTRUCTOR VALUES (-2147483648, -2147483648, 2147483647, 2147483647);\nINSERT INTO INSTRUCTOR VALUES (2147483647, 2147483647, -2147483648, -2147483648);\n\nCREATE TABLE TEACHES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tSEMESTER INTEGER,\n\tINSTRUCTOR INTEGER\n);\nINSERT INTO TEACHES VALUES (2147483647, 2147483647, NULL, -2147483648, 2147483647, 2147483647);\nINSERT INTO TEACHES VALUES (-2147483648, 2147483647, -2147483648, -2147483648, 2147483647, -2147483648);\n\nCREATE TABLE SECTION (\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tBUILDING INTEGER,\n\tROOM_NUMBER INTEGER,\n\tTIME_SLOT_ID INTEGER\n);\nINSERT INTO SECTION VALUES (-2147483648, -2147483648, 2147483647, -2147483648, 2147483647, 2147483647);\nINSERT INTO SECTION VALUES (2147483647, 2147483647, -2147483648, 2147483647, -2147483648, 2147483647);\n\nCREATE TABLE TAKES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tGRADE INTEGER\n);\nINSERT INTO TAKES VALUES (-2147483648, 2147483647, 2147483647, -2147483648, -2147483648);\nINSERT INTO TAKES VALUES (-2147483648, -2147483648, -2147483648, -2147483648, 2147483647);\n\nCREATE TABLE STUDENT (\n\tID INTEGER,\n\tNAME INTEGER,\n\tDEPT_NAME INTEGER,\n\tTOT_CRED INTEGER\n);\nINSERT INTO STUDENT VALUES (2147483647, 2147483647, -2147483648, 2147483647);\nINSERT INTO STUDENT VALUES (-2147483648, 2147483647, 2147483647, -2147483648);\n\nSELECT T.SEMESTER, SUM(C.CREDITS) FROM DEPARTMENT D INNER JOIN TEACHES T ON (D.BUDGET = T.YEAR + 4) INNER JOIN COURSE C ON (C.DEPT_NAME = D.DEPT_NAME) GROUP BY T.SEMESTER HAVING AVG(C.CREDITS)>2 AND COUNT(D.BUILDING)=2;\nSELECT T.SEMESTER, SUM(C.CREDITS) FROM DEPARTMENT D INNER JOIN TEACHES T ON (D.BUDGET = T.YEAR + 4) INNER JOIN COURSE C ON (C.DEPT_NAME = D.DEPT_NAME) GROUP BY T.SEMESTER HAVING AVG(C.CREDITS)>2 AND COUNT(D.BUILDING)>=2;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"mutation-test-CA5","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","SEMESTER":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
{"index":55,"pair":["SELECT ID FROM COURSE NATURAL JOIN DEPARTMENT NATURAL JOIN STUDENT NATURAL JOIN TAKES NATURAL JOIN SECTION GROUP BY ID,DEPT_NAME HAVING COUNT(DEPT_NAME) >= 2","SELECT ID FROM COURSE NATURAL JOIN DEPARTMENT NATURAL JOIN STUDENT NATURAL JOIN TAKES NATURAL JOIN SECTION GROUP BY ID HAVING COUNT(DEPT_NAME) >= 2"],"states":["EQU","NEQ"],"times":[[0.217146,0.393955],[1.328392,34.631625]],"counterexample":"CREATE TABLE COURSE (\n\tCOURSE_ID INTEGER,\n\tTITLE INTEGER,\n\tDEPT_NAME INTEGER,\n\tCREDITS INTEGER\n);\nINSERT INTO COURSE VALUES (0, NULL, 0, 0);\nINSERT INTO COURSE VALUES (0, 0, -1, 0);\n\nCREATE TABLE DEPARTMENT (\n\tDEPT_NAME INTEGER,\n\tBUILDING INTEGER,\n\tBUDGET INTEGER\n);\nINSERT INTO DEPARTMENT VALUES (0, 0, 0);\nINSERT INTO DEPARTMENT VALUES (-1, -1, NULL);\n\nCREATE TABLE INSTRUCTOR (\n\tID INTEGER,\n\tNAME INTEGER,\n\tSALARY INTEGER,\n\tDEPT_NAME INTEGER\n);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\n\nCREATE TABLE TEACHES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tSEMESTER INTEGER,\n\tINSTRUCTOR INTEGER\n);\nINSERT INTO TEACHES VALUES (0, 0, 0, 0, 0, 0);\nINSERT INTO TEACHES VALUES (0, 0, 0, 0, 0, 0);\n\nCREATE TABLE SECTION (\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tBUILDING INTEGER,\n\tROOM_NUMBER INTEGER,\n\tTIME_SLOT_ID INTEGER\n);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, NULL, NULL);\nINSERT INTO SECTION VALUES (0, 0, 0, -1, NULL, 0);\n\nCREATE TABLE TAKES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tGRADE INTEGER\n);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TAKES VALUES (0, 1, 0, 0, 0);\n\nCREATE TABLE STUDENT (\n\tID INTEGER,\n\tNAME INTEGER,\n\tDEPT_NAME INTEGER,\n\tTOT_CRED INTEGER\n);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\nINSERT INTO STUDENT VALUES (0, 0, -1, 0);\n\nSELECT ID FROM COURSE NATURAL JOIN DEPARTMENT NATURAL JOIN STUDENT NATURAL JOIN TAKES NATURAL JOIN SECTION GROUP BY ID,DEPT_NAME HAVING COUNT(DEPT_NAME) >= 2;\nSELECT ID FROM COURSE NATURAL JOIN DEPARTMENT NATURAL JOIN STUDENT NATURAL JOIN TAKES NATURAL JOIN SECTION GROUP BY ID HAVING COUNT(DEPT_NAME) >= 2;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"mutation-test-CA6","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","SEMESTER":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
{"index":56,"pair":["SELECT DISTINCT DEPT_NAME FROM COURSE WHERE CREDITS = (SELECT MAX(CREDITS) FROM COURSE NATURAL JOIN DEPARTMENT WHERE TITLE='CS' GROUP BY DEPT_NAME HAVING COUNT(COURSE_ID)>2)","SELECT DEPT_NAME FROM COURSE WHERE CREDITS = (SELECT MAX(CREDITS) FROM COURSE NATURAL JOIN DEPARTMENT WHERE TITLE='CS' GROUP BY DEPT_NAME HAVING COUNT(COURSE_ID)>2)"],"states":["EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.229731,0.524785],[0.287633,0.118628],[0.413684,0.106797],[0.795055,0.317461],[1.613108,0.995048],[3.341648,2.608345],[6.216514,7.910314],[11.176717,14.261683],[40.58953,155.036927],[34.538293,310.926965],null],"counterexample":null,"err":null,"file":"mutation-test-CA7","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","SEMESTER":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
{"index":57,"pair":["SELECT STUDENT.ID, STUDENT.NAME FROM STUDENT JOIN (SELECT TAKES.ID, S.TIME_SLOT_ID, S.YEAR FROM TAKES JOIN SECTION AS S ON TAKES.COURSE_ID = S.COURSE_ID AND TAKES.SEC_ID = S.SEC_ID GROUP BY TAKES.ID, S.TIME_SLOT_ID, S.YEAR HAVING COUNT(S.TIME_SLOT_ID) > 1) AS A ON STUDENT.ID = A.ID GROUP BY STUDENT.ID, STUDENT.NAME HAVING COUNT(DISTINCT STUDENT.ID) > 2","SELECT STUDENT.ID, STUDENT.NAME FROM STUDENT JOIN (SELECT TAKES.ID, S.TIME_SLOT_ID, S.YEAR FROM TAKES JOIN SECTION AS S ON TAKES.COURSE_ID = S.COURSE_ID AND TAKES.SEC_ID = S.SEC_ID GROUP BY TAKES.ID, S.TIME_SLOT_ID, S.YEAR HAVING SUM(S.TIME_SLOT_ID) > 1) AS A ON STUDENT.ID = A.ID GROUP BY STUDENT.ID, STUDENT.NAME HAVING COUNT(DISTINCT STUDENT.ID) > 2"],"states":["EQU","EQU","EQU","TMO"],"times":[[0.243461,0.580372],[0.42767,0.327709],[1.963863,15.043572],null],"counterexample":null,"err":null,"file":"mutation-test-CA8","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","SEMESTER":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
{"index":58,"pair":["SELECT SUM(T) AS SU FROM (SELECT YEAR AS T FROM TEACHES NATURAL JOIN INSTRUCTOR GROUP BY YEAR, COURSE_ID HAVING COUNT(ID)>4) AS TEMP GROUP BY T","SELECT SUM(T) AS SU FROM (SELECT YEAR AS T FROM TEACHES NATURAL JOIN INSTRUCTOR GROUP BY YEAR HAVING COUNT(ID)>4) AS TEMP GROUP BY T"],"states":["EQU","EQU","NEQ"],"times":[[0.207331,0.148357],[0.270254,0.104734],[0.419793,0.324194]],"counterexample":"CREATE TABLE COURSE (\n\tCOURSE_ID INTEGER,\n\tTITLE INTEGER,\n\tDEPT_NAME INTEGER,\n\tCREDITS INTEGER\n);\nINSERT INTO COURSE VALUES (0, 0, 0, 0);\nINSERT INTO COURSE VALUES (0, 0, 0, 0);\nINSERT INTO COURSE VALUES (0, 0, 0, 0);\n\nCREATE TABLE DEPARTMENT (\n\tDEPT_NAME INTEGER,\n\tBUILDING INTEGER,\n\tBUDGET INTEGER\n);\nINSERT INTO DEPARTMENT VALUES (0, 0, 0);\nINSERT INTO DEPARTMENT VALUES (0, 0, 0);\nINSERT INTO DEPARTMENT VALUES (0, 0, 0);\n\nCREATE TABLE INSTRUCTOR (\n\tID INTEGER,\n\tNAME INTEGER,\n\tSALARY INTEGER,\n\tDEPT_NAME INTEGER\n);\nINSERT INTO INSTRUCTOR VALUES (1, NULL, NULL, NULL);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, NULL);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\n\nCREATE TABLE TEACHES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tSEMESTER INTEGER,\n\tINSTRUCTOR INTEGER\n);\nINSERT INTO TEACHES VALUES (1, 1, 0, 1, 0, NULL);\nINSERT INTO TEACHES VALUES (0, 0, 0, 1, NULL, 0);\nINSERT INTO TEACHES VALUES (0, 0, 0, 1, 0, 0);\n\nCREATE TABLE SECTION (\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tBUILDING INTEGER,\n\tROOM_NUMBER INTEGER,\n\tTIME_SLOT_ID INTEGER\n);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\n\nCREATE TABLE TAKES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tGRADE INTEGER\n);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\n\nCREATE TABLE STUDENT (\n\tID INTEGER,\n\tNAME INTEGER,\n\tDEPT_NAME INTEGER,\n\tTOT_CRED INTEGER\n);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\n\nSELECT SUM(T) AS SU FROM (SELECT YEAR AS T FROM TEACHES NATURAL JOIN INSTRUCTOR GROUP BY YEAR, COURSE_ID HAVING COUNT(ID)>4) AS TEMP GROUP BY T;\nSELECT SUM(T) AS SU FROM (SELECT YEAR AS T FROM TEACHES NATURAL JOIN INSTRUCTOR GROUP BY YEAR HAVING COUNT(ID)>4) AS TEMP GROUP BY T;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"mutation-test-CA9","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","SEMESTER":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
{"index":59,"pair":["SELECT COURSE_ID, TITLE FROM COURSE","SELECT COURSE_ID, TITLE FROM COURSE WHERE CREDITS > 3"],"states":["NEQ"],"times":[[0.185739,0.919189]],"counterexample":"CREATE TABLE COURSE (\n\tCOURSE_ID INTEGER,\n\tTITLE INTEGER,\n\tDEPT_NAME INTEGER,\n\tCREDITS INTEGER\n);\nINSERT INTO COURSE VALUES (0, 0, 0, 0);\n\nCREATE TABLE DEPARTMENT (\n\tDEPT_NAME INTEGER,\n\tBUILDING INTEGER,\n\tBUDGET INTEGER\n);\nINSERT INTO DEPARTMENT VALUES (0, 0, 0);\n\nCREATE TABLE INSTRUCTOR (\n\tID INTEGER,\n\tNAME INTEGER,\n\tSALARY INTEGER,\n\tDEPT_NAME INTEGER\n);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\n\nCREATE TABLE TEACHES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tSEMESTER INTEGER,\n\tINSTRUCTOR INTEGER\n);\nINSERT INTO TEACHES VALUES (0, 0, 0, 0, 0, 0);\n\nCREATE TABLE SECTION (\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tBUILDING INTEGER,\n\tROOM_NUMBER INTEGER,\n\tTIME_SLOT_ID INTEGER\n);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\n\nCREATE TABLE TAKES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tGRADE INTEGER\n);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\n\nCREATE TABLE STUDENT (\n\tID INTEGER,\n\tNAME INTEGER,\n\tDEPT_NAME INTEGER,\n\tTOT_CRED INTEGER\n);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\n\nSELECT COURSE_ID, TITLE FROM COURSE;\nSELECT COURSE_ID, TITLE FROM COURSE WHERE CREDITS > 3;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"mutation-test-CQ1","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","SEMESTER":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
{"index":60,"pair":["SELECT DISTINCT COURSE.COURSE_ID, COURSE.TITLE, TEACHES.ID FROM COURSE JOIN TEACHES WHERE COURSE.COURSE_ID = TEACHES.COURSE_ID AND TEACHES.YEAR = 2010","SELECT DISTINCT COURSE.COURSE_ID, COURSE.TITLE, TEACHES.ID FROM COURSE JOIN TEACHES WHERE COURSE.COURSE_ID >= TEACHES.COURSE_ID AND TEACHES.YEAR = 2010"],"states":["NEQ"],"times":[[0.197412,0.467936]],"counterexample":"CREATE TABLE COURSE (\n\tCOURSE_ID INTEGER,\n\tTITLE INTEGER,\n\tDEPT_NAME INTEGER,\n\tCREDITS INTEGER\n);\nINSERT INTO COURSE VALUES (0, 0, 0, 0);\n\nCREATE TABLE DEPARTMENT (\n\tDEPT_NAME INTEGER,\n\tBUILDING INTEGER,\n\tBUDGET INTEGER\n);\nINSERT INTO DEPARTMENT VALUES (0, 0, 0);\n\nCREATE TABLE INSTRUCTOR (\n\tID INTEGER,\n\tNAME INTEGER,\n\tSALARY INTEGER,\n\tDEPT_NAME INTEGER\n);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\n\nCREATE TABLE TEACHES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tSEMESTER INTEGER,\n\tINSTRUCTOR INTEGER\n);\nINSERT INTO TEACHES VALUES (0, -1, 0, 2010, 0, 0);\n\nCREATE TABLE SECTION (\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tBUILDING INTEGER,\n\tROOM_NUMBER INTEGER,\n\tTIME_SLOT_ID INTEGER\n);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\n\nCREATE TABLE TAKES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tGRADE INTEGER\n);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\n\nCREATE TABLE STUDENT (\n\tID INTEGER,\n\tNAME INTEGER,\n\tDEPT_NAME INTEGER,\n\tTOT_CRED INTEGER\n);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\n\nSELECT DISTINCT COURSE.COURSE_ID, COURSE.TITLE, TEACHES.ID FROM COURSE JOIN TEACHES WHERE COURSE.COURSE_ID = TEACHES.COURSE_ID AND TEACHES.YEAR = 2010;\nSELECT DISTINCT COURSE.COURSE_ID, COURSE.TITLE, TEACHES.ID FROM COURSE JOIN TEACHES WHERE COURSE.COURSE_ID >= TEACHES.COURSE_ID AND TEACHES.YEAR = 2010;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"mutation-test-CQ3","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","SEMESTER":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
{"index":61,"pair":["SELECT DISTINCT INSTRUCTOR.ID, INSTRUCTOR.NAME, TEACHES.COURSE_ID FROM INSTRUCTOR LEFT OUTER JOIN TEACHES ON INSTRUCTOR.ID > TEACHES.ID","SELECT DISTINCT INSTRUCTOR.ID, INSTRUCTOR.NAME, TEACHES.COURSE_ID FROM INSTRUCTOR, TEACHES WHERE INSTRUCTOR.ID = TEACHES.ID"],"states":["NEQ"],"times":[[0.201068,0.478608]],"counterexample":"CREATE TABLE COURSE (\n\tCOURSE_ID INTEGER,\n\tTITLE INTEGER,\n\tDEPT_NAME INTEGER,\n\tCREDITS INTEGER\n);\nINSERT INTO COURSE VALUES (0, 0, 0, 0);\n\nCREATE TABLE DEPARTMENT (\n\tDEPT_NAME INTEGER,\n\tBUILDING INTEGER,\n\tBUDGET INTEGER\n);\nINSERT INTO DEPARTMENT VALUES (0, 0, 0);\n\nCREATE TABLE INSTRUCTOR (\n\tID INTEGER,\n\tNAME INTEGER,\n\tSALARY INTEGER,\n\tDEPT_NAME INTEGER\n);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\n\nCREATE TABLE TEACHES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tSEMESTER INTEGER,\n\tINSTRUCTOR INTEGER\n);\nINSERT INTO TEACHES VALUES (0, 0, 0, 0, 0, 0);\n\nCREATE TABLE SECTION (\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tBUILDING INTEGER,\n\tROOM_NUMBER INTEGER,\n\tTIME_SLOT_ID INTEGER\n);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\n\nCREATE TABLE TAKES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tGRADE INTEGER\n);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\n\nCREATE TABLE STUDENT (\n\tID INTEGER,\n\tNAME INTEGER,\n\tDEPT_NAME INTEGER,\n\tTOT_CRED INTEGER\n);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\n\nSELECT DISTINCT INSTRUCTOR.ID, INSTRUCTOR.NAME, TEACHES.COURSE_ID FROM INSTRUCTOR LEFT OUTER JOIN TEACHES ON INSTRUCTOR.ID > TEACHES.ID;\nSELECT DISTINCT INSTRUCTOR.ID, INSTRUCTOR.NAME, TEACHES.COURSE_ID FROM INSTRUCTOR, TEACHES WHERE INSTRUCTOR.ID = TEACHES.ID;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"mutation-test-CQ7","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","SEMESTER":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
{"index":62,"pair":["WITH S AS (SELECT ID, TIME_SLOT_ID, YEAR FROM TAKES NATURAL JOIN SECTION GROUP BY ID, TIME_SLOT_ID, YEAR HAVING COUNT(DISTINCT TIME_SLOT_ID)>4) SELECT DISTINCT ID,NAME FROM S NATURAL JOIN STUDENT","WITH S AS (SELECT ID, TIME_SLOT_ID, YEAR FROM TAKES NATURAL JOIN SECTION GROUP BY ID, TIME_SLOT_ID, YEAR HAVING COUNT(DISTINCT TIME_SLOT_ID)>5) SELECT DISTINCT ID,NAME FROM S NATURAL JOIN STUDENT"],"states":["EQU","EQU","EQU","EQU","EQU","TMO"],"times":[[0.216843,0.753454],[0.317778,0.138046],[0.72454,0.957311],[2.326298,9.699841],[7.491431,205.775178],null],"counterexample":null,"err":null,"file":"mutation-test-CQ9","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","SEMESTER":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
{"index":63,"pair":["SELECT DISTINCT DEPT_NAME FROM COURSE WHERE CREDITS=(SELECT MAX(CREDITS) FROM COURSE)","SELECT DISTINCT DEPT_NAME FROM COURSE AS C JOIN (SELECT MAX(CREDITS) AS MAX_CREDITS FROM COURSE GROUP BY DEPT_NAME) AS A WHERE C.CREDITS = A.MAX_CREDITS"],"states":["EQU","NEQ"],"times":[[0.198328,0.686095],[0.2245,0.056069]],"counterexample":"CREATE TABLE COURSE (\n\tCOURSE_ID INTEGER,\n\tTITLE INTEGER,\n\tDEPT_NAME INTEGER,\n\tCREDITS INTEGER\n);\nINSERT INTO COURSE VALUES (0, 0, 1, -2147471850);\nINSERT INTO COURSE VALUES (0, 0, 0, -2147471851);\n\nCREATE TABLE DEPARTMENT (\n\tDEPT_NAME INTEGER,\n\tBUILDING INTEGER,\n\tBUDGET INTEGER\n);\nINSERT INTO DEPARTMENT VALUES (0, 0, 0);\nINSERT INTO DEPARTMENT VALUES (0, 0, 0);\n\nCREATE TABLE INSTRUCTOR (\n\tID INTEGER,\n\tNAME INTEGER,\n\tSALARY INTEGER,\n\tDEPT_NAME INTEGER\n);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\nINSERT INTO INSTRUCTOR VALUES (0, 0, 0, 0);\n\nCREATE TABLE TEACHES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tSEMESTER INTEGER,\n\tINSTRUCTOR INTEGER\n);\nINSERT INTO TEACHES VALUES (0, 0, 0, 0, 0, 0);\nINSERT INTO TEACHES VALUES (0, 0, 0, 0, 0, 0);\n\nCREATE TABLE SECTION (\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tBUILDING INTEGER,\n\tROOM_NUMBER INTEGER,\n\tTIME_SLOT_ID INTEGER\n);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\nINSERT INTO SECTION VALUES (0, 0, 0, 0, 0, 0);\n\nCREATE TABLE TAKES (\n\tID INTEGER,\n\tCOURSE_ID INTEGER,\n\tSEC_ID INTEGER,\n\tYEAR INTEGER,\n\tGRADE INTEGER\n);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\nINSERT INTO TAKES VALUES (0, 0, 0, 0, 0);\n\nCREATE TABLE STUDENT (\n\tID INTEGER,\n\tNAME INTEGER,\n\tDEPT_NAME INTEGER,\n\tTOT_CRED INTEGER\n);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\nINSERT INTO STUDENT VALUES (0, 0, 0, 0);\n\nSELECT DISTINCT DEPT_NAME FROM COURSE WHERE CREDITS=(SELECT MAX(CREDITS) FROM COURSE);\nSELECT DISTINCT DEPT_NAME FROM COURSE AS C JOIN (SELECT MAX(CREDITS) AS MAX_CREDITS FROM COURSE GROUP BY DEPT_NAME) AS A WHERE C.CREDITS = A.MAX_CREDITS;","err":"Symbolic reasoning: NOT EQUIVALENT.","file":"mutation-test-CQ10","schema":{"COURSE":{"COURSE_ID":"INT","TITLE":"INT","DEPT_NAME":"INT","CREDITS":"INT"},"DEPARTMENT":{"DEPT_NAME":"INT","BUILDING":"INT","BUDGET":"INT"},"INSTRUCTOR":{"ID":"INT","NAME":"INT","SALARY":"INT","DEPT_NAME":"INT"},"TEACHES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","SEMESTER":"INT","INSTRUCTOR":"INT"},"SECTION":{"COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","BUILDING":"INT","ROOM_NUMBER":"INT","TIME_SLOT_ID":"INT"},"TAKES":{"ID":"INT","COURSE_ID":"INT","SEC_ID":"INT","YEAR":"INT","GRADE":"INT"},"STUDENT":{"ID":"INT","NAME":"INT","DEPT_NAME":"INT","TOT_CRED":"INT"}},"constraint":null}
