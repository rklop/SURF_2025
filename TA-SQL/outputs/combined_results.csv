bound_size,question_id,equivalent,counterexample,time_cost,generated_sql,gold_sql,res
1,0,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT MAX(`FREE MEAL COUNT (K-12)` / `ENROLLMENT (K-12)`) AS 'ELIGIBLE FREE RATE' FROM FRPM WHERE `COUNTY NAME` = 'ALAMEDA COUNTY';`,,SELECT MAX(`FREE MEAL COUNT (K-12)` / `ENROLLMENT (K-12)`) AS 'ELIGIBLE FREE RATE' FROM FRPM WHERE `COUNTY NAME` = 'ALAMEDA COUNTY';,SELECT `FREE MEAL COUNT (K-12)` / `ENROLLMENT (K-12)` FROM FRPM WHERE `COUNTY NAME` = 'ALAMEDA' ORDER BY (CAST(`FREE MEAL COUNT (K-12)` AS REAL) / `ENROLLMENT (K-12)`) DESC LIMIT 1,correct
2,0,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT MAX(`FREE MEAL COUNT (K-12)` / `ENROLLMENT (K-12)`) AS 'ELIGIBLE FREE RATE' FROM FRPM WHERE `COUNTY NAME` = 'ALAMEDA COUNTY';`,,SELECT MAX(`FREE MEAL COUNT (K-12)` / `ENROLLMENT (K-12)`) AS 'ELIGIBLE FREE RATE' FROM FRPM WHERE `COUNTY NAME` = 'ALAMEDA COUNTY';,SELECT `FREE MEAL COUNT (K-12)` / `ENROLLMENT (K-12)` FROM FRPM WHERE `COUNTY NAME` = 'ALAMEDA' ORDER BY (CAST(`FREE MEAL COUNT (K-12)` AS REAL) / `ENROLLMENT (K-12)`) DESC LIMIT 1,correct
3,0,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT MAX(`FREE MEAL COUNT (K-12)` / `ENROLLMENT (K-12)`) AS 'ELIGIBLE FREE RATE' FROM FRPM WHERE `COUNTY NAME` = 'ALAMEDA COUNTY';`,,SELECT MAX(`FREE MEAL COUNT (K-12)` / `ENROLLMENT (K-12)`) AS 'ELIGIBLE FREE RATE' FROM FRPM WHERE `COUNTY NAME` = 'ALAMEDA COUNTY';,SELECT `FREE MEAL COUNT (K-12)` / `ENROLLMENT (K-12)` FROM FRPM WHERE `COUNTY NAME` = 'ALAMEDA' ORDER BY (CAST(`FREE MEAL COUNT (K-12)` AS REAL) / `ENROLLMENT (K-12)`) DESC LIMIT 1,correct
1,1,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__PERCENT (%) ELIGIBLE FREE (AGES 5-17)`,,"SELECT SCHOOLS.SCHOOL, FRPM.`PERCENT (%) ELIGIBLE FREE (AGES 5-17)` FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.EILNAME = 'CONTINUATION SCHOOL' ORDER BY FRPM.`PERCENT (%) ELIGIBLE FREE (AGES 5-17)` ASC LIMIT 3",SELECT `FREE MEAL COUNT (AGES 5-17)` / `ENROLLMENT (AGES 5-17)` FROM FRPM WHERE `EDUCATIONAL OPTION TYPE` = 'CONTINUATION SCHOOL' AND `FREE MEAL COUNT (AGES 5-17)` / `ENROLLMENT (AGES 5-17)` IS NOT NULL ORDER BY `FREE MEAL COUNT (AGES 5-17)` / `ENROLLMENT (AGES 5-17)` ASC LIMIT 3,incorrect
2,1,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__PERCENT (%) ELIGIBLE FREE (AGES 5-17)`,,"SELECT SCHOOLS.SCHOOL, FRPM.`PERCENT (%) ELIGIBLE FREE (AGES 5-17)` FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.EILNAME = 'CONTINUATION SCHOOL' ORDER BY FRPM.`PERCENT (%) ELIGIBLE FREE (AGES 5-17)` ASC LIMIT 3",SELECT `FREE MEAL COUNT (AGES 5-17)` / `ENROLLMENT (AGES 5-17)` FROM FRPM WHERE `EDUCATIONAL OPTION TYPE` = 'CONTINUATION SCHOOL' AND `FREE MEAL COUNT (AGES 5-17)` / `ENROLLMENT (AGES 5-17)` IS NOT NULL ORDER BY `FREE MEAL COUNT (AGES 5-17)` / `ENROLLMENT (AGES 5-17)` ASC LIMIT 3,incorrect
3,1,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__PERCENT (%) ELIGIBLE FREE (AGES 5-17)`,,"SELECT SCHOOLS.SCHOOL, FRPM.`PERCENT (%) ELIGIBLE FREE (AGES 5-17)` FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.EILNAME = 'CONTINUATION SCHOOL' ORDER BY FRPM.`PERCENT (%) ELIGIBLE FREE (AGES 5-17)` ASC LIMIT 3",SELECT `FREE MEAL COUNT (AGES 5-17)` / `ENROLLMENT (AGES 5-17)` FROM FRPM WHERE `EDUCATIONAL OPTION TYPE` = 'CONTINUATION SCHOOL' AND `FREE MEAL COUNT (AGES 5-17)` / `ENROLLMENT (AGES 5-17)` IS NOT NULL ORDER BY `FREE MEAL COUNT (AGES 5-17)` / `ENROLLMENT (AGES 5-17)` ASC LIMIT 3,incorrect
1,2,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__CHARTER SCHOOL (Y/N)`,,SELECT SCHOOLS.ZIP FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.COUNTY = 'FRESNO COUNTY OFFICE OF EDUCATION' AND FRPM.`CHARTER SCHOOL (Y/N)` = 1,SELECT T2.ZIP FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T1.`DISTRICT NAME` = 'FRESNO COUNTY OFFICE OF EDUCATION' AND T1.`CHARTER SCHOOL (Y/N)` = 1,incorrect
2,2,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__CHARTER SCHOOL (Y/N)`,,SELECT SCHOOLS.ZIP FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.COUNTY = 'FRESNO COUNTY OFFICE OF EDUCATION' AND FRPM.`CHARTER SCHOOL (Y/N)` = 1,SELECT T2.ZIP FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T1.`DISTRICT NAME` = 'FRESNO COUNTY OFFICE OF EDUCATION' AND T1.`CHARTER SCHOOL (Y/N)` = 1,incorrect
3,2,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__CHARTER SCHOOL (Y/N)`,,SELECT SCHOOLS.ZIP FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.COUNTY = 'FRESNO COUNTY OFFICE OF EDUCATION' AND FRPM.`CHARTER SCHOOL (Y/N)` = 1,SELECT T2.ZIP FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T1.`DISTRICT NAME` = 'FRESNO COUNTY OFFICE OF EDUCATION' AND T1.`CHARTER SCHOOL (Y/N)` = 1,incorrect
1,3,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FRPM COUNT (K-12)`,,SELECT SCHOOLS.MAILSTREET FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE ORDER BY FRPM.`FRPM COUNT (K-12)` DESC LIMIT 1,SELECT T2.MAILSTREET FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE ORDER BY T1.`FRPM COUNT (K-12)` DESC LIMIT 1,correct
2,3,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FRPM COUNT (K-12)`,,SELECT SCHOOLS.MAILSTREET FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE ORDER BY FRPM.`FRPM COUNT (K-12)` DESC LIMIT 1,SELECT T2.MAILSTREET FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE ORDER BY T1.`FRPM COUNT (K-12)` DESC LIMIT 1,correct
3,3,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FRPM COUNT (K-12)`,,SELECT SCHOOLS.MAILSTREET FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE ORDER BY FRPM.`FRPM COUNT (K-12)` DESC LIMIT 1,SELECT T2.MAILSTREET FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE ORDER BY T1.`FRPM COUNT (K-12)` DESC LIMIT 1,correct
1,4,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__CHARTER SCHOOL (Y/N)`,,SELECT SCHOOLS.PHONE FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE FRPM.`CHARTER SCHOOL (Y/N)` = 1 AND SCHOOLS.FUNDINGTYPE = 'DIRECTLY FUNDED' AND SCHOOLS.OPENDATE > '2000-01-01',SELECT T2.PHONE FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T1.`CHARTER FUNDING TYPE` = 'DIRECTLY FUNDED' AND T1.`CHARTER SCHOOL (Y/N)` = 1 AND T2.OPENDATE > '2000-01-01',incorrect
2,4,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__CHARTER SCHOOL (Y/N)`,,SELECT SCHOOLS.PHONE FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE FRPM.`CHARTER SCHOOL (Y/N)` = 1 AND SCHOOLS.FUNDINGTYPE = 'DIRECTLY FUNDED' AND SCHOOLS.OPENDATE > '2000-01-01',SELECT T2.PHONE FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T1.`CHARTER FUNDING TYPE` = 'DIRECTLY FUNDED' AND T1.`CHARTER SCHOOL (Y/N)` = 1 AND T2.OPENDATE > '2000-01-01',incorrect
3,4,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__CHARTER SCHOOL (Y/N)`,,SELECT SCHOOLS.PHONE FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE FRPM.`CHARTER SCHOOL (Y/N)` = 1 AND SCHOOLS.FUNDINGTYPE = 'DIRECTLY FUNDED' AND SCHOOLS.OPENDATE > '2000-01-01',SELECT T2.PHONE FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T1.`CHARTER FUNDING TYPE` = 'DIRECTLY FUNDED' AND T1.`CHARTER SCHOOL (Y/N)` = 1 AND T2.OPENDATE > '2000-01-01',incorrect
1,5,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE FRPM (
	CDSCODE VARCHAR(20),
	ACADEMIC_YEAR VARCHAR(20),
	COUNTY_CODE VARCHAR(20),
	DISTRICT_CODE VARCHAR(20),
	SCHOOL_CODE VARCHAR(20),
	COUNTY_NAME VARCHAR(20),
	DISTRICT_NAME VARCHAR(20),
	SCHOOL_NAME VARCHAR(20),
	DISTRICT_TYPE VARCHAR(20),
	SCHOOL_TYPE VARCHAR(20),
	EDUCATIONAL_OPTION_TYPE VARCHAR(20),
	NSLP_PROVISION_STATUS VARCHAR(20),
	CHARTER_SCHOOL_YN INTEGER,
	CHARTER_SCHOOL_NUMBER VARCHAR(20),
	CHARTER_FUNDING_TYPE VARCHAR(20),
	IRC INTEGER,
	LOW_GRADE VARCHAR(20),
	HIGH_GRADE VARCHAR(20),
	ENROLLMENT_K12 INTEGER,
	FREE_MEAL_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FREE_K12 INTEGER,
	FRPM_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FRPM_K12 INTEGER,
	ENROLLMENT_AGES_5_17 INTEGER,
	FREE_MEAL_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FREE_AGES_5_17 INTEGER,
	FRPM_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FRPM_AGES_5_17 INTEGER,
	CALPADS_FALL1_CERTIFICATION_STATUS INTEGER
);
INSERT INTO FRPM VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
CREATE TABLE SATSCORES (
	CDS VARCHAR(20),
	RTYPE VARCHAR(20),
	SNAME VARCHAR(20),
	DNAME VARCHAR(20),
	CNAME VARCHAR(20),
	ENROLL12 INTEGER,
	NUMTSTTAKR INTEGER,
	AVGSCRREAD INTEGER,
	AVGSCRMATH INTEGER,
	AVGSCRWRITE INTEGER,
	NUMGE1500 INTEGER
);
INSERT INTO SATSCORES VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 6, 7, 8, 401, 9, 10);
CREATE TABLE SCHOOLS (
	CDSCODE VARCHAR(20),
	NCESDIST VARCHAR(20),
	NCESSCHOOL VARCHAR(20),
	STATUSTYPE VARCHAR(20),
	COUNTY VARCHAR(20),
	DISTRICT VARCHAR(20),
	SCHOOL VARCHAR(20),
	STREET VARCHAR(20),
	STREETABR VARCHAR(20),
	CITY VARCHAR(20),
	ZIP VARCHAR(20),
	STATE VARCHAR(20),
	MAILSTREET VARCHAR(20),
	MAILSTRABR VARCHAR(20),
	MAILCITY VARCHAR(20),
	MAILZIP VARCHAR(20),
	MAILSTATE VARCHAR(20),
	PHONE VARCHAR(20),
	EXT VARCHAR(20),
	WEBSITE VARCHAR(20),
	OPENDATE DATE,
	CLOSEDDATE DATE,
	CHARTER INTEGER,
	CHARTERNUM VARCHAR(20),
	FUNDINGTYPE VARCHAR(20),
	DOC VARCHAR(20),
	DOCTYPE VARCHAR(20),
	SOC VARCHAR(20),
	SOCTYPE VARCHAR(20),
	EDOPSCODE VARCHAR(20),
	EDOPSNAME VARCHAR(20),
	EILCODE VARCHAR(20),
	EILNAME VARCHAR(20),
	GSOFFERED VARCHAR(20),
	GSSERVED VARCHAR(20),
	VIRTUAL VARCHAR(20),
	MAGNET INTEGER,
	LATITUDE INTEGER,
	LONGITUDE INTEGER,
	ADMFNAME1 VARCHAR(20),
	ADMLNAME1 VARCHAR(20),
	ADMEMAIL1 VARCHAR(20),
	ADMFNAME2 VARCHAR(20),
	ADMLNAME2 VARCHAR(20),
	ADMEMAIL2 VARCHAR(20),
	ADMFNAME3 VARCHAR(20),
	ADMLNAME3 VARCHAR(20),
	ADMEMAIL3 VARCHAR(20),
	LASTUPDATE DATE
);
INSERT INTO SCHOOLS VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', NULL, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', '1970-01-01', 2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 'F', 3, 4, 5, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01');
-- ----------sql1------------
-- 1
SELECT COUNT(*) FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.VIRTUAL = 'F' AND SATSCORES.AVGSCRMATH > 400;
-- ----------sql2------------
-- 0
SELECT COUNT(DISTINCT T2.SCHOOL) FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE WHERE T2.VIRTUAL = 'F' AND T1.AVGSCRMATH > 400;
",0.142127,SELECT COUNT(*) FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.VIRTUAL = 'F' AND SATSCORES.AVGSCRMATH > 400,SELECT COUNT(DISTINCT T2.SCHOOL) FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE WHERE T2.VIRTUAL = 'F' AND T1.AVGSCRMATH > 400,correct
1,6,True,,0.108999,SELECT SCHOOLS.SCHOOL FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SATSCORES.NUMTSTTAKR > 500 AND SCHOOLS.MAGNET = 1,SELECT T2.SCHOOL FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE WHERE T2.MAGNET = 1 AND T1.NUMTSTTAKR > 500,correct
1,7,True,,0.093183,SELECT SCHOOLS.PHONE FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS ORDER BY SATSCORES.NUMGE1500 DESC LIMIT 1,SELECT T2.PHONE FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE ORDER BY T1.NUMGE1500 DESC LIMIT 1,correct
1,8,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FRPM COUNT (K-12)`,,SELECT SATSCORES.NUMTSTTAKR FROM SATSCORES INNER JOIN FRPM ON SATSCORES.CDS = FRPM.CDSCODE WHERE FRPM.`FRPM COUNT (K-12)` = (SELECT MAX(`FRPM COUNT (K-12)`) FROM FRPM),SELECT NUMTSTTAKR FROM SATSCORES WHERE CDS = ( SELECT CDSCODE FROM FRPM ORDER BY `FRPM COUNT (K-12)` DESC LIMIT 1 ),correct
2,8,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FRPM COUNT (K-12)`,,SELECT SATSCORES.NUMTSTTAKR FROM SATSCORES INNER JOIN FRPM ON SATSCORES.CDS = FRPM.CDSCODE WHERE FRPM.`FRPM COUNT (K-12)` = (SELECT MAX(`FRPM COUNT (K-12)`) FROM FRPM),SELECT NUMTSTTAKR FROM SATSCORES WHERE CDS = ( SELECT CDSCODE FROM FRPM ORDER BY `FRPM COUNT (K-12)` DESC LIMIT 1 ),correct
3,8,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FRPM COUNT (K-12)`,,SELECT SATSCORES.NUMTSTTAKR FROM SATSCORES INNER JOIN FRPM ON SATSCORES.CDS = FRPM.CDSCODE WHERE FRPM.`FRPM COUNT (K-12)` = (SELECT MAX(`FRPM COUNT (K-12)`) FROM FRPM),SELECT NUMTSTTAKR FROM SATSCORES WHERE CDS = ( SELECT CDSCODE FROM FRPM ORDER BY `FRPM COUNT (K-12)` DESC LIMIT 1 ),correct
1,9,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T2__CHARTER FUNDING TYPE`,,SELECT COUNT(*) FROM SATSCORES INNER JOIN SCHOOLS ON SATSCORES.CDS = SCHOOLS.CDSCODE WHERE SATSCORES.AVGSCRMATH > 560 AND SCHOOLS.FUNDINGTYPE = 'DIRECTLY CHARTER-FUNDED',SELECT COUNT(T2.`SCHOOL CODE`) FROM SATSCORES AS T1 INNER JOIN FRPM AS T2 ON T1.CDS = T2.CDSCODE WHERE T1.AVGSCRMATH > 560 AND T2.`CHARTER FUNDING TYPE` = 'DIRECTLY FUNDED',correct
2,9,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T2__CHARTER FUNDING TYPE`,,SELECT COUNT(*) FROM SATSCORES INNER JOIN SCHOOLS ON SATSCORES.CDS = SCHOOLS.CDSCODE WHERE SATSCORES.AVGSCRMATH > 560 AND SCHOOLS.FUNDINGTYPE = 'DIRECTLY CHARTER-FUNDED',SELECT COUNT(T2.`SCHOOL CODE`) FROM SATSCORES AS T1 INNER JOIN FRPM AS T2 ON T1.CDS = T2.CDSCODE WHERE T1.AVGSCRMATH > 560 AND T2.`CHARTER FUNDING TYPE` = 'DIRECTLY FUNDED',correct
3,9,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T2__CHARTER FUNDING TYPE`,,SELECT COUNT(*) FROM SATSCORES INNER JOIN SCHOOLS ON SATSCORES.CDS = SCHOOLS.CDSCODE WHERE SATSCORES.AVGSCRMATH > 560 AND SCHOOLS.FUNDINGTYPE = 'DIRECTLY CHARTER-FUNDED',SELECT COUNT(T2.`SCHOOL CODE`) FROM SATSCORES AS T1 INNER JOIN FRPM AS T2 ON T1.CDS = T2.CDSCODE WHERE T1.AVGSCRMATH > 560 AND T2.`CHARTER FUNDING TYPE` = 'DIRECTLY FUNDED',correct
1,10,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FRPM COUNT (AGES 5-17)`,,SELECT FRPM.`FRPM COUNT (AGES 5-17)` FROM SATSCORES INNER JOIN FRPM ON SATSCORES.CDS = FRPM.CDSCODE ORDER BY SATSCORES.AVGSCRREAD DESC LIMIT 1,SELECT T2.`FRPM COUNT (AGES 5-17)` FROM SATSCORES AS T1 INNER JOIN FRPM AS T2 ON T1.CDS = T2.CDSCODE ORDER BY T1.AVGSCRREAD DESC LIMIT 1,correct
2,10,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FRPM COUNT (AGES 5-17)`,,SELECT FRPM.`FRPM COUNT (AGES 5-17)` FROM SATSCORES INNER JOIN FRPM ON SATSCORES.CDS = FRPM.CDSCODE ORDER BY SATSCORES.AVGSCRREAD DESC LIMIT 1,SELECT T2.`FRPM COUNT (AGES 5-17)` FROM SATSCORES AS T1 INNER JOIN FRPM AS T2 ON T1.CDS = T2.CDSCODE ORDER BY T1.AVGSCRREAD DESC LIMIT 1,correct
3,10,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FRPM COUNT (AGES 5-17)`,,SELECT FRPM.`FRPM COUNT (AGES 5-17)` FROM SATSCORES INNER JOIN FRPM ON SATSCORES.CDS = FRPM.CDSCODE ORDER BY SATSCORES.AVGSCRREAD DESC LIMIT 1,SELECT T2.`FRPM COUNT (AGES 5-17)` FROM SATSCORES AS T1 INNER JOIN FRPM AS T2 ON T1.CDS = T2.CDSCODE ORDER BY T1.AVGSCRREAD DESC LIMIT 1,correct
1,11,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__ENROLLMENT (K-12)`,,SELECT FRPM.CDSCODE FROM FRPM WHERE FRPM.`ENROLLMENT (K-12)` + FRPM.`ENROLLMENT (AGES 5-17)` > 500,SELECT T2.CDSCODE FROM SCHOOLS AS T1 INNER JOIN FRPM AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.`ENROLLMENT (K-12)` + T2.`ENROLLMENT (AGES 5-17)` > 500,correct
2,11,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__ENROLLMENT (K-12)`,,SELECT FRPM.CDSCODE FROM FRPM WHERE FRPM.`ENROLLMENT (K-12)` + FRPM.`ENROLLMENT (AGES 5-17)` > 500,SELECT T2.CDSCODE FROM SCHOOLS AS T1 INNER JOIN FRPM AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.`ENROLLMENT (K-12)` + T2.`ENROLLMENT (AGES 5-17)` > 500,correct
3,11,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__ENROLLMENT (K-12)`,,SELECT FRPM.CDSCODE FROM FRPM WHERE FRPM.`ENROLLMENT (K-12)` + FRPM.`ENROLLMENT (AGES 5-17)` > 500,SELECT T2.CDSCODE FROM SCHOOLS AS T1 INNER JOIN FRPM AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.`ENROLLMENT (K-12)` + T2.`ENROLLMENT (AGES 5-17)` > 500,correct
1,12,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__PERCENT (%) ELIGIBLE FREE (AGES 5-17)`,,SELECT MAX(FRPM.`PERCENT (%) ELIGIBLE FREE (AGES 5-17)`) FROM SATSCORES INNER JOIN FRPM ON SATSCORES.CDS = FRPM.CDSCODE WHERE (SATSCORES.NUMGE1500 / SATSCORES.NUMTSTTAKR) > 0.3,SELECT MAX(CAST(T1.`FREE MEAL COUNT (AGES 5-17)` AS REAL) / T1.`ENROLLMENT (AGES 5-17)`) FROM FRPM AS T1 INNER JOIN SATSCORES AS T2 ON T1.CDSCODE = T2.CDS WHERE CAST(T2.NUMGE1500 AS REAL) / T2.NUMTSTTAKR > 0.3,incorrect
2,12,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__PERCENT (%) ELIGIBLE FREE (AGES 5-17)`,,SELECT MAX(FRPM.`PERCENT (%) ELIGIBLE FREE (AGES 5-17)`) FROM SATSCORES INNER JOIN FRPM ON SATSCORES.CDS = FRPM.CDSCODE WHERE (SATSCORES.NUMGE1500 / SATSCORES.NUMTSTTAKR) > 0.3,SELECT MAX(CAST(T1.`FREE MEAL COUNT (AGES 5-17)` AS REAL) / T1.`ENROLLMENT (AGES 5-17)`) FROM FRPM AS T1 INNER JOIN SATSCORES AS T2 ON T1.CDSCODE = T2.CDS WHERE CAST(T2.NUMGE1500 AS REAL) / T2.NUMTSTTAKR > 0.3,incorrect
3,12,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__PERCENT (%) ELIGIBLE FREE (AGES 5-17)`,,SELECT MAX(FRPM.`PERCENT (%) ELIGIBLE FREE (AGES 5-17)`) FROM SATSCORES INNER JOIN FRPM ON SATSCORES.CDS = FRPM.CDSCODE WHERE (SATSCORES.NUMGE1500 / SATSCORES.NUMTSTTAKR) > 0.3,SELECT MAX(CAST(T1.`FREE MEAL COUNT (AGES 5-17)` AS REAL) / T1.`ENROLLMENT (AGES 5-17)`) FROM FRPM AS T1 INNER JOIN SATSCORES AS T2 ON T1.CDSCODE = T2.CDS WHERE CAST(T2.NUMGE1500 AS REAL) / T2.NUMTSTTAKR > 0.3,incorrect
1,13,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT SCHOOLS.PHONE FROM ( SELECT SCHOOLS.PHONE, SATSCORES.NUMGE1500 / SATSCORES.NUMTSTTAKR AS 'EXCELLENCE RATE' FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS ORDER BY 'EXCELLENCE RATE' DESC LIMIT 3 ) AS SUBQUERY`",,"SELECT SCHOOLS.PHONE FROM ( SELECT SCHOOLS.PHONE, SATSCORES.NUMGE1500 / SATSCORES.NUMTSTTAKR AS 'EXCELLENCE RATE' FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS ORDER BY 'EXCELLENCE RATE' DESC LIMIT 3 ) AS SUBQUERY",SELECT T1.PHONE FROM SCHOOLS AS T1 INNER JOIN SATSCORES AS T2 ON T1.CDSCODE = T2.CDS ORDER BY CAST(T2.NUMGE1500 AS REAL) / T2.NUMTSTTAKR DESC LIMIT 3,incorrect
2,13,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT SCHOOLS.PHONE FROM ( SELECT SCHOOLS.PHONE, SATSCORES.NUMGE1500 / SATSCORES.NUMTSTTAKR AS 'EXCELLENCE RATE' FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS ORDER BY 'EXCELLENCE RATE' DESC LIMIT 3 ) AS SUBQUERY`",,"SELECT SCHOOLS.PHONE FROM ( SELECT SCHOOLS.PHONE, SATSCORES.NUMGE1500 / SATSCORES.NUMTSTTAKR AS 'EXCELLENCE RATE' FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS ORDER BY 'EXCELLENCE RATE' DESC LIMIT 3 ) AS SUBQUERY",SELECT T1.PHONE FROM SCHOOLS AS T1 INNER JOIN SATSCORES AS T2 ON T1.CDSCODE = T2.CDS ORDER BY CAST(T2.NUMGE1500 AS REAL) / T2.NUMTSTTAKR DESC LIMIT 3,incorrect
3,13,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT SCHOOLS.PHONE FROM ( SELECT SCHOOLS.PHONE, SATSCORES.NUMGE1500 / SATSCORES.NUMTSTTAKR AS 'EXCELLENCE RATE' FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS ORDER BY 'EXCELLENCE RATE' DESC LIMIT 3 ) AS SUBQUERY`",,"SELECT SCHOOLS.PHONE FROM ( SELECT SCHOOLS.PHONE, SATSCORES.NUMGE1500 / SATSCORES.NUMTSTTAKR AS 'EXCELLENCE RATE' FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS ORDER BY 'EXCELLENCE RATE' DESC LIMIT 3 ) AS SUBQUERY",SELECT T1.PHONE FROM SCHOOLS AS T1 INNER JOIN SATSCORES AS T2 ON T1.CDSCODE = T2.CDS ORDER BY CAST(T2.NUMGE1500 AS REAL) / T2.NUMTSTTAKR DESC LIMIT 3,incorrect
1,14,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SCHOOLS__ENROLLMENT`,,"SELECT SCHOOLS.NCESSCHOOL, SCHOOLS.SCHOOL FROM SCHOOLS ORDER BY SCHOOLS.ENROLLMENT DESC LIMIT 5",SELECT T1.NCESSCHOOL FROM SCHOOLS AS T1 INNER JOIN FRPM AS T2 ON T1.CDSCODE = T2.CDSCODE ORDER BY T2.`ENROLLMENT (AGES 5-17)` DESC LIMIT 5,incorrect
2,14,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SCHOOLS__ENROLLMENT`,,"SELECT SCHOOLS.NCESSCHOOL, SCHOOLS.SCHOOL FROM SCHOOLS ORDER BY SCHOOLS.ENROLLMENT DESC LIMIT 5",SELECT T1.NCESSCHOOL FROM SCHOOLS AS T1 INNER JOIN FRPM AS T2 ON T1.CDSCODE = T2.CDSCODE ORDER BY T2.`ENROLLMENT (AGES 5-17)` DESC LIMIT 5,incorrect
3,14,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SCHOOLS__ENROLLMENT`,,"SELECT SCHOOLS.NCESSCHOOL, SCHOOLS.SCHOOL FROM SCHOOLS ORDER BY SCHOOLS.ENROLLMENT DESC LIMIT 5",SELECT T1.NCESSCHOOL FROM SCHOOLS AS T1 INNER JOIN FRPM AS T2 ON T1.CDSCODE = T2.CDSCODE ORDER BY T2.`ENROLLMENT (AGES 5-17)` DESC LIMIT 5,incorrect
1,15,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE FRPM (
	CDSCODE VARCHAR(20),
	ACADEMIC_YEAR VARCHAR(20),
	COUNTY_CODE VARCHAR(20),
	DISTRICT_CODE VARCHAR(20),
	SCHOOL_CODE VARCHAR(20),
	COUNTY_NAME VARCHAR(20),
	DISTRICT_NAME VARCHAR(20),
	SCHOOL_NAME VARCHAR(20),
	DISTRICT_TYPE VARCHAR(20),
	SCHOOL_TYPE VARCHAR(20),
	EDUCATIONAL_OPTION_TYPE VARCHAR(20),
	NSLP_PROVISION_STATUS VARCHAR(20),
	CHARTER_SCHOOL_YN INTEGER,
	CHARTER_SCHOOL_NUMBER VARCHAR(20),
	CHARTER_FUNDING_TYPE VARCHAR(20),
	IRC INTEGER,
	LOW_GRADE VARCHAR(20),
	HIGH_GRADE VARCHAR(20),
	ENROLLMENT_K12 INTEGER,
	FREE_MEAL_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FREE_K12 INTEGER,
	FRPM_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FRPM_K12 INTEGER,
	ENROLLMENT_AGES_5_17 INTEGER,
	FREE_MEAL_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FREE_AGES_5_17 INTEGER,
	FRPM_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FRPM_AGES_5_17 INTEGER,
	CALPADS_FALL1_CERTIFICATION_STATUS INTEGER
);
INSERT INTO FRPM VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
CREATE TABLE SATSCORES (
	CDS VARCHAR(20),
	RTYPE VARCHAR(20),
	SNAME VARCHAR(20),
	DNAME VARCHAR(20),
	CNAME VARCHAR(20),
	ENROLL12 INTEGER,
	NUMTSTTAKR INTEGER,
	AVGSCRREAD INTEGER,
	AVGSCRMATH INTEGER,
	AVGSCRWRITE INTEGER,
	NUMGE1500 INTEGER
);
INSERT INTO SATSCORES VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 6, 7, 8, 9, 10, 11);
CREATE TABLE SCHOOLS (
	CDSCODE VARCHAR(20),
	NCESDIST VARCHAR(20),
	NCESSCHOOL VARCHAR(20),
	STATUSTYPE VARCHAR(20),
	COUNTY VARCHAR(20),
	DISTRICT VARCHAR(20),
	SCHOOL VARCHAR(20),
	STREET VARCHAR(20),
	STREETABR VARCHAR(20),
	CITY VARCHAR(20),
	ZIP VARCHAR(20),
	STATE VARCHAR(20),
	MAILSTREET VARCHAR(20),
	MAILSTRABR VARCHAR(20),
	MAILCITY VARCHAR(20),
	MAILZIP VARCHAR(20),
	MAILSTATE VARCHAR(20),
	PHONE VARCHAR(20),
	EXT VARCHAR(20),
	WEBSITE VARCHAR(20),
	OPENDATE DATE,
	CLOSEDDATE DATE,
	CHARTER INTEGER,
	CHARTERNUM VARCHAR(20),
	FUNDINGTYPE VARCHAR(20),
	DOC VARCHAR(20),
	DOCTYPE VARCHAR(20),
	SOC VARCHAR(20),
	SOCTYPE VARCHAR(20),
	EDOPSCODE VARCHAR(20),
	EDOPSNAME VARCHAR(20),
	EILCODE VARCHAR(20),
	EILNAME VARCHAR(20),
	GSOFFERED VARCHAR(20),
	GSSERVED VARCHAR(20),
	VIRTUAL VARCHAR(20),
	MAGNET INTEGER,
	LATITUDE INTEGER,
	LONGITUDE INTEGER,
	ADMFNAME1 VARCHAR(20),
	ADMLNAME1 VARCHAR(20),
	ADMEMAIL1 VARCHAR(20),
	ADMFNAME2 VARCHAR(20),
	ADMLNAME2 VARCHAR(20),
	ADMEMAIL2 VARCHAR(20),
	ADMFNAME3 VARCHAR(20),
	ADMLNAME3 VARCHAR(20),
	ADMEMAIL3 VARCHAR(20),
	LASTUPDATE DATE
);
INSERT INTO SCHOOLS VALUES ('2147483648', '2147483648', '2147483648', 'ACTIVE', '2147483648', '2147483649', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', '1970-01-01', 2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 3, 4, 5, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01');
-- ----------sql1------------
-- 2147483648
SELECT SATSCORES.DNAME FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.STATUSTYPE = 'ACTIVE' ORDER BY SATSCORES.AVGSCRREAD DESC LIMIT 1;
-- ----------sql2------------
-- 2147483649
SELECT T1.DISTRICT FROM SCHOOLS AS T1 INNER JOIN SATSCORES AS T2 ON T1.CDSCODE = T2.CDS WHERE T1.STATUSTYPE = 'ACTIVE' ORDER BY T2.AVGSCRREAD DESC LIMIT 1;
",0.093028,SELECT SATSCORES.DNAME FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.STATUSTYPE = 'ACTIVE' ORDER BY SATSCORES.AVGSCRREAD DESC LIMIT 1,SELECT T1.DISTRICT FROM SCHOOLS AS T1 INNER JOIN SATSCORES AS T2 ON T1.CDSCODE = T2.CDS WHERE T1.STATUSTYPE = 'ACTIVE' ORDER BY T2.AVGSCRREAD DESC LIMIT 1,incorrect
1,16,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE FRPM (
	CDSCODE VARCHAR(20),
	ACADEMIC_YEAR VARCHAR(20),
	COUNTY_CODE VARCHAR(20),
	DISTRICT_CODE VARCHAR(20),
	SCHOOL_CODE VARCHAR(20),
	COUNTY_NAME VARCHAR(20),
	DISTRICT_NAME VARCHAR(20),
	SCHOOL_NAME VARCHAR(20),
	DISTRICT_TYPE VARCHAR(20),
	SCHOOL_TYPE VARCHAR(20),
	EDUCATIONAL_OPTION_TYPE VARCHAR(20),
	NSLP_PROVISION_STATUS VARCHAR(20),
	CHARTER_SCHOOL_YN INTEGER,
	CHARTER_SCHOOL_NUMBER VARCHAR(20),
	CHARTER_FUNDING_TYPE VARCHAR(20),
	IRC INTEGER,
	LOW_GRADE VARCHAR(20),
	HIGH_GRADE VARCHAR(20),
	ENROLLMENT_K12 INTEGER,
	FREE_MEAL_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FREE_K12 INTEGER,
	FRPM_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FRPM_K12 INTEGER,
	ENROLLMENT_AGES_5_17 INTEGER,
	FREE_MEAL_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FREE_AGES_5_17 INTEGER,
	FRPM_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FRPM_AGES_5_17 INTEGER,
	CALPADS_FALL1_CERTIFICATION_STATUS INTEGER
);
INSERT INTO FRPM VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
CREATE TABLE SATSCORES (
	CDS VARCHAR(20),
	RTYPE VARCHAR(20),
	SNAME VARCHAR(20),
	DNAME VARCHAR(20),
	CNAME VARCHAR(20),
	ENROLL12 INTEGER,
	NUMTSTTAKR INTEGER,
	AVGSCRREAD INTEGER,
	AVGSCRMATH INTEGER,
	AVGSCRWRITE INTEGER,
	NUMGE1500 INTEGER
);
INSERT INTO SATSCORES VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 6, 0, 7, 8, 9, 10);
CREATE TABLE SCHOOLS (
	CDSCODE VARCHAR(20),
	NCESDIST VARCHAR(20),
	NCESSCHOOL VARCHAR(20),
	STATUSTYPE VARCHAR(20),
	COUNTY VARCHAR(20),
	DISTRICT VARCHAR(20),
	SCHOOL VARCHAR(20),
	STREET VARCHAR(20),
	STREETABR VARCHAR(20),
	CITY VARCHAR(20),
	ZIP VARCHAR(20),
	STATE VARCHAR(20),
	MAILSTREET VARCHAR(20),
	MAILSTRABR VARCHAR(20),
	MAILCITY VARCHAR(20),
	MAILZIP VARCHAR(20),
	MAILSTATE VARCHAR(20),
	PHONE VARCHAR(20),
	EXT VARCHAR(20),
	WEBSITE VARCHAR(20),
	OPENDATE DATE,
	CLOSEDDATE DATE,
	CHARTER INTEGER,
	CHARTERNUM VARCHAR(20),
	FUNDINGTYPE VARCHAR(20),
	DOC VARCHAR(20),
	DOCTYPE VARCHAR(20),
	SOC VARCHAR(20),
	SOCTYPE VARCHAR(20),
	EDOPSCODE VARCHAR(20),
	EDOPSNAME VARCHAR(20),
	EILCODE VARCHAR(20),
	EILNAME VARCHAR(20),
	GSOFFERED VARCHAR(20),
	GSSERVED VARCHAR(20),
	VIRTUAL VARCHAR(20),
	MAGNET INTEGER,
	LATITUDE INTEGER,
	LONGITUDE INTEGER,
	ADMFNAME1 VARCHAR(20),
	ADMLNAME1 VARCHAR(20),
	ADMEMAIL1 VARCHAR(20),
	ADMFNAME2 VARCHAR(20),
	ADMLNAME2 VARCHAR(20),
	ADMEMAIL2 VARCHAR(20),
	ADMFNAME3 VARCHAR(20),
	ADMLNAME3 VARCHAR(20),
	ADMEMAIL3 VARCHAR(20),
	LASTUPDATE DATE
);
INSERT INTO SCHOOLS VALUES ('2147483648', '2147483648', '2147483648', '2147483648', 'ALAMEDA', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', '1970-01-01', 2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 3, 4, 5, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01');
-- ----------sql1------------
-- 1
SELECT COUNT(*) FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.COUNTY = 'ALAMEDA' AND SATSCORES.NUMTSTTAKR < 100;
-- ----------sql2------------
-- 0
SELECT COUNT(T1.CDSCODE) FROM SCHOOLS AS T1 INNER JOIN SATSCORES AS T2 ON T1.CDSCODE = T2.CDS WHERE T1.STATUSTYPE = 'MERGED' AND T2.NUMTSTTAKR < 100 AND T1.COUNTY = 'LAKE';
",0.127669,SELECT COUNT(*) FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.COUNTY = 'ALAMEDA' AND SATSCORES.NUMTSTTAKR < 100,SELECT COUNT(T1.CDSCODE) FROM SCHOOLS AS T1 INNER JOIN SATSCORES AS T2 ON T1.CDSCODE = T2.CDS WHERE T1.STATUSTYPE = 'MERGED' AND T2.NUMTSTTAKR < 100 AND T1.COUNTY = 'LAKE',incorrect
1,17,ERROR,NotSupportedError: Not supported feature: OVER,,SELECT SCHOOLS.CHARTERNUM FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SATSCORES.AVGSCRWRITE > 499 AND SCHOOLS.CHARTERNUM IS NOT NULL ORDER BY SATSCORES.AVGSCRWRITE DESC,"SELECT CHARTERNUM, AVGSCRWRITE, RANK() OVER (ORDER BY AVGSCRWRITE DESC) AS WRITINGSCORERANK FROM SCHOOLS AS T1  INNER JOIN SATSCORES AS T2 ON T1.CDSCODE = T2.CDS WHERE T2.AVGSCRWRITE > 499 AND CHARTERNUM IS NOT NULL",incorrect
2,17,ERROR,NotSupportedError: Not supported feature: OVER,,SELECT SCHOOLS.CHARTERNUM FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SATSCORES.AVGSCRWRITE > 499 AND SCHOOLS.CHARTERNUM IS NOT NULL ORDER BY SATSCORES.AVGSCRWRITE DESC,"SELECT CHARTERNUM, AVGSCRWRITE, RANK() OVER (ORDER BY AVGSCRWRITE DESC) AS WRITINGSCORERANK FROM SCHOOLS AS T1  INNER JOIN SATSCORES AS T2 ON T1.CDSCODE = T2.CDS WHERE T2.AVGSCRWRITE > 499 AND CHARTERNUM IS NOT NULL",incorrect
3,17,ERROR,NotSupportedError: Not supported feature: OVER,,SELECT SCHOOLS.CHARTERNUM FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SATSCORES.AVGSCRWRITE > 499 AND SCHOOLS.CHARTERNUM IS NOT NULL ORDER BY SATSCORES.AVGSCRWRITE DESC,"SELECT CHARTERNUM, AVGSCRWRITE, RANK() OVER (ORDER BY AVGSCRWRITE DESC) AS WRITINGSCORERANK FROM SCHOOLS AS T1  INNER JOIN SATSCORES AS T2 ON T1.CDSCODE = T2.CDS WHERE T2.AVGSCRWRITE > 499 AND CHARTERNUM IS NOT NULL",incorrect
1,18,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__CHARTER FUNDING TYPE`,,SELECT COUNT(*) FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.COUNTY = 'FRESNO' AND SCHOOLS.FUNDINGTYPE = 'DIRECTLY FUNDED' AND SATSCORES.NUMTSTTAKR <= 250,SELECT COUNT(T1.CDSCODE) FROM FRPM AS T1 INNER JOIN SATSCORES AS T2 ON T1.CDSCODE = T2.CDS WHERE T1.`CHARTER FUNDING TYPE` = 'DIRECTLY FUNDED' AND T1.`COUNTY NAME` = 'FRESNO' AND T2.NUMTSTTAKR <= 250,correct
2,18,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__CHARTER FUNDING TYPE`,,SELECT COUNT(*) FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.COUNTY = 'FRESNO' AND SCHOOLS.FUNDINGTYPE = 'DIRECTLY FUNDED' AND SATSCORES.NUMTSTTAKR <= 250,SELECT COUNT(T1.CDSCODE) FROM FRPM AS T1 INNER JOIN SATSCORES AS T2 ON T1.CDSCODE = T2.CDS WHERE T1.`CHARTER FUNDING TYPE` = 'DIRECTLY FUNDED' AND T1.`COUNTY NAME` = 'FRESNO' AND T2.NUMTSTTAKR <= 250,correct
3,18,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__CHARTER FUNDING TYPE`,,SELECT COUNT(*) FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.COUNTY = 'FRESNO' AND SCHOOLS.FUNDINGTYPE = 'DIRECTLY FUNDED' AND SATSCORES.NUMTSTTAKR <= 250,SELECT COUNT(T1.CDSCODE) FROM FRPM AS T1 INNER JOIN SATSCORES AS T2 ON T1.CDSCODE = T2.CDS WHERE T1.`CHARTER FUNDING TYPE` = 'DIRECTLY FUNDED' AND T1.`COUNTY NAME` = 'FRESNO' AND T2.NUMTSTTAKR <= 250,correct
1,19,True,,0.090638,SELECT SCHOOLS.PHONE FROM SATSCORES INNER JOIN SCHOOLS ON SATSCORES.CDS = SCHOOLS.CDSCODE ORDER BY SATSCORES.AVGSCRMATH DESC LIMIT 1,SELECT T1.PHONE FROM SCHOOLS AS T1 INNER JOIN SATSCORES AS T2 ON T1.CDSCODE = T2.CDS ORDER BY T2.AVGSCRMATH DESC LIMIT 1,correct
1,20,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LOW_GRADE`,,SELECT COUNT(*) FROM SCHOOLS WHERE COUNTY = 'AMADOR' AND LOW_GRADE = '9' AND HIGH_GRADE = '12',SELECT COUNT(T1.`SCHOOL NAME`) FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.COUNTY = 'AMADOR' AND T1.`LOW GRADE` = 9 AND T1.`HIGH GRADE` = 12,incorrect
2,20,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LOW_GRADE`,,SELECT COUNT(*) FROM SCHOOLS WHERE COUNTY = 'AMADOR' AND LOW_GRADE = '9' AND HIGH_GRADE = '12',SELECT COUNT(T1.`SCHOOL NAME`) FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.COUNTY = 'AMADOR' AND T1.`LOW GRADE` = 9 AND T1.`HIGH GRADE` = 12,incorrect
3,20,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LOW_GRADE`,,SELECT COUNT(*) FROM SCHOOLS WHERE COUNTY = 'AMADOR' AND LOW_GRADE = '9' AND HIGH_GRADE = '12',SELECT COUNT(T1.`SCHOOL NAME`) FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.COUNTY = 'AMADOR' AND T1.`LOW GRADE` = 9 AND T1.`HIGH GRADE` = 12,incorrect
1,21,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FREE MEAL COUNT (K-12)`,,SELECT COUNT(*) FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE SCHOOLS.COUNTY = 'LOS ANGELES' AND FRPM.`FREE MEAL COUNT (K-12)` > 500 AND FRPM.`FRPM COUNT (K-12)` < 700;,SELECT COUNT(CDSCODE) FROM FRPM WHERE `COUNTY NAME` = 'LOS ANGELES' AND `FREE MEAL COUNT (K-12)` > 500 AND `FRPM COUNT (K-12)`< 700,correct
2,21,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FREE MEAL COUNT (K-12)`,,SELECT COUNT(*) FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE SCHOOLS.COUNTY = 'LOS ANGELES' AND FRPM.`FREE MEAL COUNT (K-12)` > 500 AND FRPM.`FRPM COUNT (K-12)` < 700;,SELECT COUNT(CDSCODE) FROM FRPM WHERE `COUNTY NAME` = 'LOS ANGELES' AND `FREE MEAL COUNT (K-12)` > 500 AND `FRPM COUNT (K-12)`< 700,correct
3,21,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FREE MEAL COUNT (K-12)`,,SELECT COUNT(*) FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE SCHOOLS.COUNTY = 'LOS ANGELES' AND FRPM.`FREE MEAL COUNT (K-12)` > 500 AND FRPM.`FRPM COUNT (K-12)` < 700;,SELECT COUNT(CDSCODE) FROM FRPM WHERE `COUNTY NAME` = 'LOS ANGELES' AND `FREE MEAL COUNT (K-12)` > 500 AND `FRPM COUNT (K-12)`< 700,correct
1,22,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE FRPM (
	CDSCODE VARCHAR(20),
	ACADEMIC_YEAR VARCHAR(20),
	COUNTY_CODE VARCHAR(20),
	DISTRICT_CODE VARCHAR(20),
	SCHOOL_CODE VARCHAR(20),
	COUNTY_NAME VARCHAR(20),
	DISTRICT_NAME VARCHAR(20),
	SCHOOL_NAME VARCHAR(20),
	DISTRICT_TYPE VARCHAR(20),
	SCHOOL_TYPE VARCHAR(20),
	EDUCATIONAL_OPTION_TYPE VARCHAR(20),
	NSLP_PROVISION_STATUS VARCHAR(20),
	CHARTER_SCHOOL_YN INTEGER,
	CHARTER_SCHOOL_NUMBER VARCHAR(20),
	CHARTER_FUNDING_TYPE VARCHAR(20),
	IRC INTEGER,
	LOW_GRADE VARCHAR(20),
	HIGH_GRADE VARCHAR(20),
	ENROLLMENT_K12 INTEGER,
	FREE_MEAL_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FREE_K12 INTEGER,
	FRPM_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FRPM_K12 INTEGER,
	ENROLLMENT_AGES_5_17 INTEGER,
	FREE_MEAL_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FREE_AGES_5_17 INTEGER,
	FRPM_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FRPM_AGES_5_17 INTEGER,
	CALPADS_FALL1_CERTIFICATION_STATUS INTEGER
);
INSERT INTO FRPM VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
CREATE TABLE SATSCORES (
	CDS VARCHAR(20),
	RTYPE VARCHAR(20),
	SNAME VARCHAR(20),
	DNAME VARCHAR(20),
	CNAME VARCHAR(20),
	ENROLL12 INTEGER,
	NUMTSTTAKR INTEGER,
	AVGSCRREAD INTEGER,
	AVGSCRMATH INTEGER,
	AVGSCRWRITE INTEGER,
	NUMGE1500 INTEGER
);
INSERT INTO SATSCORES VALUES ('2147483648', '2147483648', NULL, '2147483648', 'CONTRA COSTA', 2, 3, 4, 5, 6, 7);
CREATE TABLE SCHOOLS (
	CDSCODE VARCHAR(20),
	NCESDIST VARCHAR(20),
	NCESSCHOOL VARCHAR(20),
	STATUSTYPE VARCHAR(20),
	COUNTY VARCHAR(20),
	DISTRICT VARCHAR(20),
	SCHOOL VARCHAR(20),
	STREET VARCHAR(20),
	STREETABR VARCHAR(20),
	CITY VARCHAR(20),
	ZIP VARCHAR(20),
	STATE VARCHAR(20),
	MAILSTREET VARCHAR(20),
	MAILSTRABR VARCHAR(20),
	MAILCITY VARCHAR(20),
	MAILZIP VARCHAR(20),
	MAILSTATE VARCHAR(20),
	PHONE VARCHAR(20),
	EXT VARCHAR(20),
	WEBSITE VARCHAR(20),
	OPENDATE DATE,
	CLOSEDDATE DATE,
	CHARTER INTEGER,
	CHARTERNUM VARCHAR(20),
	FUNDINGTYPE VARCHAR(20),
	DOC VARCHAR(20),
	DOCTYPE VARCHAR(20),
	SOC VARCHAR(20),
	SOCTYPE VARCHAR(20),
	EDOPSCODE VARCHAR(20),
	EDOPSNAME VARCHAR(20),
	EILCODE VARCHAR(20),
	EILNAME VARCHAR(20),
	GSOFFERED VARCHAR(20),
	GSSERVED VARCHAR(20),
	VIRTUAL VARCHAR(20),
	MAGNET INTEGER,
	LATITUDE INTEGER,
	LONGITUDE INTEGER,
	ADMFNAME1 VARCHAR(20),
	ADMLNAME1 VARCHAR(20),
	ADMEMAIL1 VARCHAR(20),
	ADMFNAME2 VARCHAR(20),
	ADMLNAME2 VARCHAR(20),
	ADMEMAIL2 VARCHAR(20),
	ADMFNAME3 VARCHAR(20),
	ADMLNAME3 VARCHAR(20),
	ADMEMAIL3 VARCHAR(20),
	LASTUPDATE DATE
);
INSERT INTO SCHOOLS VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', '1970-01-01', 8, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 9, 10, 11, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01');
-- ----------sql1------------
-- NULL
SELECT SATSCORES.SNAME FROM SATSCORES INNER JOIN SCHOOLS ON SATSCORES.CDS = SCHOOLS.CDSCODE WHERE SATSCORES.CNAME = 'CONTRA COSTA' ORDER BY SATSCORES.NUMTSTTAKR DESC LIMIT 1;
-- ----------sql2------------
SELECT SNAME FROM SATSCORES WHERE CNAME = 'CONTRA COSTA' AND SNAME IS NOT NULL ORDER BY NUMTSTTAKR DESC LIMIT 1;
",0.0734659999999999,SELECT SATSCORES.SNAME FROM SATSCORES INNER JOIN SCHOOLS ON SATSCORES.CDS = SCHOOLS.CDSCODE WHERE SATSCORES.CNAME = 'CONTRA COSTA' ORDER BY SATSCORES.NUMTSTTAKR DESC LIMIT 1,SELECT SNAME FROM SATSCORES WHERE CNAME = 'CONTRA COSTA' AND SNAME IS NOT NULL ORDER BY NUMTSTTAKR DESC LIMIT 1,incorrect
1,23,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__ENROLLMENT (K-12)`,,"SELECT SCHOOLS.SCHOOL, SCHOOLS.STREET FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE FRPM.`ENROLLMENT (K-12)` - FRPM.`ENROLLMENT (AGES 5-17)` > 30","SELECT T1.SCHOOL, T1.STREET FROM SCHOOLS AS T1 INNER JOIN FRPM AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.`ENROLLMENT (K-12)` - T2.`ENROLLMENT (AGES 5-17)` > 30",correct
2,23,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__ENROLLMENT (K-12)`,,"SELECT SCHOOLS.SCHOOL, SCHOOLS.STREET FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE FRPM.`ENROLLMENT (K-12)` - FRPM.`ENROLLMENT (AGES 5-17)` > 30","SELECT T1.SCHOOL, T1.STREET FROM SCHOOLS AS T1 INNER JOIN FRPM AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.`ENROLLMENT (K-12)` - T2.`ENROLLMENT (AGES 5-17)` > 30",correct
3,23,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__ENROLLMENT (K-12)`,,"SELECT SCHOOLS.SCHOOL, SCHOOLS.STREET FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE FRPM.`ENROLLMENT (K-12)` - FRPM.`ENROLLMENT (AGES 5-17)` > 30","SELECT T1.SCHOOL, T1.STREET FROM SCHOOLS AS T1 INNER JOIN FRPM AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.`ENROLLMENT (K-12)` - T2.`ENROLLMENT (AGES 5-17)` > 30",correct
1,24,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FREE MEAL COUNT (K-12)`,,SELECT SCHOOLS.SCHOOL FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE (FRPM.`FREE MEAL COUNT (K-12)` / FRPM.`ENROLLMENT (K-12)`) > 0.1 AND SATSCORES.NUMGE1500 >= 1500,SELECT T2.`SCHOOL NAME` FROM SATSCORES AS T1 INNER JOIN FRPM AS T2 ON T1.CDS = T2.CDSCODE WHERE CAST(T2.`FREE MEAL COUNT (K-12)` AS REAL) / T2.`ENROLLMENT (K-12)` > 0.1 AND T1.NUMGE1500 > 0,incorrect
2,24,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FREE MEAL COUNT (K-12)`,,SELECT SCHOOLS.SCHOOL FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE (FRPM.`FREE MEAL COUNT (K-12)` / FRPM.`ENROLLMENT (K-12)`) > 0.1 AND SATSCORES.NUMGE1500 >= 1500,SELECT T2.`SCHOOL NAME` FROM SATSCORES AS T1 INNER JOIN FRPM AS T2 ON T1.CDS = T2.CDSCODE WHERE CAST(T2.`FREE MEAL COUNT (K-12)` AS REAL) / T2.`ENROLLMENT (K-12)` > 0.1 AND T1.NUMGE1500 > 0,incorrect
3,24,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FREE MEAL COUNT (K-12)`,,SELECT SCHOOLS.SCHOOL FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE (FRPM.`FREE MEAL COUNT (K-12)` / FRPM.`ENROLLMENT (K-12)`) > 0.1 AND SATSCORES.NUMGE1500 >= 1500,SELECT T2.`SCHOOL NAME` FROM SATSCORES AS T1 INNER JOIN FRPM AS T2 ON T1.CDS = T2.CDSCODE WHERE CAST(T2.`FREE MEAL COUNT (K-12)` AS REAL) / T2.`ENROLLMENT (K-12)` > 0.1 AND T1.NUMGE1500 > 0,incorrect
1,25,ERROR,"NotImplementedError: {'like': ['T2__DISTRICT NAME', {'literal': 'RIVERSIDE%'}]}",,"SELECT SCHOOLS.SCHOOL, SCHOOLS.FUNDINGTYPE FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.COUNTY = 'RIVERSIDE' GROUP BY SCHOOLS.SCHOOL HAVING AVG(SATSCORES.AVGSCRMATH) > 400","SELECT T1.SNAME, T2.`CHARTER FUNDING TYPE` FROM SATSCORES AS T1 INNER JOIN FRPM AS T2 ON T1.CDS = T2.CDSCODE WHERE T2.`DISTRICT NAME` LIKE 'RIVERSIDE%' GROUP BY T1.SNAME, T2.`CHARTER FUNDING TYPE` HAVING CAST(SUM(T1.AVGSCRMATH) AS REAL) / COUNT(T1.CDS) > 400",incorrect
2,25,ERROR,"NotImplementedError: {'like': ['T2__DISTRICT NAME', {'literal': 'RIVERSIDE%'}]}",,"SELECT SCHOOLS.SCHOOL, SCHOOLS.FUNDINGTYPE FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.COUNTY = 'RIVERSIDE' GROUP BY SCHOOLS.SCHOOL HAVING AVG(SATSCORES.AVGSCRMATH) > 400","SELECT T1.SNAME, T2.`CHARTER FUNDING TYPE` FROM SATSCORES AS T1 INNER JOIN FRPM AS T2 ON T1.CDS = T2.CDSCODE WHERE T2.`DISTRICT NAME` LIKE 'RIVERSIDE%' GROUP BY T1.SNAME, T2.`CHARTER FUNDING TYPE` HAVING CAST(SUM(T1.AVGSCRMATH) AS REAL) / COUNT(T1.CDS) > 400",incorrect
3,25,ERROR,"NotImplementedError: {'like': ['T2__DISTRICT NAME', {'literal': 'RIVERSIDE%'}]}",,"SELECT SCHOOLS.SCHOOL, SCHOOLS.FUNDINGTYPE FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.COUNTY = 'RIVERSIDE' GROUP BY SCHOOLS.SCHOOL HAVING AVG(SATSCORES.AVGSCRMATH) > 400","SELECT T1.SNAME, T2.`CHARTER FUNDING TYPE` FROM SATSCORES AS T1 INNER JOIN FRPM AS T2 ON T1.CDS = T2.CDSCODE WHERE T2.`DISTRICT NAME` LIKE 'RIVERSIDE%' GROUP BY T1.SNAME, T2.`CHARTER FUNDING TYPE` HAVING CAST(SUM(T1.AVGSCRMATH) AS REAL) / COUNT(T1.CDS) > 400",incorrect
1,26,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FRPM COUNT (AGES 5-17)`,,"SELECT SCHOOLS.SCHOOL, SCHOOLS.STREET, SCHOOLS.CITY, SCHOOLS.STATE, SCHOOLS.ZIP FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.COUNTY = 'MONTEREY' AND SCHOOLS.SCHOOL = 'HIGH SCHOOL' AND FRPM.`FRPM COUNT (AGES 5-17)` > 800","SELECT T1.`SCHOOL NAME`, T2.STREET, T2.CITY, T2.STATE, T2.ZIP FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.COUNTY = 'MONTEREY' AND T1.`FREE MEAL COUNT (AGES 5-17)` > 800 AND T1.`SCHOOL TYPE` = 'HIGH SCHOOLS (PUBLIC)'",incorrect
2,26,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FRPM COUNT (AGES 5-17)`,,"SELECT SCHOOLS.SCHOOL, SCHOOLS.STREET, SCHOOLS.CITY, SCHOOLS.STATE, SCHOOLS.ZIP FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.COUNTY = 'MONTEREY' AND SCHOOLS.SCHOOL = 'HIGH SCHOOL' AND FRPM.`FRPM COUNT (AGES 5-17)` > 800","SELECT T1.`SCHOOL NAME`, T2.STREET, T2.CITY, T2.STATE, T2.ZIP FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.COUNTY = 'MONTEREY' AND T1.`FREE MEAL COUNT (AGES 5-17)` > 800 AND T1.`SCHOOL TYPE` = 'HIGH SCHOOLS (PUBLIC)'",incorrect
3,26,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FRPM COUNT (AGES 5-17)`,,"SELECT SCHOOLS.SCHOOL, SCHOOLS.STREET, SCHOOLS.CITY, SCHOOLS.STATE, SCHOOLS.ZIP FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.COUNTY = 'MONTEREY' AND SCHOOLS.SCHOOL = 'HIGH SCHOOL' AND FRPM.`FRPM COUNT (AGES 5-17)` > 800","SELECT T1.`SCHOOL NAME`, T2.STREET, T2.CITY, T2.STATE, T2.ZIP FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.COUNTY = 'MONTEREY' AND T1.`FREE MEAL COUNT (AGES 5-17)` > 800 AND T1.`SCHOOL TYPE` = 'HIGH SCHOOLS (PUBLIC)'",incorrect
1,27,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T2__OPENDATE']}",,"SELECT SCHOOLS.SCHOOL, AVG(SATSCORES.AVGSCRWRITE), SCHOOLS.PHONE FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.OPENDATE > '1991' OR SCHOOLS.CLOSEDDATE < '2000' GROUP BY SCHOOLS.SCHOOL, SCHOOLS.PHONE;","SELECT T2.SCHOOL, T1.AVGSCRWRITE, T2.PHONE FROM SCHOOLS AS T2 LEFT JOIN SATSCORES AS T1 ON T2.CDSCODE = T1.CDS WHERE STRFTIME('%Y', T2.OPENDATE) > '1991' OR STRFTIME('%Y', T2.CLOSEDDATE) < '2000'",correct
2,27,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T2__OPENDATE']}",,"SELECT SCHOOLS.SCHOOL, AVG(SATSCORES.AVGSCRWRITE), SCHOOLS.PHONE FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.OPENDATE > '1991' OR SCHOOLS.CLOSEDDATE < '2000' GROUP BY SCHOOLS.SCHOOL, SCHOOLS.PHONE;","SELECT T2.SCHOOL, T1.AVGSCRWRITE, T2.PHONE FROM SCHOOLS AS T2 LEFT JOIN SATSCORES AS T1 ON T2.CDSCODE = T1.CDS WHERE STRFTIME('%Y', T2.OPENDATE) > '1991' OR STRFTIME('%Y', T2.CLOSEDDATE) < '2000'",correct
3,27,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T2__OPENDATE']}",,"SELECT SCHOOLS.SCHOOL, AVG(SATSCORES.AVGSCRWRITE), SCHOOLS.PHONE FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.OPENDATE > '1991' OR SCHOOLS.CLOSEDDATE < '2000' GROUP BY SCHOOLS.SCHOOL, SCHOOLS.PHONE;","SELECT T2.SCHOOL, T1.AVGSCRWRITE, T2.PHONE FROM SCHOOLS AS T2 LEFT JOIN SATSCORES AS T1 ON T2.CDSCODE = T1.CDS WHERE STRFTIME('%Y', T2.OPENDATE) > '1991' OR STRFTIME('%Y', T2.CLOSEDDATE) < '2000'",correct
1,28,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__ENROLLMENT (K-12)`,,"SELECT SCHOOLS.SCHOOL, SCHOOLS.DOCTYPE FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.FUNDINGTYPE = 'LOCALLY FUNDED' AND (FRPM.`ENROLLMENT (K-12)` - FRPM.`ENROLLMENT (AGES 5-17)`) > (SELECT AVG(FRPM.`ENROLLMENT (K-12)` - FRPM.`ENROLLMENT (AGES 5-17)`) FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.FUNDINGTYPE = 'LOCALLY FUNDED')","SELECT T2.SCHOOL, T2.DOC FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.FUNDINGTYPE = 'LOCALLY FUNDED' AND (T1.`ENROLLMENT (K-12)` - T1.`ENROLLMENT (AGES 5-17)`) > (SELECT AVG(T3.`ENROLLMENT (K-12)` - T3.`ENROLLMENT (AGES 5-17)`) FROM FRPM AS T3 INNER JOIN SCHOOLS AS T4 ON T3.CDSCODE = T4.CDSCODE WHERE T4.FUNDINGTYPE = 'LOCALLY FUNDED')",incorrect
2,28,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__ENROLLMENT (K-12)`,,"SELECT SCHOOLS.SCHOOL, SCHOOLS.DOCTYPE FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.FUNDINGTYPE = 'LOCALLY FUNDED' AND (FRPM.`ENROLLMENT (K-12)` - FRPM.`ENROLLMENT (AGES 5-17)`) > (SELECT AVG(FRPM.`ENROLLMENT (K-12)` - FRPM.`ENROLLMENT (AGES 5-17)`) FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.FUNDINGTYPE = 'LOCALLY FUNDED')","SELECT T2.SCHOOL, T2.DOC FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.FUNDINGTYPE = 'LOCALLY FUNDED' AND (T1.`ENROLLMENT (K-12)` - T1.`ENROLLMENT (AGES 5-17)`) > (SELECT AVG(T3.`ENROLLMENT (K-12)` - T3.`ENROLLMENT (AGES 5-17)`) FROM FRPM AS T3 INNER JOIN SCHOOLS AS T4 ON T3.CDSCODE = T4.CDSCODE WHERE T4.FUNDINGTYPE = 'LOCALLY FUNDED')",incorrect
3,28,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__ENROLLMENT (K-12)`,,"SELECT SCHOOLS.SCHOOL, SCHOOLS.DOCTYPE FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.FUNDINGTYPE = 'LOCALLY FUNDED' AND (FRPM.`ENROLLMENT (K-12)` - FRPM.`ENROLLMENT (AGES 5-17)`) > (SELECT AVG(FRPM.`ENROLLMENT (K-12)` - FRPM.`ENROLLMENT (AGES 5-17)`) FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.FUNDINGTYPE = 'LOCALLY FUNDED')","SELECT T2.SCHOOL, T2.DOC FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.FUNDINGTYPE = 'LOCALLY FUNDED' AND (T1.`ENROLLMENT (K-12)` - T1.`ENROLLMENT (AGES 5-17)`) > (SELECT AVG(T3.`ENROLLMENT (K-12)` - T3.`ENROLLMENT (AGES 5-17)`) FROM FRPM AS T3 INNER JOIN SCHOOLS AS T4 ON T3.CDSCODE = T4.CDSCODE WHERE T4.FUNDINGTYPE = 'LOCALLY FUNDED')",incorrect
1,29,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__ENROLLMENT (K-12)`,,SELECT SCHOOLS.OPENDATE FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE ORDER BY FRPM.`ENROLLMENT (K-12)` DESC LIMIT 1,SELECT T2.OPENDATE FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE ORDER BY T1.`ENROLLMENT (K-12)` DESC LIMIT 1,incorrect
2,29,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__ENROLLMENT (K-12)`,,SELECT SCHOOLS.OPENDATE FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE ORDER BY FRPM.`ENROLLMENT (K-12)` DESC LIMIT 1,SELECT T2.OPENDATE FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE ORDER BY T1.`ENROLLMENT (K-12)` DESC LIMIT 1,incorrect
3,29,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__ENROLLMENT (K-12)`,,SELECT SCHOOLS.OPENDATE FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE ORDER BY FRPM.`ENROLLMENT (K-12)` DESC LIMIT 1,SELECT T2.OPENDATE FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE ORDER BY T1.`ENROLLMENT (K-12)` DESC LIMIT 1,incorrect
1,30,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SCHOOLS__ENROLLMENT`,,SELECT SCHOOLS.CITY FROM SCHOOLS ORDER BY SCHOOLS.ENROLLMENT ASC LIMIT 5,SELECT T2.CITY FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE GROUP BY T2.CITY ORDER BY SUM(T1.`ENROLLMENT (K-12)`) ASC LIMIT 5,incorrect
2,30,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SCHOOLS__ENROLLMENT`,,SELECT SCHOOLS.CITY FROM SCHOOLS ORDER BY SCHOOLS.ENROLLMENT ASC LIMIT 5,SELECT T2.CITY FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE GROUP BY T2.CITY ORDER BY SUM(T1.`ENROLLMENT (K-12)`) ASC LIMIT 5,incorrect
3,30,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SCHOOLS__ENROLLMENT`,,SELECT SCHOOLS.CITY FROM SCHOOLS ORDER BY SCHOOLS.ENROLLMENT ASC LIMIT 5,SELECT T2.CITY FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE GROUP BY T2.CITY ORDER BY SUM(T1.`ENROLLMENT (K-12)`) ASC LIMIT 5,incorrect
1,31,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT `SCHOOL NAME`, (`FREE MEAL COUNT (K-12)` / `ENROLLMENT (K-12)`) * 100 AS 'ELIGIBLE FREE RATE' FROM FRPM ORDER BY `ENROLLMENT (K-12)` DESC LIMIT 11 WHERE `SCHOOL NAME` IN ('10TH', '11TH')`",,"SELECT `SCHOOL NAME`, (`FREE MEAL COUNT (K-12)` / `ENROLLMENT (K-12)`) * 100 AS 'ELIGIBLE FREE RATE' FROM FRPM ORDER BY `ENROLLMENT (K-12)` DESC LIMIT 11 WHERE `SCHOOL NAME` IN ('10TH', '11TH')","SELECT CAST(`FREE MEAL COUNT (K-12)` AS REAL) / `ENROLLMENT (K-12)` FROM FRPM ORDER BY `ENROLLMENT (K-12)` DESC LIMIT 9, 2",incorrect
2,31,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT `SCHOOL NAME`, (`FREE MEAL COUNT (K-12)` / `ENROLLMENT (K-12)`) * 100 AS 'ELIGIBLE FREE RATE' FROM FRPM ORDER BY `ENROLLMENT (K-12)` DESC LIMIT 11 WHERE `SCHOOL NAME` IN ('10TH', '11TH')`",,"SELECT `SCHOOL NAME`, (`FREE MEAL COUNT (K-12)` / `ENROLLMENT (K-12)`) * 100 AS 'ELIGIBLE FREE RATE' FROM FRPM ORDER BY `ENROLLMENT (K-12)` DESC LIMIT 11 WHERE `SCHOOL NAME` IN ('10TH', '11TH')","SELECT CAST(`FREE MEAL COUNT (K-12)` AS REAL) / `ENROLLMENT (K-12)` FROM FRPM ORDER BY `ENROLLMENT (K-12)` DESC LIMIT 9, 2",incorrect
3,31,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT `SCHOOL NAME`, (`FREE MEAL COUNT (K-12)` / `ENROLLMENT (K-12)`) * 100 AS 'ELIGIBLE FREE RATE' FROM FRPM ORDER BY `ENROLLMENT (K-12)` DESC LIMIT 11 WHERE `SCHOOL NAME` IN ('10TH', '11TH')`",,"SELECT `SCHOOL NAME`, (`FREE MEAL COUNT (K-12)` / `ENROLLMENT (K-12)`) * 100 AS 'ELIGIBLE FREE RATE' FROM FRPM ORDER BY `ENROLLMENT (K-12)` DESC LIMIT 11 WHERE `SCHOOL NAME` IN ('10TH', '11TH')","SELECT CAST(`FREE MEAL COUNT (K-12)` AS REAL) / `ENROLLMENT (K-12)` FROM FRPM ORDER BY `ENROLLMENT (K-12)` DESC LIMIT 9, 2",incorrect
1,32,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT SCHOOLS.SCHOOL, (FRPM.`FRPM COUNT (K-12)` / FRPM.`ENROLLMENT (K-12)`) AS 'ELIGIBLE FREE OR REDUCED PRICE MEAL RATE' FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE SCHOOLS.SOC = 66 ORDER BY FRPM.`FRPM COUNT (K-12)` DESC LIMIT 5`",,"SELECT SCHOOLS.SCHOOL, (FRPM.`FRPM COUNT (K-12)` / FRPM.`ENROLLMENT (K-12)`) AS 'ELIGIBLE FREE OR REDUCED PRICE MEAL RATE' FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE SCHOOLS.SOC = 66 ORDER BY FRPM.`FRPM COUNT (K-12)` DESC LIMIT 5",SELECT CAST(T1.`FRPM COUNT (K-12)` AS REAL) / T1.`ENROLLMENT (K-12)` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.SOC = 66 ORDER BY T1.`FRPM COUNT (K-12)` DESC LIMIT 5,correct
2,32,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT SCHOOLS.SCHOOL, (FRPM.`FRPM COUNT (K-12)` / FRPM.`ENROLLMENT (K-12)`) AS 'ELIGIBLE FREE OR REDUCED PRICE MEAL RATE' FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE SCHOOLS.SOC = 66 ORDER BY FRPM.`FRPM COUNT (K-12)` DESC LIMIT 5`",,"SELECT SCHOOLS.SCHOOL, (FRPM.`FRPM COUNT (K-12)` / FRPM.`ENROLLMENT (K-12)`) AS 'ELIGIBLE FREE OR REDUCED PRICE MEAL RATE' FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE SCHOOLS.SOC = 66 ORDER BY FRPM.`FRPM COUNT (K-12)` DESC LIMIT 5",SELECT CAST(T1.`FRPM COUNT (K-12)` AS REAL) / T1.`ENROLLMENT (K-12)` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.SOC = 66 ORDER BY T1.`FRPM COUNT (K-12)` DESC LIMIT 5,correct
3,32,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT SCHOOLS.SCHOOL, (FRPM.`FRPM COUNT (K-12)` / FRPM.`ENROLLMENT (K-12)`) AS 'ELIGIBLE FREE OR REDUCED PRICE MEAL RATE' FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE SCHOOLS.SOC = 66 ORDER BY FRPM.`FRPM COUNT (K-12)` DESC LIMIT 5`",,"SELECT SCHOOLS.SCHOOL, (FRPM.`FRPM COUNT (K-12)` / FRPM.`ENROLLMENT (K-12)`) AS 'ELIGIBLE FREE OR REDUCED PRICE MEAL RATE' FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE SCHOOLS.SOC = 66 ORDER BY FRPM.`FRPM COUNT (K-12)` DESC LIMIT 5",SELECT CAST(T1.`FRPM COUNT (K-12)` AS REAL) / T1.`ENROLLMENT (K-12)` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.SOC = 66 ORDER BY T1.`FRPM COUNT (K-12)` DESC LIMIT 5,correct
1,33,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FREE MEAL COUNT (AGES 5-17)`,,"SELECT SCHOOLS.SCHOOL, SCHOOLS.WEBSITE FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE FRPM.`FREE MEAL COUNT (AGES 5-17)` BETWEEN 1900 AND 2000","SELECT T2.WEBSITE, T1.`SCHOOL NAME` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T1.`FREE MEAL COUNT (AGES 5-17)` BETWEEN 1900 AND 2000 AND T2.WEBSITE IS NOT NULL",incorrect
2,33,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FREE MEAL COUNT (AGES 5-17)`,,"SELECT SCHOOLS.SCHOOL, SCHOOLS.WEBSITE FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE FRPM.`FREE MEAL COUNT (AGES 5-17)` BETWEEN 1900 AND 2000","SELECT T2.WEBSITE, T1.`SCHOOL NAME` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T1.`FREE MEAL COUNT (AGES 5-17)` BETWEEN 1900 AND 2000 AND T2.WEBSITE IS NOT NULL",incorrect
3,33,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FREE MEAL COUNT (AGES 5-17)`,,"SELECT SCHOOLS.SCHOOL, SCHOOLS.WEBSITE FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE FRPM.`FREE MEAL COUNT (AGES 5-17)` BETWEEN 1900 AND 2000","SELECT T2.WEBSITE, T1.`SCHOOL NAME` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T1.`FREE MEAL COUNT (AGES 5-17)` BETWEEN 1900 AND 2000 AND T2.WEBSITE IS NOT NULL",incorrect
1,34,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FREE MEAL COUNT (AGES 5-17)`,,"SELECT CAST(SUM(FRPM.`FREE MEAL COUNT (AGES 5-17)`), REAL) / SUM(FRPM.`ENROLLMENT (AGES 5-17)`) FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.ADMFNAME1 = 'KACEY' AND SCHOOLS.ADMLNAME1 = 'GIBSON';",SELECT CAST(T2.`FREE MEAL COUNT (AGES 5-17)` AS REAL) / T2.`ENROLLMENT (AGES 5-17)` FROM SCHOOLS AS T1 INNER JOIN FRPM AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T1.ADMFNAME1 = 'KACEY' AND T1.ADMLNAME1 = 'GIBSON',correct
2,34,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FREE MEAL COUNT (AGES 5-17)`,,"SELECT CAST(SUM(FRPM.`FREE MEAL COUNT (AGES 5-17)`), REAL) / SUM(FRPM.`ENROLLMENT (AGES 5-17)`) FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.ADMFNAME1 = 'KACEY' AND SCHOOLS.ADMLNAME1 = 'GIBSON';",SELECT CAST(T2.`FREE MEAL COUNT (AGES 5-17)` AS REAL) / T2.`ENROLLMENT (AGES 5-17)` FROM SCHOOLS AS T1 INNER JOIN FRPM AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T1.ADMFNAME1 = 'KACEY' AND T1.ADMLNAME1 = 'GIBSON',correct
3,34,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FREE MEAL COUNT (AGES 5-17)`,,"SELECT CAST(SUM(FRPM.`FREE MEAL COUNT (AGES 5-17)`), REAL) / SUM(FRPM.`ENROLLMENT (AGES 5-17)`) FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.ADMFNAME1 = 'KACEY' AND SCHOOLS.ADMLNAME1 = 'GIBSON';",SELECT CAST(T2.`FREE MEAL COUNT (AGES 5-17)` AS REAL) / T2.`ENROLLMENT (AGES 5-17)` FROM SCHOOLS AS T1 INNER JOIN FRPM AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T1.ADMFNAME1 = 'KACEY' AND T1.ADMLNAME1 = 'GIBSON',correct
1,35,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__CHARTER SCHOOL (Y/N)`,,SELECT SCHOOLS.ADMEMAIL1 FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE FRPM.`CHARTER SCHOOL (Y/N)` = 1 ORDER BY FRPM.`ENROLLMENT (K-12)` ASC LIMIT 1,SELECT T2.ADMEMAIL1 FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T1.`CHARTER SCHOOL (Y/N)` = 1 ORDER BY T1.`ENROLLMENT (K-12)` ASC LIMIT 1,correct
2,35,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__CHARTER SCHOOL (Y/N)`,,SELECT SCHOOLS.ADMEMAIL1 FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE FRPM.`CHARTER SCHOOL (Y/N)` = 1 ORDER BY FRPM.`ENROLLMENT (K-12)` ASC LIMIT 1,SELECT T2.ADMEMAIL1 FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T1.`CHARTER SCHOOL (Y/N)` = 1 ORDER BY T1.`ENROLLMENT (K-12)` ASC LIMIT 1,correct
3,35,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__CHARTER SCHOOL (Y/N)`,,SELECT SCHOOLS.ADMEMAIL1 FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE FRPM.`CHARTER SCHOOL (Y/N)` = 1 ORDER BY FRPM.`ENROLLMENT (K-12)` ASC LIMIT 1,SELECT T2.ADMEMAIL1 FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T1.`CHARTER SCHOOL (Y/N)` = 1 ORDER BY T1.`ENROLLMENT (K-12)` ASC LIMIT 1,correct
1,36,True,,0.095371,"SELECT SCHOOLS.ADMFNAME1, SCHOOLS.ADMLNAME1, SCHOOLS.ADMFNAME2, SCHOOLS.ADMLNAME2, SCHOOLS.ADMFNAME3, SCHOOLS.ADMLNAME3 FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS ORDER BY SATSCORES.NUMGE1500 DESC LIMIT 1","SELECT T2.ADMFNAME1, T2.ADMLNAME1, T2.ADMFNAME2, T2.ADMLNAME2, T2.ADMFNAME3, T2.ADMLNAME3 FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE ORDER BY T1.NUMGE1500 DESC LIMIT 1",correct
1,37,ERROR,NotImplementedError: {'real': {}},,"SELECT SCHOOLS.STREET, SCHOOLS.CITY, SCHOOLS.ZIP, SCHOOLS.STATE FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS ORDER BY (SATSCORES.NUMGE1500 / SATSCORES.NUMTSTTAKR) ASC LIMIT 1","SELECT T2.STREET, T2.CITY, T2.STATE, T2.ZIP FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE ORDER BY CAST(T1.NUMGE1500 AS REAL) / T1.NUMTSTTAKR ASC LIMIT 1",incorrect
2,37,ERROR,NotImplementedError: {'real': {}},,"SELECT SCHOOLS.STREET, SCHOOLS.CITY, SCHOOLS.ZIP, SCHOOLS.STATE FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS ORDER BY (SATSCORES.NUMGE1500 / SATSCORES.NUMTSTTAKR) ASC LIMIT 1","SELECT T2.STREET, T2.CITY, T2.STATE, T2.ZIP FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE ORDER BY CAST(T1.NUMGE1500 AS REAL) / T1.NUMTSTTAKR ASC LIMIT 1",incorrect
3,37,ERROR,NotImplementedError: {'real': {}},,"SELECT SCHOOLS.STREET, SCHOOLS.CITY, SCHOOLS.ZIP, SCHOOLS.STATE FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS ORDER BY (SATSCORES.NUMGE1500 / SATSCORES.NUMTSTTAKR) ASC LIMIT 1","SELECT T2.STREET, T2.CITY, T2.STATE, T2.ZIP FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE ORDER BY CAST(T1.NUMGE1500 AS REAL) / T1.NUMTSTTAKR ASC LIMIT 1",incorrect
1,38,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE FRPM (
	CDSCODE VARCHAR(20),
	ACADEMIC_YEAR VARCHAR(20),
	COUNTY_CODE VARCHAR(20),
	DISTRICT_CODE VARCHAR(20),
	SCHOOL_CODE VARCHAR(20),
	COUNTY_NAME VARCHAR(20),
	DISTRICT_NAME VARCHAR(20),
	SCHOOL_NAME VARCHAR(20),
	DISTRICT_TYPE VARCHAR(20),
	SCHOOL_TYPE VARCHAR(20),
	EDUCATIONAL_OPTION_TYPE VARCHAR(20),
	NSLP_PROVISION_STATUS VARCHAR(20),
	CHARTER_SCHOOL_YN INTEGER,
	CHARTER_SCHOOL_NUMBER VARCHAR(20),
	CHARTER_FUNDING_TYPE VARCHAR(20),
	IRC INTEGER,
	LOW_GRADE VARCHAR(20),
	HIGH_GRADE VARCHAR(20),
	ENROLLMENT_K12 INTEGER,
	FREE_MEAL_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FREE_K12 INTEGER,
	FRPM_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FRPM_K12 INTEGER,
	ENROLLMENT_AGES_5_17 INTEGER,
	FREE_MEAL_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FREE_AGES_5_17 INTEGER,
	FRPM_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FRPM_AGES_5_17 INTEGER,
	CALPADS_FALL1_CERTIFICATION_STATUS INTEGER
);
INSERT INTO FRPM VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
CREATE TABLE SATSCORES (
	CDS VARCHAR(20),
	RTYPE VARCHAR(20),
	SNAME VARCHAR(20),
	DNAME VARCHAR(20),
	CNAME VARCHAR(20),
	ENROLL12 INTEGER,
	NUMTSTTAKR INTEGER,
	AVGSCRREAD INTEGER,
	AVGSCRMATH INTEGER,
	AVGSCRWRITE INTEGER,
	NUMGE1500 INTEGER
);
INSERT INTO SATSCORES VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 6, 2000, 7, 8, 9, 10);
CREATE TABLE SCHOOLS (
	CDSCODE VARCHAR(20),
	NCESDIST VARCHAR(20),
	NCESSCHOOL VARCHAR(20),
	STATUSTYPE VARCHAR(20),
	COUNTY VARCHAR(20),
	DISTRICT VARCHAR(20),
	SCHOOL VARCHAR(20),
	STREET VARCHAR(20),
	STREETABR VARCHAR(20),
	CITY VARCHAR(20),
	ZIP VARCHAR(20),
	STATE VARCHAR(20),
	MAILSTREET VARCHAR(20),
	MAILSTRABR VARCHAR(20),
	MAILCITY VARCHAR(20),
	MAILZIP VARCHAR(20),
	MAILSTATE VARCHAR(20),
	PHONE VARCHAR(20),
	EXT VARCHAR(20),
	WEBSITE VARCHAR(20),
	OPENDATE DATE,
	CLOSEDDATE DATE,
	CHARTER INTEGER,
	CHARTERNUM VARCHAR(20),
	FUNDINGTYPE VARCHAR(20),
	DOC VARCHAR(20),
	DOCTYPE VARCHAR(20),
	SOC VARCHAR(20),
	SOCTYPE VARCHAR(20),
	EDOPSCODE VARCHAR(20),
	EDOPSNAME VARCHAR(20),
	EILCODE VARCHAR(20),
	EILNAME VARCHAR(20),
	GSOFFERED VARCHAR(20),
	GSSERVED VARCHAR(20),
	VIRTUAL VARCHAR(20),
	MAGNET INTEGER,
	LATITUDE INTEGER,
	LONGITUDE INTEGER,
	ADMFNAME1 VARCHAR(20),
	ADMLNAME1 VARCHAR(20),
	ADMEMAIL1 VARCHAR(20),
	ADMFNAME2 VARCHAR(20),
	ADMLNAME2 VARCHAR(20),
	ADMEMAIL2 VARCHAR(20),
	ADMFNAME3 VARCHAR(20),
	ADMLNAME3 VARCHAR(20),
	ADMEMAIL3 VARCHAR(20),
	LASTUPDATE DATE
);
INSERT INTO SCHOOLS VALUES ('2147483648', '2147483648', '2147483648', '2147483648', 'LOS ANGELES', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', '1970-01-01', 2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 3, 4, 5, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01');
-- ----------sql1------------
SELECT SCHOOLS.WEBSITE FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.COUNTY = 'LOS ANGELES COUNTY' AND SATSCORES.NUMTSTTAKR > 2000 AND SATSCORES.NUMTSTTAKR < 3000;
-- ----------sql2------------
-- 2147483648
SELECT T2.WEBSITE FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE WHERE T1.NUMTSTTAKR BETWEEN 2000 AND 3000 AND T2.COUNTY = 'LOS ANGELES';
",0.143303,SELECT SCHOOLS.WEBSITE FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.COUNTY = 'LOS ANGELES COUNTY' AND SATSCORES.NUMTSTTAKR > 2000 AND SATSCORES.NUMTSTTAKR < 3000,SELECT T2.WEBSITE FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE WHERE T1.NUMTSTTAKR BETWEEN 2000 AND 3000 AND T2.COUNTY = 'LOS ANGELES',correct
1,39,ERROR,NotImplementedError: {'year': 'SCHOOLS__OPENDATE'},,SELECT AVG(SATSCORES.NUMTSTTAKR) FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.COUNTY = 'FRESNO' AND YEAR(SCHOOLS.OPENDATE) = 1980,"SELECT AVG(T1.NUMTSTTAKR) FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE WHERE STRFTIME('%Y', T2.OPENDATE) = '1980' AND T2.COUNTY = 'FRESNO'",correct
2,39,ERROR,NotImplementedError: {'year': 'SCHOOLS__OPENDATE'},,SELECT AVG(SATSCORES.NUMTSTTAKR) FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.COUNTY = 'FRESNO' AND YEAR(SCHOOLS.OPENDATE) = 1980,"SELECT AVG(T1.NUMTSTTAKR) FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE WHERE STRFTIME('%Y', T2.OPENDATE) = '1980' AND T2.COUNTY = 'FRESNO'",correct
3,39,ERROR,NotImplementedError: {'year': 'SCHOOLS__OPENDATE'},,SELECT AVG(SATSCORES.NUMTSTTAKR) FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.COUNTY = 'FRESNO' AND YEAR(SCHOOLS.OPENDATE) = 1980,"SELECT AVG(T1.NUMTSTTAKR) FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE WHERE STRFTIME('%Y', T2.OPENDATE) = '1980' AND T2.COUNTY = 'FRESNO'",correct
1,40,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE FRPM (
	CDSCODE VARCHAR(20),
	ACADEMIC_YEAR VARCHAR(20),
	COUNTY_CODE VARCHAR(20),
	DISTRICT_CODE VARCHAR(20),
	SCHOOL_CODE VARCHAR(20),
	COUNTY_NAME VARCHAR(20),
	DISTRICT_NAME VARCHAR(20),
	SCHOOL_NAME VARCHAR(20),
	DISTRICT_TYPE VARCHAR(20),
	SCHOOL_TYPE VARCHAR(20),
	EDUCATIONAL_OPTION_TYPE VARCHAR(20),
	NSLP_PROVISION_STATUS VARCHAR(20),
	CHARTER_SCHOOL_YN INTEGER,
	CHARTER_SCHOOL_NUMBER VARCHAR(20),
	CHARTER_FUNDING_TYPE VARCHAR(20),
	IRC INTEGER,
	LOW_GRADE VARCHAR(20),
	HIGH_GRADE VARCHAR(20),
	ENROLLMENT_K12 INTEGER,
	FREE_MEAL_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FREE_K12 INTEGER,
	FRPM_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FRPM_K12 INTEGER,
	ENROLLMENT_AGES_5_17 INTEGER,
	FREE_MEAL_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FREE_AGES_5_17 INTEGER,
	FRPM_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FRPM_AGES_5_17 INTEGER,
	CALPADS_FALL1_CERTIFICATION_STATUS INTEGER
);
INSERT INTO FRPM VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
CREATE TABLE SATSCORES (
	CDS VARCHAR(20),
	RTYPE VARCHAR(20),
	SNAME VARCHAR(20),
	DNAME VARCHAR(20),
	CNAME VARCHAR(20),
	ENROLL12 INTEGER,
	NUMTSTTAKR INTEGER,
	AVGSCRREAD INTEGER,
	AVGSCRMATH INTEGER,
	AVGSCRWRITE INTEGER,
	NUMGE1500 INTEGER
);
INSERT INTO SATSCORES VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 6, 7, NULL, 9, 10, 11);
CREATE TABLE SCHOOLS (
	CDSCODE VARCHAR(20),
	NCESDIST VARCHAR(20),
	NCESSCHOOL VARCHAR(20),
	STATUSTYPE VARCHAR(20),
	COUNTY VARCHAR(20),
	DISTRICT VARCHAR(20),
	SCHOOL VARCHAR(20),
	STREET VARCHAR(20),
	STREETABR VARCHAR(20),
	CITY VARCHAR(20),
	ZIP VARCHAR(20),
	STATE VARCHAR(20),
	MAILSTREET VARCHAR(20),
	MAILSTRABR VARCHAR(20),
	MAILCITY VARCHAR(20),
	MAILZIP VARCHAR(20),
	MAILSTATE VARCHAR(20),
	PHONE VARCHAR(20),
	EXT VARCHAR(20),
	WEBSITE VARCHAR(20),
	OPENDATE DATE,
	CLOSEDDATE DATE,
	CHARTER INTEGER,
	CHARTERNUM VARCHAR(20),
	FUNDINGTYPE VARCHAR(20),
	DOC VARCHAR(20),
	DOCTYPE VARCHAR(20),
	SOC VARCHAR(20),
	SOCTYPE VARCHAR(20),
	EDOPSCODE VARCHAR(20),
	EDOPSNAME VARCHAR(20),
	EILCODE VARCHAR(20),
	EILNAME VARCHAR(20),
	GSOFFERED VARCHAR(20),
	GSSERVED VARCHAR(20),
	VIRTUAL VARCHAR(20),
	MAGNET INTEGER,
	LATITUDE INTEGER,
	LONGITUDE INTEGER,
	ADMFNAME1 VARCHAR(20),
	ADMLNAME1 VARCHAR(20),
	ADMEMAIL1 VARCHAR(20),
	ADMFNAME2 VARCHAR(20),
	ADMLNAME2 VARCHAR(20),
	ADMEMAIL2 VARCHAR(20),
	ADMFNAME3 VARCHAR(20),
	ADMLNAME3 VARCHAR(20),
	ADMEMAIL3 VARCHAR(20),
	LASTUPDATE DATE
);
INSERT INTO SCHOOLS VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 'FRESNO UNIFIED', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', '1970-01-01', 2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 3, 4, 5, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01');
-- ----------sql1------------
-- 2147483648
SELECT SCHOOLS.PHONE FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.DISTRICT = 'FRESNO UNIFIED' ORDER BY SATSCORES.AVGSCRREAD ASC LIMIT 1;
-- ----------sql2------------
SELECT T2.PHONE FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE WHERE T2.DISTRICT = 'FRESNO UNIFIED' AND T1.AVGSCRREAD IS NOT NULL ORDER BY T1.AVGSCRREAD ASC LIMIT 1;
",0.110292,SELECT SCHOOLS.PHONE FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.DISTRICT = 'FRESNO UNIFIED' ORDER BY SATSCORES.AVGSCRREAD ASC LIMIT 1,SELECT T2.PHONE FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE WHERE T2.DISTRICT = 'FRESNO UNIFIED' AND T1.AVGSCRREAD IS NOT NULL ORDER BY T1.AVGSCRREAD ASC LIMIT 1,incorrect
1,41,ERROR,NotSupportedError: Not supported feature: OVER,,"SELECT SCHOOLS.SCHOOL FROM ( SELECT SCHOOLS.SCHOOL, SCHOOLS.COUNTY, SATSCORES.AVGSCRREAD, DENSE_RANK() OVER (PARTITION BY SCHOOLS.COUNTY ORDER BY SATSCORES.AVGSCRREAD DESC) AS RANK FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.VIRTUAL = 'F' ) AS SUBQUERY WHERE RANK <= 5","SELECT SCHOOL FROM (SELECT T2.SCHOOL,T1.AVGSCRREAD, RANK() OVER (PARTITION BY T2.COUNTY ORDER BY T1.AVGSCRREAD DESC) AS RNK FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE WHERE T2.VIRTUAL = 'F' ) RANKED_SCHOOLS WHERE RNK <= 5",incorrect
2,41,ERROR,NotSupportedError: Not supported feature: OVER,,"SELECT SCHOOLS.SCHOOL FROM ( SELECT SCHOOLS.SCHOOL, SCHOOLS.COUNTY, SATSCORES.AVGSCRREAD, DENSE_RANK() OVER (PARTITION BY SCHOOLS.COUNTY ORDER BY SATSCORES.AVGSCRREAD DESC) AS RANK FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.VIRTUAL = 'F' ) AS SUBQUERY WHERE RANK <= 5","SELECT SCHOOL FROM (SELECT T2.SCHOOL,T1.AVGSCRREAD, RANK() OVER (PARTITION BY T2.COUNTY ORDER BY T1.AVGSCRREAD DESC) AS RNK FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE WHERE T2.VIRTUAL = 'F' ) RANKED_SCHOOLS WHERE RNK <= 5",incorrect
3,41,ERROR,NotSupportedError: Not supported feature: OVER,,"SELECT SCHOOLS.SCHOOL FROM ( SELECT SCHOOLS.SCHOOL, SCHOOLS.COUNTY, SATSCORES.AVGSCRREAD, DENSE_RANK() OVER (PARTITION BY SCHOOLS.COUNTY ORDER BY SATSCORES.AVGSCRREAD DESC) AS RANK FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.VIRTUAL = 'F' ) AS SUBQUERY WHERE RANK <= 5","SELECT SCHOOL FROM (SELECT T2.SCHOOL,T1.AVGSCRREAD, RANK() OVER (PARTITION BY T2.COUNTY ORDER BY T1.AVGSCRREAD DESC) AS RNK FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE WHERE T2.VIRTUAL = 'F' ) RANKED_SCHOOLS WHERE RNK <= 5",incorrect
1,42,True,,0.090333,SELECT SCHOOLS.EDOPSNAME FROM SATSCORES INNER JOIN SCHOOLS ON SATSCORES.CDS = SCHOOLS.CDSCODE ORDER BY SATSCORES.AVGSCRMATH DESC LIMIT 1,SELECT T2.EDOPSNAME FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE ORDER BY T1.AVGSCRMATH DESC LIMIT 1,correct
1,43,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE FRPM (
	CDSCODE VARCHAR(20),
	ACADEMIC_YEAR VARCHAR(20),
	COUNTY_CODE VARCHAR(20),
	DISTRICT_CODE VARCHAR(20),
	SCHOOL_CODE VARCHAR(20),
	COUNTY_NAME VARCHAR(20),
	DISTRICT_NAME VARCHAR(20),
	SCHOOL_NAME VARCHAR(20),
	DISTRICT_TYPE VARCHAR(20),
	SCHOOL_TYPE VARCHAR(20),
	EDUCATIONAL_OPTION_TYPE VARCHAR(20),
	NSLP_PROVISION_STATUS VARCHAR(20),
	CHARTER_SCHOOL_YN INTEGER,
	CHARTER_SCHOOL_NUMBER VARCHAR(20),
	CHARTER_FUNDING_TYPE VARCHAR(20),
	IRC INTEGER,
	LOW_GRADE VARCHAR(20),
	HIGH_GRADE VARCHAR(20),
	ENROLLMENT_K12 INTEGER,
	FREE_MEAL_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FREE_K12 INTEGER,
	FRPM_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FRPM_K12 INTEGER,
	ENROLLMENT_AGES_5_17 INTEGER,
	FREE_MEAL_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FREE_AGES_5_17 INTEGER,
	FRPM_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FRPM_AGES_5_17 INTEGER,
	CALPADS_FALL1_CERTIFICATION_STATUS INTEGER
);
INSERT INTO FRPM VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
CREATE TABLE SATSCORES (
	CDS VARCHAR(20),
	RTYPE VARCHAR(20),
	SNAME VARCHAR(20),
	DNAME VARCHAR(20),
	CNAME VARCHAR(20),
	ENROLL12 INTEGER,
	NUMTSTTAKR INTEGER,
	AVGSCRREAD INTEGER,
	AVGSCRMATH INTEGER,
	AVGSCRWRITE INTEGER,
	NUMGE1500 INTEGER
);
INSERT INTO SATSCORES VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 3, 4, 5, 2, 6, 7);
CREATE TABLE SCHOOLS (
	CDSCODE VARCHAR(20),
	NCESDIST VARCHAR(20),
	NCESSCHOOL VARCHAR(20),
	STATUSTYPE VARCHAR(20),
	COUNTY VARCHAR(20),
	DISTRICT VARCHAR(20),
	SCHOOL VARCHAR(20),
	STREET VARCHAR(20),
	STREETABR VARCHAR(20),
	CITY VARCHAR(20),
	ZIP VARCHAR(20),
	STATE VARCHAR(20),
	MAILSTREET VARCHAR(20),
	MAILSTRABR VARCHAR(20),
	MAILCITY VARCHAR(20),
	MAILZIP VARCHAR(20),
	MAILSTATE VARCHAR(20),
	PHONE VARCHAR(20),
	EXT VARCHAR(20),
	WEBSITE VARCHAR(20),
	OPENDATE DATE,
	CLOSEDDATE DATE,
	CHARTER INTEGER,
	CHARTERNUM VARCHAR(20),
	FUNDINGTYPE VARCHAR(20),
	DOC VARCHAR(20),
	DOCTYPE VARCHAR(20),
	SOC VARCHAR(20),
	SOCTYPE VARCHAR(20),
	EDOPSCODE VARCHAR(20),
	EDOPSNAME VARCHAR(20),
	EILCODE VARCHAR(20),
	EILNAME VARCHAR(20),
	GSOFFERED VARCHAR(20),
	GSSERVED VARCHAR(20),
	VIRTUAL VARCHAR(20),
	MAGNET INTEGER,
	LATITUDE INTEGER,
	LONGITUDE INTEGER,
	ADMFNAME1 VARCHAR(20),
	ADMLNAME1 VARCHAR(20),
	ADMEMAIL1 VARCHAR(20),
	ADMFNAME2 VARCHAR(20),
	ADMLNAME2 VARCHAR(20),
	ADMEMAIL2 VARCHAR(20),
	ADMFNAME3 VARCHAR(20),
	ADMLNAME3 VARCHAR(20),
	ADMEMAIL3 VARCHAR(20),
	LASTUPDATE DATE
);
INSERT INTO SCHOOLS VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483649', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', '1970-01-01', 8, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 9, 10, 11, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01');
-- ----------sql1------------
-- 2, 2147483648
SELECT SATSCORES.AVGSCRMATH, SCHOOLS.CDSCODE FROM SATSCORES INNER JOIN SCHOOLS ON SATSCORES.CDS = SCHOOLS.CDSCODE ORDER BY (SATSCORES.AVGSCRMATH + SATSCORES.AVGSCRREAD + SATSCORES.AVGSCRWRITE) LIMIT 1;
-- ----------sql2------------
-- 2, 2147483649
SELECT T1.AVGSCRMATH, T2.COUNTY FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE WHERE T1.AVGSCRMATH IS NOT NULL ORDER BY T1.AVGSCRMATH + T1.AVGSCRREAD + T1.AVGSCRWRITE ASC LIMIT 1;
",0.093348,"SELECT SATSCORES.AVGSCRMATH, SCHOOLS.CDSCODE FROM SATSCORES INNER JOIN SCHOOLS ON SATSCORES.CDS = SCHOOLS.CDSCODE ORDER BY (SATSCORES.AVGSCRMATH + SATSCORES.AVGSCRREAD + SATSCORES.AVGSCRWRITE) LIMIT 1","SELECT T1.AVGSCRMATH, T2.COUNTY FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE WHERE T1.AVGSCRMATH IS NOT NULL ORDER BY T1.AVGSCRMATH + T1.AVGSCRREAD + T1.AVGSCRWRITE ASC LIMIT 1",incorrect
1,44,True,,0.091175,"SELECT SATSCORES.AVGSCRWRITE, SCHOOLS.CITY FROM SATSCORES INNER JOIN SCHOOLS ON SATSCORES.CDS = SCHOOLS.CDSCODE ORDER BY SATSCORES.NUMGE1500 DESC LIMIT 1","SELECT T1.AVGSCRWRITE, T2.CITY FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE ORDER BY T1.NUMGE1500 DESC LIMIT 1",correct
1,45,True,,0.151497,"SELECT SCHOOLS.SCHOOL, AVG(SATSCORES.AVGSCRWRITE) FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.ADMFNAME1 = 'RICCI' AND SCHOOLS.ADMLNAME1 = 'ULRICH' GROUP BY SCHOOLS.SCHOOL","SELECT T2.SCHOOL, T1.AVGSCRWRITE FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE WHERE T2.ADMFNAME1 = 'RICCI' AND T2.ADMLNAME1 = 'ULRICH'",correct
1,46,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__ENROLLMENT (K-12)`,,SELECT SCHOOLS.SCHOOL FROM SCHOOLS WHERE SCHOOLS.DOC = 31 ORDER BY SCHOOLS.SCHOOL DESC LIMIT 1,SELECT T2.SCHOOL FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.DOC = 31 ORDER BY T1.`ENROLLMENT (K-12)` DESC LIMIT 1,incorrect
2,46,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__ENROLLMENT (K-12)`,,SELECT SCHOOLS.SCHOOL FROM SCHOOLS WHERE SCHOOLS.DOC = 31 ORDER BY SCHOOLS.SCHOOL DESC LIMIT 1,SELECT T2.SCHOOL FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.DOC = 31 ORDER BY T1.`ENROLLMENT (K-12)` DESC LIMIT 1,incorrect
3,46,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__ENROLLMENT (K-12)`,,SELECT SCHOOLS.SCHOOL FROM SCHOOLS WHERE SCHOOLS.DOC = 31 ORDER BY SCHOOLS.SCHOOL DESC LIMIT 1,SELECT T2.SCHOOL FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.DOC = 31 ORDER BY T1.`ENROLLMENT (K-12)` DESC LIMIT 1,incorrect
1,47,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'OPENDATE']}",,"SELECT COUNT(*) / 12 AS MONTHLY_AVG_SCHOOLS FROM SCHOOLS WHERE COUNTY = 'ALAMEDA COUNTY' AND DOC = 52 AND STRFTIME('%Y', OPENDATE) = '1980'","SELECT CAST(COUNT(SCHOOL) AS REAL) / 12 FROM SCHOOLS WHERE DOC = 52 AND COUNTY = 'ALAMEDA' AND STRFTIME('%Y', OPENDATE) = '1980'",incorrect
2,47,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'OPENDATE']}",,"SELECT COUNT(*) / 12 AS MONTHLY_AVG_SCHOOLS FROM SCHOOLS WHERE COUNTY = 'ALAMEDA COUNTY' AND DOC = 52 AND STRFTIME('%Y', OPENDATE) = '1980'","SELECT CAST(COUNT(SCHOOL) AS REAL) / 12 FROM SCHOOLS WHERE DOC = 52 AND COUNTY = 'ALAMEDA' AND STRFTIME('%Y', OPENDATE) = '1980'",incorrect
3,47,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'OPENDATE']}",,"SELECT COUNT(*) / 12 AS MONTHLY_AVG_SCHOOLS FROM SCHOOLS WHERE COUNTY = 'ALAMEDA COUNTY' AND DOC = 52 AND STRFTIME('%Y', OPENDATE) = '1980'","SELECT CAST(COUNT(SCHOOL) AS REAL) / 12 FROM SCHOOLS WHERE DOC = 52 AND COUNTY = 'ALAMEDA' AND STRFTIME('%Y', OPENDATE) = '1980'",incorrect
1,48,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT COUNT(*) FROM SCHOOLS WHERE STATUSTYPE = 'MERGED' AND COUNTY = 'ORANGE COUNTY' AND DOC = 54) AS REAL)) / (SELECT COUNT(*) FROM SCHOOLS WHERE STATUSTYPE = 'MERGED' AND COUNTY = 'ORANGE COUNTY' AND DOC = 52),SELECT CAST(SUM(CASE WHEN DOC = 54 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN DOC = 52 THEN 1 ELSE 0 END) FROM SCHOOLS WHERE STATUSTYPE = 'MERGED' AND COUNTY = 'ORANGE',incorrect
2,48,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT COUNT(*) FROM SCHOOLS WHERE STATUSTYPE = 'MERGED' AND COUNTY = 'ORANGE COUNTY' AND DOC = 54) AS REAL)) / (SELECT COUNT(*) FROM SCHOOLS WHERE STATUSTYPE = 'MERGED' AND COUNTY = 'ORANGE COUNTY' AND DOC = 52),SELECT CAST(SUM(CASE WHEN DOC = 54 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN DOC = 52 THEN 1 ELSE 0 END) FROM SCHOOLS WHERE STATUSTYPE = 'MERGED' AND COUNTY = 'ORANGE',incorrect
3,48,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT COUNT(*) FROM SCHOOLS WHERE STATUSTYPE = 'MERGED' AND COUNTY = 'ORANGE COUNTY' AND DOC = 54) AS REAL)) / (SELECT COUNT(*) FROM SCHOOLS WHERE STATUSTYPE = 'MERGED' AND COUNTY = 'ORANGE COUNTY' AND DOC = 52),SELECT CAST(SUM(CASE WHEN DOC = 54 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN DOC = 52 THEN 1 ELSE 0 END) FROM SCHOOLS WHERE STATUSTYPE = 'MERGED' AND COUNTY = 'ORANGE',incorrect
1,49,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute STATUSTYPE`,,"SELECT SCHOOLS.COUNTY, SCHOOLS.SCHOOL, SCHOOLS.CLOSEDDATE FROM SCHOOLS WHERE SCHOOLS.STATUSTYPE = 'CLOSED' GROUP BY SCHOOLS.COUNTY ORDER BY COUNT(*) DESC LIMIT 1","SELECT DISTINCT COUNTY, SCHOOL, CLOSEDDATE FROM SCHOOLS WHERE COUNTY = ( SELECT COUNTY FROM SCHOOLS WHERE STATUSTYPE = 'CLOSED' GROUP BY COUNTY ORDER BY COUNT(SCHOOL) DESC LIMIT 1 ) AND STATUSTYPE = 'CLOSED' AND SCHOOL IS NOT NULL",incorrect
2,49,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute STATUSTYPE`,,"SELECT SCHOOLS.COUNTY, SCHOOLS.SCHOOL, SCHOOLS.CLOSEDDATE FROM SCHOOLS WHERE SCHOOLS.STATUSTYPE = 'CLOSED' GROUP BY SCHOOLS.COUNTY ORDER BY COUNT(*) DESC LIMIT 1","SELECT DISTINCT COUNTY, SCHOOL, CLOSEDDATE FROM SCHOOLS WHERE COUNTY = ( SELECT COUNTY FROM SCHOOLS WHERE STATUSTYPE = 'CLOSED' GROUP BY COUNTY ORDER BY COUNT(SCHOOL) DESC LIMIT 1 ) AND STATUSTYPE = 'CLOSED' AND SCHOOL IS NOT NULL",incorrect
3,49,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute STATUSTYPE`,,"SELECT SCHOOLS.COUNTY, SCHOOLS.SCHOOL, SCHOOLS.CLOSEDDATE FROM SCHOOLS WHERE SCHOOLS.STATUSTYPE = 'CLOSED' GROUP BY SCHOOLS.COUNTY ORDER BY COUNT(*) DESC LIMIT 1","SELECT DISTINCT COUNTY, SCHOOL, CLOSEDDATE FROM SCHOOLS WHERE COUNTY = ( SELECT COUNTY FROM SCHOOLS WHERE STATUSTYPE = 'CLOSED' GROUP BY COUNTY ORDER BY COUNT(SCHOOL) DESC LIMIT 1 ) AND STATUSTYPE = 'CLOSED' AND SCHOOL IS NOT NULL",incorrect
1,50,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE FRPM (
	CDSCODE VARCHAR(20),
	ACADEMIC_YEAR VARCHAR(20),
	COUNTY_CODE VARCHAR(20),
	DISTRICT_CODE VARCHAR(20),
	SCHOOL_CODE VARCHAR(20),
	COUNTY_NAME VARCHAR(20),
	DISTRICT_NAME VARCHAR(20),
	SCHOOL_NAME VARCHAR(20),
	DISTRICT_TYPE VARCHAR(20),
	SCHOOL_TYPE VARCHAR(20),
	EDUCATIONAL_OPTION_TYPE VARCHAR(20),
	NSLP_PROVISION_STATUS VARCHAR(20),
	CHARTER_SCHOOL_YN INTEGER,
	CHARTER_SCHOOL_NUMBER VARCHAR(20),
	CHARTER_FUNDING_TYPE VARCHAR(20),
	IRC INTEGER,
	LOW_GRADE VARCHAR(20),
	HIGH_GRADE VARCHAR(20),
	ENROLLMENT_K12 INTEGER,
	FREE_MEAL_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FREE_K12 INTEGER,
	FRPM_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FRPM_K12 INTEGER,
	ENROLLMENT_AGES_5_17 INTEGER,
	FREE_MEAL_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FREE_AGES_5_17 INTEGER,
	FRPM_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FRPM_AGES_5_17 INTEGER,
	CALPADS_FALL1_CERTIFICATION_STATUS INTEGER
);
INSERT INTO FRPM VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
CREATE TABLE SATSCORES (
	CDS VARCHAR(20),
	RTYPE VARCHAR(20),
	SNAME VARCHAR(20),
	DNAME VARCHAR(20),
	CNAME VARCHAR(20),
	ENROLL12 INTEGER,
	NUMTSTTAKR INTEGER,
	AVGSCRREAD INTEGER,
	AVGSCRMATH INTEGER,
	AVGSCRWRITE INTEGER,
	NUMGE1500 INTEGER
);
INSERT INTO SATSCORES VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 6, 7, 8, 9, 10, 11);
CREATE TABLE SCHOOLS (
	CDSCODE VARCHAR(20),
	NCESDIST VARCHAR(20),
	NCESSCHOOL VARCHAR(20),
	STATUSTYPE VARCHAR(20),
	COUNTY VARCHAR(20),
	DISTRICT VARCHAR(20),
	SCHOOL VARCHAR(20),
	STREET VARCHAR(20),
	STREETABR VARCHAR(20),
	CITY VARCHAR(20),
	ZIP VARCHAR(20),
	STATE VARCHAR(20),
	MAILSTREET VARCHAR(20),
	MAILSTRABR VARCHAR(20),
	MAILCITY VARCHAR(20),
	MAILZIP VARCHAR(20),
	MAILSTATE VARCHAR(20),
	PHONE VARCHAR(20),
	EXT VARCHAR(20),
	WEBSITE VARCHAR(20),
	OPENDATE DATE,
	CLOSEDDATE DATE,
	CHARTER INTEGER,
	CHARTERNUM VARCHAR(20),
	FUNDINGTYPE VARCHAR(20),
	DOC VARCHAR(20),
	DOCTYPE VARCHAR(20),
	SOC VARCHAR(20),
	SOCTYPE VARCHAR(20),
	EDOPSCODE VARCHAR(20),
	EDOPSNAME VARCHAR(20),
	EILCODE VARCHAR(20),
	EILNAME VARCHAR(20),
	GSOFFERED VARCHAR(20),
	GSSERVED VARCHAR(20),
	VIRTUAL VARCHAR(20),
	MAGNET INTEGER,
	LATITUDE INTEGER,
	LONGITUDE INTEGER,
	ADMFNAME1 VARCHAR(20),
	ADMLNAME1 VARCHAR(20),
	ADMEMAIL1 VARCHAR(20),
	ADMFNAME2 VARCHAR(20),
	ADMLNAME2 VARCHAR(20),
	ADMEMAIL2 VARCHAR(20),
	ADMFNAME3 VARCHAR(20),
	ADMLNAME3 VARCHAR(20),
	ADMEMAIL3 VARCHAR(20),
	LASTUPDATE DATE
);
INSERT INTO SCHOOLS VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', '1970-01-01', 2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 3, 4, 5, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01');
-- ----------sql1------------
-- 2147483648, 2147483648
SELECT SCHOOLS.STREET, SCHOOLS.SCHOOL FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS ORDER BY SATSCORES.AVGSCRMATH DESC LIMIT 7;
-- ----------sql2------------
SELECT T2.MAILSTREET, T2.SCHOOL FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE ORDER BY T1.AVGSCRMATH DESC LIMIT 6, 1;
",0.062708,"SELECT SCHOOLS.STREET, SCHOOLS.SCHOOL FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS ORDER BY SATSCORES.AVGSCRMATH DESC LIMIT 7;","SELECT T2.MAILSTREET, T2.SCHOOL FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE ORDER BY T1.AVGSCRMATH DESC LIMIT 6, 1",correct
1,51,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE FRPM (
	CDSCODE VARCHAR(20),
	ACADEMIC_YEAR VARCHAR(20),
	COUNTY_CODE VARCHAR(20),
	DISTRICT_CODE VARCHAR(20),
	SCHOOL_CODE VARCHAR(20),
	COUNTY_NAME VARCHAR(20),
	DISTRICT_NAME VARCHAR(20),
	SCHOOL_NAME VARCHAR(20),
	DISTRICT_TYPE VARCHAR(20),
	SCHOOL_TYPE VARCHAR(20),
	EDUCATIONAL_OPTION_TYPE VARCHAR(20),
	NSLP_PROVISION_STATUS VARCHAR(20),
	CHARTER_SCHOOL_YN INTEGER,
	CHARTER_SCHOOL_NUMBER VARCHAR(20),
	CHARTER_FUNDING_TYPE VARCHAR(20),
	IRC INTEGER,
	LOW_GRADE VARCHAR(20),
	HIGH_GRADE VARCHAR(20),
	ENROLLMENT_K12 INTEGER,
	FREE_MEAL_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FREE_K12 INTEGER,
	FRPM_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FRPM_K12 INTEGER,
	ENROLLMENT_AGES_5_17 INTEGER,
	FREE_MEAL_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FREE_AGES_5_17 INTEGER,
	FRPM_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FRPM_AGES_5_17 INTEGER,
	CALPADS_FALL1_CERTIFICATION_STATUS INTEGER
);
INSERT INTO FRPM VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
CREATE TABLE SATSCORES (
	CDS VARCHAR(20),
	RTYPE VARCHAR(20),
	SNAME VARCHAR(20),
	DNAME VARCHAR(20),
	CNAME VARCHAR(20),
	ENROLL12 INTEGER,
	NUMTSTTAKR INTEGER,
	AVGSCRREAD INTEGER,
	AVGSCRMATH INTEGER,
	AVGSCRWRITE INTEGER,
	NUMGE1500 INTEGER
);
INSERT INTO SATSCORES VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 6, 7, NULL, 9, 10, 11);
CREATE TABLE SCHOOLS (
	CDSCODE VARCHAR(20),
	NCESDIST VARCHAR(20),
	NCESSCHOOL VARCHAR(20),
	STATUSTYPE VARCHAR(20),
	COUNTY VARCHAR(20),
	DISTRICT VARCHAR(20),
	SCHOOL VARCHAR(20),
	STREET VARCHAR(20),
	STREETABR VARCHAR(20),
	CITY VARCHAR(20),
	ZIP VARCHAR(20),
	STATE VARCHAR(20),
	MAILSTREET VARCHAR(20),
	MAILSTRABR VARCHAR(20),
	MAILCITY VARCHAR(20),
	MAILZIP VARCHAR(20),
	MAILSTATE VARCHAR(20),
	PHONE VARCHAR(20),
	EXT VARCHAR(20),
	WEBSITE VARCHAR(20),
	OPENDATE DATE,
	CLOSEDDATE DATE,
	CHARTER INTEGER,
	CHARTERNUM VARCHAR(20),
	FUNDINGTYPE VARCHAR(20),
	DOC VARCHAR(20),
	DOCTYPE VARCHAR(20),
	SOC VARCHAR(20),
	SOCTYPE VARCHAR(20),
	EDOPSCODE VARCHAR(20),
	EDOPSNAME VARCHAR(20),
	EILCODE VARCHAR(20),
	EILNAME VARCHAR(20),
	GSOFFERED VARCHAR(20),
	GSSERVED VARCHAR(20),
	VIRTUAL VARCHAR(20),
	MAGNET INTEGER,
	LATITUDE INTEGER,
	LONGITUDE INTEGER,
	ADMFNAME1 VARCHAR(20),
	ADMLNAME1 VARCHAR(20),
	ADMEMAIL1 VARCHAR(20),
	ADMFNAME2 VARCHAR(20),
	ADMLNAME2 VARCHAR(20),
	ADMEMAIL2 VARCHAR(20),
	ADMFNAME3 VARCHAR(20),
	ADMLNAME3 VARCHAR(20),
	ADMEMAIL3 VARCHAR(20),
	LASTUPDATE DATE
);
INSERT INTO SCHOOLS VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', '1970-01-01', 2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 3, 4, 5, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01');
-- ----------sql1------------
-- 2147483648, 2147483648
SELECT SCHOOLS.MAILSTREET, SCHOOLS.SCHOOL FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS ORDER BY SATSCORES.AVGSCRREAD ASC LIMIT 1;
-- ----------sql2------------
SELECT T2.MAILSTREET, T2.SCHOOL FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE WHERE T1.AVGSCRREAD IS NOT NULL ORDER BY T1.AVGSCRREAD ASC LIMIT 1;
",0.094447,"SELECT SCHOOLS.MAILSTREET, SCHOOLS.SCHOOL FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS ORDER BY SATSCORES.AVGSCRREAD ASC LIMIT 1;","SELECT T2.MAILSTREET, T2.SCHOOL FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE WHERE T1.AVGSCRREAD IS NOT NULL ORDER BY T1.AVGSCRREAD ASC LIMIT 1",incorrect
1,52,True,,0.131684,SELECT COUNT(*) FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS WHERE SCHOOLS.MAILCITY = 'LAKEPORT' AND (SATSCORES.AVGSCRREAD + SATSCORES.AVGSCRMATH + SATSCORES.AVGSCRWRITE) >= 1500,SELECT COUNT(T1.CDS) FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE WHERE T2.MAILCITY = 'LAKEPORT' AND (T1.AVGSCRREAD + T1.AVGSCRMATH + T1.AVGSCRWRITE) >= 1500,correct
1,53,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE FRPM (
	CDSCODE VARCHAR(20),
	ACADEMIC_YEAR VARCHAR(20),
	COUNTY_CODE VARCHAR(20),
	DISTRICT_CODE VARCHAR(20),
	SCHOOL_CODE VARCHAR(20),
	COUNTY_NAME VARCHAR(20),
	DISTRICT_NAME VARCHAR(20),
	SCHOOL_NAME VARCHAR(20),
	DISTRICT_TYPE VARCHAR(20),
	SCHOOL_TYPE VARCHAR(20),
	EDUCATIONAL_OPTION_TYPE VARCHAR(20),
	NSLP_PROVISION_STATUS VARCHAR(20),
	CHARTER_SCHOOL_YN INTEGER,
	CHARTER_SCHOOL_NUMBER VARCHAR(20),
	CHARTER_FUNDING_TYPE VARCHAR(20),
	IRC INTEGER,
	LOW_GRADE VARCHAR(20),
	HIGH_GRADE VARCHAR(20),
	ENROLLMENT_K12 INTEGER,
	FREE_MEAL_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FREE_K12 INTEGER,
	FRPM_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FRPM_K12 INTEGER,
	ENROLLMENT_AGES_5_17 INTEGER,
	FREE_MEAL_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FREE_AGES_5_17 INTEGER,
	FRPM_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FRPM_AGES_5_17 INTEGER,
	CALPADS_FALL1_CERTIFICATION_STATUS INTEGER
);
INSERT INTO FRPM VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
CREATE TABLE SATSCORES (
	CDS VARCHAR(20),
	RTYPE VARCHAR(20),
	SNAME VARCHAR(20),
	DNAME VARCHAR(20),
	CNAME VARCHAR(20),
	ENROLL12 INTEGER,
	NUMTSTTAKR INTEGER,
	AVGSCRREAD INTEGER,
	AVGSCRMATH INTEGER,
	AVGSCRWRITE INTEGER,
	NUMGE1500 INTEGER
);
INSERT INTO SATSCORES VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 2, 3, 4, 5, 6, 7);
CREATE TABLE SCHOOLS (
	CDSCODE VARCHAR(20),
	NCESDIST VARCHAR(20),
	NCESSCHOOL VARCHAR(20),
	STATUSTYPE VARCHAR(20),
	COUNTY VARCHAR(20),
	DISTRICT VARCHAR(20),
	SCHOOL VARCHAR(20),
	STREET VARCHAR(20),
	STREETABR VARCHAR(20),
	CITY VARCHAR(20),
	ZIP VARCHAR(20),
	STATE VARCHAR(20),
	MAILSTREET VARCHAR(20),
	MAILSTRABR VARCHAR(20),
	MAILCITY VARCHAR(20),
	MAILZIP VARCHAR(20),
	MAILSTATE VARCHAR(20),
	PHONE VARCHAR(20),
	EXT VARCHAR(20),
	WEBSITE VARCHAR(20),
	OPENDATE DATE,
	CLOSEDDATE DATE,
	CHARTER INTEGER,
	CHARTERNUM VARCHAR(20),
	FUNDINGTYPE VARCHAR(20),
	DOC VARCHAR(20),
	DOCTYPE VARCHAR(20),
	SOC VARCHAR(20),
	SOCTYPE VARCHAR(20),
	EDOPSCODE VARCHAR(20),
	EDOPSNAME VARCHAR(20),
	EILCODE VARCHAR(20),
	EILNAME VARCHAR(20),
	GSOFFERED VARCHAR(20),
	GSSERVED VARCHAR(20),
	VIRTUAL VARCHAR(20),
	MAGNET INTEGER,
	LATITUDE INTEGER,
	LONGITUDE INTEGER,
	ADMFNAME1 VARCHAR(20),
	ADMLNAME1 VARCHAR(20),
	ADMEMAIL1 VARCHAR(20),
	ADMFNAME2 VARCHAR(20),
	ADMLNAME2 VARCHAR(20),
	ADMEMAIL2 VARCHAR(20),
	ADMFNAME3 VARCHAR(20),
	ADMLNAME3 VARCHAR(20),
	ADMEMAIL3 VARCHAR(20),
	LASTUPDATE DATE
);
INSERT INTO SCHOOLS VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1016715589745060192', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', '1970-01-01', 8, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 9, 10, 11, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01');
-- ----------sql1------------
-- NULL
SELECT SUM(SATSCORES.NUMTSTTAKR) FROM SATSCORES INNER JOIN SCHOOLS ON SATSCORES.CDS = SCHOOLS.CDSCODE WHERE SCHOOLS.MAILCITY = 'FRESNO';
-- ----------sql2------------
SELECT T1.NUMTSTTAKR FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE WHERE T2.MAILCITY = 'FRESNO';
",0.100466,SELECT SUM(SATSCORES.NUMTSTTAKR) FROM SATSCORES INNER JOIN SCHOOLS ON SATSCORES.CDS = SCHOOLS.CDSCODE WHERE SCHOOLS.MAILCITY = 'FRESNO';,SELECT T1.NUMTSTTAKR FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE WHERE T2.MAILCITY = 'FRESNO',incorrect
1,54,True,,0.051438,"SELECT SCHOOLS.SCHOOL, SCHOOLS.MAILZIP FROM SCHOOLS WHERE SCHOOLS.ADMLNAME1 = 'ATOIAN' AND SCHOOLS.ADMFNAME1 = 'AVETIK'","SELECT SCHOOL, MAILZIP FROM SCHOOLS WHERE ADMFNAME1 = 'AVETIK' AND ADMLNAME1 = 'ATOIAN'",correct
1,55,ERROR,NotImplementedError: {'real': {}},,SELECT CAST((SELECT COUNT(*) FROM SCHOOLS WHERE MAILSTATE = 'CALIFORNIA' AND COUNTY = 'COLUSA') AS REAL) / (SELECT COUNT(*) FROM SCHOOLS WHERE MAILSTATE = 'CALIFORNIA' AND COUNTY = 'HUMBOLDT') AS RATIO FROM SCHOOLS LIMIT 1;,SELECT CAST(SUM(CASE WHEN COUNTY = 'COLUSA' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN COUNTY = 'HUMBOLDT' THEN 1 ELSE 0 END) FROM SCHOOLS WHERE MAILSTATE = 'CA',correct
2,55,ERROR,NotImplementedError: {'real': {}},,SELECT CAST((SELECT COUNT(*) FROM SCHOOLS WHERE MAILSTATE = 'CALIFORNIA' AND COUNTY = 'COLUSA') AS REAL) / (SELECT COUNT(*) FROM SCHOOLS WHERE MAILSTATE = 'CALIFORNIA' AND COUNTY = 'HUMBOLDT') AS RATIO FROM SCHOOLS LIMIT 1;,SELECT CAST(SUM(CASE WHEN COUNTY = 'COLUSA' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN COUNTY = 'HUMBOLDT' THEN 1 ELSE 0 END) FROM SCHOOLS WHERE MAILSTATE = 'CA',correct
3,55,ERROR,NotImplementedError: {'real': {}},,SELECT CAST((SELECT COUNT(*) FROM SCHOOLS WHERE MAILSTATE = 'CALIFORNIA' AND COUNTY = 'COLUSA') AS REAL) / (SELECT COUNT(*) FROM SCHOOLS WHERE MAILSTATE = 'CALIFORNIA' AND COUNTY = 'HUMBOLDT') AS RATIO FROM SCHOOLS LIMIT 1;,SELECT CAST(SUM(CASE WHEN COUNTY = 'COLUSA' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN COUNTY = 'HUMBOLDT' THEN 1 ELSE 0 END) FROM SCHOOLS WHERE MAILSTATE = 'CA',correct
1,56,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE FRPM (
	CDSCODE VARCHAR(20),
	ACADEMIC_YEAR VARCHAR(20),
	COUNTY_CODE VARCHAR(20),
	DISTRICT_CODE VARCHAR(20),
	SCHOOL_CODE VARCHAR(20),
	COUNTY_NAME VARCHAR(20),
	DISTRICT_NAME VARCHAR(20),
	SCHOOL_NAME VARCHAR(20),
	DISTRICT_TYPE VARCHAR(20),
	SCHOOL_TYPE VARCHAR(20),
	EDUCATIONAL_OPTION_TYPE VARCHAR(20),
	NSLP_PROVISION_STATUS VARCHAR(20),
	CHARTER_SCHOOL_YN INTEGER,
	CHARTER_SCHOOL_NUMBER VARCHAR(20),
	CHARTER_FUNDING_TYPE VARCHAR(20),
	IRC INTEGER,
	LOW_GRADE VARCHAR(20),
	HIGH_GRADE VARCHAR(20),
	ENROLLMENT_K12 INTEGER,
	FREE_MEAL_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FREE_K12 INTEGER,
	FRPM_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FRPM_K12 INTEGER,
	ENROLLMENT_AGES_5_17 INTEGER,
	FREE_MEAL_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FREE_AGES_5_17 INTEGER,
	FRPM_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FRPM_AGES_5_17 INTEGER,
	CALPADS_FALL1_CERTIFICATION_STATUS INTEGER
);
INSERT INTO FRPM VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
CREATE TABLE SATSCORES (
	CDS VARCHAR(20),
	RTYPE VARCHAR(20),
	SNAME VARCHAR(20),
	DNAME VARCHAR(20),
	CNAME VARCHAR(20),
	ENROLL12 INTEGER,
	NUMTSTTAKR INTEGER,
	AVGSCRREAD INTEGER,
	AVGSCRMATH INTEGER,
	AVGSCRWRITE INTEGER,
	NUMGE1500 INTEGER
);
INSERT INTO SATSCORES VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, 0);
CREATE TABLE SCHOOLS (
	CDSCODE VARCHAR(20),
	NCESDIST VARCHAR(20),
	NCESSCHOOL VARCHAR(20),
	STATUSTYPE VARCHAR(20),
	COUNTY VARCHAR(20),
	DISTRICT VARCHAR(20),
	SCHOOL VARCHAR(20),
	STREET VARCHAR(20),
	STREETABR VARCHAR(20),
	CITY VARCHAR(20),
	ZIP VARCHAR(20),
	STATE VARCHAR(20),
	MAILSTREET VARCHAR(20),
	MAILSTRABR VARCHAR(20),
	MAILCITY VARCHAR(20),
	MAILZIP VARCHAR(20),
	MAILSTATE VARCHAR(20),
	PHONE VARCHAR(20),
	EXT VARCHAR(20),
	WEBSITE VARCHAR(20),
	OPENDATE DATE,
	CLOSEDDATE DATE,
	CHARTER INTEGER,
	CHARTERNUM VARCHAR(20),
	FUNDINGTYPE VARCHAR(20),
	DOC VARCHAR(20),
	DOCTYPE VARCHAR(20),
	SOC VARCHAR(20),
	SOCTYPE VARCHAR(20),
	EDOPSCODE VARCHAR(20),
	EDOPSNAME VARCHAR(20),
	EILCODE VARCHAR(20),
	EILNAME VARCHAR(20),
	GSOFFERED VARCHAR(20),
	GSSERVED VARCHAR(20),
	VIRTUAL VARCHAR(20),
	MAGNET INTEGER,
	LATITUDE INTEGER,
	LONGITUDE INTEGER,
	ADMFNAME1 VARCHAR(20),
	ADMLNAME1 VARCHAR(20),
	ADMEMAIL1 VARCHAR(20),
	ADMFNAME2 VARCHAR(20),
	ADMLNAME2 VARCHAR(20),
	ADMEMAIL2 VARCHAR(20),
	ADMFNAME3 VARCHAR(20),
	ADMLNAME3 VARCHAR(20),
	ADMEMAIL3 VARCHAR(20),
	LASTUPDATE DATE
);
INSERT INTO SCHOOLS VALUES ('2147483648', '2147483648', '2147483648', 'ACTIVE', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 'SAN JOAQUIN', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 'CALIFORNIA', '2147483648', '2147483648', '2147483648', '1970-01-01', '1970-01-01', 0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01');
-- ----------sql1------------
-- 1
SELECT COUNT(*) FROM SCHOOLS WHERE SCHOOLS.MAILSTATE = 'CALIFORNIA' AND SCHOOLS.STATUSTYPE = 'ACTIVE' AND SCHOOLS.CITY = 'SAN JOAQUIN';
-- ----------sql2------------
-- 0
SELECT COUNT(CDSCODE) FROM SCHOOLS WHERE CITY = 'SAN JOAQUIN' AND MAILSTATE = 'CA' AND STATUSTYPE = 'ACTIVE';
",0.066875,SELECT COUNT(*) FROM SCHOOLS WHERE SCHOOLS.MAILSTATE = 'CALIFORNIA' AND SCHOOLS.STATUSTYPE = 'ACTIVE' AND SCHOOLS.CITY = 'SAN JOAQUIN',SELECT COUNT(CDSCODE) FROM SCHOOLS WHERE CITY = 'SAN JOAQUIN' AND MAILSTATE = 'CA' AND STATUSTYPE = 'ACTIVE',correct
1,57,True,,0.031692,"SELECT SCHOOLS.PHONE, SCHOOLS.EXT FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS ORDER BY SATSCORES.AVGSCRWRITE DESC LIMIT 332, 1","SELECT T2.PHONE, T2.EXT FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE ORDER BY T1.AVGSCRWRITE DESC LIMIT 332, 1",correct
1,58,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE FRPM (
	CDSCODE VARCHAR(20),
	ACADEMIC_YEAR VARCHAR(20),
	COUNTY_CODE VARCHAR(20),
	DISTRICT_CODE VARCHAR(20),
	SCHOOL_CODE VARCHAR(20),
	COUNTY_NAME VARCHAR(20),
	DISTRICT_NAME VARCHAR(20),
	SCHOOL_NAME VARCHAR(20),
	DISTRICT_TYPE VARCHAR(20),
	SCHOOL_TYPE VARCHAR(20),
	EDUCATIONAL_OPTION_TYPE VARCHAR(20),
	NSLP_PROVISION_STATUS VARCHAR(20),
	CHARTER_SCHOOL_YN INTEGER,
	CHARTER_SCHOOL_NUMBER VARCHAR(20),
	CHARTER_FUNDING_TYPE VARCHAR(20),
	IRC INTEGER,
	LOW_GRADE VARCHAR(20),
	HIGH_GRADE VARCHAR(20),
	ENROLLMENT_K12 INTEGER,
	FREE_MEAL_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FREE_K12 INTEGER,
	FRPM_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FRPM_K12 INTEGER,
	ENROLLMENT_AGES_5_17 INTEGER,
	FREE_MEAL_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FREE_AGES_5_17 INTEGER,
	FRPM_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FRPM_AGES_5_17 INTEGER,
	CALPADS_FALL1_CERTIFICATION_STATUS INTEGER
);
INSERT INTO FRPM VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
CREATE TABLE SATSCORES (
	CDS VARCHAR(20),
	RTYPE VARCHAR(20),
	SNAME VARCHAR(20),
	DNAME VARCHAR(20),
	CNAME VARCHAR(20),
	ENROLL12 INTEGER,
	NUMTSTTAKR INTEGER,
	AVGSCRREAD INTEGER,
	AVGSCRMATH INTEGER,
	AVGSCRWRITE INTEGER,
	NUMGE1500 INTEGER
);
INSERT INTO SATSCORES VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, 0);
CREATE TABLE SCHOOLS (
	CDSCODE VARCHAR(20),
	NCESDIST VARCHAR(20),
	NCESSCHOOL VARCHAR(20),
	STATUSTYPE VARCHAR(20),
	COUNTY VARCHAR(20),
	DISTRICT VARCHAR(20),
	SCHOOL VARCHAR(20),
	STREET VARCHAR(20),
	STREETABR VARCHAR(20),
	CITY VARCHAR(20),
	ZIP VARCHAR(20),
	STATE VARCHAR(20),
	MAILSTREET VARCHAR(20),
	MAILSTRABR VARCHAR(20),
	MAILCITY VARCHAR(20),
	MAILZIP VARCHAR(20),
	MAILSTATE VARCHAR(20),
	PHONE VARCHAR(20),
	EXT VARCHAR(20),
	WEBSITE VARCHAR(20),
	OPENDATE DATE,
	CLOSEDDATE DATE,
	CHARTER INTEGER,
	CHARTERNUM VARCHAR(20),
	FUNDINGTYPE VARCHAR(20),
	DOC VARCHAR(20),
	DOCTYPE VARCHAR(20),
	SOC VARCHAR(20),
	SOCTYPE VARCHAR(20),
	EDOPSCODE VARCHAR(20),
	EDOPSNAME VARCHAR(20),
	EILCODE VARCHAR(20),
	EILNAME VARCHAR(20),
	GSOFFERED VARCHAR(20),
	GSSERVED VARCHAR(20),
	VIRTUAL VARCHAR(20),
	MAGNET INTEGER,
	LATITUDE INTEGER,
	LONGITUDE INTEGER,
	ADMFNAME1 VARCHAR(20),
	ADMLNAME1 VARCHAR(20),
	ADMEMAIL1 VARCHAR(20),
	ADMFNAME2 VARCHAR(20),
	ADMLNAME2 VARCHAR(20),
	ADMEMAIL2 VARCHAR(20),
	ADMFNAME3 VARCHAR(20),
	ADMLNAME3 VARCHAR(20),
	ADMEMAIL3 VARCHAR(20),
	LASTUPDATE DATE
);
INSERT INTO SCHOOLS VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '95203-3704', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483649', '2147483648', '2147483648', '1970-01-01', '1970-01-01', 0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01');
-- ----------sql1------------
-- 2147483648, 2147483649, 2147483648
SELECT SCHOOLS.SCHOOL, SCHOOLS.PHONE, SCHOOLS.EXT FROM SCHOOLS WHERE SCHOOLS.ZIP = '95203-3704';
-- ----------sql2------------
-- 2147483649, 2147483648, 2147483648
SELECT PHONE, EXT, SCHOOL FROM SCHOOLS WHERE ZIP = '95203-3704';
",0.032399,"SELECT SCHOOLS.SCHOOL, SCHOOLS.PHONE, SCHOOLS.EXT FROM SCHOOLS WHERE SCHOOLS.ZIP = '95203-3704';","SELECT PHONE, EXT, SCHOOL FROM SCHOOLS WHERE ZIP = '95203-3704'",correct
1,59,True,,0.17685,SELECT WEBSITE FROM SCHOOLS WHERE (ADMFNAME1 = 'MIKE' AND ADMLNAME1 = 'LARSON') UNION SELECT WEBSITE FROM SCHOOLS WHERE (ADMFNAME1 = 'DANTE' AND ADMLNAME1 = 'ALVAREZ'),SELECT WEBSITE FROM SCHOOLS WHERE (ADMFNAME1 = 'MIKE' AND ADMLNAME1 = 'LARSON') OR (ADMFNAME1 = 'DANTE' AND ADMLNAME1 = 'ALVAREZ'),correct
1,60,True,,0.061722,SELECT SCHOOLS.WEBSITE FROM SCHOOLS WHERE SCHOOLS.VIRTUAL = 'P' AND SCHOOLS.CHARTER = 1 AND SCHOOLS.COUNTY = 'SAN JOAQUIN',SELECT WEBSITE FROM SCHOOLS WHERE COUNTY = 'SAN JOAQUIN' AND VIRTUAL = 'P' AND CHARTER = 1,correct
1,61,True,,0.064141,SELECT COUNT(*) FROM SCHOOLS WHERE CITY = 'HICKMAN' AND CHARTER = 1 AND DOC = 52,SELECT COUNT(SCHOOL) FROM SCHOOLS WHERE DOC = 52 AND CHARTER = 1 AND CITY = 'HICKMAN',correct
1,62,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FREE MEAL COUNT (K-12)`,,SELECT COUNT(*) FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.COUNTY = 'LOS ANGELES' AND SCHOOLS.CHARTER = 0 AND (FRPM.`FREE MEAL COUNT (K-12)` * 100 / FRPM.`ENROLLMENT (K-12)`) < 0.18,SELECT COUNT(T2.SCHOOL) FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.COUNTY = 'LOS ANGELES' AND T2.CHARTER = 0 AND CAST(T1.`FREE MEAL COUNT (K-12)` AS REAL) * 100 / T1.`ENROLLMENT (K-12)` < 0.18,correct
2,62,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FREE MEAL COUNT (K-12)`,,SELECT COUNT(*) FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.COUNTY = 'LOS ANGELES' AND SCHOOLS.CHARTER = 0 AND (FRPM.`FREE MEAL COUNT (K-12)` * 100 / FRPM.`ENROLLMENT (K-12)`) < 0.18,SELECT COUNT(T2.SCHOOL) FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.COUNTY = 'LOS ANGELES' AND T2.CHARTER = 0 AND CAST(T1.`FREE MEAL COUNT (K-12)` AS REAL) * 100 / T1.`ENROLLMENT (K-12)` < 0.18,correct
3,62,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FREE MEAL COUNT (K-12)`,,SELECT COUNT(*) FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.COUNTY = 'LOS ANGELES' AND SCHOOLS.CHARTER = 0 AND (FRPM.`FREE MEAL COUNT (K-12)` * 100 / FRPM.`ENROLLMENT (K-12)`) < 0.18,SELECT COUNT(T2.SCHOOL) FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.COUNTY = 'LOS ANGELES' AND T2.CHARTER = 0 AND CAST(T1.`FREE MEAL COUNT (K-12)` AS REAL) * 100 / T1.`ENROLLMENT (K-12)` < 0.18,correct
1,63,False,,,"SELECT ADMFNAME1, ADMLNAME1, ADMFNAME2, ADMLNAME2, ADMFNAME3, ADMLNAME3, SCHOOL, CITY FROM SCHOOLS WHERE CHARTER = 1 AND CHARTERNUM = '00D2'","SELECT ADMFNAME1, ADMLNAME1, SCHOOL, CITY FROM SCHOOLS WHERE CHARTER = 1 AND CHARTERNUM = '00D2'",incorrect
1,64,True,,0.054546,SELECT COUNT(*) FROM SCHOOLS WHERE SCHOOLS.MAILCITY = 'HICKMAN' AND SCHOOLS.CHARTERNUM = '00D4',SELECT COUNT(*) FROM SCHOOLS WHERE CHARTERNUM = '00D4' AND MAILCITY = 'HICKMAN',correct
1,65,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM SCHOOLS WHERE COUNTY = 'SANTA CLARA COUNTY' AND FUNDINGTYPE = 'LOCALLY FUNDED') AS REAL) * 100) / (SELECT COUNT(*) FROM SCHOOLS WHERE COUNTY = 'SANTA CLARA COUNTY') AS RATIO FROM SCHOOLS LIMIT 1;,SELECT CAST(SUM(CASE WHEN FUNDINGTYPE = 'LOCALLY FUNDED' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN FUNDINGTYPE != 'LOCALLY FUNDED' THEN 1 ELSE 0 END) FROM SCHOOLS WHERE COUNTY = 'SANTA CLARA' AND CHARTER = 1,incorrect
2,65,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM SCHOOLS WHERE COUNTY = 'SANTA CLARA COUNTY' AND FUNDINGTYPE = 'LOCALLY FUNDED') AS REAL) * 100) / (SELECT COUNT(*) FROM SCHOOLS WHERE COUNTY = 'SANTA CLARA COUNTY') AS RATIO FROM SCHOOLS LIMIT 1;,SELECT CAST(SUM(CASE WHEN FUNDINGTYPE = 'LOCALLY FUNDED' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN FUNDINGTYPE != 'LOCALLY FUNDED' THEN 1 ELSE 0 END) FROM SCHOOLS WHERE COUNTY = 'SANTA CLARA' AND CHARTER = 1,incorrect
3,65,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM SCHOOLS WHERE COUNTY = 'SANTA CLARA COUNTY' AND FUNDINGTYPE = 'LOCALLY FUNDED') AS REAL) * 100) / (SELECT COUNT(*) FROM SCHOOLS WHERE COUNTY = 'SANTA CLARA COUNTY') AS RATIO FROM SCHOOLS LIMIT 1;,SELECT CAST(SUM(CASE WHEN FUNDINGTYPE = 'LOCALLY FUNDED' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN FUNDINGTYPE != 'LOCALLY FUNDED' THEN 1 ELSE 0 END) FROM SCHOOLS WHERE COUNTY = 'SANTA CLARA' AND CHARTER = 1,incorrect
1,66,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'OPENDATE']}",,SELECT COUNT(*) FROM SCHOOLS WHERE OPENDATE BETWEEN '2000-01-01' AND '2005-12-31' AND COUNTY = 'STANISLAUS' AND FUNDINGTYPE = 'DIRECTLY FUNDED',"SELECT COUNT(SCHOOL) FROM SCHOOLS WHERE STRFTIME('%Y', OPENDATE) BETWEEN '2000' AND '2005' AND COUNTY = 'STANISLAUS' AND FUNDINGTYPE = 'DIRECTLY FUNDED'",correct
2,66,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'OPENDATE']}",,SELECT COUNT(*) FROM SCHOOLS WHERE OPENDATE BETWEEN '2000-01-01' AND '2005-12-31' AND COUNTY = 'STANISLAUS' AND FUNDINGTYPE = 'DIRECTLY FUNDED',"SELECT COUNT(SCHOOL) FROM SCHOOLS WHERE STRFTIME('%Y', OPENDATE) BETWEEN '2000' AND '2005' AND COUNTY = 'STANISLAUS' AND FUNDINGTYPE = 'DIRECTLY FUNDED'",correct
3,66,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'OPENDATE']}",,SELECT COUNT(*) FROM SCHOOLS WHERE OPENDATE BETWEEN '2000-01-01' AND '2005-12-31' AND COUNTY = 'STANISLAUS' AND FUNDINGTYPE = 'DIRECTLY FUNDED',"SELECT COUNT(SCHOOL) FROM SCHOOLS WHERE STRFTIME('%Y', OPENDATE) BETWEEN '2000' AND '2005' AND COUNTY = 'STANISLAUS' AND FUNDINGTYPE = 'DIRECTLY FUNDED'",correct
1,67,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `DF`,,SELECT SUM(AMOUNT) FROM DF WHERE ELEMENT = 'COMMUNITY COLLEGE DISTRICT' AND YEAR = '1989' AND CITY = 'SAN FRANCISCO',"SELECT COUNT(SCHOOL) FROM SCHOOLS WHERE STRFTIME('%Y', CLOSEDDATE) = '1989' AND CITY = 'SAN FRANCISCO' AND DOCTYPE = 'COMMUNITY COLLEGE DISTRICT'",incorrect
2,67,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `DF`,,SELECT SUM(AMOUNT) FROM DF WHERE ELEMENT = 'COMMUNITY COLLEGE DISTRICT' AND YEAR = '1989' AND CITY = 'SAN FRANCISCO',"SELECT COUNT(SCHOOL) FROM SCHOOLS WHERE STRFTIME('%Y', CLOSEDDATE) = '1989' AND CITY = 'SAN FRANCISCO' AND DOCTYPE = 'COMMUNITY COLLEGE DISTRICT'",incorrect
3,67,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `DF`,,SELECT SUM(AMOUNT) FROM DF WHERE ELEMENT = 'COMMUNITY COLLEGE DISTRICT' AND YEAR = '1989' AND CITY = 'SAN FRANCISCO',"SELECT COUNT(SCHOOL) FROM SCHOOLS WHERE STRFTIME('%Y', CLOSEDDATE) = '1989' AND CITY = 'SAN FRANCISCO' AND DOCTYPE = 'COMMUNITY COLLEGE DISTRICT'",incorrect
1,68,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'CLOSEDDATE']}",,SELECT SCHOOLS.COUNTY FROM SCHOOLS WHERE SCHOOLS.SOC = 11 AND SCHOOLS.CLOSEDDATE BETWEEN '1980-01-01' AND '1989-12-31' GROUP BY SCHOOLS.COUNTY ORDER BY COUNT(*) DESC LIMIT 1,"SELECT COUNTY FROM SCHOOLS WHERE STRFTIME('%Y', CLOSEDDATE) BETWEEN '1980' AND '1989' AND STATUSTYPE = 'CLOSED' AND SOC = 11 GROUP BY COUNTY ORDER BY COUNT(SCHOOL) DESC LIMIT 1",correct
2,68,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'CLOSEDDATE']}",,SELECT SCHOOLS.COUNTY FROM SCHOOLS WHERE SCHOOLS.SOC = 11 AND SCHOOLS.CLOSEDDATE BETWEEN '1980-01-01' AND '1989-12-31' GROUP BY SCHOOLS.COUNTY ORDER BY COUNT(*) DESC LIMIT 1,"SELECT COUNTY FROM SCHOOLS WHERE STRFTIME('%Y', CLOSEDDATE) BETWEEN '1980' AND '1989' AND STATUSTYPE = 'CLOSED' AND SOC = 11 GROUP BY COUNTY ORDER BY COUNT(SCHOOL) DESC LIMIT 1",correct
3,68,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'CLOSEDDATE']}",,SELECT SCHOOLS.COUNTY FROM SCHOOLS WHERE SCHOOLS.SOC = 11 AND SCHOOLS.CLOSEDDATE BETWEEN '1980-01-01' AND '1989-12-31' GROUP BY SCHOOLS.COUNTY ORDER BY COUNT(*) DESC LIMIT 1,"SELECT COUNTY FROM SCHOOLS WHERE STRFTIME('%Y', CLOSEDDATE) BETWEEN '1980' AND '1989' AND STATUSTYPE = 'CLOSED' AND SOC = 11 GROUP BY COUNTY ORDER BY COUNT(SCHOOL) DESC LIMIT 1",correct
1,69,True,,0.029245,SELECT SCHOOLS.NCESDIST FROM SCHOOLS WHERE SCHOOLS.SOC = '31',SELECT NCESDIST FROM SCHOOLS WHERE SOC = 31,correct
1,70,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,"SELECT (SELECT COUNT(*) FROM SCHOOLS WHERE COUNTY = 'ALPINE' AND SOCTYPE = 'DISTRICT COMMUNITY DAY SCHOOL' AND STATUSTYPE = 'ACTIVE') AS ACTIVE, (SELECT COUNT(*) FROM SCHOOLS WHERE COUNTY = 'ALPINE' AND SOCTYPE = 'DISTRICT COMMUNITY DAY SCHOOL' AND STATUSTYPE = 'CLOSED') AS CLOSED",SELECT COUNT(SCHOOL) FROM SCHOOLS WHERE (STATUSTYPE = 'CLOSED' OR STATUSTYPE = 'ACTIVE') AND SOC = 69 AND COUNTY = 'ALPINE',incorrect
2,70,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,"SELECT (SELECT COUNT(*) FROM SCHOOLS WHERE COUNTY = 'ALPINE' AND SOCTYPE = 'DISTRICT COMMUNITY DAY SCHOOL' AND STATUSTYPE = 'ACTIVE') AS ACTIVE, (SELECT COUNT(*) FROM SCHOOLS WHERE COUNTY = 'ALPINE' AND SOCTYPE = 'DISTRICT COMMUNITY DAY SCHOOL' AND STATUSTYPE = 'CLOSED') AS CLOSED",SELECT COUNT(SCHOOL) FROM SCHOOLS WHERE (STATUSTYPE = 'CLOSED' OR STATUSTYPE = 'ACTIVE') AND SOC = 69 AND COUNTY = 'ALPINE',incorrect
3,70,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,"SELECT (SELECT COUNT(*) FROM SCHOOLS WHERE COUNTY = 'ALPINE' AND SOCTYPE = 'DISTRICT COMMUNITY DAY SCHOOL' AND STATUSTYPE = 'ACTIVE') AS ACTIVE, (SELECT COUNT(*) FROM SCHOOLS WHERE COUNTY = 'ALPINE' AND SOCTYPE = 'DISTRICT COMMUNITY DAY SCHOOL' AND STATUSTYPE = 'CLOSED') AS CLOSED",SELECT COUNT(SCHOOL) FROM SCHOOLS WHERE (STATUSTYPE = 'CLOSED' OR STATUSTYPE = 'ACTIVE') AND SOC = 69 AND COUNTY = 'ALPINE',incorrect
1,71,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__DISTRICT CODE`,,SELECT SCHOOLS.DISTRICT FROM SCHOOLS WHERE SCHOOLS.CITY = 'FRESNO' AND SCHOOLS.MAGNET = 0,SELECT T1.`DISTRICT CODE` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.CITY = 'FRESNO' AND T2.MAGNET = 0,incorrect
2,71,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__DISTRICT CODE`,,SELECT SCHOOLS.DISTRICT FROM SCHOOLS WHERE SCHOOLS.CITY = 'FRESNO' AND SCHOOLS.MAGNET = 0,SELECT T1.`DISTRICT CODE` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.CITY = 'FRESNO' AND T2.MAGNET = 0,incorrect
3,71,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__DISTRICT CODE`,,SELECT SCHOOLS.DISTRICT FROM SCHOOLS WHERE SCHOOLS.CITY = 'FRESNO' AND SCHOOLS.MAGNET = 0,SELECT T1.`DISTRICT CODE` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.CITY = 'FRESNO' AND T2.MAGNET = 0,incorrect
1,72,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__ACADEMIC YEAR`,,SELECT FRPM.`ENROLLMENT (AGES 5-17)` FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE SCHOOLS.SCHOOL = 'FREMONT' AND FRPM.`ACADEMIC YEAR` = '2014-2015' AND SCHOOLS.EDOPSCODE = 'SSS',SELECT T1.`ENROLLMENT (AGES 5-17)` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.EDOPSCODE = 'SSS' AND T2.CITY = 'FREMONT' AND T1.`ACADEMIC YEAR` BETWEEN 2014 AND 2015,incorrect
2,72,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__ACADEMIC YEAR`,,SELECT FRPM.`ENROLLMENT (AGES 5-17)` FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE SCHOOLS.SCHOOL = 'FREMONT' AND FRPM.`ACADEMIC YEAR` = '2014-2015' AND SCHOOLS.EDOPSCODE = 'SSS',SELECT T1.`ENROLLMENT (AGES 5-17)` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.EDOPSCODE = 'SSS' AND T2.CITY = 'FREMONT' AND T1.`ACADEMIC YEAR` BETWEEN 2014 AND 2015,incorrect
3,72,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__ACADEMIC YEAR`,,SELECT FRPM.`ENROLLMENT (AGES 5-17)` FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE SCHOOLS.SCHOOL = 'FREMONT' AND FRPM.`ACADEMIC YEAR` = '2014-2015' AND SCHOOLS.EDOPSCODE = 'SSS',SELECT T1.`ENROLLMENT (AGES 5-17)` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.EDOPSCODE = 'SSS' AND T2.CITY = 'FREMONT' AND T1.`ACADEMIC YEAR` BETWEEN 2014 AND 2015,incorrect
1,73,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FRPM COUNT (AGES 5-17)`,,SELECT `FRPM`.`FRPM COUNT (AGES 5-17)` FROM `FRPM` INNER JOIN `SCHOOLS` ON `FRPM`.`CDSCODE` = `SCHOOLS`.`CDSCODE` WHERE `SCHOOLS`.`MAILSTREET` = 'PO BOX 1040' AND `SCHOOLS`.`SCHOOL` = 'YOUTH AUTHORITY SCHOOL';,SELECT T1.`FRPM COUNT (AGES 5-17)` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.MAILSTREET = 'PO BOX 1040' AND T2.SOCTYPE = 'YOUTH AUTHORITY FACILITIES',incorrect
2,73,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FRPM COUNT (AGES 5-17)`,,SELECT `FRPM`.`FRPM COUNT (AGES 5-17)` FROM `FRPM` INNER JOIN `SCHOOLS` ON `FRPM`.`CDSCODE` = `SCHOOLS`.`CDSCODE` WHERE `SCHOOLS`.`MAILSTREET` = 'PO BOX 1040' AND `SCHOOLS`.`SCHOOL` = 'YOUTH AUTHORITY SCHOOL';,SELECT T1.`FRPM COUNT (AGES 5-17)` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.MAILSTREET = 'PO BOX 1040' AND T2.SOCTYPE = 'YOUTH AUTHORITY FACILITIES',incorrect
3,73,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__FRPM COUNT (AGES 5-17)`,,SELECT `FRPM`.`FRPM COUNT (AGES 5-17)` FROM `FRPM` INNER JOIN `SCHOOLS` ON `FRPM`.`CDSCODE` = `SCHOOLS`.`CDSCODE` WHERE `SCHOOLS`.`MAILSTREET` = 'PO BOX 1040' AND `SCHOOLS`.`SCHOOL` = 'YOUTH AUTHORITY SCHOOL';,SELECT T1.`FRPM COUNT (AGES 5-17)` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.MAILSTREET = 'PO BOX 1040' AND T2.SOCTYPE = 'YOUTH AUTHORITY FACILITIES',incorrect
1,74,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SCHOOLS__GRADE`,,SELECT MIN(SCHOOLS.GRADE) FROM SCHOOLS WHERE SCHOOLS.NCESDIST = '0613360' AND SCHOOLS.EDOPSCODE = 'SPECON';,SELECT MIN(T1.`LOW GRADE`) FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.NCESDIST = '0613360' AND T2.EDOPSCODE = 'SPECON',incorrect
2,74,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SCHOOLS__GRADE`,,SELECT MIN(SCHOOLS.GRADE) FROM SCHOOLS WHERE SCHOOLS.NCESDIST = '0613360' AND SCHOOLS.EDOPSCODE = 'SPECON';,SELECT MIN(T1.`LOW GRADE`) FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.NCESDIST = '0613360' AND T2.EDOPSCODE = 'SPECON',incorrect
3,74,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SCHOOLS__GRADE`,,SELECT MIN(SCHOOLS.GRADE) FROM SCHOOLS WHERE SCHOOLS.NCESDIST = '0613360' AND SCHOOLS.EDOPSCODE = 'SPECON';,SELECT MIN(T1.`LOW GRADE`) FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.NCESDIST = '0613360' AND T2.EDOPSCODE = 'SPECON',incorrect
1,75,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__NSLP PROVISION STATUS`,,"SELECT SCHOOLS.EILNAME, SCHOOLS.SCHOOL FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE FRPM.`NSLP PROVISION STATUS` = 'BREAKFAST PROVISION 2' AND FRPM.`COUNTY CODE` = '37'","SELECT T2.EILNAME, T2.SCHOOL FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T1.`NSLP PROVISION STATUS` = 'BREAKFAST PROVISION 2' AND T1.`COUNTY CODE` = 37",incorrect
2,75,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__NSLP PROVISION STATUS`,,"SELECT SCHOOLS.EILNAME, SCHOOLS.SCHOOL FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE FRPM.`NSLP PROVISION STATUS` = 'BREAKFAST PROVISION 2' AND FRPM.`COUNTY CODE` = '37'","SELECT T2.EILNAME, T2.SCHOOL FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T1.`NSLP PROVISION STATUS` = 'BREAKFAST PROVISION 2' AND T1.`COUNTY CODE` = 37",incorrect
3,75,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__NSLP PROVISION STATUS`,,"SELECT SCHOOLS.EILNAME, SCHOOLS.SCHOOL FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE FRPM.`NSLP PROVISION STATUS` = 'BREAKFAST PROVISION 2' AND FRPM.`COUNTY CODE` = '37'","SELECT T2.EILNAME, T2.SCHOOL FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T1.`NSLP PROVISION STATUS` = 'BREAKFAST PROVISION 2' AND T1.`COUNTY CODE` = 37",incorrect
1,76,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__LUNCHPROVISION`,,SELECT SCHOOLS.CITY FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.EILCODE = 'HS' AND FRPM.LUNCHPROVISION = 2 AND SCHOOLS.LOWESTGRADE = 9 AND SCHOOLS.HIGHESTGRADE = 12 AND SCHOOLS.COUNTY = 'MERCED';,SELECT T2.CITY FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T1.`NSLP PROVISION STATUS` = 'LUNCH PROVISION 2' AND T2.COUNTY = 'MERCED' AND T1.`LOW GRADE` = 9 AND T1.`HIGH GRADE` = 12 AND T2.EILCODE = 'HS',incorrect
2,76,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__LUNCHPROVISION`,,SELECT SCHOOLS.CITY FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.EILCODE = 'HS' AND FRPM.LUNCHPROVISION = 2 AND SCHOOLS.LOWESTGRADE = 9 AND SCHOOLS.HIGHESTGRADE = 12 AND SCHOOLS.COUNTY = 'MERCED';,SELECT T2.CITY FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T1.`NSLP PROVISION STATUS` = 'LUNCH PROVISION 2' AND T2.COUNTY = 'MERCED' AND T1.`LOW GRADE` = 9 AND T1.`HIGH GRADE` = 12 AND T2.EILCODE = 'HS',incorrect
3,76,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__LUNCHPROVISION`,,SELECT SCHOOLS.CITY FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.EILCODE = 'HS' AND FRPM.LUNCHPROVISION = 2 AND SCHOOLS.LOWESTGRADE = 9 AND SCHOOLS.HIGHESTGRADE = 12 AND SCHOOLS.COUNTY = 'MERCED';,SELECT T2.CITY FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T1.`NSLP PROVISION STATUS` = 'LUNCH PROVISION 2' AND T2.COUNTY = 'MERCED' AND T1.`LOW GRADE` = 9 AND T1.`HIGH GRADE` = 12 AND T2.EILCODE = 'HS',incorrect
1,77,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__PERCENT (%) ELIGIBLE FRPM (AGES 5-17)`,,"SELECT SCHOOLS.SCHOOL, FRPM.`PERCENT (%) ELIGIBLE FRPM (AGES 5-17)` FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.COUNTY = 'LOS ANGELES' AND SCHOOLS.GSSERVED = 'K-9'","SELECT T2.SCHOOL, T1.`FRPM COUNT (AGES 5-17)` * 100 / T1.`ENROLLMENT (AGES 5-17)` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.COUNTY = 'LOS ANGELES' AND T2.GSSERVED = 'K-9'",incorrect
2,77,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__PERCENT (%) ELIGIBLE FRPM (AGES 5-17)`,,"SELECT SCHOOLS.SCHOOL, FRPM.`PERCENT (%) ELIGIBLE FRPM (AGES 5-17)` FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.COUNTY = 'LOS ANGELES' AND SCHOOLS.GSSERVED = 'K-9'","SELECT T2.SCHOOL, T1.`FRPM COUNT (AGES 5-17)` * 100 / T1.`ENROLLMENT (AGES 5-17)` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.COUNTY = 'LOS ANGELES' AND T2.GSSERVED = 'K-9'",incorrect
3,77,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__PERCENT (%) ELIGIBLE FRPM (AGES 5-17)`,,"SELECT SCHOOLS.SCHOOL, FRPM.`PERCENT (%) ELIGIBLE FRPM (AGES 5-17)` FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.COUNTY = 'LOS ANGELES' AND SCHOOLS.GSSERVED = 'K-9'","SELECT T2.SCHOOL, T1.`FRPM COUNT (AGES 5-17)` * 100 / T1.`ENROLLMENT (AGES 5-17)` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.COUNTY = 'LOS ANGELES' AND T2.GSSERVED = 'K-9'",incorrect
1,78,True,,0.082991,SELECT SCHOOLS.GSSERVED FROM SCHOOLS WHERE SCHOOLS.CITY = 'ADELANTO' GROUP BY SCHOOLS.GSSERVED ORDER BY COUNT(*) DESC LIMIT 1,SELECT GSSERVED FROM SCHOOLS WHERE CITY = 'ADELANTO' GROUP BY GSSERVED ORDER BY COUNT(GSSERVED) DESC LIMIT 1,correct
1,79,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE FRPM (
	CDSCODE VARCHAR(20),
	ACADEMIC_YEAR VARCHAR(20),
	COUNTY_CODE VARCHAR(20),
	DISTRICT_CODE VARCHAR(20),
	SCHOOL_CODE VARCHAR(20),
	COUNTY_NAME VARCHAR(20),
	DISTRICT_NAME VARCHAR(20),
	SCHOOL_NAME VARCHAR(20),
	DISTRICT_TYPE VARCHAR(20),
	SCHOOL_TYPE VARCHAR(20),
	EDUCATIONAL_OPTION_TYPE VARCHAR(20),
	NSLP_PROVISION_STATUS VARCHAR(20),
	CHARTER_SCHOOL_YN INTEGER,
	CHARTER_SCHOOL_NUMBER VARCHAR(20),
	CHARTER_FUNDING_TYPE VARCHAR(20),
	IRC INTEGER,
	LOW_GRADE VARCHAR(20),
	HIGH_GRADE VARCHAR(20),
	ENROLLMENT_K12 INTEGER,
	FREE_MEAL_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FREE_K12 INTEGER,
	FRPM_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FRPM_K12 INTEGER,
	ENROLLMENT_AGES_5_17 INTEGER,
	FREE_MEAL_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FREE_AGES_5_17 INTEGER,
	FRPM_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FRPM_AGES_5_17 INTEGER,
	CALPADS_FALL1_CERTIFICATION_STATUS INTEGER
);
INSERT INTO FRPM VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
CREATE TABLE SATSCORES (
	CDS VARCHAR(20),
	RTYPE VARCHAR(20),
	SNAME VARCHAR(20),
	DNAME VARCHAR(20),
	CNAME VARCHAR(20),
	ENROLL12 INTEGER,
	NUMTSTTAKR INTEGER,
	AVGSCRREAD INTEGER,
	AVGSCRMATH INTEGER,
	AVGSCRWRITE INTEGER,
	NUMGE1500 INTEGER
);
INSERT INTO SATSCORES VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, 0);
CREATE TABLE SCHOOLS (
	CDSCODE VARCHAR(20),
	NCESDIST VARCHAR(20),
	NCESSCHOOL VARCHAR(20),
	STATUSTYPE VARCHAR(20),
	COUNTY VARCHAR(20),
	DISTRICT VARCHAR(20),
	SCHOOL VARCHAR(20),
	STREET VARCHAR(20),
	STREETABR VARCHAR(20),
	CITY VARCHAR(20),
	ZIP VARCHAR(20),
	STATE VARCHAR(20),
	MAILSTREET VARCHAR(20),
	MAILSTRABR VARCHAR(20),
	MAILCITY VARCHAR(20),
	MAILZIP VARCHAR(20),
	MAILSTATE VARCHAR(20),
	PHONE VARCHAR(20),
	EXT VARCHAR(20),
	WEBSITE VARCHAR(20),
	OPENDATE DATE,
	CLOSEDDATE DATE,
	CHARTER INTEGER,
	CHARTERNUM VARCHAR(20),
	FUNDINGTYPE VARCHAR(20),
	DOC VARCHAR(20),
	DOCTYPE VARCHAR(20),
	SOC VARCHAR(20),
	SOCTYPE VARCHAR(20),
	EDOPSCODE VARCHAR(20),
	EDOPSNAME VARCHAR(20),
	EILCODE VARCHAR(20),
	EILNAME VARCHAR(20),
	GSOFFERED VARCHAR(20),
	GSSERVED VARCHAR(20),
	VIRTUAL VARCHAR(20),
	MAGNET INTEGER,
	LATITUDE INTEGER,
	LONGITUDE INTEGER,
	ADMFNAME1 VARCHAR(20),
	ADMLNAME1 VARCHAR(20),
	ADMEMAIL1 VARCHAR(20),
	ADMFNAME2 VARCHAR(20),
	ADMLNAME2 VARCHAR(20),
	ADMEMAIL2 VARCHAR(20),
	ADMFNAME3 VARCHAR(20),
	ADMLNAME3 VARCHAR(20),
	ADMEMAIL3 VARCHAR(20),
	LASTUPDATE DATE
);
INSERT INTO SCHOOLS VALUES ('2147483648', '2147483648', '2147483648', '2147483648', 'SANTA BARBARA', '2147483648', NULL, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', '1970-01-01', 2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 'F', 3, 4, 5, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01');
-- ----------sql1------------
-- SANTA BARBARA, 0
SELECT SCHOOLS.COUNTY, COUNT(SCHOOLS.SCHOOL) FROM SCHOOLS WHERE SCHOOLS.VIRTUAL = 'F' AND (SCHOOLS.COUNTY = 'SAN DIEGO' OR SCHOOLS.COUNTY = 'SANTA BARBARA') GROUP BY SCHOOLS.COUNTY ORDER BY COUNT(SCHOOLS.SCHOOL) DESC LIMIT 1;
-- ----------sql2------------
-- SANTA BARBARA, 1
SELECT COUNTY, COUNT(VIRTUAL) FROM SCHOOLS WHERE (COUNTY = 'SAN DIEGO' OR COUNTY = 'SANTA BARBARA') AND VIRTUAL = 'F' GROUP BY COUNTY ORDER BY COUNT(VIRTUAL) DESC LIMIT 1;
",0.231352,"SELECT SCHOOLS.COUNTY, COUNT(SCHOOLS.SCHOOL) FROM SCHOOLS WHERE SCHOOLS.VIRTUAL = 'F' AND (SCHOOLS.COUNTY = 'SAN DIEGO' OR SCHOOLS.COUNTY = 'SANTA BARBARA') GROUP BY SCHOOLS.COUNTY ORDER BY COUNT(SCHOOLS.SCHOOL) DESC LIMIT 1","SELECT COUNTY, COUNT(VIRTUAL) FROM SCHOOLS WHERE (COUNTY = 'SAN DIEGO' OR COUNTY = 'SANTA BARBARA') AND VIRTUAL = 'F' GROUP BY COUNTY ORDER BY COUNT(VIRTUAL) DESC LIMIT 1",correct
1,80,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__SCHOOL TYPE`,,"SELECT SCHOOLS.SCHOOL, SCHOOLS.LATITUDE FROM SCHOOLS ORDER BY SCHOOLS.LATITUDE DESC LIMIT 1","SELECT T1.`SCHOOL TYPE`, T1.`SCHOOL NAME`, T2.LATITUDE FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE ORDER BY T2.LATITUDE DESC LIMIT 1",incorrect
2,80,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__SCHOOL TYPE`,,"SELECT SCHOOLS.SCHOOL, SCHOOLS.LATITUDE FROM SCHOOLS ORDER BY SCHOOLS.LATITUDE DESC LIMIT 1","SELECT T1.`SCHOOL TYPE`, T1.`SCHOOL NAME`, T2.LATITUDE FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE ORDER BY T2.LATITUDE DESC LIMIT 1",incorrect
3,80,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__SCHOOL TYPE`,,"SELECT SCHOOLS.SCHOOL, SCHOOLS.LATITUDE FROM SCHOOLS ORDER BY SCHOOLS.LATITUDE DESC LIMIT 1","SELECT T1.`SCHOOL TYPE`, T1.`SCHOOL NAME`, T2.LATITUDE FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE ORDER BY T2.LATITUDE DESC LIMIT 1",incorrect
1,81,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__LOW GRADE`,,"SELECT SCHOOLS.CITY, SCHOOLS.SCHOOL FROM SCHOOLS WHERE SCHOOLS.STATE = 'CA' ORDER BY SCHOOLS.LATITUDE ASC LIMIT 1","SELECT T2.CITY, T1.`LOW GRADE`, T1.`SCHOOL NAME` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.STATE = 'CA' ORDER BY T2.LATITUDE ASC LIMIT 1",incorrect
2,81,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__LOW GRADE`,,"SELECT SCHOOLS.CITY, SCHOOLS.SCHOOL FROM SCHOOLS WHERE SCHOOLS.STATE = 'CA' ORDER BY SCHOOLS.LATITUDE ASC LIMIT 1","SELECT T2.CITY, T1.`LOW GRADE`, T1.`SCHOOL NAME` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.STATE = 'CA' ORDER BY T2.LATITUDE ASC LIMIT 1",incorrect
3,81,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__LOW GRADE`,,"SELECT SCHOOLS.CITY, SCHOOLS.SCHOOL FROM SCHOOLS WHERE SCHOOLS.STATE = 'CA' ORDER BY SCHOOLS.LATITUDE ASC LIMIT 1","SELECT T2.CITY, T1.`LOW GRADE`, T1.`SCHOOL NAME` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.STATE = 'CA' ORDER BY T2.LATITUDE ASC LIMIT 1",incorrect
1,82,True,,0.026374,SELECT SCHOOLS.GSOFFERED FROM SCHOOLS ORDER BY SCHOOLS.LONGITUDE DESC LIMIT 1;,SELECT GSOFFERED FROM SCHOOLS ORDER BY ABS(LONGITUDE) DESC LIMIT 1,incorrect
1,83,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__NSLP PROVISION STATUS`,,"SELECT SCHOOLS.CITY, COUNT(SCHOOLS.SCHOOL) FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.MAGNET = 1 AND SCHOOLS.GSSERVED = 'K-8' AND FRPM.`NSLP PROVISION STATUS` = 'MULTIPLE PROVISION TYPES' GROUP BY SCHOOLS.CITY","SELECT T2.CITY, COUNT(T2.CDSCODE) FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.MAGNET = 1 AND T2.GSOFFERED = 'K-8' AND T1.`NSLP PROVISION STATUS` = 'MULTIPLE PROVISION TYPES' GROUP BY T2.CITY",incorrect
2,83,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__NSLP PROVISION STATUS`,,"SELECT SCHOOLS.CITY, COUNT(SCHOOLS.SCHOOL) FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.MAGNET = 1 AND SCHOOLS.GSSERVED = 'K-8' AND FRPM.`NSLP PROVISION STATUS` = 'MULTIPLE PROVISION TYPES' GROUP BY SCHOOLS.CITY","SELECT T2.CITY, COUNT(T2.CDSCODE) FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.MAGNET = 1 AND T2.GSOFFERED = 'K-8' AND T1.`NSLP PROVISION STATUS` = 'MULTIPLE PROVISION TYPES' GROUP BY T2.CITY",incorrect
3,83,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__NSLP PROVISION STATUS`,,"SELECT SCHOOLS.CITY, COUNT(SCHOOLS.SCHOOL) FROM SCHOOLS INNER JOIN FRPM ON SCHOOLS.CDSCODE = FRPM.CDSCODE WHERE SCHOOLS.MAGNET = 1 AND SCHOOLS.GSSERVED = 'K-8' AND FRPM.`NSLP PROVISION STATUS` = 'MULTIPLE PROVISION TYPES' GROUP BY SCHOOLS.CITY","SELECT T2.CITY, COUNT(T2.CDSCODE) FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.MAGNET = 1 AND T2.GSOFFERED = 'K-8' AND T1.`NSLP PROVISION STATUS` = 'MULTIPLE PROVISION TYPES' GROUP BY T2.CITY",incorrect
1,84,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE FRPM (
	CDSCODE VARCHAR(20),
	ACADEMIC_YEAR VARCHAR(20),
	COUNTY_CODE VARCHAR(20),
	DISTRICT_CODE VARCHAR(20),
	SCHOOL_CODE VARCHAR(20),
	COUNTY_NAME VARCHAR(20),
	DISTRICT_NAME VARCHAR(20),
	SCHOOL_NAME VARCHAR(20),
	DISTRICT_TYPE VARCHAR(20),
	SCHOOL_TYPE VARCHAR(20),
	EDUCATIONAL_OPTION_TYPE VARCHAR(20),
	NSLP_PROVISION_STATUS VARCHAR(20),
	CHARTER_SCHOOL_YN INTEGER,
	CHARTER_SCHOOL_NUMBER VARCHAR(20),
	CHARTER_FUNDING_TYPE VARCHAR(20),
	IRC INTEGER,
	LOW_GRADE VARCHAR(20),
	HIGH_GRADE VARCHAR(20),
	ENROLLMENT_K12 INTEGER,
	FREE_MEAL_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FREE_K12 INTEGER,
	FRPM_COUNT_K12 INTEGER,
	PERCENT_ELIGIBLE_FRPM_K12 INTEGER,
	ENROLLMENT_AGES_5_17 INTEGER,
	FREE_MEAL_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FREE_AGES_5_17 INTEGER,
	FRPM_COUNT_AGES_5_17 INTEGER,
	PERCENT_ELIGIBLE_FRPM_AGES_5_17 INTEGER,
	CALPADS_FALL1_CERTIFICATION_STATUS INTEGER
);
INSERT INTO FRPM VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
CREATE TABLE SATSCORES (
	CDS VARCHAR(20),
	RTYPE VARCHAR(20),
	SNAME VARCHAR(20),
	DNAME VARCHAR(20),
	CNAME VARCHAR(20),
	ENROLL12 INTEGER,
	NUMTSTTAKR INTEGER,
	AVGSCRREAD INTEGER,
	AVGSCRMATH INTEGER,
	AVGSCRWRITE INTEGER,
	NUMGE1500 INTEGER
);
INSERT INTO SATSCORES VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, 0);
CREATE TABLE SCHOOLS (
	CDSCODE VARCHAR(20),
	NCESDIST VARCHAR(20),
	NCESSCHOOL VARCHAR(20),
	STATUSTYPE VARCHAR(20),
	COUNTY VARCHAR(20),
	DISTRICT VARCHAR(20),
	SCHOOL VARCHAR(20),
	STREET VARCHAR(20),
	STREETABR VARCHAR(20),
	CITY VARCHAR(20),
	ZIP VARCHAR(20),
	STATE VARCHAR(20),
	MAILSTREET VARCHAR(20),
	MAILSTRABR VARCHAR(20),
	MAILCITY VARCHAR(20),
	MAILZIP VARCHAR(20),
	MAILSTATE VARCHAR(20),
	PHONE VARCHAR(20),
	EXT VARCHAR(20),
	WEBSITE VARCHAR(20),
	OPENDATE DATE,
	CLOSEDDATE DATE,
	CHARTER INTEGER,
	CHARTERNUM VARCHAR(20),
	FUNDINGTYPE VARCHAR(20),
	DOC VARCHAR(20),
	DOCTYPE VARCHAR(20),
	SOC VARCHAR(20),
	SOCTYPE VARCHAR(20),
	EDOPSCODE VARCHAR(20),
	EDOPSNAME VARCHAR(20),
	EILCODE VARCHAR(20),
	EILNAME VARCHAR(20),
	GSOFFERED VARCHAR(20),
	GSSERVED VARCHAR(20),
	VIRTUAL VARCHAR(20),
	MAGNET INTEGER,
	LATITUDE INTEGER,
	LONGITUDE INTEGER,
	ADMFNAME1 VARCHAR(20),
	ADMLNAME1 VARCHAR(20),
	ADMEMAIL1 VARCHAR(20),
	ADMFNAME2 VARCHAR(20),
	ADMLNAME2 VARCHAR(20),
	ADMEMAIL2 VARCHAR(20),
	ADMFNAME3 VARCHAR(20),
	ADMLNAME3 VARCHAR(20),
	ADMEMAIL3 VARCHAR(20),
	LASTUPDATE DATE
);
INSERT INTO SCHOOLS VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', '1970-01-01', 2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 5, 4, 3, NULL, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01');
-- ----------sql1------------
-- NULL, 2147483648
SELECT SCHOOLS.ADMFNAME1, SCHOOLS.DISTRICT FROM SCHOOLS GROUP BY SCHOOLS.ADMFNAME1 ORDER BY COUNT(*) DESC LIMIT 2;
-- ----------sql2------------
SELECT DISTINCT T1.ADMFNAME1, T1.DISTRICT FROM SCHOOLS AS T1 INNER JOIN ( SELECT ADMFNAME1 FROM SCHOOLS GROUP BY ADMFNAME1 ORDER BY COUNT(ADMFNAME1) DESC LIMIT 2 ) AS T2 ON T1.ADMFNAME1 = T2.ADMFNAME1;
",0.10261,"SELECT SCHOOLS.ADMFNAME1, SCHOOLS.DISTRICT FROM SCHOOLS GROUP BY SCHOOLS.ADMFNAME1 ORDER BY COUNT(*) DESC LIMIT 2","SELECT DISTINCT T1.ADMFNAME1, T1.DISTRICT FROM SCHOOLS AS T1 INNER JOIN ( SELECT ADMFNAME1 FROM SCHOOLS GROUP BY ADMFNAME1 ORDER BY COUNT(ADMFNAME1) DESC LIMIT 2 ) AS T2 ON T1.ADMFNAME1 = T2.ADMFNAME1",incorrect
1,85,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__PERCENT (%) ELIGIBLE FREE (K-12)`,,"SELECT FRPM.`PERCENT (%) ELIGIBLE FREE (K-12)`, FRPM.`DISTRICT CODE` FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE SCHOOLS.ADMFNAME1 = 'ALUSINE';","SELECT T1.`FREE MEAL COUNT (K-12)` * 100 / T1.`ENROLLMENT (K-12)`, T1.`DISTRICT CODE` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.ADMFNAME1 = 'ALUSINE'",incorrect
2,85,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__PERCENT (%) ELIGIBLE FREE (K-12)`,,"SELECT FRPM.`PERCENT (%) ELIGIBLE FREE (K-12)`, FRPM.`DISTRICT CODE` FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE SCHOOLS.ADMFNAME1 = 'ALUSINE';","SELECT T1.`FREE MEAL COUNT (K-12)` * 100 / T1.`ENROLLMENT (K-12)`, T1.`DISTRICT CODE` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.ADMFNAME1 = 'ALUSINE'",incorrect
3,85,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FRPM__PERCENT (%) ELIGIBLE FREE (K-12)`,,"SELECT FRPM.`PERCENT (%) ELIGIBLE FREE (K-12)`, FRPM.`DISTRICT CODE` FROM FRPM INNER JOIN SCHOOLS ON FRPM.CDSCODE = SCHOOLS.CDSCODE WHERE SCHOOLS.ADMFNAME1 = 'ALUSINE';","SELECT T1.`FREE MEAL COUNT (K-12)` * 100 / T1.`ENROLLMENT (K-12)`, T1.`DISTRICT CODE` FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.ADMFNAME1 = 'ALUSINE'",incorrect
1,86,True,,0.03101,"SELECT SCHOOLS.ADMLNAME1, SCHOOLS.DISTRICT, SCHOOLS.COUNTY, SCHOOLS.SCHOOL FROM SCHOOLS WHERE SCHOOLS.CHARTERNUM = 40","SELECT ADMLNAME1, DISTRICT, COUNTY, SCHOOL FROM SCHOOLS WHERE CHARTERNUM = '0040'",incorrect
1,87,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T2__OPENDATE']}",,"SELECT SCHOOLS.ADMEMAIL1, SCHOOLS.ADMEMAIL2, SCHOOLS.ADMEMAIL3 FROM SCHOOLS WHERE SCHOOLS.COUNTY = 'SAN BERNARDINO' AND SCHOOLS.CITY = 'SAN BERNARDINO CITY UNIFIED' AND SCHOOLS.OPENDATE BETWEEN '1/1/2009' AND '12/31/2010' AND SCHOOLS.SOC = 62 AND SCHOOLS.DOC = 54","SELECT T2.ADMEMAIL1, T2.ADMEMAIL2 FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.COUNTY = 'SAN BERNARDINO' AND T2.CITY = 'SAN BERNARDINO' AND T2.DOC = 54 AND STRFTIME('%Y', T2.OPENDATE) BETWEEN '2009' AND '2010' AND T2.SOC = 62",incorrect
2,87,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T2__OPENDATE']}",,"SELECT SCHOOLS.ADMEMAIL1, SCHOOLS.ADMEMAIL2, SCHOOLS.ADMEMAIL3 FROM SCHOOLS WHERE SCHOOLS.COUNTY = 'SAN BERNARDINO' AND SCHOOLS.CITY = 'SAN BERNARDINO CITY UNIFIED' AND SCHOOLS.OPENDATE BETWEEN '1/1/2009' AND '12/31/2010' AND SCHOOLS.SOC = 62 AND SCHOOLS.DOC = 54","SELECT T2.ADMEMAIL1, T2.ADMEMAIL2 FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.COUNTY = 'SAN BERNARDINO' AND T2.CITY = 'SAN BERNARDINO' AND T2.DOC = 54 AND STRFTIME('%Y', T2.OPENDATE) BETWEEN '2009' AND '2010' AND T2.SOC = 62",incorrect
3,87,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T2__OPENDATE']}",,"SELECT SCHOOLS.ADMEMAIL1, SCHOOLS.ADMEMAIL2, SCHOOLS.ADMEMAIL3 FROM SCHOOLS WHERE SCHOOLS.COUNTY = 'SAN BERNARDINO' AND SCHOOLS.CITY = 'SAN BERNARDINO CITY UNIFIED' AND SCHOOLS.OPENDATE BETWEEN '1/1/2009' AND '12/31/2010' AND SCHOOLS.SOC = 62 AND SCHOOLS.DOC = 54","SELECT T2.ADMEMAIL1, T2.ADMEMAIL2 FROM FRPM AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDSCODE = T2.CDSCODE WHERE T2.COUNTY = 'SAN BERNARDINO' AND T2.CITY = 'SAN BERNARDINO' AND T2.DOC = 54 AND STRFTIME('%Y', T2.OPENDATE) BETWEEN '2009' AND '2010' AND T2.SOC = 62",incorrect
1,88,True,,0.094761,"SELECT SCHOOLS.ADMEMAIL1, SCHOOLS.SCHOOL FROM SCHOOLS INNER JOIN SATSCORES ON SCHOOLS.CDSCODE = SATSCORES.CDS ORDER BY SATSCORES.NUMGE1500 DESC LIMIT 1","SELECT T2.ADMEMAIL1, T2.SCHOOL FROM SATSCORES AS T1 INNER JOIN SCHOOLS AS T2 ON T1.CDS = T2.CDSCODE ORDER BY T1.NUMGE1500 DESC LIMIT 1",incorrect
1,89,True,,0.071932,SELECT COUNT(ACCOUNT.ACCOUNT_ID) FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE ACCOUNT.FREQUENCY = 'POPLATEK PO OBRATU' AND DISTRICT.A3 = 'EAST BOHEMIA',SELECT COUNT(T2.ACCOUNT_ID) FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.A3 = 'EAST BOHEMIA' AND T2.FREQUENCY = 'POPLATEK PO OBRATU',
1,90,True,,0.081901,SELECT COUNT(*) FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID INNER JOIN LOAN ON ACCOUNT.ACCOUNT_ID = LOAN.ACCOUNT_ID WHERE DISTRICT.A3 = 'PRAGUE';,SELECT COUNT(T1.ACCOUNT_ID) FROM ACCOUNT AS T1 INNER JOIN LOAN AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN DISTRICT AS T3 ON T1.DISTRICT_ID = T3.DISTRICT_ID WHERE T3.A3 = 'PRAGUE',
1,91,ERROR,"NotImplementedError: {'iif': [{'gt': [{'avg': 'A13'}, {'avg': 'A12'}]}, 1996, 1995]}",,SELECT CASE WHEN AVG(DISTRICT.A12) > AVG(DISTRICT.A13) THEN '1995 HAS HIGHER PERCENTAGE' ELSE '1996 HAS HIGHER PERCENTAGE' END FROM DISTRICT,"SELECT DISTINCT IIF(AVG(A13) > AVG(A12), '1996', '1995') FROM DISTRICT",
2,91,ERROR,"NotImplementedError: {'iif': [{'gt': [{'avg': 'A13'}, {'avg': 'A12'}]}, 1996, 1995]}",,SELECT CASE WHEN AVG(DISTRICT.A12) > AVG(DISTRICT.A13) THEN '1995 HAS HIGHER PERCENTAGE' ELSE '1996 HAS HIGHER PERCENTAGE' END FROM DISTRICT,"SELECT DISTINCT IIF(AVG(A13) > AVG(A12), '1996', '1995') FROM DISTRICT",
3,91,ERROR,"NotImplementedError: {'iif': [{'gt': [{'avg': 'A13'}, {'avg': 'A12'}]}, 1996, 1995]}",,SELECT CASE WHEN AVG(DISTRICT.A12) > AVG(DISTRICT.A13) THEN '1995 HAS HIGHER PERCENTAGE' ELSE '1996 HAS HIGHER PERCENTAGE' END FROM DISTRICT,"SELECT DISTINCT IIF(AVG(A13) > AVG(A12), '1996', '1995') FROM DISTRICT",
1,92,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ACCOUNT (
	ACCOUNT_ID INTEGER,
	DISTRICT_ID INTEGER,
	FREQUENCY VARCHAR(20),
	DATE DATE
);
INSERT INTO ACCOUNT VALUES (5, 2, '2147483648', '1970-01-01');
CREATE TABLE CARD (
	CARD_ID INTEGER,
	DISP_ID INTEGER,
	TYPE VARCHAR(20),
	ISSUED DATE
);
INSERT INTO CARD VALUES (0, 3, '2147483648', '1970-01-01');
CREATE TABLE CLIENT (
	CLIENT_ID INTEGER,
	GENDER VARCHAR(20),
	BIRTH_DATE DATE,
	DISTRICT_ID INTEGER
);
INSERT INTO CLIENT VALUES (4, 'F', '1970-01-01', 2);
CREATE TABLE DISP (
	DISP_ID INTEGER,
	CLIENT_ID INTEGER,
	ACCOUNT_ID INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO DISP VALUES (3, 4, 5, '2147483648');
CREATE TABLE DISTRICT (
	DISTRICT_ID INTEGER,
	A2 VARCHAR(20),
	A3 VARCHAR(20),
	A4 VARCHAR(20),
	A5 VARCHAR(20),
	A6 VARCHAR(20),
	A7 VARCHAR(20),
	A8 VARCHAR(20),
	A9 INTEGER,
	A10 INTEGER,
	A11 INTEGER,
	A12 INTEGER,
	A13 INTEGER,
	A14 INTEGER,
	A15 INTEGER,
	A16 INTEGER
);
INSERT INTO DISTRICT VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 6, 7, 10000, 8, 9, 10, 11, 12);
CREATE TABLE LOAN (
	LOAN_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	AMOUNT INTEGER,
	DURATION INTEGER,
	PAYMENTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO LOAN VALUES (0, 5, '1970-01-01', 0, 0, 0, '2147483648');
CREATE TABLE ORDER (
	ORDER_ID INTEGER,
	ACCOUNT_ID INTEGER,
	BANK_TO VARCHAR(20),
	ACCOUNT_TO INTEGER,
	AMOUNT INTEGER,
	K_SYMBOL VARCHAR(20)
);
INSERT INTO ORDER VALUES (0, 5, '2147483648', 0, 0, '2147483648');
CREATE TABLE TRANS (
	TRANS_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	TYPE VARCHAR(20),
	OPERATION VARCHAR(20),
	AMOUNT INTEGER,
	BALANCE INTEGER,
	K_SYMBOL VARCHAR(20),
	BANK VARCHAR(20),
	ACCOUNT INTEGER
);
INSERT INTO TRANS VALUES (0, 5, '1970-01-01', '2147483648', '2147483648', 0, 0, '2147483648', '2147483648', 0);
-- ----------sql1------------
-- 0
SELECT COUNT(DISTINCT CLIENT.DISTRICT_ID) FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE CLIENT.GENDER = 'F' AND DISTRICT.A11 > 6000 AND DISTRICT.A11 < 10000;
-- ----------sql2------------
-- 1
SELECT COUNT(DISTINCT T2.DISTRICT_ID)  FROM CLIENT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.GENDER = 'F' AND T2.A11 BETWEEN 6000 AND 10000;
",0.112922,SELECT COUNT(DISTINCT CLIENT.DISTRICT_ID) FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE CLIENT.GENDER = 'F' AND DISTRICT.A11 > 6000 AND DISTRICT.A11 < 10000,SELECT COUNT(DISTINCT T2.DISTRICT_ID)  FROM CLIENT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.GENDER = 'F' AND T2.A11 BETWEEN 6000 AND 10000,
1,93,True,,0.0831269999999999,SELECT COUNT(*) FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A3 = 'NORTH BOHEMIA' AND CLIENT.GENDER = 'M' AND DISTRICT.A11 > 8000,SELECT COUNT(T1.CLIENT_ID) FROM CLIENT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.GENDER = 'M' AND T2.A3 = 'NORTH BOHEMIA' AND T2.A11 > 8000,
1,94,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute DISTRICT__A11`,,"SELECT CLIENT.CLIENT_ID, (SELECT MAX(DISTRICT.A11) FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID) - DISTRICT.A11 AS GAP FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE CLIENT.GENDER = 'F' ORDER BY CLIENT.BIRTH_DATE ASC, DISTRICT.A11 ASC LIMIT 1","SELECT T1.ACCOUNT_ID , ( SELECT MAX(A11) - MIN(A11) FROM DISTRICT ) FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN DISP AS T3 ON T1.ACCOUNT_ID = T3.ACCOUNT_ID INNER JOIN CLIENT AS T4 ON T3.CLIENT_ID = T4.CLIENT_ID WHERE T2.DISTRICT_ID = ( SELECT DISTRICT_ID FROM CLIENT WHERE GENDER = 'F' ORDER BY BIRTH_DATE ASC LIMIT 1 ) ORDER BY T2.A11 DESC LIMIT 1",
2,94,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute DISTRICT__A11`,,"SELECT CLIENT.CLIENT_ID, (SELECT MAX(DISTRICT.A11) FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID) - DISTRICT.A11 AS GAP FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE CLIENT.GENDER = 'F' ORDER BY CLIENT.BIRTH_DATE ASC, DISTRICT.A11 ASC LIMIT 1","SELECT T1.ACCOUNT_ID , ( SELECT MAX(A11) - MIN(A11) FROM DISTRICT ) FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN DISP AS T3 ON T1.ACCOUNT_ID = T3.ACCOUNT_ID INNER JOIN CLIENT AS T4 ON T3.CLIENT_ID = T4.CLIENT_ID WHERE T2.DISTRICT_ID = ( SELECT DISTRICT_ID FROM CLIENT WHERE GENDER = 'F' ORDER BY BIRTH_DATE ASC LIMIT 1 ) ORDER BY T2.A11 DESC LIMIT 1",
3,94,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute DISTRICT__A11`,,"SELECT CLIENT.CLIENT_ID, (SELECT MAX(DISTRICT.A11) FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID) - DISTRICT.A11 AS GAP FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE CLIENT.GENDER = 'F' ORDER BY CLIENT.BIRTH_DATE ASC, DISTRICT.A11 ASC LIMIT 1","SELECT T1.ACCOUNT_ID , ( SELECT MAX(A11) - MIN(A11) FROM DISTRICT ) FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN DISP AS T3 ON T1.ACCOUNT_ID = T3.ACCOUNT_ID INNER JOIN CLIENT AS T4 ON T3.CLIENT_ID = T4.CLIENT_ID WHERE T2.DISTRICT_ID = ( SELECT DISTRICT_ID FROM CLIENT WHERE GENDER = 'F' ORDER BY BIRTH_DATE ASC LIMIT 1 ) ORDER BY T2.A11 DESC LIMIT 1",
1,95,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__ACCOUNT_ID`,,"SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID ORDER BY CLIENT.BIRTH_DATE DESC, DISTRICT.A11 DESC LIMIT 1","SELECT T1.ACCOUNT_ID  FROM ACCOUNT AS T1 INNER JOIN DISP AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN CLIENT AS T3 ON T2.CLIENT_ID = T3.CLIENT_ID INNER JOIN DISTRICT AS T4 ON T4.DISTRICT_ID = T1.DISTRICT_ID WHERE T2.CLIENT_ID = ( SELECT CLIENT_ID FROM CLIENT ORDER BY BIRTH_DATE DESC LIMIT 1) GROUP BY T4.A11, T1.ACCOUNT_ID",
2,95,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__ACCOUNT_ID`,,"SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID ORDER BY CLIENT.BIRTH_DATE DESC, DISTRICT.A11 DESC LIMIT 1","SELECT T1.ACCOUNT_ID  FROM ACCOUNT AS T1 INNER JOIN DISP AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN CLIENT AS T3 ON T2.CLIENT_ID = T3.CLIENT_ID INNER JOIN DISTRICT AS T4 ON T4.DISTRICT_ID = T1.DISTRICT_ID WHERE T2.CLIENT_ID = ( SELECT CLIENT_ID FROM CLIENT ORDER BY BIRTH_DATE DESC LIMIT 1) GROUP BY T4.A11, T1.ACCOUNT_ID",
3,95,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__ACCOUNT_ID`,,"SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID ORDER BY CLIENT.BIRTH_DATE DESC, DISTRICT.A11 DESC LIMIT 1","SELECT T1.ACCOUNT_ID  FROM ACCOUNT AS T1 INNER JOIN DISP AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN CLIENT AS T3 ON T2.CLIENT_ID = T3.CLIENT_ID INNER JOIN DISTRICT AS T4 ON T4.DISTRICT_ID = T1.DISTRICT_ID WHERE T2.CLIENT_ID = ( SELECT CLIENT_ID FROM CLIENT ORDER BY BIRTH_DATE DESC LIMIT 1) GROUP BY T4.A11, T1.ACCOUNT_ID",
1,96,True,,0.068332,SELECT COUNT(*) FROM ACCOUNT INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID WHERE ACCOUNT.FREQUENCY = 'POPLATEK TYDNE' AND DISP.TYPE = 'OWNER',SELECT COUNT(T1.ACCOUNT_ID) FROM ACCOUNT AS T1 INNER JOIN DISP AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T2.TYPE = 'OWNER' AND T1.FREQUENCY = 'POPLATEK TYDNE',
1,97,True,,0.06836,SELECT CLIENT.CLIENT_ID FROM ACCOUNT INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE ACCOUNT.FREQUENCY = 'POPLATEK PO OBRATU' AND DISP.TYPE = 'DISPONENT',SELECT T2.CLIENT_ID FROM ACCOUNT AS T1 INNER JOIN DISP AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T1.FREQUENCY = 'POPLATEK PO OBRATU' AND T2.TYPE = 'DISPONENT',
1,98,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'LOAN__DATE']}",,"SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN LOAN ON ACCOUNT.ACCOUNT_ID = LOAN.ACCOUNT_ID WHERE STRFTIME('%Y', LOAN.DATE) = '1997' AND LOAN.AMOUNT = (SELECT MIN(LOAN.AMOUNT) FROM LOAN WHERE STRFTIME('%Y', LOAN.DATE) = '1997') AND ACCOUNT.FREQUENCY = 'POPLATEK TYDNE';","SELECT T2.ACCOUNT_ID FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE STRFTIME('%Y', T1.DATE) = '1997' AND T2.FREQUENCY = 'POPLATEK TYDNE' ORDER BY T1.AMOUNT LIMIT 1",
2,98,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'LOAN__DATE']}",,"SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN LOAN ON ACCOUNT.ACCOUNT_ID = LOAN.ACCOUNT_ID WHERE STRFTIME('%Y', LOAN.DATE) = '1997' AND LOAN.AMOUNT = (SELECT MIN(LOAN.AMOUNT) FROM LOAN WHERE STRFTIME('%Y', LOAN.DATE) = '1997') AND ACCOUNT.FREQUENCY = 'POPLATEK TYDNE';","SELECT T2.ACCOUNT_ID FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE STRFTIME('%Y', T1.DATE) = '1997' AND T2.FREQUENCY = 'POPLATEK TYDNE' ORDER BY T1.AMOUNT LIMIT 1",
3,98,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'LOAN__DATE']}",,"SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN LOAN ON ACCOUNT.ACCOUNT_ID = LOAN.ACCOUNT_ID WHERE STRFTIME('%Y', LOAN.DATE) = '1997' AND LOAN.AMOUNT = (SELECT MIN(LOAN.AMOUNT) FROM LOAN WHERE STRFTIME('%Y', LOAN.DATE) = '1997') AND ACCOUNT.FREQUENCY = 'POPLATEK TYDNE';","SELECT T2.ACCOUNT_ID FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE STRFTIME('%Y', T1.DATE) = '1997' AND T2.FREQUENCY = 'POPLATEK TYDNE' ORDER BY T1.AMOUNT LIMIT 1",
1,99,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'ACCOUNT__DATE']}",,"SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN LOAN ON ACCOUNT.ACCOUNT_ID = LOAN.ACCOUNT_ID WHERE LOAN.DURATION > 12 AND STRFTIME('%Y', ACCOUNT.DATE) = '1993' ORDER BY LOAN.AMOUNT DESC LIMIT 1","SELECT T1.ACCOUNT_ID FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE STRFTIME('%Y', T2.DATE) = '1993' AND T1.DURATION > 12 ORDER BY T1.AMOUNT DESC LIMIT 1",
2,99,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'ACCOUNT__DATE']}",,"SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN LOAN ON ACCOUNT.ACCOUNT_ID = LOAN.ACCOUNT_ID WHERE LOAN.DURATION > 12 AND STRFTIME('%Y', ACCOUNT.DATE) = '1993' ORDER BY LOAN.AMOUNT DESC LIMIT 1","SELECT T1.ACCOUNT_ID FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE STRFTIME('%Y', T2.DATE) = '1993' AND T1.DURATION > 12 ORDER BY T1.AMOUNT DESC LIMIT 1",
3,99,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'ACCOUNT__DATE']}",,"SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN LOAN ON ACCOUNT.ACCOUNT_ID = LOAN.ACCOUNT_ID WHERE LOAN.DURATION > 12 AND STRFTIME('%Y', ACCOUNT.DATE) = '1993' ORDER BY LOAN.AMOUNT DESC LIMIT 1","SELECT T1.ACCOUNT_ID FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE STRFTIME('%Y', T2.DATE) = '1993' AND T1.DURATION > 12 ORDER BY T1.AMOUNT DESC LIMIT 1",
1,100,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T2__BIRTH_DATE']}",,SELECT COUNT(*) FROM ACCOUNT INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE CLIENT.GENDER = 'F' AND CLIENT.BIRTH_DATE < '1950-01-01' AND DISTRICT.A2 = 'SOKOLOV',"SELECT COUNT(T2.CLIENT_ID) FROM DISTRICT AS T1 INNER JOIN CLIENT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T2.GENDER = 'F' AND STRFTIME('%Y', T2.BIRTH_DATE) < '1950' AND T1.A2 = 'SOKOLOV'",
2,100,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T2__BIRTH_DATE']}",,SELECT COUNT(*) FROM ACCOUNT INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE CLIENT.GENDER = 'F' AND CLIENT.BIRTH_DATE < '1950-01-01' AND DISTRICT.A2 = 'SOKOLOV',"SELECT COUNT(T2.CLIENT_ID) FROM DISTRICT AS T1 INNER JOIN CLIENT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T2.GENDER = 'F' AND STRFTIME('%Y', T2.BIRTH_DATE) < '1950' AND T1.A2 = 'SOKOLOV'",
3,100,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T2__BIRTH_DATE']}",,SELECT COUNT(*) FROM ACCOUNT INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE CLIENT.GENDER = 'F' AND CLIENT.BIRTH_DATE < '1950-01-01' AND DISTRICT.A2 = 'SOKOLOV',"SELECT COUNT(T2.CLIENT_ID) FROM DISTRICT AS T1 INNER JOIN CLIENT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T2.GENDER = 'F' AND STRFTIME('%Y', T2.BIRTH_DATE) < '1950' AND T1.A2 = 'SOKOLOV'",
1,101,ERROR,NotImplementedError: {'year': 'ACCOUNT__DATE'},,SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT WHERE ACCOUNT.DATE = (SELECT MIN(ACCOUNT.DATE) FROM ACCOUNT WHERE YEAR(ACCOUNT.DATE) = 1995),"SELECT ACCOUNT_ID FROM TRANS WHERE STRFTIME('%Y', DATE) = '1995' ORDER BY DATE ASC LIMIT 1",
2,101,ERROR,NotImplementedError: {'year': 'ACCOUNT__DATE'},,SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT WHERE ACCOUNT.DATE = (SELECT MIN(ACCOUNT.DATE) FROM ACCOUNT WHERE YEAR(ACCOUNT.DATE) = 1995),"SELECT ACCOUNT_ID FROM TRANS WHERE STRFTIME('%Y', DATE) = '1995' ORDER BY DATE ASC LIMIT 1",
3,101,ERROR,NotImplementedError: {'year': 'ACCOUNT__DATE'},,SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT WHERE ACCOUNT.DATE = (SELECT MIN(ACCOUNT.DATE) FROM ACCOUNT WHERE YEAR(ACCOUNT.DATE) = 1995),"SELECT ACCOUNT_ID FROM TRANS WHERE STRFTIME('%Y', DATE) = '1995' ORDER BY DATE ASC LIMIT 1",
1,102,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T2__DATE']}",,SELECT TRANS.ACCOUNT FROM TRANS INNER JOIN ACCOUNT ON TRANS.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID WHERE ACCOUNT.DATE < 1997 AND TRANS.AMOUNT > 3000,"SELECT DISTINCT T2.ACCOUNT_ID FROM TRANS AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE STRFTIME('%Y', T2.DATE) < '1997' AND T1.AMOUNT > 3000",
2,102,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T2__DATE']}",,SELECT TRANS.ACCOUNT FROM TRANS INNER JOIN ACCOUNT ON TRANS.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID WHERE ACCOUNT.DATE < 1997 AND TRANS.AMOUNT > 3000,"SELECT DISTINCT T2.ACCOUNT_ID FROM TRANS AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE STRFTIME('%Y', T2.DATE) < '1997' AND T1.AMOUNT > 3000",
3,102,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T2__DATE']}",,SELECT TRANS.ACCOUNT FROM TRANS INNER JOIN ACCOUNT ON TRANS.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID WHERE ACCOUNT.DATE < 1997 AND TRANS.AMOUNT > 3000,"SELECT DISTINCT T2.ACCOUNT_ID FROM TRANS AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE STRFTIME('%Y', T2.DATE) < '1997' AND T1.AMOUNT > 3000",
1,103,True,,0.0560829999999999,SELECT CLIENT.CLIENT_ID FROM CARD INNER JOIN DISP ON CARD.DISP_ID = DISP.DISP_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CARD.ISSUED = '1994/3/3',SELECT T2.CLIENT_ID FROM CLIENT AS T1 INNER JOIN DISP AS T2 ON T1.CLIENT_ID = T2.CLIENT_ID INNER JOIN CARD AS T3 ON T2.DISP_ID = T3.DISP_ID WHERE T3.ISSUED = '1994-03-03',
1,104,True,,0.065494,SELECT ACCOUNT.DATE FROM ACCOUNT INNER JOIN TRANS ON ACCOUNT.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE TRANS.AMOUNT = 840 AND TRANS.DATE = '1998/10/14',SELECT T1.DATE FROM ACCOUNT AS T1 INNER JOIN TRANS AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T2.AMOUNT = 840 AND T2.DATE = '1998-10-14',
1,105,True,,0.0427419999999999,SELECT ACCOUNT.DISTRICT_ID FROM LOAN INNER JOIN ACCOUNT ON LOAN.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID WHERE LOAN.DATE = '1994/8/25',SELECT T1.DISTRICT_ID FROM ACCOUNT AS T1 INNER JOIN LOAN AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T2.DATE = '1994-08-25',
1,106,True,,0.073339,SELECT TRANS.AMOUNT FROM CARD INNER JOIN DISP ON CARD.DISP_ID = DISP.DISP_ID INNER JOIN TRANS ON DISP.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE CARD.ISSUED = '1996/10/21' ORDER BY TRANS.AMOUNT DESC LIMIT 1,SELECT T4.AMOUNT FROM CARD AS T1 JOIN DISP AS T2 ON T1.DISP_ID = T2.DISP_ID JOIN ACCOUNT AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID JOIN TRANS AS T4 ON T3.ACCOUNT_ID = T4.ACCOUNT_ID WHERE T1.ISSUED = '1996-10-21' ORDER BY T4.AMOUNT DESC LIMIT 1,
1,107,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CLIENT__GENDER`,,SELECT CLIENT.GENDER FROM CLIENT INNER JOIN DISP ON CLIENT.CLIENT_ID = DISP.CLIENT_ID INNER JOIN ACCOUNT ON DISP.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.DISTRICT_ID = ( SELECT DISTRICT_ID FROM DISTRICT ORDER BY A11 DESC LIMIT 1 ) ORDER BY CLIENT.BIRTH_DATE LIMIT 1,"SELECT T2.GENDER FROM DISTRICT AS T1 INNER JOIN CLIENT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID ORDER BY T1.A11 DESC, T2.BIRTH_DATE ASC LIMIT 1",
2,107,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CLIENT__GENDER`,,SELECT CLIENT.GENDER FROM CLIENT INNER JOIN DISP ON CLIENT.CLIENT_ID = DISP.CLIENT_ID INNER JOIN ACCOUNT ON DISP.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.DISTRICT_ID = ( SELECT DISTRICT_ID FROM DISTRICT ORDER BY A11 DESC LIMIT 1 ) ORDER BY CLIENT.BIRTH_DATE LIMIT 1,"SELECT T2.GENDER FROM DISTRICT AS T1 INNER JOIN CLIENT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID ORDER BY T1.A11 DESC, T2.BIRTH_DATE ASC LIMIT 1",
3,107,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CLIENT__GENDER`,,SELECT CLIENT.GENDER FROM CLIENT INNER JOIN DISP ON CLIENT.CLIENT_ID = DISP.CLIENT_ID INNER JOIN ACCOUNT ON DISP.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.DISTRICT_ID = ( SELECT DISTRICT_ID FROM DISTRICT ORDER BY A11 DESC LIMIT 1 ) ORDER BY CLIENT.BIRTH_DATE LIMIT 1,"SELECT T2.GENDER FROM DISTRICT AS T1 INNER JOIN CLIENT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID ORDER BY T1.A11 DESC, T2.BIRTH_DATE ASC LIMIT 1",
1,108,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute ACCOUNT__DATE`,,"SELECT TRANS.AMOUNT FROM ( SELECT TRANS.AMOUNT, TRANS.DATE, ACCOUNT.DATE FROM ( SELECT LOAN.ACCOUNT_ID, LOAN.AMOUNT, ACCOUNT.DATE FROM LOAN INNER JOIN ACCOUNT ON LOAN.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID ORDER BY LOAN.AMOUNT DESC LIMIT 1 ) AS DF1 INNER JOIN TRANS ON DF1.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE TRANS.DATE > DF1.DATE ORDER BY TRANS.DATE LIMIT 1 ) AS DF2","SELECT T3.AMOUNT FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN TRANS AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID ORDER BY T1.AMOUNT DESC, T3.DATE ASC LIMIT 1",
2,108,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute ACCOUNT__DATE`,,"SELECT TRANS.AMOUNT FROM ( SELECT TRANS.AMOUNT, TRANS.DATE, ACCOUNT.DATE FROM ( SELECT LOAN.ACCOUNT_ID, LOAN.AMOUNT, ACCOUNT.DATE FROM LOAN INNER JOIN ACCOUNT ON LOAN.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID ORDER BY LOAN.AMOUNT DESC LIMIT 1 ) AS DF1 INNER JOIN TRANS ON DF1.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE TRANS.DATE > DF1.DATE ORDER BY TRANS.DATE LIMIT 1 ) AS DF2","SELECT T3.AMOUNT FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN TRANS AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID ORDER BY T1.AMOUNT DESC, T3.DATE ASC LIMIT 1",
3,108,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute ACCOUNT__DATE`,,"SELECT TRANS.AMOUNT FROM ( SELECT TRANS.AMOUNT, TRANS.DATE, ACCOUNT.DATE FROM ( SELECT LOAN.ACCOUNT_ID, LOAN.AMOUNT, ACCOUNT.DATE FROM LOAN INNER JOIN ACCOUNT ON LOAN.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID ORDER BY LOAN.AMOUNT DESC LIMIT 1 ) AS DF1 INNER JOIN TRANS ON DF1.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE TRANS.DATE > DF1.DATE ORDER BY TRANS.DATE LIMIT 1 ) AS DF2","SELECT T3.AMOUNT FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN TRANS AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID ORDER BY T1.AMOUNT DESC, T3.DATE ASC LIMIT 1",
1,109,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ACCOUNT (
	ACCOUNT_ID INTEGER,
	DISTRICT_ID INTEGER,
	FREQUENCY VARCHAR(20),
	DATE DATE
);
INSERT INTO ACCOUNT VALUES (5, 2, '2147483648', '1970-01-01');
CREATE TABLE CARD (
	CARD_ID INTEGER,
	DISP_ID INTEGER,
	TYPE VARCHAR(20),
	ISSUED DATE
);
INSERT INTO CARD VALUES (0, 3, '2147483648', '1970-01-01');
CREATE TABLE CLIENT (
	CLIENT_ID INTEGER,
	GENDER VARCHAR(20),
	BIRTH_DATE DATE,
	DISTRICT_ID INTEGER
);
INSERT INTO CLIENT VALUES (4, 'F', '1970-01-01', 2);
CREATE TABLE DISP (
	DISP_ID INTEGER,
	CLIENT_ID INTEGER,
	ACCOUNT_ID INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO DISP VALUES (3, 4, 5, '2147483648');
CREATE TABLE DISTRICT (
	DISTRICT_ID INTEGER,
	A2 VARCHAR(20),
	A3 VARCHAR(20),
	A4 VARCHAR(20),
	A5 VARCHAR(20),
	A6 VARCHAR(20),
	A7 VARCHAR(20),
	A8 VARCHAR(20),
	A9 INTEGER,
	A10 INTEGER,
	A11 INTEGER,
	A12 INTEGER,
	A13 INTEGER,
	A14 INTEGER,
	A15 INTEGER,
	A16 INTEGER
);
INSERT INTO DISTRICT VALUES (2, 'JESENIK', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 6, 7, 8, 9, 10, 11, 12, 13);
CREATE TABLE LOAN (
	LOAN_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	AMOUNT INTEGER,
	DURATION INTEGER,
	PAYMENTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO LOAN VALUES (0, 5, '1970-01-01', 0, 0, 0, '2147483648');
CREATE TABLE ORDER (
	ORDER_ID INTEGER,
	ACCOUNT_ID INTEGER,
	BANK_TO VARCHAR(20),
	ACCOUNT_TO INTEGER,
	AMOUNT INTEGER,
	K_SYMBOL VARCHAR(20)
);
INSERT INTO ORDER VALUES (0, 5, '2147483648', 0, 0, '2147483648');
CREATE TABLE TRANS (
	TRANS_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	TYPE VARCHAR(20),
	OPERATION VARCHAR(20),
	AMOUNT INTEGER,
	BALANCE INTEGER,
	K_SYMBOL VARCHAR(20),
	BANK VARCHAR(20),
	ACCOUNT INTEGER
);
INSERT INTO TRANS VALUES (0, 5, '1970-01-01', '2147483648', '2147483648', 0, 0, '2147483648', '2147483648', 0);
-- ----------sql1------------
-- 0
SELECT COUNT(*) FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID INNER JOIN CLIENT ON ACCOUNT.ACCOUNT_ID = CLIENT.CLIENT_ID WHERE DISTRICT.A2 = 'JESENIK' AND CLIENT.GENDER = 'F';
-- ----------sql2------------
-- 1
SELECT COUNT(T1.CLIENT_ID) FROM CLIENT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.GENDER = 'F' AND T2.A2 = 'JESENIK';
",0.090681,SELECT COUNT(*) FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID INNER JOIN CLIENT ON ACCOUNT.ACCOUNT_ID = CLIENT.CLIENT_ID WHERE DISTRICT.A2 = 'JESENIK' AND CLIENT.GENDER = 'F',SELECT COUNT(T1.CLIENT_ID) FROM CLIENT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.GENDER = 'F' AND T2.A2 = 'JESENIK',
1,110,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ACCOUNT (
	ACCOUNT_ID INTEGER,
	DISTRICT_ID INTEGER,
	FREQUENCY VARCHAR(20),
	DATE DATE
);
INSERT INTO ACCOUNT VALUES (5, 2, '2147483648', '1970-01-01');
CREATE TABLE CARD (
	CARD_ID INTEGER,
	DISP_ID INTEGER,
	TYPE VARCHAR(20),
	ISSUED DATE
);
INSERT INTO CARD VALUES (0, 3, '2147483648', '1970-01-01');
CREATE TABLE CLIENT (
	CLIENT_ID INTEGER,
	GENDER VARCHAR(20),
	BIRTH_DATE DATE,
	DISTRICT_ID INTEGER
);
INSERT INTO CLIENT VALUES (4, '2147483648', '1970-01-01', 2);
CREATE TABLE DISP (
	DISP_ID INTEGER,
	CLIENT_ID INTEGER,
	ACCOUNT_ID INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO DISP VALUES (3, 4, 5, '2147483648');
CREATE TABLE DISTRICT (
	DISTRICT_ID INTEGER,
	A2 VARCHAR(20),
	A3 VARCHAR(20),
	A4 VARCHAR(20),
	A5 VARCHAR(20),
	A6 VARCHAR(20),
	A7 VARCHAR(20),
	A8 VARCHAR(20),
	A9 INTEGER,
	A10 INTEGER,
	A11 INTEGER,
	A12 INTEGER,
	A13 INTEGER,
	A14 INTEGER,
	A15 INTEGER,
	A16 INTEGER
);
INSERT INTO DISTRICT VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0);
CREATE TABLE LOAN (
	LOAN_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	AMOUNT INTEGER,
	DURATION INTEGER,
	PAYMENTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO LOAN VALUES (0, 5, '1970-01-01', 0, 0, 0, '2147483648');
CREATE TABLE ORDER (
	ORDER_ID INTEGER,
	ACCOUNT_ID INTEGER,
	BANK_TO VARCHAR(20),
	ACCOUNT_TO INTEGER,
	AMOUNT INTEGER,
	K_SYMBOL VARCHAR(20)
);
INSERT INTO ORDER VALUES (0, 5, '2147483648', 0, 0, '2147483648');
CREATE TABLE TRANS (
	TRANS_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	TYPE VARCHAR(20),
	OPERATION VARCHAR(20),
	AMOUNT INTEGER,
	BALANCE INTEGER,
	K_SYMBOL VARCHAR(20),
	BANK VARCHAR(20),
	ACCOUNT INTEGER
);
INSERT INTO TRANS VALUES (6, 5, '1997-08-20', '2147483648', '2147483648', 5100, 7, '2147483648', '2147483648', 8);
-- ----------sql1------------
SELECT DISP.DISP_ID FROM TRANS INNER JOIN DISP ON TRANS.ACCOUNT_ID = DISP.ACCOUNT_ID WHERE TRANS.AMOUNT = 5100 AND TRANS.DATE = '1998/9/2';
-- ----------sql2------------
-- 3
SELECT T1.DISP_ID FROM DISP AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN TRANS AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T3.DATE='1997-08-20' AND T3.AMOUNT = 5100;
",0.075255,SELECT DISP.DISP_ID FROM TRANS INNER JOIN DISP ON TRANS.ACCOUNT_ID = DISP.ACCOUNT_ID WHERE TRANS.AMOUNT = 5100 AND TRANS.DATE = '1998/9/2',SELECT T1.DISP_ID FROM DISP AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN TRANS AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T3.DATE='1997-08-20' AND T3.AMOUNT = 5100,
1,111,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'ACCOUNT__DATE']}",,"SELECT COUNT(*) FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A2 = 'LITOMERICE' AND STRFTIME('%Y', ACCOUNT.DATE) = '1996'","SELECT COUNT(T2.ACCOUNT_ID) FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE STRFTIME('%Y', T2.DATE) = '1996' AND T1.A2 = 'LITOMERICE'",
2,111,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'ACCOUNT__DATE']}",,"SELECT COUNT(*) FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A2 = 'LITOMERICE' AND STRFTIME('%Y', ACCOUNT.DATE) = '1996'","SELECT COUNT(T2.ACCOUNT_ID) FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE STRFTIME('%Y', T2.DATE) = '1996' AND T1.A2 = 'LITOMERICE'",
3,111,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'ACCOUNT__DATE']}",,"SELECT COUNT(*) FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A2 = 'LITOMERICE' AND STRFTIME('%Y', ACCOUNT.DATE) = '1996'","SELECT COUNT(T2.ACCOUNT_ID) FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE STRFTIME('%Y', T2.DATE) = '1996' AND T1.A2 = 'LITOMERICE'",
1,112,True,,0.09242,SELECT DISTRICT.A2 FROM CLIENT INNER JOIN DISP ON CLIENT.CLIENT_ID = DISP.CLIENT_ID INNER JOIN ACCOUNT ON DISP.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE CLIENT.GENDER = 'F' AND CLIENT.BIRTH_DATE = '1976/1/29',SELECT T1.A2 FROM DISTRICT AS T1 INNER JOIN CLIENT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T2.BIRTH_DATE = '1976-01-29' AND T2.GENDER = 'F',
1,113,True,,0.0906049999999999,SELECT CLIENT.BIRTH_DATE FROM LOAN INNER JOIN DISP ON LOAN.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE LOAN.AMOUNT = 98832 AND LOAN.DATE = '1996/1/3',SELECT T4.BIRTH_DATE FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN DISP AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID INNER JOIN CLIENT AS T4 ON T3.CLIENT_ID = T4.CLIENT_ID WHERE T1.DATE = '1996-01-03' AND T1.AMOUNT = 98832,
1,114,True,,0.0536,SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A3 = 'PRAGUE' ORDER BY ACCOUNT.DATE LIMIT 1,SELECT T1.ACCOUNT_ID FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T2.A3 = 'PRAGUE' ORDER BY T1.DATE ASC LIMIT 1,
1,115,ERROR,NotImplementedError: {'real': {}},,"SELECT (CAST(COUNT(DF2.CLIENT_ID) AS REAL) * 100 / COUNT(DF1.CLIENT_ID)) AS PERCENTAGE FROM (SELECT * FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A3 = 'SOUTH BOHEMIA' ORDER BY DISTRICT.A4 DESC LIMIT 1) AS DF1, (SELECT * FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A3 = 'SOUTH BOHEMIA' AND CLIENT.GENDER = 'M' ORDER BY DISTRICT.A4 DESC LIMIT 1) AS DF2",SELECT CAST(SUM(T1.GENDER = 'M') AS REAL) * 100 / COUNT(T1.CLIENT_ID) FROM CLIENT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T2.A3 = 'SOUTH BOHEMIA' GROUP BY T2.A4 ORDER BY T2.A4 DESC LIMIT 1,
2,115,ERROR,NotImplementedError: {'real': {}},,"SELECT (CAST(COUNT(DF2.CLIENT_ID) AS REAL) * 100 / COUNT(DF1.CLIENT_ID)) AS PERCENTAGE FROM (SELECT * FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A3 = 'SOUTH BOHEMIA' ORDER BY DISTRICT.A4 DESC LIMIT 1) AS DF1, (SELECT * FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A3 = 'SOUTH BOHEMIA' AND CLIENT.GENDER = 'M' ORDER BY DISTRICT.A4 DESC LIMIT 1) AS DF2",SELECT CAST(SUM(T1.GENDER = 'M') AS REAL) * 100 / COUNT(T1.CLIENT_ID) FROM CLIENT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T2.A3 = 'SOUTH BOHEMIA' GROUP BY T2.A4 ORDER BY T2.A4 DESC LIMIT 1,
3,115,ERROR,NotImplementedError: {'real': {}},,"SELECT (CAST(COUNT(DF2.CLIENT_ID) AS REAL) * 100 / COUNT(DF1.CLIENT_ID)) AS PERCENTAGE FROM (SELECT * FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A3 = 'SOUTH BOHEMIA' ORDER BY DISTRICT.A4 DESC LIMIT 1) AS DF1, (SELECT * FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A3 = 'SOUTH BOHEMIA' AND CLIENT.GENDER = 'M' ORDER BY DISTRICT.A4 DESC LIMIT 1) AS DF2",SELECT CAST(SUM(T1.GENDER = 'M') AS REAL) * 100 / COUNT(T1.CLIENT_ID) FROM CLIENT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T2.A3 = 'SOUTH BOHEMIA' GROUP BY T2.A4 ORDER BY T2.A4 DESC LIMIT 1,
1,116,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute ACCOUNT_ID`,,"SELECT CAST((TMP_RES2 - TMP_RES1) AS REAL) * 100 / TMP_RES1 AS INCREASE_RATE FROM ( SELECT SUM(TRANS.BALANCE) AS TMP_RES1 FROM TRANS INNER JOIN ( SELECT ACCOUNT_ID FROM LOAN WHERE DATE = (SELECT MIN(DATE) FROM LOAN WHERE DATE >= '1993-07-05') ) AS DF1 ON TRANS.ACCOUNT_ID = DF1.ACCOUNT_ID WHERE TRANS.DATE = '1993-03-22' ) AS DF2, ( SELECT SUM(TRANS.BALANCE) AS TMP_RES2 FROM TRANS INNER JOIN ( SELECT ACCOUNT_ID FROM LOAN WHERE DATE = (SELECT MIN(DATE) FROM LOAN WHERE DATE >= '1993-07-05') ) AS DF1 ON TRANS.ACCOUNT_ID = DF1.ACCOUNT_ID WHERE TRANS.DATE = '1998-12-27' ) AS DF3","SELECT CAST((SUM(IIF(T3.DATE = '1998-12-27', T3.BALANCE, 0)) - SUM(IIF(T3.DATE = '1993-03-22', T3.BALANCE, 0))) AS REAL) * 100 / SUM(IIF(T3.DATE = '1993-03-22', T3.BALANCE, 0)) FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN TRANS AS T3 ON T3.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T1.DATE = '1993-07-05'",
2,116,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute ACCOUNT_ID`,,"SELECT CAST((TMP_RES2 - TMP_RES1) AS REAL) * 100 / TMP_RES1 AS INCREASE_RATE FROM ( SELECT SUM(TRANS.BALANCE) AS TMP_RES1 FROM TRANS INNER JOIN ( SELECT ACCOUNT_ID FROM LOAN WHERE DATE = (SELECT MIN(DATE) FROM LOAN WHERE DATE >= '1993-07-05') ) AS DF1 ON TRANS.ACCOUNT_ID = DF1.ACCOUNT_ID WHERE TRANS.DATE = '1993-03-22' ) AS DF2, ( SELECT SUM(TRANS.BALANCE) AS TMP_RES2 FROM TRANS INNER JOIN ( SELECT ACCOUNT_ID FROM LOAN WHERE DATE = (SELECT MIN(DATE) FROM LOAN WHERE DATE >= '1993-07-05') ) AS DF1 ON TRANS.ACCOUNT_ID = DF1.ACCOUNT_ID WHERE TRANS.DATE = '1998-12-27' ) AS DF3","SELECT CAST((SUM(IIF(T3.DATE = '1998-12-27', T3.BALANCE, 0)) - SUM(IIF(T3.DATE = '1993-03-22', T3.BALANCE, 0))) AS REAL) * 100 / SUM(IIF(T3.DATE = '1993-03-22', T3.BALANCE, 0)) FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN TRANS AS T3 ON T3.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T1.DATE = '1993-07-05'",
3,116,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute ACCOUNT_ID`,,"SELECT CAST((TMP_RES2 - TMP_RES1) AS REAL) * 100 / TMP_RES1 AS INCREASE_RATE FROM ( SELECT SUM(TRANS.BALANCE) AS TMP_RES1 FROM TRANS INNER JOIN ( SELECT ACCOUNT_ID FROM LOAN WHERE DATE = (SELECT MIN(DATE) FROM LOAN WHERE DATE >= '1993-07-05') ) AS DF1 ON TRANS.ACCOUNT_ID = DF1.ACCOUNT_ID WHERE TRANS.DATE = '1993-03-22' ) AS DF2, ( SELECT SUM(TRANS.BALANCE) AS TMP_RES2 FROM TRANS INNER JOIN ( SELECT ACCOUNT_ID FROM LOAN WHERE DATE = (SELECT MIN(DATE) FROM LOAN WHERE DATE >= '1993-07-05') ) AS DF1 ON TRANS.ACCOUNT_ID = DF1.ACCOUNT_ID WHERE TRANS.DATE = '1998-12-27' ) AS DF3","SELECT CAST((SUM(IIF(T3.DATE = '1998-12-27', T3.BALANCE, 0)) - SUM(IIF(T3.DATE = '1993-03-22', T3.BALANCE, 0))) AS REAL) * 100 / SUM(IIF(T3.DATE = '1993-03-22', T3.BALANCE, 0)) FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN TRANS AS T3 ON T3.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T1.DATE = '1993-07-05'",
1,117,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(CASE WHEN STATUS = 'A' THEN AMOUNT ELSE 0 END) AS REAL) / SUM(AMOUNT)) * 100 AS PERCENTAGE FROM LOAN,SELECT (CAST(SUM(CASE WHEN STATUS = 'A' THEN AMOUNT ELSE 0 END) AS REAL) * 100) / SUM(AMOUNT) FROM LOAN,
2,117,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(CASE WHEN STATUS = 'A' THEN AMOUNT ELSE 0 END) AS REAL) / SUM(AMOUNT)) * 100 AS PERCENTAGE FROM LOAN,SELECT (CAST(SUM(CASE WHEN STATUS = 'A' THEN AMOUNT ELSE 0 END) AS REAL) * 100) / SUM(AMOUNT) FROM LOAN,
3,117,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(CASE WHEN STATUS = 'A' THEN AMOUNT ELSE 0 END) AS REAL) / SUM(AMOUNT)) * 100 AS PERCENTAGE FROM LOAN,SELECT (CAST(SUM(CASE WHEN STATUS = 'A' THEN AMOUNT ELSE 0 END) AS REAL) * 100) / SUM(AMOUNT) FROM LOAN,
1,118,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM LOAN WHERE AMOUNT < 100000) FROM LOAN WHERE AMOUNT < 100000 AND STATUS = 'C'`,,SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM LOAN WHERE AMOUNT < 100000) FROM LOAN WHERE AMOUNT < 100000 AND STATUS = 'C',SELECT CAST(SUM(STATUS = 'C') AS REAL) * 100 / COUNT(ACCOUNT_ID) FROM LOAN WHERE AMOUNT < 100000,
2,118,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM LOAN WHERE AMOUNT < 100000) FROM LOAN WHERE AMOUNT < 100000 AND STATUS = 'C'`,,SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM LOAN WHERE AMOUNT < 100000) FROM LOAN WHERE AMOUNT < 100000 AND STATUS = 'C',SELECT CAST(SUM(STATUS = 'C') AS REAL) * 100 / COUNT(ACCOUNT_ID) FROM LOAN WHERE AMOUNT < 100000,
3,118,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM LOAN WHERE AMOUNT < 100000) FROM LOAN WHERE AMOUNT < 100000 AND STATUS = 'C'`,,SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM LOAN WHERE AMOUNT < 100000) FROM LOAN WHERE AMOUNT < 100000 AND STATUS = 'C',SELECT CAST(SUM(STATUS = 'C') AS REAL) * 100 / COUNT(ACCOUNT_ID) FROM LOAN WHERE AMOUNT < 100000,
1,119,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'ACCOUNT__DATE']}",,"SELECT ACCOUNT.ACCOUNT_ID, DISTRICT.A2, DISTRICT.A3 FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE STRFTIME('%Y', ACCOUNT.DATE) = '1993' AND ACCOUNT.FREQUENCY = 'POPLATEK PO OBRATU'","SELECT T1.ACCOUNT_ID, T2.A2, T2.A3 FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.FREQUENCY = 'POPLATEK PO OBRATU' AND STRFTIME('%Y', T1.DATE)= '1993'",
2,119,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'ACCOUNT__DATE']}",,"SELECT ACCOUNT.ACCOUNT_ID, DISTRICT.A2, DISTRICT.A3 FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE STRFTIME('%Y', ACCOUNT.DATE) = '1993' AND ACCOUNT.FREQUENCY = 'POPLATEK PO OBRATU'","SELECT T1.ACCOUNT_ID, T2.A2, T2.A3 FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.FREQUENCY = 'POPLATEK PO OBRATU' AND STRFTIME('%Y', T1.DATE)= '1993'",
3,119,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'ACCOUNT__DATE']}",,"SELECT ACCOUNT.ACCOUNT_ID, DISTRICT.A2, DISTRICT.A3 FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE STRFTIME('%Y', ACCOUNT.DATE) = '1993' AND ACCOUNT.FREQUENCY = 'POPLATEK PO OBRATU'","SELECT T1.ACCOUNT_ID, T2.A2, T2.A3 FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.FREQUENCY = 'POPLATEK PO OBRATU' AND STRFTIME('%Y', T1.DATE)= '1993'",
1,120,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T1__DATE']}",,"SELECT ACCOUNT.ACCOUNT_ID, ACCOUNT.FREQUENCY FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A3 = 'EAST BOHEMIA' AND ACCOUNT.DATE BETWEEN 1995 AND 2000","SELECT T1.ACCOUNT_ID, T1.FREQUENCY FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T2.A3 = 'EAST BOHEMIA' AND STRFTIME('%Y', T1.DATE) BETWEEN '1995' AND '2000'",
2,120,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T1__DATE']}",,"SELECT ACCOUNT.ACCOUNT_ID, ACCOUNT.FREQUENCY FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A3 = 'EAST BOHEMIA' AND ACCOUNT.DATE BETWEEN 1995 AND 2000","SELECT T1.ACCOUNT_ID, T1.FREQUENCY FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T2.A3 = 'EAST BOHEMIA' AND STRFTIME('%Y', T1.DATE) BETWEEN '1995' AND '2000'",
3,120,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T1__DATE']}",,"SELECT ACCOUNT.ACCOUNT_ID, ACCOUNT.FREQUENCY FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A3 = 'EAST BOHEMIA' AND ACCOUNT.DATE BETWEEN 1995 AND 2000","SELECT T1.ACCOUNT_ID, T1.FREQUENCY FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T2.A3 = 'EAST BOHEMIA' AND STRFTIME('%Y', T1.DATE) BETWEEN '1995' AND '2000'",
1,121,True,,0.051208,"SELECT ACCOUNT.ACCOUNT_ID, ACCOUNT.DATE FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A2 = 'PRACHATICE';","SELECT T1.ACCOUNT_ID, T1.DATE FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T2.A2 = 'PRACHATICE'",
1,122,True,,0.081399,"SELECT DISTRICT.A2, DISTRICT.A3 FROM LOAN INNER JOIN ACCOUNT ON LOAN.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE LOAN.LOAN_ID = '4990';","SELECT T2.A2, T2.A3 FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN LOAN AS T3 ON T1.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T3.LOAN_ID = 4990",
1,123,True,,0.08026,"SELECT ACCOUNT.ACCOUNT_ID, DISTRICT.A2, DISTRICT.A3 FROM ACCOUNT INNER JOIN LOAN ON ACCOUNT.ACCOUNT_ID = LOAN.ACCOUNT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE LOAN.AMOUNT > 300000","SELECT T1.ACCOUNT_ID, T2.A2, T2.A3 FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN LOAN AS T3 ON T1.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T3.AMOUNT > 300000",
1,124,True,,0.080569,"SELECT LOAN.LOAN_ID, DISTRICT.A2, DISTRICT.A11 FROM LOAN INNER JOIN ACCOUNT ON LOAN.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE LOAN.DURATION = 60","SELECT T3.LOAN_ID, T2.A2, T2.A11 FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN LOAN AS T3 ON T1.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T3.DURATION = 60",
1,125,ERROR,NotImplementedError: {'real': {}},,"SELECT DISTRICT.A2, ((CAST(DISTRICT.A13 AS REAL) - CAST(DISTRICT.A12 AS REAL)) * 100 / CAST(DISTRICT.A12 AS REAL)) AS UNEMPLOYMENT_INCREMENT_RATE FROM LOAN INNER JOIN ACCOUNT ON LOAN.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE LOAN.STATUS = 'D'",SELECT CAST((T3.A13 - T3.A12) AS REAL) * 100 / T3.A12 FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN DISTRICT AS T3 ON T2.DISTRICT_ID = T3.DISTRICT_ID WHERE T1.STATUS = 'D',
2,125,ERROR,NotImplementedError: {'real': {}},,"SELECT DISTRICT.A2, ((CAST(DISTRICT.A13 AS REAL) - CAST(DISTRICT.A12 AS REAL)) * 100 / CAST(DISTRICT.A12 AS REAL)) AS UNEMPLOYMENT_INCREMENT_RATE FROM LOAN INNER JOIN ACCOUNT ON LOAN.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE LOAN.STATUS = 'D'",SELECT CAST((T3.A13 - T3.A12) AS REAL) * 100 / T3.A12 FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN DISTRICT AS T3 ON T2.DISTRICT_ID = T3.DISTRICT_ID WHERE T1.STATUS = 'D',
3,125,ERROR,NotImplementedError: {'real': {}},,"SELECT DISTRICT.A2, ((CAST(DISTRICT.A13 AS REAL) - CAST(DISTRICT.A12 AS REAL)) * 100 / CAST(DISTRICT.A12 AS REAL)) AS UNEMPLOYMENT_INCREMENT_RATE FROM LOAN INNER JOIN ACCOUNT ON LOAN.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE LOAN.STATUS = 'D'",SELECT CAST((T3.A13 - T3.A12) AS REAL) * 100 / T3.A12 FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN DISTRICT AS T3 ON T2.DISTRICT_ID = T3.DISTRICT_ID WHERE T1.STATUS = 'D',
1,126,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'ACCOUNT__DATE']}",,"SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM ACCOUNT WHERE STRFTIME('%Y', DATE) = '1993') AS PERCENTAGE FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A2 = 'DECIN' AND STRFTIME('%Y', ACCOUNT.DATE) = '1993'","SELECT CAST(SUM(T1.A2 = 'DECIN') AS REAL) * 100 / COUNT(ACCOUNT_ID) FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE STRFTIME('%Y', T2.DATE) = '1993'",
2,126,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'ACCOUNT__DATE']}",,"SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM ACCOUNT WHERE STRFTIME('%Y', DATE) = '1993') AS PERCENTAGE FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A2 = 'DECIN' AND STRFTIME('%Y', ACCOUNT.DATE) = '1993'","SELECT CAST(SUM(T1.A2 = 'DECIN') AS REAL) * 100 / COUNT(ACCOUNT_ID) FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE STRFTIME('%Y', T2.DATE) = '1993'",
3,126,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'ACCOUNT__DATE']}",,"SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM ACCOUNT WHERE STRFTIME('%Y', DATE) = '1993') AS PERCENTAGE FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A2 = 'DECIN' AND STRFTIME('%Y', ACCOUNT.DATE) = '1993'","SELECT CAST(SUM(T1.A2 = 'DECIN') AS REAL) * 100 / COUNT(ACCOUNT_ID) FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE STRFTIME('%Y', T2.DATE) = '1993'",
1,127,True,,0.0253219999999999,SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT WHERE ACCOUNT.FREQUENCY = 'POPLATEK MESICNE',SELECT ACCOUNT_ID FROM ACCOUNT WHERE FREQUENCY = 'POPLATEK MESICNE',
1,128,False,,,SELECT DISTRICT.A2 FROM CLIENT JOIN DISP ON CLIENT.CLIENT_ID = DISP.CLIENT_ID JOIN ACCOUNT ON DISP.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE CLIENT.GENDER = 'F' AND DISP.TYPE = 'OWNER' GROUP BY DISTRICT.A2 ORDER BY COUNT(*) DESC LIMIT 9,"SELECT T2.A2, COUNT(T1.CLIENT_ID) FROM CLIENT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.GENDER = 'F' GROUP BY T2.DISTRICT_ID, T2.A2 ORDER BY COUNT(T1.CLIENT_ID) DESC LIMIT 9",
1,129,ERROR,"NotImplementedError: {'like': ['TRANS__DATE', {'literal': '1996-01%'}]}",,SELECT DISTRICT.A2 FROM TRANS INNER JOIN ACCOUNT ON TRANS.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE TRANS.TYPE = 'VYDAJ' AND TRANS.DATE LIKE '1996-01%' ORDER BY TRANS.AMOUNT DESC LIMIT 10,SELECT DISTINCT T1.A2 FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN TRANS AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T3.TYPE = 'VYDAJ' AND T3.DATE LIKE '1996-01%' ORDER BY A2 ASC LIMIT 10,
2,129,ERROR,"NotImplementedError: {'like': ['TRANS__DATE', {'literal': '1996-01%'}]}",,SELECT DISTRICT.A2 FROM TRANS INNER JOIN ACCOUNT ON TRANS.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE TRANS.TYPE = 'VYDAJ' AND TRANS.DATE LIKE '1996-01%' ORDER BY TRANS.AMOUNT DESC LIMIT 10,SELECT DISTINCT T1.A2 FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN TRANS AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T3.TYPE = 'VYDAJ' AND T3.DATE LIKE '1996-01%' ORDER BY A2 ASC LIMIT 10,
3,129,ERROR,"NotImplementedError: {'like': ['TRANS__DATE', {'literal': '1996-01%'}]}",,SELECT DISTRICT.A2 FROM TRANS INNER JOIN ACCOUNT ON TRANS.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE TRANS.TYPE = 'VYDAJ' AND TRANS.DATE LIKE '1996-01%' ORDER BY TRANS.AMOUNT DESC LIMIT 10,SELECT DISTINCT T1.A2 FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN TRANS AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T3.TYPE = 'VYDAJ' AND T3.DATE LIKE '1996-01%' ORDER BY A2 ASC LIMIT 10,
1,130,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ACCOUNT (
	ACCOUNT_ID INTEGER,
	DISTRICT_ID INTEGER,
	FREQUENCY VARCHAR(20),
	DATE DATE
);
INSERT INTO ACCOUNT VALUES (5, 2, '2147483648', '1970-01-01');
CREATE TABLE CARD (
	CARD_ID INTEGER,
	DISP_ID INTEGER,
	TYPE VARCHAR(20),
	ISSUED DATE
);
INSERT INTO CARD VALUES (6, 3, NULL, NULL);
CREATE TABLE CLIENT (
	CLIENT_ID INTEGER,
	GENDER VARCHAR(20),
	BIRTH_DATE DATE,
	DISTRICT_ID INTEGER
);
INSERT INTO CLIENT VALUES (4, '2147483648', '1970-01-01', 2);
CREATE TABLE DISP (
	DISP_ID INTEGER,
	CLIENT_ID INTEGER,
	ACCOUNT_ID INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO DISP VALUES (3, 4, 5, '7450736887241744293');
CREATE TABLE DISTRICT (
	DISTRICT_ID INTEGER,
	A2 VARCHAR(20),
	A3 VARCHAR(20),
	A4 VARCHAR(20),
	A5 VARCHAR(20),
	A6 VARCHAR(20),
	A7 VARCHAR(20),
	A8 VARCHAR(20),
	A9 INTEGER,
	A10 INTEGER,
	A11 INTEGER,
	A12 INTEGER,
	A13 INTEGER,
	A14 INTEGER,
	A15 INTEGER,
	A16 INTEGER
);
INSERT INTO DISTRICT VALUES (2, '2147483648', 'SOUTH BOHEMIA', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 17, 18, 19, 20, 21, 22, 23, 24);
CREATE TABLE LOAN (
	LOAN_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	AMOUNT INTEGER,
	DURATION INTEGER,
	PAYMENTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO LOAN VALUES (0, 5, '1970-01-01', 0, 0, 0, '2147483648');
CREATE TABLE ORDER (
	ORDER_ID INTEGER,
	ACCOUNT_ID INTEGER,
	BANK_TO VARCHAR(20),
	ACCOUNT_TO INTEGER,
	AMOUNT INTEGER,
	K_SYMBOL VARCHAR(20)
);
INSERT INTO ORDER VALUES (0, 5, '2147483648', 0, 0, '2147483648');
CREATE TABLE TRANS (
	TRANS_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	TYPE VARCHAR(20),
	OPERATION VARCHAR(20),
	AMOUNT INTEGER,
	BALANCE INTEGER,
	K_SYMBOL VARCHAR(20),
	BANK VARCHAR(20),
	ACCOUNT INTEGER
);
INSERT INTO TRANS VALUES (0, 5, '1970-01-01', '2147483648', '2147483648', 0, 0, '2147483648', '2147483648', 0);
-- ----------sql1------------
-- 0
SELECT COUNT(*) FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID LEFT JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID LEFT JOIN CARD ON DISP.DISP_ID = CARD.DISP_ID WHERE DISTRICT.A3 = 'SOUTH BOHEMIA' AND CARD.CARD_ID IS NULL;
-- ----------sql2------------
-- 1
SELECT COUNT(T3.ACCOUNT_ID) FROM DISTRICT AS T1 INNER JOIN CLIENT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN DISP AS T3 ON T2.CLIENT_ID = T3.CLIENT_ID WHERE T1.A3 = 'SOUTH BOHEMIA' AND T3.TYPE != 'OWNER';
",0.2637779999999999,SELECT COUNT(*) FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID LEFT JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID LEFT JOIN CARD ON DISP.DISP_ID = CARD.DISP_ID WHERE DISTRICT.A3 = 'SOUTH BOHEMIA' AND CARD.CARD_ID IS NULL,SELECT COUNT(T3.ACCOUNT_ID) FROM DISTRICT AS T1 INNER JOIN CLIENT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN DISP AS T3 ON T2.CLIENT_ID = T3.CLIENT_ID WHERE T1.A3 = 'SOUTH BOHEMIA' AND T3.TYPE != 'OWNER',
1,131,True,,0.230326,"SELECT DISTRICT.A3 FROM LOAN INNER JOIN ACCOUNT ON LOAN.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE LOAN.STATUS IN ('C', 'D') GROUP BY DISTRICT.DISTRICT_ID ORDER BY COUNT(LOAN.LOAN_ID) DESC LIMIT 1","SELECT T2.A3 FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN LOAN AS T3 ON T1.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T3.STATUS IN ('C', 'D') GROUP BY T2.A3 ORDER BY SUM(T3.AMOUNT) DESC LIMIT 1",
1,132,True,,0.081185,SELECT AVG(LOAN.AMOUNT) FROM LOAN INNER JOIN DISP ON LOAN.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.GENDER = 'M',SELECT AVG(T4.AMOUNT) FROM CLIENT AS T1 INNER JOIN DISP AS T2 ON T1.CLIENT_ID = T2.CLIENT_ID INNER JOIN ACCOUNT AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID INNER JOIN LOAN AS T4 ON T3.ACCOUNT_ID = T4.ACCOUNT_ID WHERE T1.GENDER = 'M',
1,133,False,,,SELECT DISTRICT.A2 FROM DISTRICT ORDER BY DISTRICT.A13 DESC LIMIT 1;,"SELECT DISTRICT_ID, A2 FROM DISTRICT ORDER BY A13 DESC LIMIT 1",
1,134,True,,0.0556679999999999,SELECT COUNT(ACCOUNT.ACCOUNT_ID) FROM ACCOUNT INNER JOIN (SELECT DISTRICT_ID FROM DISTRICT ORDER BY A16 DESC LIMIT 1) AS DF1 ON ACCOUNT.DISTRICT_ID = DF1.DISTRICT_ID,SELECT COUNT(T2.ACCOUNT_ID) FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID GROUP BY T1.A16 ORDER BY T1.A16 DESC LIMIT 1,
1,135,True,,0.075704,SELECT COUNT(DISTINCT ACCOUNT.ACCOUNT_ID) FROM ACCOUNT INNER JOIN TRANS ON ACCOUNT.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE TRANS.OPERATION = 'VYBER KARTOU' AND ACCOUNT.FREQUENCY = 'POPLATEK MESICNE' AND TRANS.BALANCE < 0,SELECT COUNT(T1.ACCOUNT_ID) FROM TRANS AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T1.BALANCE < 0 AND T1.OPERATION = 'VYBER KARTOU' AND T2.FREQUENCY = 'POPLATEK MESICNE',
1,136,True,,0.156658,SELECT COUNT(*) FROM ACCOUNT INNER JOIN LOAN ON ACCOUNT.ACCOUNT_ID = LOAN.ACCOUNT_ID WHERE ACCOUNT.FREQUENCY = 'POPLATEK MESICNE' AND LOAN.AMOUNT >= 250000 AND LOAN.DATE BETWEEN '1995-01-01' AND '1997-12-31',SELECT COUNT(T1.ACCOUNT_ID) FROM ACCOUNT AS T1 INNER JOIN LOAN AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T2.DATE BETWEEN '1995-01-01' AND '1997-12-31' AND T1.FREQUENCY = 'POPLATEK MESICNE' AND T2.AMOUNT >= 250000,
1,137,True,,0.424952,"SELECT COUNT(DISTINCT ACCOUNT.ACCOUNT_ID) FROM ACCOUNT INNER JOIN LOAN ON ACCOUNT.ACCOUNT_ID = LOAN.ACCOUNT_ID WHERE LOAN.STATUS IN ('C', 'D') AND ACCOUNT.DISTRICT_ID = 1",SELECT COUNT(T1.ACCOUNT_ID) FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN LOAN AS T3 ON T1.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T1.DISTRICT_ID = 1 AND (T3.STATUS = 'C' OR T3.STATUS = 'D'),
1,138,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__CLIENT_ID`,,SELECT COUNT(*) FROM (SELECT DISTRICT_ID FROM DISTRICT ORDER BY A15 DESC LIMIT 1 OFFSET 1) AS SUBQUERY INNER JOIN CLIENT ON SUBQUERY.DISTRICT_ID = CLIENT.DISTRICT_ID WHERE CLIENT.GENDER = 'M';,"SELECT COUNT(T1.CLIENT_ID) FROM CLIENT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.GENDER = 'M' AND T2.A15 = (SELECT T3.A15 FROM DISTRICT AS T3 ORDER BY T3.A15 DESC LIMIT 1, 1)",
2,138,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__CLIENT_ID`,,SELECT COUNT(*) FROM (SELECT DISTRICT_ID FROM DISTRICT ORDER BY A15 DESC LIMIT 1 OFFSET 1) AS SUBQUERY INNER JOIN CLIENT ON SUBQUERY.DISTRICT_ID = CLIENT.DISTRICT_ID WHERE CLIENT.GENDER = 'M';,"SELECT COUNT(T1.CLIENT_ID) FROM CLIENT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.GENDER = 'M' AND T2.A15 = (SELECT T3.A15 FROM DISTRICT AS T3 ORDER BY T3.A15 DESC LIMIT 1, 1)",
3,138,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__CLIENT_ID`,,SELECT COUNT(*) FROM (SELECT DISTRICT_ID FROM DISTRICT ORDER BY A15 DESC LIMIT 1 OFFSET 1) AS SUBQUERY INNER JOIN CLIENT ON SUBQUERY.DISTRICT_ID = CLIENT.DISTRICT_ID WHERE CLIENT.GENDER = 'M';,"SELECT COUNT(T1.CLIENT_ID) FROM CLIENT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.GENDER = 'M' AND T2.A15 = (SELECT T3.A15 FROM DISTRICT AS T3 ORDER BY T3.A15 DESC LIMIT 1, 1)",
1,139,True,,0.064538,SELECT COUNT(*) FROM CARD INNER JOIN DISP ON CARD.DISP_ID = DISP.DISP_ID WHERE CARD.TYPE = 'GOLD' AND DISP.TYPE = 'OWNER',SELECT COUNT(T1.CARD_ID) FROM CARD AS T1 INNER JOIN DISP AS T2 ON T1.DISP_ID = T2.DISP_ID WHERE T1.TYPE = 'GOLD' AND T2.TYPE = 'OWNER',
1,140,True,,0.056615,SELECT COUNT(*) FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A2 = 'PISEK';,SELECT COUNT(T1.ACCOUNT_ID) FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T2.A2 = 'PISEK',
1,141,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'TRANS__DATE']}",,"SELECT DISTRICT.A2 FROM TRANS INNER JOIN ACCOUNT ON TRANS.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE TRANS.AMOUNT > 10000 AND STRFTIME('%Y', TRANS.DATE) = '1997'","SELECT T1.DISTRICT_ID FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN TRANS AS T3 ON T1.ACCOUNT_ID = T3.ACCOUNT_ID WHERE STRFTIME('%Y', T3.DATE) = '1997' GROUP BY T1.DISTRICT_ID HAVING SUM(T3.AMOUNT) > 10000",
2,141,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'TRANS__DATE']}",,"SELECT DISTRICT.A2 FROM TRANS INNER JOIN ACCOUNT ON TRANS.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE TRANS.AMOUNT > 10000 AND STRFTIME('%Y', TRANS.DATE) = '1997'","SELECT T1.DISTRICT_ID FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN TRANS AS T3 ON T1.ACCOUNT_ID = T3.ACCOUNT_ID WHERE STRFTIME('%Y', T3.DATE) = '1997' GROUP BY T1.DISTRICT_ID HAVING SUM(T3.AMOUNT) > 10000",
3,141,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'TRANS__DATE']}",,"SELECT DISTRICT.A2 FROM TRANS INNER JOIN ACCOUNT ON TRANS.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE TRANS.AMOUNT > 10000 AND STRFTIME('%Y', TRANS.DATE) = '1997'","SELECT T1.DISTRICT_ID FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN TRANS AS T3 ON T1.ACCOUNT_ID = T3.ACCOUNT_ID WHERE STRFTIME('%Y', T3.DATE) = '1997' GROUP BY T1.DISTRICT_ID HAVING SUM(T3.AMOUNT) > 10000",
1,142,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID INNER JOIN ORDER ON ACCOUNT.ACCOUNT_ID = ORDER.ACCOUNT_ID WHERE DISTRICT.A2 = 'PISEK' AND ORDER.K_SYMBOL = 'SIPO'`,,SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID INNER JOIN ORDER ON ACCOUNT.ACCOUNT_ID = ORDER.ACCOUNT_ID WHERE DISTRICT.A2 = 'PISEK' AND ORDER.K_SYMBOL = 'SIPO',SELECT DISTINCT T2.ACCOUNT_ID FROM TRANS AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN DISTRICT AS T3 ON T2.DISTRICT_ID = T3.DISTRICT_ID WHERE T1.K_SYMBOL = 'SIPO' AND T3.A2 = 'PISEK',
2,142,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID INNER JOIN ORDER ON ACCOUNT.ACCOUNT_ID = ORDER.ACCOUNT_ID WHERE DISTRICT.A2 = 'PISEK' AND ORDER.K_SYMBOL = 'SIPO'`,,SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID INNER JOIN ORDER ON ACCOUNT.ACCOUNT_ID = ORDER.ACCOUNT_ID WHERE DISTRICT.A2 = 'PISEK' AND ORDER.K_SYMBOL = 'SIPO',SELECT DISTINCT T2.ACCOUNT_ID FROM TRANS AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN DISTRICT AS T3 ON T2.DISTRICT_ID = T3.DISTRICT_ID WHERE T1.K_SYMBOL = 'SIPO' AND T3.A2 = 'PISEK',
3,142,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID INNER JOIN ORDER ON ACCOUNT.ACCOUNT_ID = ORDER.ACCOUNT_ID WHERE DISTRICT.A2 = 'PISEK' AND ORDER.K_SYMBOL = 'SIPO'`,,SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID INNER JOIN ORDER ON ACCOUNT.ACCOUNT_ID = ORDER.ACCOUNT_ID WHERE DISTRICT.A2 = 'PISEK' AND ORDER.K_SYMBOL = 'SIPO',SELECT DISTINCT T2.ACCOUNT_ID FROM TRANS AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN DISTRICT AS T3 ON T2.DISTRICT_ID = T3.DISTRICT_ID WHERE T1.K_SYMBOL = 'SIPO' AND T3.A2 = 'PISEK',
1,143,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ACCOUNT (
	ACCOUNT_ID INTEGER,
	DISTRICT_ID INTEGER,
	FREQUENCY VARCHAR(20),
	DATE DATE
);
INSERT INTO ACCOUNT VALUES (5, 2, '2147483648', '1970-01-01');
CREATE TABLE CARD (
	CARD_ID INTEGER,
	DISP_ID INTEGER,
	TYPE VARCHAR(20),
	ISSUED DATE
);
INSERT INTO CARD VALUES (7, 3, 'GOLD', '1970-01-01');
CREATE TABLE CLIENT (
	CLIENT_ID INTEGER,
	GENDER VARCHAR(20),
	BIRTH_DATE DATE,
	DISTRICT_ID INTEGER
);
INSERT INTO CLIENT VALUES (4, '2147483648', '1970-01-01', 2);
CREATE TABLE DISP (
	DISP_ID INTEGER,
	CLIENT_ID INTEGER,
	ACCOUNT_ID INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO DISP VALUES (3, 4, 5, '2147483648');
CREATE TABLE DISTRICT (
	DISTRICT_ID INTEGER,
	A2 VARCHAR(20),
	A3 VARCHAR(20),
	A4 VARCHAR(20),
	A5 VARCHAR(20),
	A6 VARCHAR(20),
	A7 VARCHAR(20),
	A8 VARCHAR(20),
	A9 INTEGER,
	A10 INTEGER,
	A11 INTEGER,
	A12 INTEGER,
	A13 INTEGER,
	A14 INTEGER,
	A15 INTEGER,
	A16 INTEGER
);
INSERT INTO DISTRICT VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0);
CREATE TABLE LOAN (
	LOAN_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	AMOUNT INTEGER,
	DURATION INTEGER,
	PAYMENTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO LOAN VALUES (0, 5, '1970-01-01', 0, 0, 0, '2147483648');
CREATE TABLE ORDER (
	ORDER_ID INTEGER,
	ACCOUNT_ID INTEGER,
	BANK_TO VARCHAR(20),
	ACCOUNT_TO INTEGER,
	AMOUNT INTEGER,
	K_SYMBOL VARCHAR(20)
);
INSERT INTO ORDER VALUES (0, 5, '2147483648', 0, 0, '2147483648');
CREATE TABLE TRANS (
	TRANS_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	TYPE VARCHAR(20),
	OPERATION VARCHAR(20),
	AMOUNT INTEGER,
	BALANCE INTEGER,
	K_SYMBOL VARCHAR(20),
	BANK VARCHAR(20),
	ACCOUNT INTEGER
);
INSERT INTO TRANS VALUES (0, 5, '1970-01-01', '2147483648', '2147483648', 0, 0, '2147483648', '2147483648', 0);
-- ----------sql1------------
SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN CARD ON ACCOUNT.ACCOUNT_ID = CARD.DISP_ID WHERE CARD.TYPE = 'GOLD';
-- ----------sql2------------
-- 5
SELECT T2.ACCOUNT_ID FROM DISP AS T2  INNER JOIN CARD AS T1 ON T1.DISP_ID = T2.DISP_ID  WHERE T1.TYPE = 'GOLD';
",0.0398069999999999,SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN CARD ON ACCOUNT.ACCOUNT_ID = CARD.DISP_ID WHERE CARD.TYPE = 'GOLD',SELECT T2.ACCOUNT_ID FROM DISP AS T2  INNER JOIN CARD AS T1 ON T1.DISP_ID = T2.DISP_ID  WHERE T1.TYPE = 'GOLD',
1,144,ERROR,NotImplementedError: {'year': 'TRANS__DATE'},,SELECT AVG(TRANS.AMOUNT) FROM TRANS WHERE TRANS.OPERATION = 'VYBER KARTOU' AND YEAR(TRANS.DATE) = 2021,"SELECT AVG(T4.AMOUNT) FROM CARD AS T1 INNER JOIN DISP AS T2 ON T1.DISP_ID = T2.DISP_ID INNER JOIN ACCOUNT AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID INNER JOIN TRANS AS T4 ON T3.ACCOUNT_ID = T4.ACCOUNT_ID WHERE STRFTIME('%Y', T4.DATE) = '1998' AND T4.OPERATION = 'VYBER KARTOU'",
2,144,ERROR,NotImplementedError: {'year': 'TRANS__DATE'},,SELECT AVG(TRANS.AMOUNT) FROM TRANS WHERE TRANS.OPERATION = 'VYBER KARTOU' AND YEAR(TRANS.DATE) = 2021,"SELECT AVG(T4.AMOUNT) FROM CARD AS T1 INNER JOIN DISP AS T2 ON T1.DISP_ID = T2.DISP_ID INNER JOIN ACCOUNT AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID INNER JOIN TRANS AS T4 ON T3.ACCOUNT_ID = T4.ACCOUNT_ID WHERE STRFTIME('%Y', T4.DATE) = '1998' AND T4.OPERATION = 'VYBER KARTOU'",
3,144,ERROR,NotImplementedError: {'year': 'TRANS__DATE'},,SELECT AVG(TRANS.AMOUNT) FROM TRANS WHERE TRANS.OPERATION = 'VYBER KARTOU' AND YEAR(TRANS.DATE) = 2021,"SELECT AVG(T4.AMOUNT) FROM CARD AS T1 INNER JOIN DISP AS T2 ON T1.DISP_ID = T2.DISP_ID INNER JOIN ACCOUNT AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID INNER JOIN TRANS AS T4 ON T3.ACCOUNT_ID = T4.ACCOUNT_ID WHERE STRFTIME('%Y', T4.DATE) = '1998' AND T4.OPERATION = 'VYBER KARTOU'",
1,145,ERROR,NotImplementedError: {'year': 'TRANS__DATE'},,SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN TRANS ON ACCOUNT.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE TRANS.OPERATION = 'VYBER KARTOU' AND TRANS.AMOUNT < (SELECT AVG(TRANS.AMOUNT) FROM TRANS WHERE TRANS.OPERATION = 'VYBER KARTOU') AND YEAR(TRANS.DATE) = 1998,"SELECT T1.ACCOUNT_ID FROM TRANS AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE STRFTIME('%Y', T1.DATE) = '1998' AND T1.OPERATION = 'VYBER KARTOU' AND T1.AMOUNT < (SELECT AVG(AMOUNT) FROM TRANS WHERE STRFTIME('%Y', DATE) = '1998')",
2,145,ERROR,NotImplementedError: {'year': 'TRANS__DATE'},,SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN TRANS ON ACCOUNT.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE TRANS.OPERATION = 'VYBER KARTOU' AND TRANS.AMOUNT < (SELECT AVG(TRANS.AMOUNT) FROM TRANS WHERE TRANS.OPERATION = 'VYBER KARTOU') AND YEAR(TRANS.DATE) = 1998,"SELECT T1.ACCOUNT_ID FROM TRANS AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE STRFTIME('%Y', T1.DATE) = '1998' AND T1.OPERATION = 'VYBER KARTOU' AND T1.AMOUNT < (SELECT AVG(AMOUNT) FROM TRANS WHERE STRFTIME('%Y', DATE) = '1998')",
3,145,ERROR,NotImplementedError: {'year': 'TRANS__DATE'},,SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN TRANS ON ACCOUNT.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE TRANS.OPERATION = 'VYBER KARTOU' AND TRANS.AMOUNT < (SELECT AVG(TRANS.AMOUNT) FROM TRANS WHERE TRANS.OPERATION = 'VYBER KARTOU') AND YEAR(TRANS.DATE) = 1998,"SELECT T1.ACCOUNT_ID FROM TRANS AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE STRFTIME('%Y', T1.DATE) = '1998' AND T1.OPERATION = 'VYBER KARTOU' AND T1.AMOUNT < (SELECT AVG(AMOUNT) FROM TRANS WHERE STRFTIME('%Y', DATE) = '1998')",
1,146,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ACCOUNT (
	ACCOUNT_ID INTEGER,
	DISTRICT_ID INTEGER,
	FREQUENCY VARCHAR(20),
	DATE DATE
);
INSERT INTO ACCOUNT VALUES (5, 2, '2147483648', '1970-01-01');
CREATE TABLE CARD (
	CARD_ID INTEGER,
	DISP_ID INTEGER,
	TYPE VARCHAR(20),
	ISSUED DATE
);
INSERT INTO CARD VALUES (6, 3, 'CREDIT', '1970-01-01');
CREATE TABLE CLIENT (
	CLIENT_ID INTEGER,
	GENDER VARCHAR(20),
	BIRTH_DATE DATE,
	DISTRICT_ID INTEGER
);
INSERT INTO CLIENT VALUES (4, 'F', '1970-01-01', 2);
CREATE TABLE DISP (
	DISP_ID INTEGER,
	CLIENT_ID INTEGER,
	ACCOUNT_ID INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO DISP VALUES (3, 4, 5, 'OWNER');
CREATE TABLE DISTRICT (
	DISTRICT_ID INTEGER,
	A2 VARCHAR(20),
	A3 VARCHAR(20),
	A4 VARCHAR(20),
	A5 VARCHAR(20),
	A6 VARCHAR(20),
	A7 VARCHAR(20),
	A8 VARCHAR(20),
	A9 INTEGER,
	A10 INTEGER,
	A11 INTEGER,
	A12 INTEGER,
	A13 INTEGER,
	A14 INTEGER,
	A15 INTEGER,
	A16 INTEGER
);
INSERT INTO DISTRICT VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0);
CREATE TABLE LOAN (
	LOAN_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	AMOUNT INTEGER,
	DURATION INTEGER,
	PAYMENTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO LOAN VALUES (7, 5, '1970-01-01', 10, 8, 9, '2147483648');
CREATE TABLE ORDER (
	ORDER_ID INTEGER,
	ACCOUNT_ID INTEGER,
	BANK_TO VARCHAR(20),
	ACCOUNT_TO INTEGER,
	AMOUNT INTEGER,
	K_SYMBOL VARCHAR(20)
);
INSERT INTO ORDER VALUES (0, 5, '2147483648', 0, 0, '2147483648');
CREATE TABLE TRANS (
	TRANS_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	TYPE VARCHAR(20),
	OPERATION VARCHAR(20),
	AMOUNT INTEGER,
	BALANCE INTEGER,
	K_SYMBOL VARCHAR(20),
	BANK VARCHAR(20),
	ACCOUNT INTEGER
);
INSERT INTO TRANS VALUES (0, 5, '1970-01-01', '2147483648', '2147483648', 0, 0, '2147483648', '2147483648', 0);
-- ----------sql1------------
-- 5
SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID INNER JOIN CARD ON DISP.DISP_ID = CARD.DISP_ID INNER JOIN LOAN ON ACCOUNT.ACCOUNT_ID = LOAN.ACCOUNT_ID WHERE CLIENT.GENDER = 'F' AND CARD.TYPE = 'CREDIT' AND DISP.TYPE = 'OWNER' AND LOAN.LOAN_ID IS NOT NULL;
-- ----------sql2------------
-- 4
SELECT T1.CLIENT_ID FROM CLIENT AS T1 INNER JOIN DISP AS T2 ON T1.CLIENT_ID = T2.CLIENT_ID INNER JOIN ACCOUNT AS T5 ON T2.ACCOUNT_ID = T5.ACCOUNT_ID INNER JOIN LOAN AS T3 ON T5.ACCOUNT_ID = T3.ACCOUNT_ID INNER JOIN CARD AS T4 ON T2.DISP_ID = T4.DISP_ID WHERE T1.GENDER = 'F';
",0.120946,SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID INNER JOIN CARD ON DISP.DISP_ID = CARD.DISP_ID INNER JOIN LOAN ON ACCOUNT.ACCOUNT_ID = LOAN.ACCOUNT_ID WHERE CLIENT.GENDER = 'F' AND CARD.TYPE = 'CREDIT' AND DISP.TYPE = 'OWNER' AND LOAN.LOAN_ID IS NOT NULL,SELECT T1.CLIENT_ID FROM CLIENT AS T1 INNER JOIN DISP AS T2 ON T1.CLIENT_ID = T2.CLIENT_ID INNER JOIN ACCOUNT AS T5 ON T2.ACCOUNT_ID = T5.ACCOUNT_ID INNER JOIN LOAN AS T3 ON T5.ACCOUNT_ID = T3.ACCOUNT_ID INNER JOIN CARD AS T4 ON T2.DISP_ID = T4.DISP_ID WHERE T1.GENDER = 'F',
1,147,True,,0.0952259999999999,SELECT COUNT(DISTINCT ACCOUNT.ACCOUNT_ID) FROM ACCOUNT INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE CLIENT.GENDER = 'F' AND DISTRICT.A3 = 'SOUTH BOHEMIA',SELECT COUNT(T1.CLIENT_ID) FROM CLIENT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.GENDER = 'F' AND T2.A3 = 'SOUTH BOHEMIA',
1,148,True,,0.0975999999999999,SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID WHERE DISTRICT.A2 = 'TABOR' AND DISP.TYPE = 'OWNER',SELECT T2.ACCOUNT_ID FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN DISP AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T3.TYPE = 'OWNER' AND T1.A2 = 'TABOR',
1,149,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ACCOUNT (
	ACCOUNT_ID INTEGER,
	DISTRICT_ID INTEGER,
	FREQUENCY VARCHAR(20),
	DATE DATE
);
INSERT INTO ACCOUNT VALUES (5, 2, '2147483648', '1970-01-01');
CREATE TABLE CARD (
	CARD_ID INTEGER,
	DISP_ID INTEGER,
	TYPE VARCHAR(20),
	ISSUED DATE
);
INSERT INTO CARD VALUES (0, 3, '2147483648', '1970-01-01');
CREATE TABLE CLIENT (
	CLIENT_ID INTEGER,
	GENDER VARCHAR(20),
	BIRTH_DATE DATE,
	DISTRICT_ID INTEGER
);
INSERT INTO CLIENT VALUES (4, '2147483648', '1970-01-01', 2);
CREATE TABLE DISP (
	DISP_ID INTEGER,
	CLIENT_ID INTEGER,
	ACCOUNT_ID INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO DISP VALUES (3, 4, 5, '7450736887241744293');
CREATE TABLE DISTRICT (
	DISTRICT_ID INTEGER,
	A2 VARCHAR(20),
	A3 VARCHAR(20),
	A4 VARCHAR(20),
	A5 VARCHAR(20),
	A6 VARCHAR(20),
	A7 VARCHAR(20),
	A8 VARCHAR(20),
	A9 INTEGER,
	A10 INTEGER,
	A11 INTEGER,
	A12 INTEGER,
	A13 INTEGER,
	A14 INTEGER,
	A15 INTEGER,
	A16 INTEGER
);
INSERT INTO DISTRICT VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 10, 11, 8000, 12, 8, 9, 7, 6);
CREATE TABLE LOAN (
	LOAN_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	AMOUNT INTEGER,
	DURATION INTEGER,
	PAYMENTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO LOAN VALUES (13, 5, '1970-01-01', 14, 15, 16, '2147483648');
CREATE TABLE ORDER (
	ORDER_ID INTEGER,
	ACCOUNT_ID INTEGER,
	BANK_TO VARCHAR(20),
	ACCOUNT_TO INTEGER,
	AMOUNT INTEGER,
	K_SYMBOL VARCHAR(20)
);
INSERT INTO ORDER VALUES (0, 5, '2147483648', 0, 0, '2147483648');
CREATE TABLE TRANS (
	TRANS_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	TYPE VARCHAR(20),
	OPERATION VARCHAR(20),
	AMOUNT INTEGER,
	BALANCE INTEGER,
	K_SYMBOL VARCHAR(20),
	BANK VARCHAR(20),
	ACCOUNT INTEGER
);
INSERT INTO TRANS VALUES (0, 5, '1970-01-01', '2147483648', '2147483648', 0, 0, '2147483648', '2147483648', 0);
-- ----------sql1------------
SELECT ACCOUNT.FREQUENCY FROM ACCOUNT LEFT JOIN LOAN ON ACCOUNT.ACCOUNT_ID = LOAN.ACCOUNT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE LOAN.ACCOUNT_ID IS NULL AND DISTRICT.A11 > 8000 AND DISTRICT.A11 <= 9000;
-- ----------sql2------------
-- 7450736887241744293
SELECT T3.TYPE FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN DISP AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T3.TYPE != 'OWNER' AND T1.A11 BETWEEN 8000 AND 9000;
",0.156213,SELECT ACCOUNT.FREQUENCY FROM ACCOUNT LEFT JOIN LOAN ON ACCOUNT.ACCOUNT_ID = LOAN.ACCOUNT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE LOAN.ACCOUNT_ID IS NULL AND DISTRICT.A11 > 8000 AND DISTRICT.A11 <= 9000,SELECT T3.TYPE FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN DISP AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T3.TYPE != 'OWNER' AND T1.A11 BETWEEN 8000 AND 9000,
1,150,True,,0.110506,SELECT COUNT(DISTINCT ACCOUNT.ACCOUNT_ID) FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID INNER JOIN TRANS ON ACCOUNT.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE DISTRICT.A3 = 'NORTH BOHEMIA' AND TRANS.BANK = 'AB',SELECT COUNT(T2.ACCOUNT_ID) FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN TRANS AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T3.BANK = 'AB' AND T1.A3 = 'NORTH BOHEMIA',
1,151,True,,0.08635,SELECT DISTRICT.A2 FROM DISTRICT INNER JOIN ACCOUNT ON DISTRICT.DISTRICT_ID = ACCOUNT.DISTRICT_ID INNER JOIN TRANS ON ACCOUNT.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE TRANS.TYPE = 'VYDAJ';,SELECT DISTINCT T1.A2 FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN TRANS AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T3.TYPE = 'VYDAJ',
1,152,ERROR,NotImplementedError: {'year': 'ACCOUNT__DATE'},,SELECT AVG(DISTRICT.A15) FROM DISTRICT INNER JOIN ACCOUNT ON DISTRICT.DISTRICT_ID = ACCOUNT.DISTRICT_ID WHERE DISTRICT.A15 > 4000 AND YEAR(ACCOUNT.DATE) >= 1997,"SELECT AVG(T1.A15) FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE STRFTIME('%Y', T2.DATE) >= '1997' AND T1.A15 > 4000",
2,152,ERROR,NotImplementedError: {'year': 'ACCOUNT__DATE'},,SELECT AVG(DISTRICT.A15) FROM DISTRICT INNER JOIN ACCOUNT ON DISTRICT.DISTRICT_ID = ACCOUNT.DISTRICT_ID WHERE DISTRICT.A15 > 4000 AND YEAR(ACCOUNT.DATE) >= 1997,"SELECT AVG(T1.A15) FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE STRFTIME('%Y', T2.DATE) >= '1997' AND T1.A15 > 4000",
3,152,ERROR,NotImplementedError: {'year': 'ACCOUNT__DATE'},,SELECT AVG(DISTRICT.A15) FROM DISTRICT INNER JOIN ACCOUNT ON DISTRICT.DISTRICT_ID = ACCOUNT.DISTRICT_ID WHERE DISTRICT.A15 > 4000 AND YEAR(ACCOUNT.DATE) >= 1997,"SELECT AVG(T1.A15) FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE STRFTIME('%Y', T2.DATE) >= '1997' AND T1.A15 > 4000",
1,153,True,,0.186813,SELECT COUNT(*) FROM CARD INNER JOIN DISP ON CARD.DISP_ID = DISP.DISP_ID INNER JOIN LOAN ON DISP.ACCOUNT_ID = LOAN.ACCOUNT_ID WHERE CARD.TYPE = 'CLASSIC' AND DISP.TYPE = 'OWNER',SELECT COUNT(T1.CARD_ID) FROM CARD AS T1 INNER JOIN DISP AS T2 ON T1.DISP_ID = T2.DISP_ID WHERE T1.TYPE = 'CLASSIC' AND T2.TYPE = 'OWNER',
1,154,True,,0.077093,SELECT COUNT(*) FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A2 = 'HL.M. PRAHA' AND CLIENT.GENDER = 'M',SELECT COUNT(T1.CLIENT_ID) FROM CLIENT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.GENDER = 'M' AND T2.A2 = 'HL.M. PRAHA',
1,155,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM CARD WHERE TYPE = 'GOLD' AND ISSUED < '1998-01-01') AS REAL) / (SELECT COUNT(*) FROM CARD)) * 100 FROM CARD LIMIT 1,"SELECT CAST(SUM(TYPE = 'GOLD' AND STRFTIME('%Y', ISSUED) < '1998') AS REAL) * 100 / COUNT(CARD_ID) FROM CARD",
2,155,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM CARD WHERE TYPE = 'GOLD' AND ISSUED < '1998-01-01') AS REAL) / (SELECT COUNT(*) FROM CARD)) * 100 FROM CARD LIMIT 1,"SELECT CAST(SUM(TYPE = 'GOLD' AND STRFTIME('%Y', ISSUED) < '1998') AS REAL) * 100 / COUNT(CARD_ID) FROM CARD",
3,155,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM CARD WHERE TYPE = 'GOLD' AND ISSUED < '1998-01-01') AS REAL) / (SELECT COUNT(*) FROM CARD)) * 100 FROM CARD LIMIT 1,"SELECT CAST(SUM(TYPE = 'GOLD' AND STRFTIME('%Y', ISSUED) < '1998') AS REAL) * 100 / COUNT(CARD_ID) FROM CARD",
1,156,True,,0.062256,SELECT CLIENT.CLIENT_ID FROM DISP INNER JOIN LOAN ON DISP.ACCOUNT_ID = LOAN.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE DISP.TYPE = 'OWNER' ORDER BY LOAN.AMOUNT DESC LIMIT 1,SELECT T1.CLIENT_ID FROM DISP AS T1 INNER JOIN ACCOUNT AS T3 ON T1.ACCOUNT_ID = T3.ACCOUNT_ID INNER JOIN LOAN AS T2 ON T3.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T1.TYPE = 'OWNER' ORDER BY T2.AMOUNT DESC LIMIT 1,
1,157,True,,0.051429,SELECT DISTRICT.A15 FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE ACCOUNT.ACCOUNT_ID = 532,SELECT T1.A15 FROM DISTRICT AS T1 INNER JOIN `ACCOUNT` AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T2.ACCOUNT_ID = 532,
1,158,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT ACCOUNT.DISTRICT_ID FROM ACCOUNT INNER JOIN ORDER ON ACCOUNT.ACCOUNT_ID = ORDER.ACCOUNT_ID WHERE ORDER.ORDER_ID = '33333'`,,SELECT ACCOUNT.DISTRICT_ID FROM ACCOUNT INNER JOIN ORDER ON ACCOUNT.ACCOUNT_ID = ORDER.ACCOUNT_ID WHERE ORDER.ORDER_ID = '33333',SELECT T3.DISTRICT_ID FROM `ORDER` AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN DISTRICT AS T3 ON T2.DISTRICT_ID = T3.DISTRICT_ID WHERE T1.ORDER_ID = 33333,
2,158,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT ACCOUNT.DISTRICT_ID FROM ACCOUNT INNER JOIN ORDER ON ACCOUNT.ACCOUNT_ID = ORDER.ACCOUNT_ID WHERE ORDER.ORDER_ID = '33333'`,,SELECT ACCOUNT.DISTRICT_ID FROM ACCOUNT INNER JOIN ORDER ON ACCOUNT.ACCOUNT_ID = ORDER.ACCOUNT_ID WHERE ORDER.ORDER_ID = '33333',SELECT T3.DISTRICT_ID FROM `ORDER` AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN DISTRICT AS T3 ON T2.DISTRICT_ID = T3.DISTRICT_ID WHERE T1.ORDER_ID = 33333,
3,158,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT ACCOUNT.DISTRICT_ID FROM ACCOUNT INNER JOIN ORDER ON ACCOUNT.ACCOUNT_ID = ORDER.ACCOUNT_ID WHERE ORDER.ORDER_ID = '33333'`,,SELECT ACCOUNT.DISTRICT_ID FROM ACCOUNT INNER JOIN ORDER ON ACCOUNT.ACCOUNT_ID = ORDER.ACCOUNT_ID WHERE ORDER.ORDER_ID = '33333',SELECT T3.DISTRICT_ID FROM `ORDER` AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN DISTRICT AS T3 ON T2.DISTRICT_ID = T3.DISTRICT_ID WHERE T1.ORDER_ID = 33333,
1,159,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ACCOUNT (
	ACCOUNT_ID INTEGER,
	DISTRICT_ID INTEGER,
	FREQUENCY VARCHAR(20),
	DATE DATE
);
INSERT INTO ACCOUNT VALUES (4, 2, '2147483648', '1970-01-01');
CREATE TABLE CARD (
	CARD_ID INTEGER,
	DISP_ID INTEGER,
	TYPE VARCHAR(20),
	ISSUED DATE
);
INSERT INTO CARD VALUES (0, 3, '2147483648', '1970-01-01');
CREATE TABLE CLIENT (
	CLIENT_ID INTEGER,
	GENDER VARCHAR(20),
	BIRTH_DATE DATE,
	DISTRICT_ID INTEGER
);
INSERT INTO CLIENT VALUES (3356, '2147483648', '1970-01-01', 2);
CREATE TABLE DISP (
	DISP_ID INTEGER,
	CLIENT_ID INTEGER,
	ACCOUNT_ID INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO DISP VALUES (3, 3356, 4, '2147483648');
CREATE TABLE DISTRICT (
	DISTRICT_ID INTEGER,
	A2 VARCHAR(20),
	A3 VARCHAR(20),
	A4 VARCHAR(20),
	A5 VARCHAR(20),
	A6 VARCHAR(20),
	A7 VARCHAR(20),
	A8 VARCHAR(20),
	A9 INTEGER,
	A10 INTEGER,
	A11 INTEGER,
	A12 INTEGER,
	A13 INTEGER,
	A14 INTEGER,
	A15 INTEGER,
	A16 INTEGER
);
INSERT INTO DISTRICT VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0);
CREATE TABLE LOAN (
	LOAN_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	AMOUNT INTEGER,
	DURATION INTEGER,
	PAYMENTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO LOAN VALUES (0, 4, '1970-01-01', 0, 0, 0, '2147483648');
CREATE TABLE ORDER (
	ORDER_ID INTEGER,
	ACCOUNT_ID INTEGER,
	BANK_TO VARCHAR(20),
	ACCOUNT_TO INTEGER,
	AMOUNT INTEGER,
	K_SYMBOL VARCHAR(20)
);
INSERT INTO ORDER VALUES (0, 4, '2147483648', 0, 0, '2147483648');
CREATE TABLE TRANS (
	TRANS_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	TYPE VARCHAR(20),
	OPERATION VARCHAR(20),
	AMOUNT INTEGER,
	BALANCE INTEGER,
	K_SYMBOL VARCHAR(20),
	BANK VARCHAR(20),
	ACCOUNT INTEGER
);
INSERT INTO TRANS VALUES (5, 4, '1970-01-01', '2147483648', 'VYBER', 6, 7, '2147483648', '2147483648', 8);
-- ----------sql1------------
-- 8
SELECT TRANS.ACCOUNT FROM TRANS INNER JOIN DISP ON TRANS.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.CLIENT_ID = 3356 AND TRANS.OPERATION = 'VYBER';
-- ----------sql2------------
-- 5
SELECT T4.TRANS_ID FROM CLIENT AS T1 INNER JOIN DISP AS T2 ON T1.CLIENT_ID = T2.CLIENT_ID INNER JOIN ACCOUNT AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID INNER JOIN TRANS AS T4 ON T3.ACCOUNT_ID = T4.ACCOUNT_ID WHERE T1.CLIENT_ID = 3356 AND T4.OPERATION = 'VYBER';
",0.094887,SELECT TRANS.ACCOUNT FROM TRANS INNER JOIN DISP ON TRANS.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.CLIENT_ID = 3356 AND TRANS.OPERATION = 'VYBER',SELECT T4.TRANS_ID FROM CLIENT AS T1 INNER JOIN DISP AS T2 ON T1.CLIENT_ID = T2.CLIENT_ID INNER JOIN ACCOUNT AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID INNER JOIN TRANS AS T4 ON T3.ACCOUNT_ID = T4.ACCOUNT_ID WHERE T1.CLIENT_ID = 3356 AND T4.OPERATION = 'VYBER',
1,160,True,,0.064123,SELECT COUNT(*) FROM ACCOUNT INNER JOIN LOAN ON ACCOUNT.ACCOUNT_ID = LOAN.ACCOUNT_ID WHERE ACCOUNT.FREQUENCY = 'POPLATEK TYDNE' AND LOAN.AMOUNT < 200000,SELECT COUNT(T1.ACCOUNT_ID) FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T2.FREQUENCY = 'POPLATEK TYDNE' AND T1.AMOUNT < 200000,
1,161,True,,0.049284,SELECT CARD.TYPE FROM CARD INNER JOIN DISP ON CARD.DISP_ID = DISP.DISP_ID WHERE DISP.CLIENT_ID = '13539',SELECT T3.TYPE FROM DISP AS T1 INNER JOIN CLIENT AS T2 ON T1.CLIENT_ID = T2.CLIENT_ID INNER JOIN CARD AS T3 ON T1.DISP_ID = T3.DISP_ID WHERE T2.CLIENT_ID = 13539,
1,162,True,,0.0510549999999999,SELECT DISTRICT.A3 FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE CLIENT.CLIENT_ID = 3541,SELECT T1.A3 FROM DISTRICT AS T1 INNER JOIN CLIENT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T2.CLIENT_ID = 3541,
1,163,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ACCOUNT (
	ACCOUNT_ID INTEGER,
	DISTRICT_ID INTEGER,
	FREQUENCY VARCHAR(20),
	DATE DATE
);
INSERT INTO ACCOUNT VALUES (5, 2, '2147483648', '1970-01-01');
CREATE TABLE CARD (
	CARD_ID INTEGER,
	DISP_ID INTEGER,
	TYPE VARCHAR(20),
	ISSUED DATE
);
INSERT INTO CARD VALUES (0, 3, '2147483648', '1970-01-01');
CREATE TABLE CLIENT (
	CLIENT_ID INTEGER,
	GENDER VARCHAR(20),
	BIRTH_DATE DATE,
	DISTRICT_ID INTEGER
);
INSERT INTO CLIENT VALUES (4, '2147483648', '1970-01-01', 2);
CREATE TABLE DISP (
	DISP_ID INTEGER,
	CLIENT_ID INTEGER,
	ACCOUNT_ID INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO DISP VALUES (3, 4, 5, '2147483648');
CREATE TABLE DISTRICT (
	DISTRICT_ID INTEGER,
	A2 VARCHAR(20),
	A3 VARCHAR(20),
	A4 VARCHAR(20),
	A5 VARCHAR(20),
	A6 VARCHAR(20),
	A7 VARCHAR(20),
	A8 VARCHAR(20),
	A9 INTEGER,
	A10 INTEGER,
	A11 INTEGER,
	A12 INTEGER,
	A13 INTEGER,
	A14 INTEGER,
	A15 INTEGER,
	A16 INTEGER
);
INSERT INTO DISTRICT VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 10, 11, 12, 13, 14, 15, 16, 17);
CREATE TABLE LOAN (
	LOAN_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	AMOUNT INTEGER,
	DURATION INTEGER,
	PAYMENTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO LOAN VALUES (6, 5, '1970-01-01', 9, 8, 7, 'A');
CREATE TABLE ORDER (
	ORDER_ID INTEGER,
	ACCOUNT_ID INTEGER,
	BANK_TO VARCHAR(20),
	ACCOUNT_TO INTEGER,
	AMOUNT INTEGER,
	K_SYMBOL VARCHAR(20)
);
INSERT INTO ORDER VALUES (0, 5, '2147483648', 0, 0, '2147483648');
CREATE TABLE TRANS (
	TRANS_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	TYPE VARCHAR(20),
	OPERATION VARCHAR(20),
	AMOUNT INTEGER,
	BALANCE INTEGER,
	K_SYMBOL VARCHAR(20),
	BANK VARCHAR(20),
	ACCOUNT INTEGER
);
INSERT INTO TRANS VALUES (0, 5, '1970-01-01', '2147483648', '2147483648', 0, 0, '2147483648', '2147483648', 0);
-- ----------sql1------------
-- 2
SELECT ACCOUNT.DISTRICT_ID FROM LOAN INNER JOIN ACCOUNT ON LOAN.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID WHERE LOAN.STATUS = 'A' GROUP BY ACCOUNT.DISTRICT_ID ORDER BY COUNT(ACCOUNT.ACCOUNT_ID) DESC LIMIT 1;
-- ----------sql2------------
-- 2147483648
SELECT T1.A2 FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN LOAN AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T3.STATUS = 'A' GROUP BY T1.DISTRICT_ID ORDER BY COUNT(T2.ACCOUNT_ID) DESC LIMIT 1;
",0.08169,SELECT ACCOUNT.DISTRICT_ID FROM LOAN INNER JOIN ACCOUNT ON LOAN.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID WHERE LOAN.STATUS = 'A' GROUP BY ACCOUNT.DISTRICT_ID ORDER BY COUNT(ACCOUNT.ACCOUNT_ID) DESC LIMIT 1,SELECT T1.A2 FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN LOAN AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T3.STATUS = 'A' GROUP BY T1.DISTRICT_ID ORDER BY COUNT(T2.ACCOUNT_ID) DESC LIMIT 1,
1,164,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT CLIENT.CLIENT_ID FROM ORDER WHERE ORDER.ORDER_ID = '32423';`,,SELECT CLIENT.CLIENT_ID FROM ORDER WHERE ORDER.ORDER_ID = '32423';,SELECT T3.CLIENT_ID FROM `ORDER` AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN DISP AS T4 ON T4.ACCOUNT_ID = T2.ACCOUNT_ID  INNER JOIN CLIENT AS T3 ON T4.CLIENT_ID = T3.CLIENT_ID WHERE T1.ORDER_ID = 32423,
2,164,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT CLIENT.CLIENT_ID FROM ORDER WHERE ORDER.ORDER_ID = '32423';`,,SELECT CLIENT.CLIENT_ID FROM ORDER WHERE ORDER.ORDER_ID = '32423';,SELECT T3.CLIENT_ID FROM `ORDER` AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN DISP AS T4 ON T4.ACCOUNT_ID = T2.ACCOUNT_ID  INNER JOIN CLIENT AS T3 ON T4.CLIENT_ID = T3.CLIENT_ID WHERE T1.ORDER_ID = 32423,
3,164,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT CLIENT.CLIENT_ID FROM ORDER WHERE ORDER.ORDER_ID = '32423';`,,SELECT CLIENT.CLIENT_ID FROM ORDER WHERE ORDER.ORDER_ID = '32423';,SELECT T3.CLIENT_ID FROM `ORDER` AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN DISP AS T4 ON T4.ACCOUNT_ID = T2.ACCOUNT_ID  INNER JOIN CLIENT AS T3 ON T4.CLIENT_ID = T3.CLIENT_ID WHERE T1.ORDER_ID = 32423,
1,165,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ACCOUNT (
	ACCOUNT_ID INTEGER,
	DISTRICT_ID INTEGER,
	FREQUENCY VARCHAR(20),
	DATE DATE
);
INSERT INTO ACCOUNT VALUES (4, 5, '2147483648', '1970-01-01');
CREATE TABLE CARD (
	CARD_ID INTEGER,
	DISP_ID INTEGER,
	TYPE VARCHAR(20),
	ISSUED DATE
);
INSERT INTO CARD VALUES (0, 2, '2147483648', '1970-01-01');
CREATE TABLE CLIENT (
	CLIENT_ID INTEGER,
	GENDER VARCHAR(20),
	BIRTH_DATE DATE,
	DISTRICT_ID INTEGER
);
INSERT INTO CLIENT VALUES (3, '2147483648', '1970-01-01', 5);
CREATE TABLE DISP (
	DISP_ID INTEGER,
	CLIENT_ID INTEGER,
	ACCOUNT_ID INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO DISP VALUES (2, 3, 4, '2147483648');
CREATE TABLE DISTRICT (
	DISTRICT_ID INTEGER,
	A2 VARCHAR(20),
	A3 VARCHAR(20),
	A4 VARCHAR(20),
	A5 VARCHAR(20),
	A6 VARCHAR(20),
	A7 VARCHAR(20),
	A8 VARCHAR(20),
	A9 INTEGER,
	A10 INTEGER,
	A11 INTEGER,
	A12 INTEGER,
	A13 INTEGER,
	A14 INTEGER,
	A15 INTEGER,
	A16 INTEGER
);
INSERT INTO DISTRICT VALUES (5, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 10, 11, 12, 13, 14, 15, 16, 17);
CREATE TABLE LOAN (
	LOAN_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	AMOUNT INTEGER,
	DURATION INTEGER,
	PAYMENTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO LOAN VALUES (0, 4, '1970-01-01', 0, 0, 0, '2147483648');
CREATE TABLE ORDER (
	ORDER_ID INTEGER,
	ACCOUNT_ID INTEGER,
	BANK_TO VARCHAR(20),
	ACCOUNT_TO INTEGER,
	AMOUNT INTEGER,
	K_SYMBOL VARCHAR(20)
);
INSERT INTO ORDER VALUES (0, 4, '2147483648', 0, 0, '2147483648');
CREATE TABLE TRANS (
	TRANS_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	TYPE VARCHAR(20),
	OPERATION VARCHAR(20),
	AMOUNT INTEGER,
	BALANCE INTEGER,
	K_SYMBOL VARCHAR(20),
	BANK VARCHAR(20),
	ACCOUNT INTEGER
);
INSERT INTO TRANS VALUES (8, 4, '1970-01-01', '2147483648', '2147483648', 7, 9, '2147483648', '2147483648', 6);
-- ----------sql1------------
-- 6
SELECT TRANS.ACCOUNT FROM TRANS INNER JOIN ACCOUNT ON TRANS.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID WHERE ACCOUNT.DISTRICT_ID = 5;
-- ----------sql2------------
-- 8
SELECT T3.TRANS_ID FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN TRANS AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T1.DISTRICT_ID = 5;
",0.06622,SELECT TRANS.ACCOUNT FROM TRANS INNER JOIN ACCOUNT ON TRANS.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID WHERE ACCOUNT.DISTRICT_ID = 5,SELECT T3.TRANS_ID FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN TRANS AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T1.DISTRICT_ID = 5,
1,166,True,,0.056444,SELECT COUNT(*) FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A2 = 'JESENIK',SELECT COUNT(T2.ACCOUNT_ID) FROM DISTRICT AS T1 INNER JOIN ACCOUNT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.A2 = 'JESENIK',
1,167,True,,0.0654479999999999,SELECT CLIENT.CLIENT_ID FROM CARD INNER JOIN DISP ON CARD.DISP_ID = DISP.DISP_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CARD.TYPE = 'JUNIOR' AND CARD.ISSUED >= '1997-01-01',SELECT T2.CLIENT_ID FROM CARD AS T1 INNER JOIN DISP AS T2 ON T1.DISP_ID = T2.DISP_ID WHERE T1.TYPE = 'JUNIOR' AND T1.ISSUED >= '1997-01-01',
1,168,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A11 > 10000) FROM ACCOUNT INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A11 > 10000 AND CLIENT.GENDER = 'F',SELECT CAST(SUM(T2.GENDER = 'F') AS REAL) * 100 / COUNT(T2.CLIENT_ID) FROM DISTRICT AS T1 INNER JOIN CLIENT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.A11 > 10000,
2,168,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A11 > 10000) FROM ACCOUNT INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A11 > 10000 AND CLIENT.GENDER = 'F',SELECT CAST(SUM(T2.GENDER = 'F') AS REAL) * 100 / COUNT(T2.CLIENT_ID) FROM DISTRICT AS T1 INNER JOIN CLIENT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.A11 > 10000,
3,168,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A11 > 10000) FROM ACCOUNT INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A11 > 10000 AND CLIENT.GENDER = 'F',SELECT CAST(SUM(T2.GENDER = 'F') AS REAL) * 100 / COUNT(T2.CLIENT_ID) FROM DISTRICT AS T1 INNER JOIN CLIENT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.A11 > 10000,
1,169,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT (CAST((SELECT SUM(LOAN.AMOUNT) FROM LOAN INNER JOIN DISP ON LOAN.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.GENDER = 'M' AND STRFTIME('%Y', LOAN.DATE) = '1997') - (SELECT SUM(LOAN.AMOUNT) FROM LOAN INNER JOIN DISP ON LOAN.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.GENDER = 'M' AND STRFTIME('%Y', LOAN.DATE) = '1996') AS REAL) * 100 / (SELECT SUM(LOAN.AMOUNT) FROM LOAN INNER JOIN DISP ON LOAN.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.GENDER = 'M' AND STRFTIME('%Y', LOAN.DATE) = '1996') AS GROWTH_RATE`",,"SELECT (CAST((SELECT SUM(LOAN.AMOUNT) FROM LOAN INNER JOIN DISP ON LOAN.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.GENDER = 'M' AND STRFTIME('%Y', LOAN.DATE) = '1997') - (SELECT SUM(LOAN.AMOUNT) FROM LOAN INNER JOIN DISP ON LOAN.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.GENDER = 'M' AND STRFTIME('%Y', LOAN.DATE) = '1996') AS REAL) * 100 / (SELECT SUM(LOAN.AMOUNT) FROM LOAN INNER JOIN DISP ON LOAN.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.GENDER = 'M' AND STRFTIME('%Y', LOAN.DATE) = '1996') AS GROWTH_RATE","SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', T1.DATE) = '1997' THEN T1.AMOUNT ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T1.DATE) = '1996' THEN T1.AMOUNT ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN STRFTIME('%Y', T1.DATE) = '1996' THEN T1.AMOUNT ELSE 0 END) FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN DISP AS T3 ON T3.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN CLIENT AS T4 ON T4.CLIENT_ID = T3.CLIENT_ID WHERE T4.GENDER = 'M' AND T3.TYPE = 'OWNER'",
2,169,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT (CAST((SELECT SUM(LOAN.AMOUNT) FROM LOAN INNER JOIN DISP ON LOAN.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.GENDER = 'M' AND STRFTIME('%Y', LOAN.DATE) = '1997') - (SELECT SUM(LOAN.AMOUNT) FROM LOAN INNER JOIN DISP ON LOAN.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.GENDER = 'M' AND STRFTIME('%Y', LOAN.DATE) = '1996') AS REAL) * 100 / (SELECT SUM(LOAN.AMOUNT) FROM LOAN INNER JOIN DISP ON LOAN.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.GENDER = 'M' AND STRFTIME('%Y', LOAN.DATE) = '1996') AS GROWTH_RATE`",,"SELECT (CAST((SELECT SUM(LOAN.AMOUNT) FROM LOAN INNER JOIN DISP ON LOAN.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.GENDER = 'M' AND STRFTIME('%Y', LOAN.DATE) = '1997') - (SELECT SUM(LOAN.AMOUNT) FROM LOAN INNER JOIN DISP ON LOAN.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.GENDER = 'M' AND STRFTIME('%Y', LOAN.DATE) = '1996') AS REAL) * 100 / (SELECT SUM(LOAN.AMOUNT) FROM LOAN INNER JOIN DISP ON LOAN.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.GENDER = 'M' AND STRFTIME('%Y', LOAN.DATE) = '1996') AS GROWTH_RATE","SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', T1.DATE) = '1997' THEN T1.AMOUNT ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T1.DATE) = '1996' THEN T1.AMOUNT ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN STRFTIME('%Y', T1.DATE) = '1996' THEN T1.AMOUNT ELSE 0 END) FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN DISP AS T3 ON T3.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN CLIENT AS T4 ON T4.CLIENT_ID = T3.CLIENT_ID WHERE T4.GENDER = 'M' AND T3.TYPE = 'OWNER'",
3,169,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT (CAST((SELECT SUM(LOAN.AMOUNT) FROM LOAN INNER JOIN DISP ON LOAN.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.GENDER = 'M' AND STRFTIME('%Y', LOAN.DATE) = '1997') - (SELECT SUM(LOAN.AMOUNT) FROM LOAN INNER JOIN DISP ON LOAN.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.GENDER = 'M' AND STRFTIME('%Y', LOAN.DATE) = '1996') AS REAL) * 100 / (SELECT SUM(LOAN.AMOUNT) FROM LOAN INNER JOIN DISP ON LOAN.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.GENDER = 'M' AND STRFTIME('%Y', LOAN.DATE) = '1996') AS GROWTH_RATE`",,"SELECT (CAST((SELECT SUM(LOAN.AMOUNT) FROM LOAN INNER JOIN DISP ON LOAN.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.GENDER = 'M' AND STRFTIME('%Y', LOAN.DATE) = '1997') - (SELECT SUM(LOAN.AMOUNT) FROM LOAN INNER JOIN DISP ON LOAN.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.GENDER = 'M' AND STRFTIME('%Y', LOAN.DATE) = '1996') AS REAL) * 100 / (SELECT SUM(LOAN.AMOUNT) FROM LOAN INNER JOIN DISP ON LOAN.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.GENDER = 'M' AND STRFTIME('%Y', LOAN.DATE) = '1996') AS GROWTH_RATE","SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', T1.DATE) = '1997' THEN T1.AMOUNT ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T1.DATE) = '1996' THEN T1.AMOUNT ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN STRFTIME('%Y', T1.DATE) = '1996' THEN T1.AMOUNT ELSE 0 END) FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN DISP AS T3 ON T3.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN CLIENT AS T4 ON T4.CLIENT_ID = T3.CLIENT_ID WHERE T4.GENDER = 'M' AND T3.TYPE = 'OWNER'",
1,170,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'DATE']}",,SELECT COUNT(*) FROM TRANS WHERE TRANS.DATE > 1995 AND TRANS.OPERATION = 'VYBER KARTOU',"SELECT COUNT(ACCOUNT_ID) FROM TRANS WHERE STRFTIME('%Y', DATE) > '1995' AND OPERATION = 'VYBER KARTOU'",
2,170,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'DATE']}",,SELECT COUNT(*) FROM TRANS WHERE TRANS.DATE > 1995 AND TRANS.OPERATION = 'VYBER KARTOU',"SELECT COUNT(ACCOUNT_ID) FROM TRANS WHERE STRFTIME('%Y', DATE) > '1995' AND OPERATION = 'VYBER KARTOU'",
3,170,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'DATE']}",,SELECT COUNT(*) FROM TRANS WHERE TRANS.DATE > 1995 AND TRANS.OPERATION = 'VYBER KARTOU',"SELECT COUNT(ACCOUNT_ID) FROM TRANS WHERE STRFTIME('%Y', DATE) > '1995' AND OPERATION = 'VYBER KARTOU'",
1,171,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT SUM(DISTRICT.A16) FROM DISTRICT WHERE DISTRICT.A3 = 'NORTH BOHEMIA') - (SELECT SUM(DISTRICT.A16) FROM DISTRICT WHERE DISTRICT.A3 = 'EAST BOHEMIA'),"SELECT SUM(IIF(A3 = 'EAST BOHEMIA', A16, 0)) - SUM(IIF(A3 = 'NORTH BOHEMIA', A16, 0)) FROM DISTRICT",
2,171,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT SUM(DISTRICT.A16) FROM DISTRICT WHERE DISTRICT.A3 = 'NORTH BOHEMIA') - (SELECT SUM(DISTRICT.A16) FROM DISTRICT WHERE DISTRICT.A3 = 'EAST BOHEMIA'),"SELECT SUM(IIF(A3 = 'EAST BOHEMIA', A16, 0)) - SUM(IIF(A3 = 'NORTH BOHEMIA', A16, 0)) FROM DISTRICT",
3,171,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT SUM(DISTRICT.A16) FROM DISTRICT WHERE DISTRICT.A3 = 'NORTH BOHEMIA') - (SELECT SUM(DISTRICT.A16) FROM DISTRICT WHERE DISTRICT.A3 = 'EAST BOHEMIA'),"SELECT SUM(IIF(A3 = 'EAST BOHEMIA', A16, 0)) - SUM(IIF(A3 = 'NORTH BOHEMIA', A16, 0)) FROM DISTRICT",
1,172,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ACCOUNT (
	ACCOUNT_ID INTEGER,
	DISTRICT_ID INTEGER,
	FREQUENCY VARCHAR(20),
	DATE DATE
);
INSERT INTO ACCOUNT VALUES (1, 2, '2147483648', '1970-01-01');
CREATE TABLE CARD (
	CARD_ID INTEGER,
	DISP_ID INTEGER,
	TYPE VARCHAR(20),
	ISSUED DATE
);
INSERT INTO CARD VALUES (0, 3, '2147483648', '1970-01-01');
CREATE TABLE CLIENT (
	CLIENT_ID INTEGER,
	GENDER VARCHAR(20),
	BIRTH_DATE DATE,
	DISTRICT_ID INTEGER
);
INSERT INTO CLIENT VALUES (4, '2147483648', '1970-01-01', 2);
CREATE TABLE DISP (
	DISP_ID INTEGER,
	CLIENT_ID INTEGER,
	ACCOUNT_ID INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO DISP VALUES (3, 4, 1, '2147483648');
CREATE TABLE DISTRICT (
	DISTRICT_ID INTEGER,
	A2 VARCHAR(20),
	A3 VARCHAR(20),
	A4 VARCHAR(20),
	A5 VARCHAR(20),
	A6 VARCHAR(20),
	A7 VARCHAR(20),
	A8 VARCHAR(20),
	A9 INTEGER,
	A10 INTEGER,
	A11 INTEGER,
	A12 INTEGER,
	A13 INTEGER,
	A14 INTEGER,
	A15 INTEGER,
	A16 INTEGER
);
INSERT INTO DISTRICT VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0);
CREATE TABLE LOAN (
	LOAN_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	AMOUNT INTEGER,
	DURATION INTEGER,
	PAYMENTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO LOAN VALUES (0, 1, '1970-01-01', 0, 0, 0, '2147483648');
CREATE TABLE ORDER (
	ORDER_ID INTEGER,
	ACCOUNT_ID INTEGER,
	BANK_TO VARCHAR(20),
	ACCOUNT_TO INTEGER,
	AMOUNT INTEGER,
	K_SYMBOL VARCHAR(20)
);
INSERT INTO ORDER VALUES (0, 1, '2147483648', 0, 0, '2147483648');
CREATE TABLE TRANS (
	TRANS_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	TYPE VARCHAR(20),
	OPERATION VARCHAR(20),
	AMOUNT INTEGER,
	BALANCE INTEGER,
	K_SYMBOL VARCHAR(20),
	BANK VARCHAR(20),
	ACCOUNT INTEGER
);
INSERT INTO TRANS VALUES (0, 1, '1970-01-01', '2147483648', '2147483648', 0, 0, '2147483648', '2147483648', 0);
-- ----------sql1------------
SELECT DISP.TYPE, COUNT(*) FROM DISP INNER JOIN ACCOUNT ON DISP.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID WHERE ACCOUNT.ACCOUNT_ID BETWEEN 1 AND 10 AND (DISP.TYPE = 'OWNER' OR DISP.TYPE = 'DISPONENT') GROUP BY DISP.TYPE;
-- ----------sql2------------
-- 0, 0
SELECT SUM(TYPE = 'OWNER') , SUM(TYPE = 'DISPONENT') FROM DISP WHERE ACCOUNT_ID BETWEEN 1 AND 10;
",0.158541,"SELECT DISP.TYPE, COUNT(*) FROM DISP INNER JOIN ACCOUNT ON DISP.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID WHERE ACCOUNT.ACCOUNT_ID BETWEEN 1 AND 10 AND (DISP.TYPE = 'OWNER' OR DISP.TYPE = 'DISPONENT') GROUP BY DISP.TYPE","SELECT SUM(TYPE = 'OWNER') , SUM(TYPE = 'DISPONENT') FROM DISP WHERE ACCOUNT_ID BETWEEN 1 AND 10",
1,173,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT COUNT(*) AS 'STATEMENTREQUEST FREQUENCY', TRANS.K_SYMBOL AS 'DEBIT AIM' FROM ACCOUNT INNER JOIN TRANS ON ACCOUNT.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE ACCOUNT.ACCOUNT_ID = 3 AND TRANS.K_SYMBOL = 'STATEMENTREQUEST' UNION SELECT COUNT(*) AS 'STATEMENTREQUEST FREQUENCY', TRANS.K_SYMBOL AS 'DEBIT AIM' FROM ACCOUNT INNER JOIN TRANS ON ACCOUNT.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE ACCOUNT.ACCOUNT_ID = 3 AND TRANS.AMOUNT = 3539;`",,"SELECT COUNT(*) AS 'STATEMENTREQUEST FREQUENCY', TRANS.K_SYMBOL AS 'DEBIT AIM' FROM ACCOUNT INNER JOIN TRANS ON ACCOUNT.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE ACCOUNT.ACCOUNT_ID = 3 AND TRANS.K_SYMBOL = 'STATEMENTREQUEST' UNION SELECT COUNT(*) AS 'STATEMENTREQUEST FREQUENCY', TRANS.K_SYMBOL AS 'DEBIT AIM' FROM ACCOUNT INNER JOIN TRANS ON ACCOUNT.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE ACCOUNT.ACCOUNT_ID = 3 AND TRANS.AMOUNT = 3539;","SELECT T1.FREQUENCY, T2.K_SYMBOL FROM ACCOUNT AS T1 INNER JOIN (SELECT ACCOUNT_ID, K_SYMBOL, SUM(AMOUNT) AS TOTAL_AMOUNT FROM `ORDER` GROUP BY ACCOUNT_ID, K_SYMBOL) AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T1.ACCOUNT_ID = 3 AND T2.TOTAL_AMOUNT = 3539",
2,173,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT COUNT(*) AS 'STATEMENTREQUEST FREQUENCY', TRANS.K_SYMBOL AS 'DEBIT AIM' FROM ACCOUNT INNER JOIN TRANS ON ACCOUNT.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE ACCOUNT.ACCOUNT_ID = 3 AND TRANS.K_SYMBOL = 'STATEMENTREQUEST' UNION SELECT COUNT(*) AS 'STATEMENTREQUEST FREQUENCY', TRANS.K_SYMBOL AS 'DEBIT AIM' FROM ACCOUNT INNER JOIN TRANS ON ACCOUNT.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE ACCOUNT.ACCOUNT_ID = 3 AND TRANS.AMOUNT = 3539;`",,"SELECT COUNT(*) AS 'STATEMENTREQUEST FREQUENCY', TRANS.K_SYMBOL AS 'DEBIT AIM' FROM ACCOUNT INNER JOIN TRANS ON ACCOUNT.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE ACCOUNT.ACCOUNT_ID = 3 AND TRANS.K_SYMBOL = 'STATEMENTREQUEST' UNION SELECT COUNT(*) AS 'STATEMENTREQUEST FREQUENCY', TRANS.K_SYMBOL AS 'DEBIT AIM' FROM ACCOUNT INNER JOIN TRANS ON ACCOUNT.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE ACCOUNT.ACCOUNT_ID = 3 AND TRANS.AMOUNT = 3539;","SELECT T1.FREQUENCY, T2.K_SYMBOL FROM ACCOUNT AS T1 INNER JOIN (SELECT ACCOUNT_ID, K_SYMBOL, SUM(AMOUNT) AS TOTAL_AMOUNT FROM `ORDER` GROUP BY ACCOUNT_ID, K_SYMBOL) AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T1.ACCOUNT_ID = 3 AND T2.TOTAL_AMOUNT = 3539",
3,173,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT COUNT(*) AS 'STATEMENTREQUEST FREQUENCY', TRANS.K_SYMBOL AS 'DEBIT AIM' FROM ACCOUNT INNER JOIN TRANS ON ACCOUNT.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE ACCOUNT.ACCOUNT_ID = 3 AND TRANS.K_SYMBOL = 'STATEMENTREQUEST' UNION SELECT COUNT(*) AS 'STATEMENTREQUEST FREQUENCY', TRANS.K_SYMBOL AS 'DEBIT AIM' FROM ACCOUNT INNER JOIN TRANS ON ACCOUNT.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE ACCOUNT.ACCOUNT_ID = 3 AND TRANS.AMOUNT = 3539;`",,"SELECT COUNT(*) AS 'STATEMENTREQUEST FREQUENCY', TRANS.K_SYMBOL AS 'DEBIT AIM' FROM ACCOUNT INNER JOIN TRANS ON ACCOUNT.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE ACCOUNT.ACCOUNT_ID = 3 AND TRANS.K_SYMBOL = 'STATEMENTREQUEST' UNION SELECT COUNT(*) AS 'STATEMENTREQUEST FREQUENCY', TRANS.K_SYMBOL AS 'DEBIT AIM' FROM ACCOUNT INNER JOIN TRANS ON ACCOUNT.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE ACCOUNT.ACCOUNT_ID = 3 AND TRANS.AMOUNT = 3539;","SELECT T1.FREQUENCY, T2.K_SYMBOL FROM ACCOUNT AS T1 INNER JOIN (SELECT ACCOUNT_ID, K_SYMBOL, SUM(AMOUNT) AS TOTAL_AMOUNT FROM `ORDER` GROUP BY ACCOUNT_ID, K_SYMBOL) AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T1.ACCOUNT_ID = 3 AND T2.TOTAL_AMOUNT = 3539",
1,174,ERROR,"NotImplementedError: {'extract': ['year', 'CLIENT__BIRTH_DATE']}",,SELECT EXTRACT(YEAR FROM CLIENT.BIRTH_DATE) FROM DISP INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE DISP.ACCOUNT_ID = '130' AND DISP.TYPE = 'OWNER',"SELECT STRFTIME('%Y', T1.BIRTH_DATE) FROM CLIENT AS T1 INNER JOIN DISP AS T3 ON T1.CLIENT_ID = T3.CLIENT_ID INNER JOIN ACCOUNT AS T2 ON T3.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T2.ACCOUNT_ID = 130",
2,174,ERROR,"NotImplementedError: {'extract': ['year', 'CLIENT__BIRTH_DATE']}",,SELECT EXTRACT(YEAR FROM CLIENT.BIRTH_DATE) FROM DISP INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE DISP.ACCOUNT_ID = '130' AND DISP.TYPE = 'OWNER',"SELECT STRFTIME('%Y', T1.BIRTH_DATE) FROM CLIENT AS T1 INNER JOIN DISP AS T3 ON T1.CLIENT_ID = T3.CLIENT_ID INNER JOIN ACCOUNT AS T2 ON T3.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T2.ACCOUNT_ID = 130",
3,174,ERROR,"NotImplementedError: {'extract': ['year', 'CLIENT__BIRTH_DATE']}",,SELECT EXTRACT(YEAR FROM CLIENT.BIRTH_DATE) FROM DISP INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE DISP.ACCOUNT_ID = '130' AND DISP.TYPE = 'OWNER',"SELECT STRFTIME('%Y', T1.BIRTH_DATE) FROM CLIENT AS T1 INNER JOIN DISP AS T3 ON T1.CLIENT_ID = T3.CLIENT_ID INNER JOIN ACCOUNT AS T2 ON T3.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T2.ACCOUNT_ID = 130",
1,175,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ACCOUNT (
	ACCOUNT_ID INTEGER,
	DISTRICT_ID INTEGER,
	FREQUENCY VARCHAR(20),
	DATE DATE
);
INSERT INTO ACCOUNT VALUES (5, 2, 'POPLATEK PO OBRATU', '1970-01-01');
CREATE TABLE CARD (
	CARD_ID INTEGER,
	DISP_ID INTEGER,
	TYPE VARCHAR(20),
	ISSUED DATE
);
INSERT INTO CARD VALUES (0, 3, '2147483648', '1970-01-01');
CREATE TABLE CLIENT (
	CLIENT_ID INTEGER,
	GENDER VARCHAR(20),
	BIRTH_DATE DATE,
	DISTRICT_ID INTEGER
);
INSERT INTO CLIENT VALUES (4, '2147483648', '1970-01-01', 2);
CREATE TABLE DISP (
	DISP_ID INTEGER,
	CLIENT_ID INTEGER,
	ACCOUNT_ID INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO DISP VALUES (3, 4, 5, 'OWNER');
CREATE TABLE DISTRICT (
	DISTRICT_ID INTEGER,
	A2 VARCHAR(20),
	A3 VARCHAR(20),
	A4 VARCHAR(20),
	A5 VARCHAR(20),
	A6 VARCHAR(20),
	A7 VARCHAR(20),
	A8 VARCHAR(20),
	A9 INTEGER,
	A10 INTEGER,
	A11 INTEGER,
	A12 INTEGER,
	A13 INTEGER,
	A14 INTEGER,
	A15 INTEGER,
	A16 INTEGER
);
INSERT INTO DISTRICT VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0);
CREATE TABLE LOAN (
	LOAN_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	AMOUNT INTEGER,
	DURATION INTEGER,
	PAYMENTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO LOAN VALUES (0, 5, '1970-01-01', 0, 0, 0, '2147483648');
CREATE TABLE ORDER (
	ORDER_ID INTEGER,
	ACCOUNT_ID INTEGER,
	BANK_TO VARCHAR(20),
	ACCOUNT_TO INTEGER,
	AMOUNT INTEGER,
	K_SYMBOL VARCHAR(20)
);
INSERT INTO ORDER VALUES (0, 5, '2147483648', 0, 0, '2147483648');
CREATE TABLE TRANS (
	TRANS_ID INTEGER,
	ACCOUNT_ID INTEGER,
	DATE DATE,
	TYPE VARCHAR(20),
	OPERATION VARCHAR(20),
	AMOUNT INTEGER,
	BALANCE INTEGER,
	K_SYMBOL VARCHAR(20),
	BANK VARCHAR(20),
	ACCOUNT INTEGER
);
INSERT INTO TRANS VALUES (8, 5, '1970-01-01', '2147483648', '2147483648', 7, 6, '422679090747108382', '2147483648', 9);
-- ----------sql1------------
-- 0
SELECT COUNT(DISTINCT ACCOUNT.ACCOUNT_ID) FROM ACCOUNT INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN TRANS ON ACCOUNT.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE DISP.TYPE = 'OWNER' AND TRANS.K_SYMBOL = 'POPLATEK PO OBRATU';
-- ----------sql2------------
-- 1
SELECT COUNT(T1.ACCOUNT_ID) FROM ACCOUNT AS T1 INNER JOIN DISP AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T2.TYPE = 'OWNER' AND T1.FREQUENCY = 'POPLATEK PO OBRATU';
",0.077661,SELECT COUNT(DISTINCT ACCOUNT.ACCOUNT_ID) FROM ACCOUNT INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN TRANS ON ACCOUNT.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE DISP.TYPE = 'OWNER' AND TRANS.K_SYMBOL = 'POPLATEK PO OBRATU',SELECT COUNT(T1.ACCOUNT_ID) FROM ACCOUNT AS T1 INNER JOIN DISP AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T2.TYPE = 'OWNER' AND T1.FREQUENCY = 'POPLATEK PO OBRATU',
1,176,True,,0.075243,"SELECT LOAN.AMOUNT, LOAN.STATUS FROM LOAN INNER JOIN DISP ON LOAN.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.CLIENT_ID = 992;","SELECT T4.AMOUNT, T4.STATUS FROM CLIENT AS T1 INNER JOIN DISP AS T2 ON T1.CLIENT_ID = T2.CLIENT_ID INNER JOIN ACCOUNT AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID INNER JOIN LOAN AS T4 ON T3.ACCOUNT_ID = T4.ACCOUNT_ID WHERE T1.CLIENT_ID = 992",
1,177,True,,0.096888,"SELECT TRANS.BALANCE, CLIENT.GENDER FROM TRANS INNER JOIN DISP ON TRANS.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE TRANS.TRANS_ID = 851 AND CLIENT.CLIENT_ID = 4","SELECT T4.BALANCE, T1.GENDER FROM CLIENT AS T1 INNER JOIN DISP AS T2 ON T1.CLIENT_ID = T2.CLIENT_ID INNER JOIN ACCOUNT AS T3 ON T2.ACCOUNT_ID =T3.ACCOUNT_ID INNER JOIN TRANS AS T4 ON T3.ACCOUNT_ID = T4.ACCOUNT_ID WHERE T1.CLIENT_ID = 4 AND T4.TRANS_ID = 851",
1,178,True,,0.058893,SELECT CARD.TYPE FROM CARD INNER JOIN DISP ON CARD.DISP_ID = DISP.DISP_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CLIENT.CLIENT_ID = 9,SELECT T3.TYPE FROM CLIENT AS T1 INNER JOIN DISP AS T2 ON T1.CLIENT_ID = T2.CLIENT_ID INNER JOIN CARD AS T3 ON T2.DISP_ID = T3.DISP_ID WHERE T1.CLIENT_ID = 9,
1,179,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'TRANS__DATE']}",,"SELECT SUM(TRANS.AMOUNT) FROM CLIENT INNER JOIN DISP ON CLIENT.CLIENT_ID = DISP.CLIENT_ID INNER JOIN TRANS ON DISP.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE CLIENT.CLIENT_ID = 617 AND STRFTIME('%Y', TRANS.DATE) = '1998'","SELECT SUM(T3.AMOUNT) FROM CLIENT AS T1 INNER JOIN DISP AS T4 ON T1.CLIENT_ID = T4.CLIENT_ID INNER JOIN ACCOUNT AS T2 ON T4.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN TRANS AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID WHERE STRFTIME('%Y', T3.DATE)= '1998' AND T1.CLIENT_ID = 617",
2,179,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'TRANS__DATE']}",,"SELECT SUM(TRANS.AMOUNT) FROM CLIENT INNER JOIN DISP ON CLIENT.CLIENT_ID = DISP.CLIENT_ID INNER JOIN TRANS ON DISP.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE CLIENT.CLIENT_ID = 617 AND STRFTIME('%Y', TRANS.DATE) = '1998'","SELECT SUM(T3.AMOUNT) FROM CLIENT AS T1 INNER JOIN DISP AS T4 ON T1.CLIENT_ID = T4.CLIENT_ID INNER JOIN ACCOUNT AS T2 ON T4.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN TRANS AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID WHERE STRFTIME('%Y', T3.DATE)= '1998' AND T1.CLIENT_ID = 617",
3,179,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'TRANS__DATE']}",,"SELECT SUM(TRANS.AMOUNT) FROM CLIENT INNER JOIN DISP ON CLIENT.CLIENT_ID = DISP.CLIENT_ID INNER JOIN TRANS ON DISP.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE CLIENT.CLIENT_ID = 617 AND STRFTIME('%Y', TRANS.DATE) = '1998'","SELECT SUM(T3.AMOUNT) FROM CLIENT AS T1 INNER JOIN DISP AS T4 ON T1.CLIENT_ID = T4.CLIENT_ID INNER JOIN ACCOUNT AS T2 ON T4.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN TRANS AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID WHERE STRFTIME('%Y', T3.DATE)= '1998' AND T1.CLIENT_ID = 617",
1,180,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T1__BIRTH_DATE']}",,SELECT CLIENT.CLIENT_ID FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A3 = 'EAST BOHEMIA' AND CLIENT.BIRTH_DATE BETWEEN '1983-01-01' AND '1987-12-31',"SELECT T1.CLIENT_ID, T3.ACCOUNT_ID FROM CLIENT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN DISP AS T4 ON T1.CLIENT_ID = T4.CLIENT_ID INNER JOIN ACCOUNT AS T3 ON T2.DISTRICT_ID = T3.DISTRICT_ID AND T4.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T2.A3 = 'EAST BOHEMIA' AND STRFTIME('%Y', T1.BIRTH_DATE) BETWEEN '1983' AND '1987'",
2,180,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T1__BIRTH_DATE']}",,SELECT CLIENT.CLIENT_ID FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A3 = 'EAST BOHEMIA' AND CLIENT.BIRTH_DATE BETWEEN '1983-01-01' AND '1987-12-31',"SELECT T1.CLIENT_ID, T3.ACCOUNT_ID FROM CLIENT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN DISP AS T4 ON T1.CLIENT_ID = T4.CLIENT_ID INNER JOIN ACCOUNT AS T3 ON T2.DISTRICT_ID = T3.DISTRICT_ID AND T4.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T2.A3 = 'EAST BOHEMIA' AND STRFTIME('%Y', T1.BIRTH_DATE) BETWEEN '1983' AND '1987'",
3,180,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T1__BIRTH_DATE']}",,SELECT CLIENT.CLIENT_ID FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A3 = 'EAST BOHEMIA' AND CLIENT.BIRTH_DATE BETWEEN '1983-01-01' AND '1987-12-31',"SELECT T1.CLIENT_ID, T3.ACCOUNT_ID FROM CLIENT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN DISP AS T4 ON T1.CLIENT_ID = T4.CLIENT_ID INNER JOIN ACCOUNT AS T3 ON T2.DISTRICT_ID = T3.DISTRICT_ID AND T4.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T2.A3 = 'EAST BOHEMIA' AND STRFTIME('%Y', T1.BIRTH_DATE) BETWEEN '1983' AND '1987'",
1,181,True,,0.0849969999999999,SELECT CLIENT.CLIENT_ID FROM CLIENT INNER JOIN DISP ON CLIENT.CLIENT_ID = DISP.CLIENT_ID INNER JOIN LOAN ON DISP.ACCOUNT_ID = LOAN.ACCOUNT_ID WHERE CLIENT.GENDER = 'F' ORDER BY LOAN.AMOUNT DESC LIMIT 3,SELECT T1.CLIENT_ID FROM CLIENT AS T1 INNER JOIN DISP AS T4 ON T1.CLIENT_ID= T4.CLIENT_ID INNER JOIN ACCOUNT AS T2 ON T4.ACCOUNT_ID = T2.ACCOUNT_ID  INNER JOIN LOAN AS T3 ON T2.ACCOUNT_ID = T3.ACCOUNT_ID AND T4.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T1.GENDER = 'F' ORDER BY T3.AMOUNT DESC LIMIT 3,
1,182,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T3__BIRTH_DATE']}",,SELECT COUNT(*) FROM CLIENT INNER JOIN DISP ON CLIENT.CLIENT_ID = DISP.CLIENT_ID INNER JOIN TRANS ON DISP.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE CLIENT.GENDER = 'M' AND CLIENT.BIRTH_DATE BETWEEN '1974-01-01' AND '1976-12-31' AND TRANS.K_SYMBOL = 'SIPO' AND TRANS.AMOUNT > 4000,"SELECT COUNT(T1.ACCOUNT_ID) FROM TRANS AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN DISP AS T4 ON T2.ACCOUNT_ID = T4.ACCOUNT_ID INNER JOIN CLIENT AS T3 ON T4.CLIENT_ID = T3.CLIENT_ID WHERE STRFTIME('%Y', T3.BIRTH_DATE) BETWEEN '1974' AND '1976' AND T3.GENDER = 'M' AND T1.AMOUNT > 4000 AND T1.K_SYMBOL = 'SIPO'",
2,182,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T3__BIRTH_DATE']}",,SELECT COUNT(*) FROM CLIENT INNER JOIN DISP ON CLIENT.CLIENT_ID = DISP.CLIENT_ID INNER JOIN TRANS ON DISP.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE CLIENT.GENDER = 'M' AND CLIENT.BIRTH_DATE BETWEEN '1974-01-01' AND '1976-12-31' AND TRANS.K_SYMBOL = 'SIPO' AND TRANS.AMOUNT > 4000,"SELECT COUNT(T1.ACCOUNT_ID) FROM TRANS AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN DISP AS T4 ON T2.ACCOUNT_ID = T4.ACCOUNT_ID INNER JOIN CLIENT AS T3 ON T4.CLIENT_ID = T3.CLIENT_ID WHERE STRFTIME('%Y', T3.BIRTH_DATE) BETWEEN '1974' AND '1976' AND T3.GENDER = 'M' AND T1.AMOUNT > 4000 AND T1.K_SYMBOL = 'SIPO'",
3,182,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T3__BIRTH_DATE']}",,SELECT COUNT(*) FROM CLIENT INNER JOIN DISP ON CLIENT.CLIENT_ID = DISP.CLIENT_ID INNER JOIN TRANS ON DISP.ACCOUNT_ID = TRANS.ACCOUNT_ID WHERE CLIENT.GENDER = 'M' AND CLIENT.BIRTH_DATE BETWEEN '1974-01-01' AND '1976-12-31' AND TRANS.K_SYMBOL = 'SIPO' AND TRANS.AMOUNT > 4000,"SELECT COUNT(T1.ACCOUNT_ID) FROM TRANS AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID INNER JOIN DISP AS T4 ON T2.ACCOUNT_ID = T4.ACCOUNT_ID INNER JOIN CLIENT AS T3 ON T4.CLIENT_ID = T3.CLIENT_ID WHERE STRFTIME('%Y', T3.BIRTH_DATE) BETWEEN '1974' AND '1976' AND T3.GENDER = 'M' AND T1.AMOUNT > 4000 AND T1.K_SYMBOL = 'SIPO'",
1,183,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T1__DATE']}",,SELECT COUNT(ACCOUNT.ACCOUNT_ID) FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.DISTRICT_ID = 'BEROUN' AND ACCOUNT.DATE > 1996,"SELECT COUNT(ACCOUNT_ID) FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE STRFTIME('%Y', T1.DATE) > '1996' AND T2.A2 = 'BEROUN'",
2,183,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T1__DATE']}",,SELECT COUNT(ACCOUNT.ACCOUNT_ID) FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.DISTRICT_ID = 'BEROUN' AND ACCOUNT.DATE > 1996,"SELECT COUNT(ACCOUNT_ID) FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE STRFTIME('%Y', T1.DATE) > '1996' AND T2.A2 = 'BEROUN'",
3,183,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T1__DATE']}",,SELECT COUNT(ACCOUNT.ACCOUNT_ID) FROM ACCOUNT INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.DISTRICT_ID = 'BEROUN' AND ACCOUNT.DATE > 1996,"SELECT COUNT(ACCOUNT_ID) FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE STRFTIME('%Y', T1.DATE) > '1996' AND T2.A2 = 'BEROUN'",
1,184,True,,0.087232,SELECT COUNT(*) FROM CLIENT INNER JOIN DISP ON CLIENT.CLIENT_ID = DISP.CLIENT_ID INNER JOIN CARD ON DISP.DISP_ID = CARD.DISP_ID WHERE CLIENT.GENDER = 'F' AND CARD.TYPE = 'JUNIOR',SELECT COUNT(T1.CLIENT_ID) FROM CLIENT AS T1 INNER JOIN DISP AS T2 ON T1.CLIENT_ID = T2.CLIENT_ID INNER JOIN CARD AS T3 ON T2.DISP_ID = T3.DISP_ID WHERE T1.GENDER = 'F' AND T3.TYPE = 'JUNIOR',
1,185,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) FILTER (WHERE CLIENT.GENDER = 'F') AS REAL) * 100 / COUNT(*) FROM ACCOUNT INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A3 = 'PRAGUE',SELECT CAST(SUM(T2.GENDER = 'F') AS REAL) / COUNT(T2.CLIENT_ID) * 100 FROM DISTRICT AS T1 INNER JOIN CLIENT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.A3 = 'PRAGUE',
2,185,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) FILTER (WHERE CLIENT.GENDER = 'F') AS REAL) * 100 / COUNT(*) FROM ACCOUNT INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A3 = 'PRAGUE',SELECT CAST(SUM(T2.GENDER = 'F') AS REAL) / COUNT(T2.CLIENT_ID) * 100 FROM DISTRICT AS T1 INNER JOIN CLIENT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.A3 = 'PRAGUE',
3,185,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) FILTER (WHERE CLIENT.GENDER = 'F') AS REAL) * 100 / COUNT(*) FROM ACCOUNT INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A3 = 'PRAGUE',SELECT CAST(SUM(T2.GENDER = 'F') AS REAL) / COUNT(T2.CLIENT_ID) * 100 FROM DISTRICT AS T1 INNER JOIN CLIENT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE T1.A3 = 'PRAGUE',
1,186,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(COUNT(*) FILTER (WHERE CLIENT.GENDER = 'M') AS REAL) * 100 / COUNT(*)) AS PERCENTAGE FROM ACCOUNT INNER JOIN CLIENT ON ACCOUNT.ACCOUNT_ID = CLIENT.CLIENT_ID WHERE ACCOUNT.FREQUENCY = 'POPLATEK TYDNE',SELECT CAST(SUM(T1.GENDER = 'M') AS REAL) * 100 / COUNT(T1.CLIENT_ID) FROM CLIENT AS T1 INNER JOIN DISTRICT AS T3 ON T1.DISTRICT_ID = T3.DISTRICT_ID INNER JOIN ACCOUNT AS T2 ON T2.DISTRICT_ID = T3.DISTRICT_ID INNER JOIN DISP AS T4 ON T1.CLIENT_ID = T4.CLIENT_ID AND T2.ACCOUNT_ID = T4.ACCOUNT_ID WHERE T2.FREQUENCY = 'POPLATEK TYDNE',
2,186,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(COUNT(*) FILTER (WHERE CLIENT.GENDER = 'M') AS REAL) * 100 / COUNT(*)) AS PERCENTAGE FROM ACCOUNT INNER JOIN CLIENT ON ACCOUNT.ACCOUNT_ID = CLIENT.CLIENT_ID WHERE ACCOUNT.FREQUENCY = 'POPLATEK TYDNE',SELECT CAST(SUM(T1.GENDER = 'M') AS REAL) * 100 / COUNT(T1.CLIENT_ID) FROM CLIENT AS T1 INNER JOIN DISTRICT AS T3 ON T1.DISTRICT_ID = T3.DISTRICT_ID INNER JOIN ACCOUNT AS T2 ON T2.DISTRICT_ID = T3.DISTRICT_ID INNER JOIN DISP AS T4 ON T1.CLIENT_ID = T4.CLIENT_ID AND T2.ACCOUNT_ID = T4.ACCOUNT_ID WHERE T2.FREQUENCY = 'POPLATEK TYDNE',
3,186,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(COUNT(*) FILTER (WHERE CLIENT.GENDER = 'M') AS REAL) * 100 / COUNT(*)) AS PERCENTAGE FROM ACCOUNT INNER JOIN CLIENT ON ACCOUNT.ACCOUNT_ID = CLIENT.CLIENT_ID WHERE ACCOUNT.FREQUENCY = 'POPLATEK TYDNE',SELECT CAST(SUM(T1.GENDER = 'M') AS REAL) * 100 / COUNT(T1.CLIENT_ID) FROM CLIENT AS T1 INNER JOIN DISTRICT AS T3 ON T1.DISTRICT_ID = T3.DISTRICT_ID INNER JOIN ACCOUNT AS T2 ON T2.DISTRICT_ID = T3.DISTRICT_ID INNER JOIN DISP AS T4 ON T1.CLIENT_ID = T4.CLIENT_ID AND T2.ACCOUNT_ID = T4.ACCOUNT_ID WHERE T2.FREQUENCY = 'POPLATEK TYDNE',
1,187,True,,0.0687639999999999,SELECT COUNT(*) FROM ACCOUNT INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID WHERE ACCOUNT.FREQUENCY = 'POPLATEK TYDNE' AND DISP.TYPE = 'OWNER',SELECT COUNT(T2.ACCOUNT_ID) FROM ACCOUNT AS T1 INNER JOIN DISP AS T2 ON T2.ACCOUNT_ID = T1.ACCOUNT_ID WHERE T1.FREQUENCY = 'POPLATEK TYDNE' AND T2.TYPE = 'OWNER',
1,188,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T2__DATE']}",,SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN LOAN ON ACCOUNT.ACCOUNT_ID = LOAN.ACCOUNT_ID WHERE LOAN.DURATION > 24 AND ACCOUNT.DATE < '1997' ORDER BY LOAN.AMOUNT ASC LIMIT 1,"SELECT T1.ACCOUNT_ID FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T1.DURATION > 24 AND STRFTIME('%Y', T2.DATE) < '1997' ORDER BY T1.AMOUNT ASC LIMIT 1",
2,188,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T2__DATE']}",,SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN LOAN ON ACCOUNT.ACCOUNT_ID = LOAN.ACCOUNT_ID WHERE LOAN.DURATION > 24 AND ACCOUNT.DATE < '1997' ORDER BY LOAN.AMOUNT ASC LIMIT 1,"SELECT T1.ACCOUNT_ID FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T1.DURATION > 24 AND STRFTIME('%Y', T2.DATE) < '1997' ORDER BY T1.AMOUNT ASC LIMIT 1",
3,188,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T2__DATE']}",,SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN LOAN ON ACCOUNT.ACCOUNT_ID = LOAN.ACCOUNT_ID WHERE LOAN.DURATION > 24 AND ACCOUNT.DATE < '1997' ORDER BY LOAN.AMOUNT ASC LIMIT 1,"SELECT T1.ACCOUNT_ID FROM LOAN AS T1 INNER JOIN ACCOUNT AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T1.DURATION > 24 AND STRFTIME('%Y', T2.DATE) < '1997' ORDER BY T1.AMOUNT ASC LIMIT 1",
1,189,True,,0.111,"SELECT ACCOUNT.ACCOUNT_ID FROM ACCOUNT INNER JOIN DISP ON ACCOUNT.ACCOUNT_ID = DISP.ACCOUNT_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID INNER JOIN DISTRICT ON ACCOUNT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE CLIENT.GENDER = 'F' ORDER BY CLIENT.BIRTH_DATE DESC, DISTRICT.A11 ASC LIMIT 1","SELECT T3.ACCOUNT_ID FROM CLIENT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN ACCOUNT AS T3 ON T2.DISTRICT_ID = T3.DISTRICT_ID INNER JOIN DISP AS T4 ON T1.CLIENT_ID = T4.CLIENT_ID AND T4.ACCOUNT_ID = T3.ACCOUNT_ID  WHERE T1.GENDER = 'F' ORDER BY T1.BIRTH_DATE ASC, T2.A11 ASC LIMIT 1",
1,190,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'CLIENT__BIRTH_DATE']}",,"SELECT COUNT(*) FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A3 = 'EAST BOHEMIA' AND STRFTIME('%Y', CLIENT.BIRTH_DATE) = '1920'","SELECT COUNT(T1.CLIENT_ID) FROM CLIENT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE STRFTIME('%Y', T1.BIRTH_DATE) = '1920' AND T2.A3 = 'EAST BOHEMIA'",
2,190,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'CLIENT__BIRTH_DATE']}",,"SELECT COUNT(*) FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A3 = 'EAST BOHEMIA' AND STRFTIME('%Y', CLIENT.BIRTH_DATE) = '1920'","SELECT COUNT(T1.CLIENT_ID) FROM CLIENT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE STRFTIME('%Y', T1.BIRTH_DATE) = '1920' AND T2.A3 = 'EAST BOHEMIA'",
3,190,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'CLIENT__BIRTH_DATE']}",,"SELECT COUNT(*) FROM CLIENT INNER JOIN DISTRICT ON CLIENT.DISTRICT_ID = DISTRICT.DISTRICT_ID WHERE DISTRICT.A3 = 'EAST BOHEMIA' AND STRFTIME('%Y', CLIENT.BIRTH_DATE) = '1920'","SELECT COUNT(T1.CLIENT_ID) FROM CLIENT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID WHERE STRFTIME('%Y', T1.BIRTH_DATE) = '1920' AND T2.A3 = 'EAST BOHEMIA'",
1,191,True,,0.067434,SELECT COUNT(*) FROM ACCOUNT INNER JOIN LOAN ON ACCOUNT.ACCOUNT_ID = LOAN.ACCOUNT_ID WHERE ACCOUNT.FREQUENCY = 'POPLATEK TYDNE' AND LOAN.DURATION = 24,SELECT COUNT(T2.ACCOUNT_ID) FROM ACCOUNT AS T1 INNER JOIN LOAN AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T2.DURATION = 24 AND T1.FREQUENCY = 'POPLATEK TYDNE',
1,192,True,,0.3949229999999999,SELECT AVG(LOAN.AMOUNT) FROM ACCOUNT INNER JOIN LOAN ON ACCOUNT.ACCOUNT_ID = LOAN.ACCOUNT_ID WHERE ACCOUNT.FREQUENCY = 'POPLATEK PO OBRATU' AND (LOAN.STATUS = 'C' OR LOAN.STATUS = 'D'),"SELECT AVG(T2.AMOUNT) FROM ACCOUNT AS T1 INNER JOIN LOAN AS T2 ON T1.ACCOUNT_ID = T2.ACCOUNT_ID WHERE T2.STATUS IN ('C', 'D') AND T1.FREQUENCY = 'POPLATEK PO OBRATU'",
1,193,False,,,"SELECT CLIENT.CLIENT_ID, CLIENT.DISTRICT_ID FROM CLIENT INNER JOIN DISP ON CLIENT.CLIENT_ID = DISP.CLIENT_ID WHERE DISP.TYPE = 'OWNER'","SELECT T3.CLIENT_ID, T2.DISTRICT_ID, T2.A2 FROM ACCOUNT AS T1 INNER JOIN DISTRICT AS T2 ON T1.DISTRICT_ID = T2.DISTRICT_ID INNER JOIN DISP AS T3 ON T1.ACCOUNT_ID = T3.ACCOUNT_ID WHERE T3.TYPE = 'OWNER'",
1,194,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'CURRENT_TIMESTAMP']}",,"SELECT CLIENT.CLIENT_ID, CLIENT.BIRTH_DATE FROM CARD INNER JOIN DISP ON CARD.DISP_ID = DISP.DISP_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CARD.TYPE = 'GOLD' AND DISP.TYPE = 'OWNER'","SELECT T1.CLIENT_ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T3.BIRTH_DATE) FROM DISP AS T1 INNER JOIN CARD AS T2 ON T2.DISP_ID = T1.DISP_ID INNER JOIN CLIENT AS T3 ON T1.CLIENT_ID = T3.CLIENT_ID WHERE T2.TYPE = 'GOLD' AND T1.TYPE = 'OWNER'",
2,194,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'CURRENT_TIMESTAMP']}",,"SELECT CLIENT.CLIENT_ID, CLIENT.BIRTH_DATE FROM CARD INNER JOIN DISP ON CARD.DISP_ID = DISP.DISP_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CARD.TYPE = 'GOLD' AND DISP.TYPE = 'OWNER'","SELECT T1.CLIENT_ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T3.BIRTH_DATE) FROM DISP AS T1 INNER JOIN CARD AS T2 ON T2.DISP_ID = T1.DISP_ID INNER JOIN CLIENT AS T3 ON T1.CLIENT_ID = T3.CLIENT_ID WHERE T2.TYPE = 'GOLD' AND T1.TYPE = 'OWNER'",
3,194,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'CURRENT_TIMESTAMP']}",,"SELECT CLIENT.CLIENT_ID, CLIENT.BIRTH_DATE FROM CARD INNER JOIN DISP ON CARD.DISP_ID = DISP.DISP_ID INNER JOIN CLIENT ON DISP.CLIENT_ID = CLIENT.CLIENT_ID WHERE CARD.TYPE = 'GOLD' AND DISP.TYPE = 'OWNER'","SELECT T1.CLIENT_ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T3.BIRTH_DATE) FROM DISP AS T1 INNER JOIN CARD AS T2 ON T2.DISP_ID = T1.DISP_ID INNER JOIN CLIENT AS T3 ON T1.CLIENT_ID = T3.CLIENT_ID WHERE T2.TYPE = 'GOLD' AND T1.TYPE = 'OWNER'",
1,195,True,,0.014846,SELECT BOND_TYPE FROM BOND GROUP BY BOND_TYPE ORDER BY COUNT(*) DESC LIMIT 1,"SELECT T.BOND_TYPE FROM ( SELECT BOND_TYPE, COUNT(BOND_ID) FROM BOND GROUP BY BOND_TYPE ORDER BY COUNT(BOND_ID) DESC LIMIT 1 ) AS T",
1,196,True,,0.049137,SELECT COUNT(DISTINCT ATOM.MOLECULE_ID) FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.LABEL = '-' AND ATOM.ELEMENT = 'CL',SELECT COUNT(DISTINCT T1.MOLECULE_ID) FROM MOLECULE AS T1 INNER JOIN ATOM AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.ELEMENT = 'CL' AND T1.LABEL = '-',
1,197,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ATOM (
	ATOM_ID VARCHAR(20),
	MOLECULE_ID VARCHAR(20),
	ELEMENT VARCHAR(20)
);
INSERT INTO ATOM VALUES ('2147483648', '2147483648', 'O');
CREATE TABLE BOND (
	BOND_ID VARCHAR(20),
	MOLECULE_ID VARCHAR(20),
	BOND_TYPE VARCHAR(20)
);
INSERT INTO BOND VALUES ('2147483648', '2147483648', '-');
CREATE TABLE CONNECTED (
	ATOM_ID VARCHAR(20),
	ATOM_ID2 VARCHAR(20),
	BOND_ID VARCHAR(20)
);
INSERT INTO CONNECTED VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE MOLECULE (
	MOLECULE_ID VARCHAR(20),
	LABEL VARCHAR(20)
);
INSERT INTO MOLECULE VALUES ('2147483648', '2147483648');
-- ----------sql1------------
-- 2147483648
SELECT AVG(ATOM.MOLECULE_ID) FROM ATOM INNER JOIN BOND ON ATOM.MOLECULE_ID = BOND.MOLECULE_ID WHERE BOND.BOND_TYPE = '-' AND ATOM.ELEMENT = 'O';
-- ----------sql2------------
-- 1
SELECT AVG(OXYGEN_COUNT) FROM (SELECT T1.MOLECULE_ID, COUNT(T1.ELEMENT) AS OXYGEN_COUNT FROM ATOM AS T1 INNER JOIN BOND AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID  WHERE T2.BOND_TYPE = '-' AND T1.ELEMENT = 'O'  GROUP BY T1.MOLECULE_ID) AS OXYGEN_COUNTS;
",0.060243,SELECT AVG(ATOM.MOLECULE_ID) FROM ATOM INNER JOIN BOND ON ATOM.MOLECULE_ID = BOND.MOLECULE_ID WHERE BOND.BOND_TYPE = '-' AND ATOM.ELEMENT = 'O',"SELECT AVG(OXYGEN_COUNT) FROM (SELECT T1.MOLECULE_ID, COUNT(T1.ELEMENT) AS OXYGEN_COUNT FROM ATOM AS T1 INNER JOIN BOND AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID  WHERE T2.BOND_TYPE = '-' AND T1.ELEMENT = 'O'  GROUP BY T1.MOLECULE_ID) AS OXYGEN_COUNTS",
1,198,True,,0.074161,"SELECT AVG(SINGLE_BONDED_COUNT) FROM ( SELECT MOLECULE.MOLECULE_ID, COUNT(BOND.BOND_ID) AS SINGLE_BONDED_COUNT FROM MOLECULE INNER JOIN BOND ON MOLECULE.MOLECULE_ID = BOND.MOLECULE_ID WHERE MOLECULE.LABEL = '+' AND BOND.BOND_TYPE = '-' GROUP BY MOLECULE.MOLECULE_ID ) AS SUBQUERY","SELECT AVG(SINGLE_BOND_COUNT) FROM (SELECT T3.MOLECULE_ID, COUNT(T1.BOND_TYPE) AS SINGLE_BOND_COUNT FROM BOND AS T1  INNER JOIN ATOM AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID INNER JOIN MOLECULE AS T3 ON T3.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.BOND_TYPE = '-' AND T3.LABEL = '+' GROUP BY T3.MOLECULE_ID) AS SUBQUERY",
1,199,True,,0.048484,SELECT COUNT(*) FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID WHERE ATOM.ELEMENT = 'NA' AND MOLECULE.LABEL = '-',SELECT COUNT(DISTINCT T2.MOLECULE_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.ELEMENT = 'NA' AND T2.LABEL = '-',
1,200,True,,0.044939,SELECT MOLECULE.MOLECULE_ID FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE BOND.BOND_TYPE = '#' AND MOLECULE.LABEL = '+',SELECT DISTINCT T2.MOLECULE_ID FROM BOND AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.BOND_TYPE = '#' AND T2.LABEL = '+',
1,201,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(CASE WHEN ATOM.ELEMENT = 'C' THEN 1 ELSE 0 END) AS REAL) * 100) / COUNT(ATOM.ATOM_ID) FROM ATOM INNER JOIN BOND ON ATOM.MOLECULE_ID = BOND.MOLECULE_ID WHERE BOND.BOND_TYPE = '=',SELECT CAST(COUNT(DISTINCT CASE WHEN T1.ELEMENT = 'C' THEN T1.ATOM_ID ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T1.ATOM_ID) FROM ATOM AS T1 INNER JOIN BOND AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.BOND_TYPE = '=',
2,201,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(CASE WHEN ATOM.ELEMENT = 'C' THEN 1 ELSE 0 END) AS REAL) * 100) / COUNT(ATOM.ATOM_ID) FROM ATOM INNER JOIN BOND ON ATOM.MOLECULE_ID = BOND.MOLECULE_ID WHERE BOND.BOND_TYPE = '=',SELECT CAST(COUNT(DISTINCT CASE WHEN T1.ELEMENT = 'C' THEN T1.ATOM_ID ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T1.ATOM_ID) FROM ATOM AS T1 INNER JOIN BOND AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.BOND_TYPE = '=',
3,201,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(CASE WHEN ATOM.ELEMENT = 'C' THEN 1 ELSE 0 END) AS REAL) * 100) / COUNT(ATOM.ATOM_ID) FROM ATOM INNER JOIN BOND ON ATOM.MOLECULE_ID = BOND.MOLECULE_ID WHERE BOND.BOND_TYPE = '=',SELECT CAST(COUNT(DISTINCT CASE WHEN T1.ELEMENT = 'C' THEN T1.ATOM_ID ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T1.ATOM_ID) FROM ATOM AS T1 INNER JOIN BOND AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.BOND_TYPE = '=',
1,202,True,,0.017694,SELECT COUNT(*) FROM BOND WHERE BOND_TYPE = '#';,SELECT COUNT(T.BOND_ID) FROM BOND AS T WHERE T.BOND_TYPE = '#',
1,203,True,,0.017588,SELECT COUNT(*) FROM ATOM WHERE ELEMENT != 'BR',SELECT COUNT(DISTINCT T.ATOM_ID) FROM ATOM AS T WHERE T.ELEMENT <> 'BR',
1,204,True,,0.094885,SELECT COUNT(*) FROM MOLECULE WHERE MOLECULE_ID BETWEEN 'TR000' AND 'TR099' AND LABEL = '+',SELECT COUNT(T.MOLECULE_ID) FROM MOLECULE AS T WHERE MOLECULE_ID BETWEEN 'TR000' AND 'TR099' AND T.LABEL = '+',
1,205,True,,0.012992,SELECT ATOM.MOLECULE_ID FROM ATOM WHERE ATOM.ELEMENT = 'C';,SELECT T.MOLECULE_ID FROM ATOM AS T WHERE T.ELEMENT = 'C',
1,206,True,,0.024786,SELECT ATOM.ELEMENT FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID WHERE CONNECTED.BOND_ID = 'TR004_8_9',SELECT DISTINCT T1.ELEMENT FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T2.BOND_ID = 'TR004_8_9',
1,207,True,,0.039687,SELECT ATOM.ELEMENT FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID WHERE BOND.BOND_TYPE = '=';,SELECT DISTINCT T1.ELEMENT FROM ATOM AS T1 INNER JOIN BOND AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID INNER JOIN CONNECTED AS T3 ON T1.ATOM_ID = T3.ATOM_ID WHERE T2.BOND_TYPE = '=',
1,208,True,,0.036196,SELECT MOLECULE.LABEL FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID WHERE ATOM.ELEMENT = 'H' GROUP BY MOLECULE.LABEL ORDER BY COUNT(*) DESC LIMIT 1,"SELECT T.LABEL FROM ( SELECT T2.LABEL, COUNT(T2.MOLECULE_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.ELEMENT = 'H' GROUP BY T2.LABEL ORDER BY COUNT(T2.MOLECULE_ID) DESC LIMIT 1 ) T",
1,209,True,,0.032574,SELECT BOND.BOND_TYPE FROM BOND INNER JOIN ATOM ON BOND.MOLECULE_ID = ATOM.MOLECULE_ID WHERE ATOM.ELEMENT = 'CL',SELECT DISTINCT T1.BOND_TYPE FROM BOND AS T1 INNER JOIN CONNECTED AS T2 ON T1.BOND_ID = T2.BOND_ID INNER JOIN ATOM AS T3 ON T2.ATOM_ID = T3.ATOM_ID WHERE T3.ELEMENT = 'CL',
1,210,True,,0.033517,"SELECT ATOM.ATOM_ID, CONNECTED.ATOM_ID2 FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID WHERE BOND.BOND_TYPE = '-'","SELECT T2.ATOM_ID, T2.ATOM_ID2 FROM BOND AS T1 INNER JOIN CONNECTED AS T2 ON T1.BOND_ID = T2.BOND_ID WHERE T1.BOND_TYPE = '-'",
1,211,False,,,"SELECT CONNECTED.ATOM_ID, CONNECTED.ATOM_ID2 FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID WHERE MOLECULE.LABEL = '-'",SELECT DISTINCT T1.ATOM_ID FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID INNER JOIN CONNECTED AS T3 ON T1.ATOM_ID = T3.ATOM_ID WHERE T2.LABEL = '-',
1,212,True,,0.03614,SELECT ATOM.ELEMENT FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.LABEL = '-' GROUP BY ATOM.ELEMENT ORDER BY COUNT(ATOM.ELEMENT) ASC LIMIT 1;,"SELECT T.ELEMENT FROM (SELECT T1.ELEMENT, COUNT(DISTINCT T1.MOLECULE_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.LABEL = '-' GROUP BY T1.ELEMENT ORDER BY COUNT(DISTINCT T1.MOLECULE_ID) ASC LIMIT 1) T",
1,213,True,,0.2524699999999999,SELECT BOND.BOND_TYPE FROM CONNECTED INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID WHERE (CONNECTED.ATOM_ID = 'TR004_8' AND CONNECTED.ATOM_ID2 = 'TR004_20') OR (CONNECTED.ATOM_ID = 'TR004_20' AND CONNECTED.ATOM_ID2 = 'TR004_8'),SELECT T1.BOND_TYPE FROM BOND AS T1 INNER JOIN CONNECTED AS T2 ON T1.BOND_ID = T2.BOND_ID WHERE T2.ATOM_ID = 'TR004_8' AND T2.ATOM_ID2 = 'TR004_20' OR T2.ATOM_ID2 = 'TR004_8' AND T2.ATOM_ID = 'TR004_20',
1,214,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ATOM (
	ATOM_ID VARCHAR(20),
	MOLECULE_ID VARCHAR(20),
	ELEMENT VARCHAR(20)
);
INSERT INTO ATOM VALUES ('2147483648', '2147483648', NULL);
CREATE TABLE BOND (
	BOND_ID VARCHAR(20),
	MOLECULE_ID VARCHAR(20),
	BOND_TYPE VARCHAR(20)
);
INSERT INTO BOND VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE CONNECTED (
	ATOM_ID VARCHAR(20),
	ATOM_ID2 VARCHAR(20),
	BOND_ID VARCHAR(20)
);
INSERT INTO CONNECTED VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE MOLECULE (
	MOLECULE_ID VARCHAR(20),
	LABEL VARCHAR(20)
);
INSERT INTO MOLECULE VALUES ('2147483648', '2147483648');
-- ----------sql1------------
-- 2147483648
SELECT MOLECULE.LABEL FROM MOLECULE WHERE MOLECULE.MOLECULE_ID NOT IN ( SELECT MOLECULE.MOLECULE_ID FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID WHERE ATOM.ELEMENT = 'SN' );
-- ----------sql2------------
SELECT DISTINCT T2.LABEL FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.ELEMENT != 'SN';
",0.034361,SELECT MOLECULE.LABEL FROM MOLECULE WHERE MOLECULE.MOLECULE_ID NOT IN ( SELECT MOLECULE.MOLECULE_ID FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID WHERE ATOM.ELEMENT = 'SN' );,SELECT DISTINCT T2.LABEL FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.ELEMENT != 'SN',
1,215,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT COUNT(DISTINCT ATOM.ATOM_ID) FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID WHERE ATOM.ELEMENT = 'I' AND BOND.BOND_TYPE = '-') + (SELECT COUNT(DISTINCT ATOM.ATOM_ID) FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID WHERE ATOM.ELEMENT = 'S' AND BOND.BOND_TYPE = '-') AS TOTAL_ATOMS,"SELECT COUNT(DISTINCT CASE WHEN T1.ELEMENT = 'I' THEN T1.ATOM_ID ELSE NULL END) AS IODINE_NUMS , COUNT(DISTINCT CASE WHEN T1.ELEMENT = 'S' THEN T1.ATOM_ID ELSE NULL END) AS SULFUR_NUMS FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID INNER JOIN BOND AS T3 ON T2.BOND_ID = T3.BOND_ID WHERE T3.BOND_TYPE = '-'",
2,215,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT COUNT(DISTINCT ATOM.ATOM_ID) FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID WHERE ATOM.ELEMENT = 'I' AND BOND.BOND_TYPE = '-') + (SELECT COUNT(DISTINCT ATOM.ATOM_ID) FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID WHERE ATOM.ELEMENT = 'S' AND BOND.BOND_TYPE = '-') AS TOTAL_ATOMS,"SELECT COUNT(DISTINCT CASE WHEN T1.ELEMENT = 'I' THEN T1.ATOM_ID ELSE NULL END) AS IODINE_NUMS , COUNT(DISTINCT CASE WHEN T1.ELEMENT = 'S' THEN T1.ATOM_ID ELSE NULL END) AS SULFUR_NUMS FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID INNER JOIN BOND AS T3 ON T2.BOND_ID = T3.BOND_ID WHERE T3.BOND_TYPE = '-'",
3,215,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT COUNT(DISTINCT ATOM.ATOM_ID) FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID WHERE ATOM.ELEMENT = 'I' AND BOND.BOND_TYPE = '-') + (SELECT COUNT(DISTINCT ATOM.ATOM_ID) FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID WHERE ATOM.ELEMENT = 'S' AND BOND.BOND_TYPE = '-') AS TOTAL_ATOMS,"SELECT COUNT(DISTINCT CASE WHEN T1.ELEMENT = 'I' THEN T1.ATOM_ID ELSE NULL END) AS IODINE_NUMS , COUNT(DISTINCT CASE WHEN T1.ELEMENT = 'S' THEN T1.ATOM_ID ELSE NULL END) AS SULFUR_NUMS FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID INNER JOIN BOND AS T3 ON T2.BOND_ID = T3.BOND_ID WHERE T3.BOND_TYPE = '-'",
1,216,True,,0.026011,"SELECT CONNECTED.ATOM_ID, CONNECTED.ATOM_ID2 FROM CONNECTED INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID WHERE BOND.BOND_TYPE = '#';","SELECT T2.ATOM_ID, T2.ATOM_ID2 FROM BOND AS T1 INNER JOIN CONNECTED AS T2 ON T1.BOND_ID = T2.BOND_ID WHERE T1.BOND_TYPE = '#'",
1,217,False,,,SELECT CONNECTED.ATOM_ID2 FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID WHERE ATOM.MOLECULE_ID = 'TR181',"SELECT T2.ATOM_ID, T2.ATOM_ID2 FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T2.ATOM_ID = T1.ATOM_ID WHERE T1.MOLECULE_ID = 'TR181'",
1,218,ERROR,KeyError: 1,,"SELECT CAST(COUNT(DISTINCT DF2.MOLECULE_ID) * 100.0 / COUNT(DISTINCT DF1.MOLECULE_ID)) AS PERCENTAGE FROM (SELECT MOLECULE_ID FROM ATOM WHERE ELEMENT != 'F') AS DF2, (SELECT MOLECULE_ID FROM MOLECULE WHERE LABEL = '+') AS DF1 WHERE DF2.MOLECULE_ID = DF1.MOLECULE_ID",SELECT CAST(COUNT(DISTINCT CASE WHEN T1.ELEMENT <> 'F' THEN T2.MOLECULE_ID ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.MOLECULE_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.LABEL = '+',
2,218,ERROR,KeyError: 1,,"SELECT CAST(COUNT(DISTINCT DF2.MOLECULE_ID) * 100.0 / COUNT(DISTINCT DF1.MOLECULE_ID)) AS PERCENTAGE FROM (SELECT MOLECULE_ID FROM ATOM WHERE ELEMENT != 'F') AS DF2, (SELECT MOLECULE_ID FROM MOLECULE WHERE LABEL = '+') AS DF1 WHERE DF2.MOLECULE_ID = DF1.MOLECULE_ID",SELECT CAST(COUNT(DISTINCT CASE WHEN T1.ELEMENT <> 'F' THEN T2.MOLECULE_ID ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.MOLECULE_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.LABEL = '+',
3,218,ERROR,KeyError: 1,,"SELECT CAST(COUNT(DISTINCT DF2.MOLECULE_ID) * 100.0 / COUNT(DISTINCT DF1.MOLECULE_ID)) AS PERCENTAGE FROM (SELECT MOLECULE_ID FROM ATOM WHERE ELEMENT != 'F') AS DF2, (SELECT MOLECULE_ID FROM MOLECULE WHERE LABEL = '+') AS DF1 WHERE DF2.MOLECULE_ID = DF1.MOLECULE_ID",SELECT CAST(COUNT(DISTINCT CASE WHEN T1.ELEMENT <> 'F' THEN T2.MOLECULE_ID ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.MOLECULE_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.LABEL = '+',
1,219,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(CASE WHEN BOND.BOND_TYPE = '#' AND MOLECULE.LABEL = '+' THEN 1 ELSE 0 END) AS REAL) * 100) / COUNT(BOND.BOND_ID) AS PERCENT FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID,SELECT CAST(COUNT(DISTINCT CASE WHEN T2.LABEL = '+' THEN T2.MOLECULE_ID ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.MOLECULE_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID INNER JOIN BOND AS T3 ON T2.MOLECULE_ID = T3.MOLECULE_ID WHERE T3.BOND_TYPE = '#',
2,219,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(CASE WHEN BOND.BOND_TYPE = '#' AND MOLECULE.LABEL = '+' THEN 1 ELSE 0 END) AS REAL) * 100) / COUNT(BOND.BOND_ID) AS PERCENT FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID,SELECT CAST(COUNT(DISTINCT CASE WHEN T2.LABEL = '+' THEN T2.MOLECULE_ID ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.MOLECULE_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID INNER JOIN BOND AS T3 ON T2.MOLECULE_ID = T3.MOLECULE_ID WHERE T3.BOND_TYPE = '#',
3,219,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(CASE WHEN BOND.BOND_TYPE = '#' AND MOLECULE.LABEL = '+' THEN 1 ELSE 0 END) AS REAL) * 100) / COUNT(BOND.BOND_ID) AS PERCENT FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID,SELECT CAST(COUNT(DISTINCT CASE WHEN T2.LABEL = '+' THEN T2.MOLECULE_ID ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.MOLECULE_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID INNER JOIN BOND AS T3 ON T2.MOLECULE_ID = T3.MOLECULE_ID WHERE T3.BOND_TYPE = '#',
1,220,True,,0.020159,SELECT ATOM.ELEMENT FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.MOLECULE_ID = 'TR000' ORDER BY ATOM.ELEMENT ASC LIMIT 3,SELECT DISTINCT T.ELEMENT FROM ATOM AS T WHERE T.MOLECULE_ID = 'TR000' ORDER BY T.ELEMENT LIMIT 3,
1,221,ERROR,"NotImplementedError: {'substr': ['T__BOND_ID', 1, 7]}",,"SELECT ATOM.ATOM_ID, CONNECTED.ATOM_ID FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.MOLECULE_ID = 'TR001' AND BOND.BOND_ID = 'TR001_2_6'","SELECT SUBSTR(T.BOND_ID, 1, 7) AS ATOM_ID1 , T.MOLECULE_ID || SUBSTR(T.BOND_ID, 8, 2) AS ATOM_ID2 FROM BOND AS T WHERE T.MOLECULE_ID = 'TR001' AND T.BOND_ID = 'TR001_2_6'",
2,221,ERROR,"NotImplementedError: {'substr': ['T__BOND_ID', 1, 7]}",,"SELECT ATOM.ATOM_ID, CONNECTED.ATOM_ID FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.MOLECULE_ID = 'TR001' AND BOND.BOND_ID = 'TR001_2_6'","SELECT SUBSTR(T.BOND_ID, 1, 7) AS ATOM_ID1 , T.MOLECULE_ID || SUBSTR(T.BOND_ID, 8, 2) AS ATOM_ID2 FROM BOND AS T WHERE T.MOLECULE_ID = 'TR001' AND T.BOND_ID = 'TR001_2_6'",
3,221,ERROR,"NotImplementedError: {'substr': ['T__BOND_ID', 1, 7]}",,"SELECT ATOM.ATOM_ID, CONNECTED.ATOM_ID FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.MOLECULE_ID = 'TR001' AND BOND.BOND_ID = 'TR001_2_6'","SELECT SUBSTR(T.BOND_ID, 1, 7) AS ATOM_ID1 , T.MOLECULE_ID || SUBSTR(T.BOND_ID, 8, 2) AS ATOM_ID2 FROM BOND AS T WHERE T.MOLECULE_ID = 'TR001' AND T.BOND_ID = 'TR001_2_6'",
1,222,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT COUNT(*) FROM MOLECULE WHERE LABEL = '+') - (SELECT COUNT(*) FROM MOLECULE WHERE LABEL = '-') AS DIFFERENCE,SELECT COUNT(CASE WHEN T.LABEL = '+' THEN T.MOLECULE_ID ELSE NULL END) - COUNT(CASE WHEN T.LABEL = '-' THEN T.MOLECULE_ID ELSE NULL END) AS DIFF_CAR_NOTCAR FROM MOLECULE T,
2,222,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT COUNT(*) FROM MOLECULE WHERE LABEL = '+') - (SELECT COUNT(*) FROM MOLECULE WHERE LABEL = '-') AS DIFFERENCE,SELECT COUNT(CASE WHEN T.LABEL = '+' THEN T.MOLECULE_ID ELSE NULL END) - COUNT(CASE WHEN T.LABEL = '-' THEN T.MOLECULE_ID ELSE NULL END) AS DIFF_CAR_NOTCAR FROM MOLECULE T,
3,222,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT COUNT(*) FROM MOLECULE WHERE LABEL = '+') - (SELECT COUNT(*) FROM MOLECULE WHERE LABEL = '-') AS DIFFERENCE,SELECT COUNT(CASE WHEN T.LABEL = '+' THEN T.MOLECULE_ID ELSE NULL END) - COUNT(CASE WHEN T.LABEL = '-' THEN T.MOLECULE_ID ELSE NULL END) AS DIFF_CAR_NOTCAR FROM MOLECULE T,
1,223,False,,,"SELECT CONNECTED.ATOM_ID, CONNECTED.ATOM_ID2 FROM BOND INNER JOIN CONNECTED ON BOND.BOND_ID = CONNECTED.BOND_ID WHERE BOND.BOND_ID = 'TR000_2_5'",SELECT T.ATOM_ID FROM CONNECTED AS T WHERE T.BOND_ID = 'TR000_2_5',
1,224,True,,0.012036,SELECT CONNECTED.BOND_ID FROM CONNECTED WHERE CONNECTED.ATOM_ID2 = 'TR000_2',SELECT T.BOND_ID FROM CONNECTED AS T WHERE T.ATOM_ID2 = 'TR000_2',
1,225,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ATOM (
	ATOM_ID VARCHAR(20),
	MOLECULE_ID VARCHAR(20),
	ELEMENT VARCHAR(20)
);
INSERT INTO ATOM VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE BOND (
	BOND_ID VARCHAR(20),
	MOLECULE_ID VARCHAR(20),
	BOND_TYPE VARCHAR(20)
);
INSERT INTO BOND VALUES ('2147483648', '2147483648', ' = ');
CREATE TABLE CONNECTED (
	ATOM_ID VARCHAR(20),
	ATOM_ID2 VARCHAR(20),
	BOND_ID VARCHAR(20)
);
INSERT INTO CONNECTED VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE MOLECULE (
	MOLECULE_ID VARCHAR(20),
	LABEL VARCHAR(20)
);
INSERT INTO MOLECULE VALUES ('2147483648', '2147483648');
-- ----------sql1------------
-- 2147483648
SELECT MOLECULE.MOLECULE_ID FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE BOND.BOND_TYPE = ' = ' ORDER BY MOLECULE.MOLECULE_ID ASC LIMIT 5;
-- ----------sql2------------
SELECT DISTINCT T.MOLECULE_ID FROM BOND AS T WHERE T.BOND_TYPE = '=' ORDER BY T.MOLECULE_ID LIMIT 5;
",0.020325,SELECT MOLECULE.MOLECULE_ID FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE BOND.BOND_TYPE = ' = ' ORDER BY MOLECULE.MOLECULE_ID ASC LIMIT 5,SELECT DISTINCT T.MOLECULE_ID FROM BOND AS T WHERE T.BOND_TYPE = '=' ORDER BY T.MOLECULE_ID LIMIT 5,
1,226,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(SUM(CASE WHEN BOND.BOND_TYPE = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(BOND.BOND_ID) AS PERCENT FROM BOND WHERE BOND.MOLECULE_ID = 'TR008',"SELECT ROUND(CAST(COUNT(CASE WHEN T.BOND_TYPE = '=' THEN T.BOND_ID ELSE NULL END) AS REAL) * 100 / COUNT(T.BOND_ID),5) FROM BOND AS T WHERE T.MOLECULE_ID = 'TR008'",
2,226,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(SUM(CASE WHEN BOND.BOND_TYPE = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(BOND.BOND_ID) AS PERCENT FROM BOND WHERE BOND.MOLECULE_ID = 'TR008',"SELECT ROUND(CAST(COUNT(CASE WHEN T.BOND_TYPE = '=' THEN T.BOND_ID ELSE NULL END) AS REAL) * 100 / COUNT(T.BOND_ID),5) FROM BOND AS T WHERE T.MOLECULE_ID = 'TR008'",
3,226,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(SUM(CASE WHEN BOND.BOND_TYPE = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(BOND.BOND_ID) AS PERCENT FROM BOND WHERE BOND.MOLECULE_ID = 'TR008',"SELECT ROUND(CAST(COUNT(CASE WHEN T.BOND_TYPE = '=' THEN T.BOND_ID ELSE NULL END) AS REAL) * 100 / COUNT(T.BOND_ID),5) FROM BOND AS T WHERE T.MOLECULE_ID = 'TR008'",
1,227,ERROR,NotImplementedError: {'real': {}},,"SELECT ROUND((CAST(SUM(CASE WHEN MOLECULE.LABEL = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(MOLECULE.MOLECULE_ID)) * 100, 3) AS PERCENTAGE FROM MOLECULE","SELECT ROUND(CAST(COUNT(CASE WHEN T.LABEL = '+' THEN T.MOLECULE_ID ELSE NULL END) AS REAL) * 100 / COUNT(T.MOLECULE_ID),3) FROM MOLECULE T",
2,227,ERROR,NotImplementedError: {'real': {}},,"SELECT ROUND((CAST(SUM(CASE WHEN MOLECULE.LABEL = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(MOLECULE.MOLECULE_ID)) * 100, 3) AS PERCENTAGE FROM MOLECULE","SELECT ROUND(CAST(COUNT(CASE WHEN T.LABEL = '+' THEN T.MOLECULE_ID ELSE NULL END) AS REAL) * 100 / COUNT(T.MOLECULE_ID),3) FROM MOLECULE T",
3,227,ERROR,NotImplementedError: {'real': {}},,"SELECT ROUND((CAST(SUM(CASE WHEN MOLECULE.LABEL = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(MOLECULE.MOLECULE_ID)) * 100, 3) AS PERCENTAGE FROM MOLECULE","SELECT ROUND(CAST(COUNT(CASE WHEN T.LABEL = '+' THEN T.MOLECULE_ID ELSE NULL END) AS REAL) * 100 / COUNT(T.MOLECULE_ID),3) FROM MOLECULE T",
1,228,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(SUM(CASE WHEN ATOM.ELEMENT = 'H' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ATOM.ATOM_ID) AS PERCENT FROM ATOM WHERE ATOM.MOLECULE_ID = 'TR206',"SELECT ROUND(CAST(COUNT(CASE WHEN T.ELEMENT = 'H' THEN T.ATOM_ID ELSE NULL END) AS REAL) * 100 / COUNT(T.ATOM_ID),4) FROM ATOM AS T WHERE T.MOLECULE_ID = 'TR206'",
2,228,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(SUM(CASE WHEN ATOM.ELEMENT = 'H' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ATOM.ATOM_ID) AS PERCENT FROM ATOM WHERE ATOM.MOLECULE_ID = 'TR206',"SELECT ROUND(CAST(COUNT(CASE WHEN T.ELEMENT = 'H' THEN T.ATOM_ID ELSE NULL END) AS REAL) * 100 / COUNT(T.ATOM_ID),4) FROM ATOM AS T WHERE T.MOLECULE_ID = 'TR206'",
3,228,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(SUM(CASE WHEN ATOM.ELEMENT = 'H' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ATOM.ATOM_ID) AS PERCENT FROM ATOM WHERE ATOM.MOLECULE_ID = 'TR206',"SELECT ROUND(CAST(COUNT(CASE WHEN T.ELEMENT = 'H' THEN T.ATOM_ID ELSE NULL END) AS REAL) * 100 / COUNT(T.ATOM_ID),4) FROM ATOM AS T WHERE T.MOLECULE_ID = 'TR206'",
1,229,True,,0.0136479999999999,SELECT BOND.BOND_TYPE FROM BOND WHERE BOND.MOLECULE_ID = 'TR000',SELECT DISTINCT T.BOND_TYPE FROM BOND AS T WHERE T.MOLECULE_ID = 'TR000',
1,230,True,,0.025501,"SELECT ATOM.ELEMENT, MOLECULE.LABEL FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.MOLECULE_ID = 'TR060'","SELECT DISTINCT T1.ELEMENT, T2.LABEL FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.MOLECULE_ID = 'TR060'",
1,231,False,,,"SELECT BOND.BOND_TYPE, MOLECULE.LABEL FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE BOND.MOLECULE_ID = 'TR010' GROUP BY BOND.BOND_TYPE ORDER BY COUNT(BOND.BOND_TYPE) DESC LIMIT 1","SELECT T.BOND_TYPE FROM ( SELECT T1.BOND_TYPE, COUNT(T1.MOLECULE_ID) FROM BOND AS T1  WHERE T1.MOLECULE_ID = 'TR010' GROUP BY T1.BOND_TYPE ORDER BY COUNT(T1.MOLECULE_ID) DESC LIMIT 1 ) AS T",
1,232,True,,0.046504,SELECT MOLECULE.MOLECULE_ID FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE BOND.BOND_TYPE = '-' AND MOLECULE.LABEL = '-' ORDER BY MOLECULE.MOLECULE_ID ASC LIMIT 3,SELECT DISTINCT T2.MOLECULE_ID FROM BOND AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.BOND_TYPE = '-' AND T2.LABEL = '-' ORDER BY T2.MOLECULE_ID LIMIT 3,
1,233,True,,0.020454,SELECT BOND.BOND_ID FROM BOND WHERE BOND.MOLECULE_ID = 'TR006' ORDER BY BOND.BOND_ID ASC LIMIT 2,SELECT DISTINCT T2.BOND_ID FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T1.MOLECULE_ID = 'TR006' ORDER BY T2.BOND_ID LIMIT 2,
1,234,ERROR,"NotImplementedError: {'concat': ['T1__MOLECULE_ID', {'literal': '_1'}]}",,SELECT COUNT(*) FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID WHERE ATOM.MOLECULE_ID = 'TR009' AND (CONNECTED.ATOM_ID = 'TR009_12' OR CONNECTED.ATOM_ID2 = 'TR009_12'),SELECT COUNT(T2.BOND_ID) FROM BOND AS T1 INNER JOIN CONNECTED AS T2 ON T1.BOND_ID = T2.BOND_ID WHERE T1.MOLECULE_ID = 'TR009' AND T2.ATOM_ID = T1.MOLECULE_ID || '_1' AND T2.ATOM_ID2 = T1.MOLECULE_ID || '_2',
2,234,ERROR,"NotImplementedError: {'concat': ['T1__MOLECULE_ID', {'literal': '_1'}]}",,SELECT COUNT(*) FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID WHERE ATOM.MOLECULE_ID = 'TR009' AND (CONNECTED.ATOM_ID = 'TR009_12' OR CONNECTED.ATOM_ID2 = 'TR009_12'),SELECT COUNT(T2.BOND_ID) FROM BOND AS T1 INNER JOIN CONNECTED AS T2 ON T1.BOND_ID = T2.BOND_ID WHERE T1.MOLECULE_ID = 'TR009' AND T2.ATOM_ID = T1.MOLECULE_ID || '_1' AND T2.ATOM_ID2 = T1.MOLECULE_ID || '_2',
3,234,ERROR,"NotImplementedError: {'concat': ['T1__MOLECULE_ID', {'literal': '_1'}]}",,SELECT COUNT(*) FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID WHERE ATOM.MOLECULE_ID = 'TR009' AND (CONNECTED.ATOM_ID = 'TR009_12' OR CONNECTED.ATOM_ID2 = 'TR009_12'),SELECT COUNT(T2.BOND_ID) FROM BOND AS T1 INNER JOIN CONNECTED AS T2 ON T1.BOND_ID = T2.BOND_ID WHERE T1.MOLECULE_ID = 'TR009' AND T2.ATOM_ID = T1.MOLECULE_ID || '_1' AND T2.ATOM_ID2 = T1.MOLECULE_ID || '_2',
1,235,True,,0.050501,SELECT COUNT(DISTINCT MOLECULE.MOLECULE_ID) FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID WHERE MOLECULE.LABEL = '+' AND ATOM.ELEMENT = 'BR',SELECT COUNT(DISTINCT T2.MOLECULE_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.LABEL = '+' AND T1.ELEMENT = 'BR',
1,236,True,,0.025926,"SELECT BOND.BOND_TYPE, CONNECTED.ATOM_ID, CONNECTED.ATOM_ID2 FROM BOND INNER JOIN CONNECTED ON BOND.BOND_ID = CONNECTED.BOND_ID WHERE BOND.BOND_ID = 'TR001_6_9'","SELECT T1.BOND_TYPE, T2.ATOM_ID, T2.ATOM_ID2 FROM BOND AS T1 INNER JOIN CONNECTED AS T2 ON T1.BOND_ID = T2.BOND_ID WHERE T2.BOND_ID = 'TR001_6_9'",
1,237,ERROR,"NotImplementedError: {'iif': [{'eq': ['T2__LABEL', {'literal': '+'}]}, {'literal': 'YES'}, {'literal': 'NO'}]}",,"SELECT MOLECULE.MOLECULE_ID, MOLECULE.LABEL FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE ATOM.ATOM_ID = 'TR001_10'","SELECT T2.MOLECULE_ID , IIF(T2.LABEL = '+', 'YES', 'NO') AS FLAG_CARCINOGENIC FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.ATOM_ID = 'TR001_10'",
2,237,ERROR,"NotImplementedError: {'iif': [{'eq': ['T2__LABEL', {'literal': '+'}]}, {'literal': 'YES'}, {'literal': 'NO'}]}",,"SELECT MOLECULE.MOLECULE_ID, MOLECULE.LABEL FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE ATOM.ATOM_ID = 'TR001_10'","SELECT T2.MOLECULE_ID , IIF(T2.LABEL = '+', 'YES', 'NO') AS FLAG_CARCINOGENIC FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.ATOM_ID = 'TR001_10'",
3,237,ERROR,"NotImplementedError: {'iif': [{'eq': ['T2__LABEL', {'literal': '+'}]}, {'literal': 'YES'}, {'literal': 'NO'}]}",,"SELECT MOLECULE.MOLECULE_ID, MOLECULE.LABEL FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE ATOM.ATOM_ID = 'TR001_10'","SELECT T2.MOLECULE_ID , IIF(T2.LABEL = '+', 'YES', 'NO') AS FLAG_CARCINOGENIC FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.ATOM_ID = 'TR001_10'",
1,238,True,,0.0178399999999999,SELECT COUNT(DISTINCT BOND.MOLECULE_ID) FROM BOND WHERE BOND.BOND_TYPE = '#';,SELECT COUNT(DISTINCT T.MOLECULE_ID) FROM BOND AS T WHERE T.BOND_TYPE = '#',
1,239,ERROR,"NotImplementedError: {'like': ['ATOM__ATOM_ID', {'literal': 'TR%_19'}]}",,SELECT COUNT(*) FROM ATOM WHERE ATOM.ATOM_ID LIKE 'TR%_19';,"SELECT COUNT(T.BOND_ID) FROM CONNECTED AS T WHERE SUBSTR(T.ATOM_ID, -2) = '19'",
2,239,ERROR,"NotImplementedError: {'like': ['ATOM__ATOM_ID', {'literal': 'TR%_19'}]}",,SELECT COUNT(*) FROM ATOM WHERE ATOM.ATOM_ID LIKE 'TR%_19';,"SELECT COUNT(T.BOND_ID) FROM CONNECTED AS T WHERE SUBSTR(T.ATOM_ID, -2) = '19'",
3,239,ERROR,"NotImplementedError: {'like': ['ATOM__ATOM_ID', {'literal': 'TR%_19'}]}",,SELECT COUNT(*) FROM ATOM WHERE ATOM.ATOM_ID LIKE 'TR%_19';,"SELECT COUNT(T.BOND_ID) FROM CONNECTED AS T WHERE SUBSTR(T.ATOM_ID, -2) = '19'",
1,240,True,,0.019603,SELECT ATOM.ELEMENT FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.MOLECULE_ID = 'TR004';,SELECT DISTINCT T.ELEMENT FROM ATOM AS T WHERE T.MOLECULE_ID = 'TR004',
1,241,True,,0.018036,SELECT COUNT(*) FROM MOLECULE WHERE LABEL = '-';,SELECT COUNT(T.MOLECULE_ID) FROM MOLECULE AS T WHERE T.LABEL = '-',
1,242,ERROR,"NotImplementedError: {'substr': ['ATOM__ATOM_ID', 7, 2]}",,"SELECT MOLECULE.MOLECULE_ID FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE SUBSTR(ATOM.ATOM_ID, 7, 2) BETWEEN '21' AND '25' AND MOLECULE.LABEL = '+'","SELECT DISTINCT T2.MOLECULE_ID FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE SUBSTR(T1.ATOM_ID, -2) BETWEEN '21' AND '25' AND T2.LABEL = '+'",
2,242,ERROR,"NotImplementedError: {'substr': ['ATOM__ATOM_ID', 7, 2]}",,"SELECT MOLECULE.MOLECULE_ID FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE SUBSTR(ATOM.ATOM_ID, 7, 2) BETWEEN '21' AND '25' AND MOLECULE.LABEL = '+'","SELECT DISTINCT T2.MOLECULE_ID FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE SUBSTR(T1.ATOM_ID, -2) BETWEEN '21' AND '25' AND T2.LABEL = '+'",
3,242,ERROR,"NotImplementedError: {'substr': ['ATOM__ATOM_ID', 7, 2]}",,"SELECT MOLECULE.MOLECULE_ID FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE SUBSTR(ATOM.ATOM_ID, 7, 2) BETWEEN '21' AND '25' AND MOLECULE.LABEL = '+'","SELECT DISTINCT T2.MOLECULE_ID FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE SUBSTR(T1.ATOM_ID, -2) BETWEEN '21' AND '25' AND T2.LABEL = '+'",
1,243,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BOND__BOND_ID`,,SELECT BOND.BOND_ID FROM ATOM AS DF1 INNER JOIN ATOM AS DF2 ON DF1.ATOM_ID = DF2.ATOM_ID WHERE DF1.ELEMENT = 'P' AND DF2.ELEMENT = 'N',SELECT T2.BOND_ID FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T2.BOND_ID IN ( SELECT T3.BOND_ID FROM CONNECTED AS T3 INNER JOIN ATOM AS T4 ON T3.ATOM_ID = T4.ATOM_ID WHERE T4.ELEMENT = 'P' ) AND T1.ELEMENT = 'N',
2,243,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BOND__BOND_ID`,,SELECT BOND.BOND_ID FROM ATOM AS DF1 INNER JOIN ATOM AS DF2 ON DF1.ATOM_ID = DF2.ATOM_ID WHERE DF1.ELEMENT = 'P' AND DF2.ELEMENT = 'N',SELECT T2.BOND_ID FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T2.BOND_ID IN ( SELECT T3.BOND_ID FROM CONNECTED AS T3 INNER JOIN ATOM AS T4 ON T3.ATOM_ID = T4.ATOM_ID WHERE T4.ELEMENT = 'P' ) AND T1.ELEMENT = 'N',
3,243,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BOND__BOND_ID`,,SELECT BOND.BOND_ID FROM ATOM AS DF1 INNER JOIN ATOM AS DF2 ON DF1.ATOM_ID = DF2.ATOM_ID WHERE DF1.ELEMENT = 'P' AND DF2.ELEMENT = 'N',SELECT T2.BOND_ID FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T2.BOND_ID IN ( SELECT T3.BOND_ID FROM CONNECTED AS T3 INNER JOIN ATOM AS T4 ON T3.ATOM_ID = T4.ATOM_ID WHERE T4.ELEMENT = 'P' ) AND T1.ELEMENT = 'N',
1,244,True,,0.0332989999999999,SELECT MOLECULE.LABEL FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE BOND.BOND_TYPE = '=' GROUP BY BOND.MOLECULE_ID ORDER BY COUNT(BOND.BOND_TYPE) DESC LIMIT 1,"SELECT T1.LABEL FROM MOLECULE AS T1 INNER JOIN ( SELECT T.MOLECULE_ID, COUNT(T.BOND_TYPE) FROM BOND AS T WHERE T.BOND_TYPE = '=' GROUP BY T.MOLECULE_ID ORDER BY COUNT(T.BOND_TYPE) DESC LIMIT 1 ) AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID",
1,245,ERROR,NotImplementedError: {'real': {}},,"SELECT AVG(BOND_COUNT) FROM ( SELECT ATOM.ATOM_ID, COUNT(CONNECTED.BOND_ID) AS BOND_COUNT FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID WHERE ATOM.ELEMENT = 'I' GROUP BY ATOM.ATOM_ID ) AS SUBQUERY",SELECT CAST(COUNT(T2.BOND_ID) AS REAL) / COUNT(T1.ATOM_ID) FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T1.ELEMENT = 'I',
2,245,ERROR,NotImplementedError: {'real': {}},,"SELECT AVG(BOND_COUNT) FROM ( SELECT ATOM.ATOM_ID, COUNT(CONNECTED.BOND_ID) AS BOND_COUNT FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID WHERE ATOM.ELEMENT = 'I' GROUP BY ATOM.ATOM_ID ) AS SUBQUERY",SELECT CAST(COUNT(T2.BOND_ID) AS REAL) / COUNT(T1.ATOM_ID) FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T1.ELEMENT = 'I',
3,245,ERROR,NotImplementedError: {'real': {}},,"SELECT AVG(BOND_COUNT) FROM ( SELECT ATOM.ATOM_ID, COUNT(CONNECTED.BOND_ID) AS BOND_COUNT FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID WHERE ATOM.ELEMENT = 'I' GROUP BY ATOM.ATOM_ID ) AS SUBQUERY",SELECT CAST(COUNT(T2.BOND_ID) AS REAL) / COUNT(T1.ATOM_ID) FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T1.ELEMENT = 'I',
1,246,ERROR,"NotImplementedError: {'substr': ['ATOM__ATOM_ID', 7, 2]}",,"SELECT BOND.BOND_TYPE, BOND.BOND_ID FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID WHERE SUBSTR(ATOM.ATOM_ID, 7, 2) + 0 = 45","SELECT T1.BOND_TYPE, T1.BOND_ID FROM BOND AS T1 INNER JOIN CONNECTED AS T2 ON T1.BOND_ID = T2.BOND_ID WHERE SUBSTR(T2.ATOM_ID, 7, 2) = '45'",
2,246,ERROR,"NotImplementedError: {'substr': ['ATOM__ATOM_ID', 7, 2]}",,"SELECT BOND.BOND_TYPE, BOND.BOND_ID FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID WHERE SUBSTR(ATOM.ATOM_ID, 7, 2) + 0 = 45","SELECT T1.BOND_TYPE, T1.BOND_ID FROM BOND AS T1 INNER JOIN CONNECTED AS T2 ON T1.BOND_ID = T2.BOND_ID WHERE SUBSTR(T2.ATOM_ID, 7, 2) = '45'",
3,246,ERROR,"NotImplementedError: {'substr': ['ATOM__ATOM_ID', 7, 2]}",,"SELECT BOND.BOND_TYPE, BOND.BOND_ID FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID WHERE SUBSTR(ATOM.ATOM_ID, 7, 2) + 0 = 45","SELECT T1.BOND_TYPE, T1.BOND_ID FROM BOND AS T1 INNER JOIN CONNECTED AS T2 ON T1.BOND_ID = T2.BOND_ID WHERE SUBSTR(T2.ATOM_ID, 7, 2) = '45'",
1,247,True,,0.033267,SELECT ATOM.ELEMENT FROM ATOM WHERE ATOM.ATOM_ID NOT IN (SELECT CONNECTED.ATOM_ID FROM CONNECTED),SELECT DISTINCT T.ELEMENT FROM ATOM AS T WHERE T.ELEMENT NOT IN ( SELECT DISTINCT T1.ELEMENT FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID ),
1,248,True,,0.06787,"SELECT ATOM.ATOM_ID, CONNECTED.ATOM_ID FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.MOLECULE_ID = 'TR041' AND BOND.BOND_TYPE = '#'","SELECT T2.ATOM_ID, T2.ATOM_ID2 FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID INNER JOIN BOND AS T3 ON T2.BOND_ID = T3.BOND_ID WHERE T3.BOND_TYPE = '#' AND T3.MOLECULE_ID = 'TR041'",
1,249,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BOND__ATOM_ID`,,SELECT ATOM.ELEMENT FROM ATOM INNER JOIN BOND ON ATOM.ATOM_ID = BOND.ATOM_ID WHERE BOND.BOND_ID = 'TR144_8_19',SELECT T2.ELEMENT FROM CONNECTED AS T1 INNER JOIN ATOM AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T1.BOND_ID = 'TR144_8_19',
2,249,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BOND__ATOM_ID`,,SELECT ATOM.ELEMENT FROM ATOM INNER JOIN BOND ON ATOM.ATOM_ID = BOND.ATOM_ID WHERE BOND.BOND_ID = 'TR144_8_19',SELECT T2.ELEMENT FROM CONNECTED AS T1 INNER JOIN ATOM AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T1.BOND_ID = 'TR144_8_19',
3,249,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BOND__ATOM_ID`,,SELECT ATOM.ELEMENT FROM ATOM INNER JOIN BOND ON ATOM.ATOM_ID = BOND.ATOM_ID WHERE BOND.BOND_ID = 'TR144_8_19',SELECT T2.ELEMENT FROM CONNECTED AS T1 INNER JOIN ATOM AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T1.BOND_ID = 'TR144_8_19',
1,250,True,,0.056745,SELECT MOLECULE.MOLECULE_ID FROM MOLECULE INNER JOIN BOND ON MOLECULE.MOLECULE_ID = BOND.MOLECULE_ID WHERE MOLECULE.LABEL = '+' AND BOND.BOND_TYPE = '=' GROUP BY MOLECULE.MOLECULE_ID ORDER BY COUNT(*) DESC LIMIT 1,"SELECT T.MOLECULE_ID FROM ( SELECT T3.MOLECULE_ID, COUNT(T1.BOND_TYPE) FROM BOND AS T1 INNER JOIN MOLECULE AS T3 ON T1.MOLECULE_ID = T3.MOLECULE_ID WHERE T3.LABEL = '+' AND T1.BOND_TYPE = '=' GROUP BY T3.MOLECULE_ID ORDER BY COUNT(T1.BOND_TYPE) DESC LIMIT 1 ) AS T",
1,251,True,,0.036813,SELECT ATOM.ELEMENT FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.LABEL = '+' GROUP BY ATOM.ELEMENT ORDER BY COUNT(*) ASC LIMIT 1,"SELECT T.ELEMENT FROM ( SELECT T2.ELEMENT, COUNT(DISTINCT T2.MOLECULE_ID) FROM MOLECULE AS T1 INNER JOIN ATOM AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.LABEL = '+' GROUP BY T2.ELEMENT ORDER BY COUNT(DISTINCT T2.MOLECULE_ID) LIMIT 1 ) T",
1,252,False,,,SELECT CONNECTED.ATOM_ID2 FROM CONNECTED WHERE CONNECTED.ATOM_ID IN (SELECT ATOM.ATOM_ID FROM ATOM WHERE ATOM.ELEMENT = 'PB'),"SELECT T2.ATOM_ID, T2.ATOM_ID2 FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T1.ELEMENT = 'PB'",
1,253,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ATOM (
	ATOM_ID VARCHAR(20),
	MOLECULE_ID VARCHAR(20),
	ELEMENT VARCHAR(20)
);
INSERT INTO ATOM VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE BOND (
	BOND_ID VARCHAR(20),
	MOLECULE_ID VARCHAR(20),
	BOND_TYPE VARCHAR(20)
);
INSERT INTO BOND VALUES ('2147483649', '2147483648', '#');
CREATE TABLE CONNECTED (
	ATOM_ID VARCHAR(20),
	ATOM_ID2 VARCHAR(20),
	BOND_ID VARCHAR(20)
);
INSERT INTO CONNECTED VALUES ('2147483648', '2147483648', '2147483649');
CREATE TABLE MOLECULE (
	MOLECULE_ID VARCHAR(20),
	LABEL VARCHAR(20)
);
INSERT INTO MOLECULE VALUES ('2147483648', '2147483648');
-- ----------sql1------------
SELECT ATOM.ELEMENT FROM ATOM INNER JOIN BOND ON ATOM.ATOM_ID = BOND.BOND_ID WHERE BOND.BOND_TYPE = '#';
-- ----------sql2------------
-- 2147483648
SELECT DISTINCT T3.ELEMENT FROM BOND AS T1 INNER JOIN CONNECTED AS T2 ON T1.BOND_ID = T2.BOND_ID INNER JOIN ATOM AS T3 ON T2.ATOM_ID = T3.ATOM_ID WHERE T1.BOND_TYPE = '#';
",0.034288,SELECT ATOM.ELEMENT FROM ATOM INNER JOIN BOND ON ATOM.ATOM_ID = BOND.BOND_ID WHERE BOND.BOND_TYPE = '#';,SELECT DISTINCT T3.ELEMENT FROM BOND AS T1 INNER JOIN CONNECTED AS T2 ON T1.BOND_ID = T2.BOND_ID INNER JOIN ATOM AS T3 ON T2.ATOM_ID = T3.ATOM_ID WHERE T1.BOND_TYPE = '#',
1,254,ERROR,AttributeError: 'GroupbyContext' object has no attribute 'groupby_ctx',,SELECT (CAST((SELECT COUNT(*) FROM ATOM GROUP BY ELEMENT HAVING COUNT(ATOM_ID) = MAX(COUNT(ATOM_ID))) AS REAL) * 100) / COUNT(*) FROM ATOM,SELECT CAST((SELECT COUNT(T1.ATOM_ID) FROM CONNECTED AS T1 INNER JOIN BOND AS T2 ON T1.BOND_ID = T2.BOND_ID GROUP BY T2.BOND_TYPE ORDER BY COUNT(T2.BOND_ID) DESC LIMIT 1 ) AS REAL) * 100 / ( SELECT COUNT(ATOM_ID) FROM CONNECTED ),
2,254,ERROR,AttributeError: 'GroupbyContext' object has no attribute 'groupby_ctx',,SELECT (CAST((SELECT COUNT(*) FROM ATOM GROUP BY ELEMENT HAVING COUNT(ATOM_ID) = MAX(COUNT(ATOM_ID))) AS REAL) * 100) / COUNT(*) FROM ATOM,SELECT CAST((SELECT COUNT(T1.ATOM_ID) FROM CONNECTED AS T1 INNER JOIN BOND AS T2 ON T1.BOND_ID = T2.BOND_ID GROUP BY T2.BOND_TYPE ORDER BY COUNT(T2.BOND_ID) DESC LIMIT 1 ) AS REAL) * 100 / ( SELECT COUNT(ATOM_ID) FROM CONNECTED ),
3,254,ERROR,AttributeError: 'GroupbyContext' object has no attribute 'groupby_ctx',,SELECT (CAST((SELECT COUNT(*) FROM ATOM GROUP BY ELEMENT HAVING COUNT(ATOM_ID) = MAX(COUNT(ATOM_ID))) AS REAL) * 100) / COUNT(*) FROM ATOM,SELECT CAST((SELECT COUNT(T1.ATOM_ID) FROM CONNECTED AS T1 INNER JOIN BOND AS T2 ON T1.BOND_ID = T2.BOND_ID GROUP BY T2.BOND_TYPE ORDER BY COUNT(T2.BOND_ID) DESC LIMIT 1 ) AS REAL) * 100 / ( SELECT COUNT(ATOM_ID) FROM CONNECTED ),
1,255,ERROR,TypeError: argument of type 'int' is not iterable,,"SELECT CAST(SUM(CASE WHEN MOLECULE.LABEL = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(BOND.BOND_ID), 5) AS PROPORTION FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE BOND.BOND_TYPE = '-'","SELECT ROUND(CAST(COUNT(CASE WHEN T2.LABEL = '+' THEN T1.BOND_ID ELSE NULL END) AS REAL) * 100 / COUNT(T1.BOND_ID),5) FROM BOND AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.BOND_TYPE = '-'",
2,255,ERROR,TypeError: argument of type 'int' is not iterable,,"SELECT CAST(SUM(CASE WHEN MOLECULE.LABEL = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(BOND.BOND_ID), 5) AS PROPORTION FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE BOND.BOND_TYPE = '-'","SELECT ROUND(CAST(COUNT(CASE WHEN T2.LABEL = '+' THEN T1.BOND_ID ELSE NULL END) AS REAL) * 100 / COUNT(T1.BOND_ID),5) FROM BOND AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.BOND_TYPE = '-'",
3,255,ERROR,TypeError: argument of type 'int' is not iterable,,"SELECT CAST(SUM(CASE WHEN MOLECULE.LABEL = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(BOND.BOND_ID), 5) AS PROPORTION FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE BOND.BOND_TYPE = '-'","SELECT ROUND(CAST(COUNT(CASE WHEN T2.LABEL = '+' THEN T1.BOND_ID ELSE NULL END) AS REAL) * 100 / COUNT(T1.BOND_ID),5) FROM BOND AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.BOND_TYPE = '-'",
1,256,True,,0.077619,"SELECT COUNT(*) FROM ATOM WHERE ELEMENT IN ('C', 'H')",SELECT COUNT(T.ATOM_ID) FROM ATOM AS T WHERE T.ELEMENT = 'C' OR T.ELEMENT = 'H',
1,257,True,,0.027025,SELECT CONNECTED.ATOM_ID2 FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID WHERE ATOM.ELEMENT = 'S',SELECT DISTINCT T2.ATOM_ID2 FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T1.ELEMENT = 'S',
1,258,True,,0.040337,SELECT BOND.BOND_TYPE FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID WHERE ATOM.ELEMENT = 'SN';,SELECT DISTINCT T3.BOND_TYPE FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID INNER JOIN BOND AS T3 ON T3.BOND_ID = T2.BOND_ID WHERE T1.ELEMENT = 'SN',
1,259,True,,0.040424,SELECT COUNT(DISTINCT ATOM.ELEMENT) FROM ATOM INNER JOIN BOND ON ATOM.MOLECULE_ID = BOND.MOLECULE_ID WHERE BOND.BOND_TYPE = '-',"SELECT COUNT(DISTINCT T.ELEMENT) FROM ( SELECT DISTINCT T2.MOLECULE_ID, T1.ELEMENT FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID INNER JOIN BOND AS T3 ON T2.MOLECULE_ID = T3.MOLECULE_ID WHERE T3.BOND_TYPE = '-' ) AS T",
1,260,True,,0.389534,SELECT COUNT(*) FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID WHERE BOND.BOND_TYPE = '#' AND (ATOM.ELEMENT = 'P' OR ATOM.ELEMENT = 'BR'),"SELECT COUNT(T1.ATOM_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID INNER JOIN BOND AS T3 ON T2.MOLECULE_ID = T3.MOLECULE_ID WHERE T3.BOND_TYPE = '#' AND T1.ELEMENT IN ('P', 'BR')",
1,261,True,,0.030424,SELECT BOND.BOND_ID FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.LABEL = '+',SELECT DISTINCT T1.BOND_ID FROM BOND AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.LABEL = '+',
1,262,True,,0.044093,SELECT BOND.MOLECULE_ID FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE BOND.BOND_TYPE = '-' AND MOLECULE.LABEL = '-',SELECT DISTINCT T1.MOLECULE_ID FROM BOND AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.LABEL = '-' AND T1.BOND_TYPE = '-',
1,263,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(CASE WHEN ATOM.ELEMENT = 'CL' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ATOM.ATOM_ID)) AS PERCENT FROM ATOM INNER JOIN BOND ON ATOM.MOLECULE_ID = BOND.MOLECULE_ID WHERE BOND.BOND_TYPE = '-',"SELECT CAST(COUNT(CASE WHEN T.ELEMENT = 'CL' THEN T.ATOM_ID ELSE NULL END) AS REAL) * 100 / COUNT(T.ATOM_ID) FROM ( SELECT T1.ATOM_ID, T1.ELEMENT FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID INNER JOIN BOND AS T3 ON T2.MOLECULE_ID = T3.MOLECULE_ID WHERE T3.BOND_TYPE = '-' ) AS T",
2,263,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(CASE WHEN ATOM.ELEMENT = 'CL' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ATOM.ATOM_ID)) AS PERCENT FROM ATOM INNER JOIN BOND ON ATOM.MOLECULE_ID = BOND.MOLECULE_ID WHERE BOND.BOND_TYPE = '-',"SELECT CAST(COUNT(CASE WHEN T.ELEMENT = 'CL' THEN T.ATOM_ID ELSE NULL END) AS REAL) * 100 / COUNT(T.ATOM_ID) FROM ( SELECT T1.ATOM_ID, T1.ELEMENT FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID INNER JOIN BOND AS T3 ON T2.MOLECULE_ID = T3.MOLECULE_ID WHERE T3.BOND_TYPE = '-' ) AS T",
3,263,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(CASE WHEN ATOM.ELEMENT = 'CL' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ATOM.ATOM_ID)) AS PERCENT FROM ATOM INNER JOIN BOND ON ATOM.MOLECULE_ID = BOND.MOLECULE_ID WHERE BOND.BOND_TYPE = '-',"SELECT CAST(COUNT(CASE WHEN T.ELEMENT = 'CL' THEN T.ATOM_ID ELSE NULL END) AS REAL) * 100 / COUNT(T.ATOM_ID) FROM ( SELECT T1.ATOM_ID, T1.ELEMENT FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID INNER JOIN BOND AS T3 ON T2.MOLECULE_ID = T3.MOLECULE_ID WHERE T3.BOND_TYPE = '-' ) AS T",
1,264,False,,,"SELECT MOLECULE.LABEL FROM MOLECULE WHERE MOLECULE.MOLECULE_ID IN ('TR000', 'TR001', 'TR002')","SELECT MOLECULE_ID, T.LABEL FROM MOLECULE AS T WHERE T.MOLECULE_ID IN ('TR000', 'TR001', 'TR002')",
1,265,True,,0.0130409999999999,SELECT MOLECULE.MOLECULE_ID FROM MOLECULE WHERE MOLECULE.LABEL = '-',SELECT T.MOLECULE_ID FROM MOLECULE AS T WHERE T.LABEL = '-',
1,266,True,,0.09577,SELECT COUNT(*) FROM MOLECULE WHERE MOLECULE_ID BETWEEN 'TR000' AND 'TR030' AND LABEL = '+',SELECT COUNT(T.MOLECULE_ID) FROM MOLECULE AS T WHERE T.MOLECULE_ID BETWEEN 'TR000' AND 'TR030' AND T.LABEL = '+',
1,267,False,,,SELECT BOND.BOND_TYPE FROM BOND WHERE BOND.MOLECULE_ID BETWEEN 'TR000' AND 'TR050';,"SELECT T2.MOLECULE_ID, T2.BOND_TYPE FROM MOLECULE AS T1 INNER JOIN BOND AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.MOLECULE_ID BETWEEN 'TR000' AND 'TR050'",
1,268,True,,0.024568,SELECT ATOM.ELEMENT FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID WHERE CONNECTED.BOND_ID = 'TR001_10_11',SELECT T2.ELEMENT FROM CONNECTED AS T1 INNER JOIN ATOM AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T1.BOND_ID = 'TR001_10_11',
1,269,True,,0.038787,SELECT COUNT(BOND.BOND_ID) FROM BOND INNER JOIN ATOM ON BOND.MOLECULE_ID = ATOM.MOLECULE_ID WHERE ATOM.ELEMENT = 'I',SELECT COUNT(T3.BOND_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID INNER JOIN BOND AS T3 ON T2.MOLECULE_ID = T3.MOLECULE_ID WHERE T1.ELEMENT = 'I',
1,270,False,,,"SELECT MOLECULE.LABEL, COUNT(*) AS COUNT FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID WHERE ATOM.ELEMENT = 'CA' GROUP BY MOLECULE.LABEL ORDER BY COUNT DESC LIMIT 1",SELECT T2.LABEL FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.ELEMENT = 'CA' GROUP BY T2.LABEL ORDER BY COUNT(T2.LABEL) DESC LIMIT 1,
1,271,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT CASE WHEN (SELECT COUNT(*) FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID WHERE BOND.BOND_ID = 'TR001_1_8' AND ATOM.ELEMENT = 'CL') > 0 AND (SELECT COUNT(*) FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID WHERE BOND.BOND_ID = 'TR001_1_8' AND ATOM.ELEMENT = 'C') > 0 THEN 'TRUE' ELSE 'FALSE' END,"SELECT T2.BOND_ID, T2.ATOM_ID2, T1.ELEMENT AS FLAG_HAVE_CACL FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T2.ATOM_ID = T1.ATOM_ID WHERE T2.BOND_ID = 'TR001_1_8' AND (T1.ELEMENT = 'C1' OR T1.ELEMENT = 'C')",
2,271,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT CASE WHEN (SELECT COUNT(*) FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID WHERE BOND.BOND_ID = 'TR001_1_8' AND ATOM.ELEMENT = 'CL') > 0 AND (SELECT COUNT(*) FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID WHERE BOND.BOND_ID = 'TR001_1_8' AND ATOM.ELEMENT = 'C') > 0 THEN 'TRUE' ELSE 'FALSE' END,"SELECT T2.BOND_ID, T2.ATOM_ID2, T1.ELEMENT AS FLAG_HAVE_CACL FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T2.ATOM_ID = T1.ATOM_ID WHERE T2.BOND_ID = 'TR001_1_8' AND (T1.ELEMENT = 'C1' OR T1.ELEMENT = 'C')",
3,271,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT CASE WHEN (SELECT COUNT(*) FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID WHERE BOND.BOND_ID = 'TR001_1_8' AND ATOM.ELEMENT = 'CL') > 0 AND (SELECT COUNT(*) FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID WHERE BOND.BOND_ID = 'TR001_1_8' AND ATOM.ELEMENT = 'C') > 0 THEN 'TRUE' ELSE 'FALSE' END,"SELECT T2.BOND_ID, T2.ATOM_ID2, T1.ELEMENT AS FLAG_HAVE_CACL FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T2.ATOM_ID = T1.ATOM_ID WHERE T2.BOND_ID = 'TR001_1_8' AND (T1.ELEMENT = 'C1' OR T1.ELEMENT = 'C')",
1,272,True,,0.06839,SELECT MOLECULE.MOLECULE_ID FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID INNER JOIN BOND ON MOLECULE.MOLECULE_ID = BOND.MOLECULE_ID WHERE ATOM.ELEMENT = 'C' AND BOND.BOND_TYPE = '#' AND MOLECULE.LABEL = '-' LIMIT 2,SELECT DISTINCT T2.MOLECULE_ID FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID INNER JOIN BOND AS T3 ON T2.MOLECULE_ID = T3.MOLECULE_ID WHERE T3.BOND_TYPE = '#' AND T1.ELEMENT = 'C' AND T2.LABEL = '-',
1,273,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) FILTER (WHERE ATOM.ELEMENT = 'CL') AS REAL) * 100 / COUNT(*) AS PERCENTAGE FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.LABEL = '+',SELECT CAST(COUNT( CASE WHEN T1.ELEMENT = 'CL' THEN T1.ELEMENT ELSE NULL END) AS REAL) * 100 / COUNT(T1.ELEMENT) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.LABEL = '+',
2,273,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) FILTER (WHERE ATOM.ELEMENT = 'CL') AS REAL) * 100 / COUNT(*) AS PERCENTAGE FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.LABEL = '+',SELECT CAST(COUNT( CASE WHEN T1.ELEMENT = 'CL' THEN T1.ELEMENT ELSE NULL END) AS REAL) * 100 / COUNT(T1.ELEMENT) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.LABEL = '+',
3,273,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) FILTER (WHERE ATOM.ELEMENT = 'CL') AS REAL) * 100 / COUNT(*) AS PERCENTAGE FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.LABEL = '+',SELECT CAST(COUNT( CASE WHEN T1.ELEMENT = 'CL' THEN T1.ELEMENT ELSE NULL END) AS REAL) * 100 / COUNT(T1.ELEMENT) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.LABEL = '+',
1,274,True,,0.0186849999999999,SELECT ATOM.ELEMENT FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.MOLECULE_ID = 'TR001';,SELECT DISTINCT T.ELEMENT FROM ATOM AS T WHERE T.MOLECULE_ID = 'TR001',
1,275,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ATOM (
	ATOM_ID VARCHAR(20),
	MOLECULE_ID VARCHAR(20),
	ELEMENT VARCHAR(20)
);
INSERT INTO ATOM VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE BOND (
	BOND_ID VARCHAR(20),
	MOLECULE_ID VARCHAR(20),
	BOND_TYPE VARCHAR(20)
);
INSERT INTO BOND VALUES ('2147483648', '2147483648', '=');
CREATE TABLE CONNECTED (
	ATOM_ID VARCHAR(20),
	ATOM_ID2 VARCHAR(20),
	BOND_ID VARCHAR(20)
);
INSERT INTO CONNECTED VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE MOLECULE (
	MOLECULE_ID VARCHAR(20),
	LABEL VARCHAR(20)
);
INSERT INTO MOLECULE VALUES ('2147483648', '2147483648');
-- ----------sql1------------
SELECT BOND.MOLECULE_ID FROM BOND WHERE BOND.BOND_TYPE = 'DOUBLE';
-- ----------sql2------------
-- 2147483648
SELECT DISTINCT T.MOLECULE_ID FROM BOND AS T WHERE T.BOND_TYPE = '=';
",0.013345,SELECT BOND.MOLECULE_ID FROM BOND WHERE BOND.BOND_TYPE = 'DOUBLE';,SELECT DISTINCT T.MOLECULE_ID FROM BOND AS T WHERE T.BOND_TYPE = '=',
1,276,True,,0.033486,"SELECT ATOM.ATOM_ID, CONNECTED.ATOM_ID2 FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID WHERE BOND.BOND_TYPE = '#';","SELECT T2.ATOM_ID, T2.ATOM_ID2 FROM BOND AS T1 INNER JOIN CONNECTED AS T2 ON T1.BOND_ID = T2.BOND_ID WHERE T1.BOND_TYPE = '#'",
1,277,True,,0.024611,SELECT ATOM.ELEMENT FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID WHERE CONNECTED.BOND_ID = 'TR000_1_2',SELECT T1.ELEMENT FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T2.BOND_ID = 'TR000_1_2',
1,278,True,,0.050478,SELECT COUNT(*) FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE BOND.BOND_TYPE = '-' AND MOLECULE.LABEL = '-',SELECT COUNT(DISTINCT T2.MOLECULE_ID) FROM BOND AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.LABEL = '-' AND T1.BOND_TYPE = '-',
1,279,True,,0.023693,SELECT MOLECULE.LABEL FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE BOND.BOND_ID = 'TR001_10_11';,SELECT T2.LABEL FROM BOND AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.BOND_ID = 'TR001_10_11',
1,280,True,,0.026369,"SELECT BOND.BOND_ID, MOLECULE.LABEL FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE BOND.BOND_TYPE = '#'","SELECT DISTINCT T1.BOND_ID, T2.LABEL FROM BOND AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.BOND_TYPE = '#'",
1,281,ERROR,"NotImplementedError: {'substr': ['ATOM__ATOM_ID', 7, 1]}",,"SELECT ATOM.ELEMENT FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.LABEL = '+' AND SUBSTR(ATOM.ATOM_ID, 7, 1) = '4';","SELECT DISTINCT T1.ELEMENT FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.LABEL = '+' AND SUBSTR(T1.ATOM_ID, -1) = '4' AND LENGTH(T1.ATOM_ID) = 7",
2,281,ERROR,"NotImplementedError: {'substr': ['ATOM__ATOM_ID', 7, 1]}",,"SELECT ATOM.ELEMENT FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.LABEL = '+' AND SUBSTR(ATOM.ATOM_ID, 7, 1) = '4';","SELECT DISTINCT T1.ELEMENT FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.LABEL = '+' AND SUBSTR(T1.ATOM_ID, -1) = '4' AND LENGTH(T1.ATOM_ID) = 7",
3,281,ERROR,"NotImplementedError: {'substr': ['ATOM__ATOM_ID', 7, 1]}",,"SELECT ATOM.ELEMENT FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.LABEL = '+' AND SUBSTR(ATOM.ATOM_ID, 7, 1) = '4';","SELECT DISTINCT T1.ELEMENT FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.LABEL = '+' AND SUBSTR(T1.ATOM_ID, -1) = '4' AND LENGTH(T1.ATOM_ID) = 7",
1,282,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute MOLECULE__LABEL`,,"SELECT (SELECT COUNT(*) FROM ATOM WHERE ATOM.ELEMENT = 'H' AND ATOM.MOLECULE_ID = 'TR006') / (SELECT COUNT(*) FROM ATOM WHERE ATOM.MOLECULE_ID = 'TR006') AS RATIO, MOLECULE.LABEL FROM MOLECULE WHERE MOLECULE.MOLECULE_ID = 'TR006';","WITH SUBQUERY AS (SELECT DISTINCT T1.ATOM_ID, T1.ELEMENT, T1.MOLECULE_ID, T2.LABEL FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.MOLECULE_ID = 'TR006') SELECT CAST(COUNT(CASE WHEN ELEMENT = 'H' THEN ATOM_ID ELSE NULL END) AS REAL) / (CASE WHEN COUNT(ATOM_ID) = 0 THEN NULL ELSE COUNT(ATOM_ID) END) AS RATIO, LABEL FROM SUBQUERY GROUP BY LABEL",
2,282,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute MOLECULE__LABEL`,,"SELECT (SELECT COUNT(*) FROM ATOM WHERE ATOM.ELEMENT = 'H' AND ATOM.MOLECULE_ID = 'TR006') / (SELECT COUNT(*) FROM ATOM WHERE ATOM.MOLECULE_ID = 'TR006') AS RATIO, MOLECULE.LABEL FROM MOLECULE WHERE MOLECULE.MOLECULE_ID = 'TR006';","WITH SUBQUERY AS (SELECT DISTINCT T1.ATOM_ID, T1.ELEMENT, T1.MOLECULE_ID, T2.LABEL FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.MOLECULE_ID = 'TR006') SELECT CAST(COUNT(CASE WHEN ELEMENT = 'H' THEN ATOM_ID ELSE NULL END) AS REAL) / (CASE WHEN COUNT(ATOM_ID) = 0 THEN NULL ELSE COUNT(ATOM_ID) END) AS RATIO, LABEL FROM SUBQUERY GROUP BY LABEL",
3,282,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute MOLECULE__LABEL`,,"SELECT (SELECT COUNT(*) FROM ATOM WHERE ATOM.ELEMENT = 'H' AND ATOM.MOLECULE_ID = 'TR006') / (SELECT COUNT(*) FROM ATOM WHERE ATOM.MOLECULE_ID = 'TR006') AS RATIO, MOLECULE.LABEL FROM MOLECULE WHERE MOLECULE.MOLECULE_ID = 'TR006';","WITH SUBQUERY AS (SELECT DISTINCT T1.ATOM_ID, T1.ELEMENT, T1.MOLECULE_ID, T2.LABEL FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.MOLECULE_ID = 'TR006') SELECT CAST(COUNT(CASE WHEN ELEMENT = 'H' THEN ATOM_ID ELSE NULL END) AS REAL) / (CASE WHEN COUNT(ATOM_ID) = 0 THEN NULL ELSE COUNT(ATOM_ID) END) AS RATIO, LABEL FROM SUBQUERY GROUP BY LABEL",
1,283,True,,0.024662,SELECT MOLECULE.LABEL FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE ATOM.ELEMENT = 'CA';,SELECT T2.LABEL AS FLAG_CARCINOGENIC FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.ELEMENT = 'CA',
1,284,True,,0.032567,SELECT BOND.BOND_TYPE FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID WHERE ATOM.ELEMENT = 'C';,SELECT DISTINCT T2.BOND_TYPE FROM ATOM AS T1 INNER JOIN BOND AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.ELEMENT = 'C',
1,285,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ATOM (
	ATOM_ID VARCHAR(20),
	MOLECULE_ID VARCHAR(20),
	ELEMENT VARCHAR(20)
);
INSERT INTO ATOM VALUES ('1659835628364964067', '2147483648', '2147483648');
CREATE TABLE BOND (
	BOND_ID VARCHAR(20),
	MOLECULE_ID VARCHAR(20),
	BOND_TYPE VARCHAR(20)
);
INSERT INTO BOND VALUES ('TR001_10_11', '2147483648', '2147483648');
CREATE TABLE CONNECTED (
	ATOM_ID VARCHAR(20),
	ATOM_ID2 VARCHAR(20),
	BOND_ID VARCHAR(20)
);
INSERT INTO CONNECTED VALUES ('1659835628364964067', '1659835628364964067', 'TR001_10_11');
CREATE TABLE MOLECULE (
	MOLECULE_ID VARCHAR(20),
	LABEL VARCHAR(20)
);
INSERT INTO MOLECULE VALUES ('2147483648', '2147483648');
-- ----------sql1------------
SELECT ATOM.ELEMENT FROM ATOM INNER JOIN BOND ON ATOM.ATOM_ID = BOND.BOND_ID WHERE BOND.BOND_ID = 'TR001_10_11';
-- ----------sql2------------
-- 2147483648
SELECT T1.ELEMENT FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID INNER JOIN BOND AS T3 ON T2.BOND_ID = T3.BOND_ID WHERE T3.BOND_ID = 'TR001_10_11';
",0.0338469999999999,SELECT ATOM.ELEMENT FROM ATOM INNER JOIN BOND ON ATOM.ATOM_ID = BOND.BOND_ID WHERE BOND.BOND_ID = 'TR001_10_11',SELECT T1.ELEMENT FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID INNER JOIN BOND AS T3 ON T2.BOND_ID = T3.BOND_ID WHERE T3.BOND_ID = 'TR001_10_11',
1,286,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM BOND WHERE BOND_TYPE = '#') AS REAL) * 100) / (SELECT COUNT(*) FROM BOND) FROM BOND,SELECT CAST(COUNT(CASE WHEN T.BOND_TYPE = '#' THEN T.BOND_ID ELSE NULL END) AS REAL) * 100 / COUNT(T.BOND_ID) FROM BOND AS T,
2,286,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM BOND WHERE BOND_TYPE = '#') AS REAL) * 100) / (SELECT COUNT(*) FROM BOND) FROM BOND,SELECT CAST(COUNT(CASE WHEN T.BOND_TYPE = '#' THEN T.BOND_ID ELSE NULL END) AS REAL) * 100 / COUNT(T.BOND_ID) FROM BOND AS T,
3,286,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM BOND WHERE BOND_TYPE = '#') AS REAL) * 100) / (SELECT COUNT(*) FROM BOND) FROM BOND,SELECT CAST(COUNT(CASE WHEN T.BOND_TYPE = '#' THEN T.BOND_ID ELSE NULL END) AS REAL) * 100 / COUNT(T.BOND_ID) FROM BOND AS T,
1,287,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(SUM(CASE WHEN BOND.BOND_TYPE = ' = ' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(BOND.BOND_ID) AS PERCENT FROM BOND WHERE BOND.MOLECULE_ID = 'TR047',SELECT CAST(COUNT(CASE WHEN T.BOND_TYPE = '=' THEN T.BOND_ID ELSE NULL END) AS REAL) * 100 / COUNT(T.BOND_ID) FROM BOND AS T WHERE T.MOLECULE_ID = 'TR047',
2,287,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(SUM(CASE WHEN BOND.BOND_TYPE = ' = ' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(BOND.BOND_ID) AS PERCENT FROM BOND WHERE BOND.MOLECULE_ID = 'TR047',SELECT CAST(COUNT(CASE WHEN T.BOND_TYPE = '=' THEN T.BOND_ID ELSE NULL END) AS REAL) * 100 / COUNT(T.BOND_ID) FROM BOND AS T WHERE T.MOLECULE_ID = 'TR047',
3,287,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(SUM(CASE WHEN BOND.BOND_TYPE = ' = ' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(BOND.BOND_ID) AS PERCENT FROM BOND WHERE BOND.MOLECULE_ID = 'TR047',SELECT CAST(COUNT(CASE WHEN T.BOND_TYPE = '=' THEN T.BOND_ID ELSE NULL END) AS REAL) * 100 / COUNT(T.BOND_ID) FROM BOND AS T WHERE T.MOLECULE_ID = 'TR047',
1,288,True,,0.024599,SELECT MOLECULE.LABEL FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE ATOM.ATOM_ID = 'TR001_1';,SELECT T2.LABEL AS FLAG_CARCINOGENIC FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.ATOM_ID = 'TR001_1',
1,289,True,,0.012162,SELECT MOLECULE.LABEL FROM MOLECULE WHERE MOLECULE.MOLECULE_ID = 'TR151';,SELECT T.LABEL FROM MOLECULE AS T WHERE T.MOLECULE_ID = 'TR151',
1,290,True,,0.018666,SELECT ATOM.ELEMENT FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.MOLECULE_ID = 'TR151';,SELECT DISTINCT T.ELEMENT FROM ATOM AS T WHERE T.MOLECULE_ID = 'TR151',
1,291,True,,0.018948,SELECT COUNT(*) FROM MOLECULE WHERE LABEL = '+';,SELECT COUNT(T.MOLECULE_ID) FROM MOLECULE AS T WHERE T.LABEL = '+',
1,292,ERROR,"NotImplementedError: {'substr': ['MOLECULE__MOLECULE_ID', 3, 3]}",,"SELECT ATOM.ATOM_ID FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE ATOM.ELEMENT = 'C' AND CAST(SUBSTR(MOLECULE.MOLECULE_ID, 3, 3) AS INTEGER) BETWEEN 10 AND 50",SELECT T.ATOM_ID FROM ATOM AS T WHERE T.MOLECULE_ID BETWEEN 'TR010' AND 'TR050' AND T.ELEMENT = 'C',
2,292,ERROR,"NotImplementedError: {'substr': ['MOLECULE__MOLECULE_ID', 3, 3]}",,"SELECT ATOM.ATOM_ID FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE ATOM.ELEMENT = 'C' AND CAST(SUBSTR(MOLECULE.MOLECULE_ID, 3, 3) AS INTEGER) BETWEEN 10 AND 50",SELECT T.ATOM_ID FROM ATOM AS T WHERE T.MOLECULE_ID BETWEEN 'TR010' AND 'TR050' AND T.ELEMENT = 'C',
3,292,ERROR,"NotImplementedError: {'substr': ['MOLECULE__MOLECULE_ID', 3, 3]}",,"SELECT ATOM.ATOM_ID FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE ATOM.ELEMENT = 'C' AND CAST(SUBSTR(MOLECULE.MOLECULE_ID, 3, 3) AS INTEGER) BETWEEN 10 AND 50",SELECT T.ATOM_ID FROM ATOM AS T WHERE T.MOLECULE_ID BETWEEN 'TR010' AND 'TR050' AND T.ELEMENT = 'C',
1,293,True,,0.029283,SELECT COUNT(ATOM.ATOM_ID) FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.LABEL = '+';,SELECT COUNT(T1.ATOM_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.LABEL = '+',
1,294,True,,0.0443849999999999,SELECT BOND.BOND_ID FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.LABEL = '+' AND BOND.BOND_TYPE = '=',SELECT T1.BOND_ID FROM BOND AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.LABEL = '+' AND T1.BOND_TYPE = '=',
1,295,True,,0.0492969999999999,SELECT COUNT(ATOM.ATOM_ID) FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.LABEL = '+' AND ATOM.ELEMENT = 'H',SELECT COUNT(T1.ATOM_ID) AS ATOMNUMS_H FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.LABEL = '+' AND T1.ELEMENT = 'H',
1,296,False,,,SELECT ATOM.MOLECULE_ID FROM ATOM INNER JOIN BOND ON ATOM.MOLECULE_ID = BOND.MOLECULE_ID INNER JOIN CONNECTED ON BOND.BOND_ID = CONNECTED.BOND_ID AND ATOM.ATOM_ID = CONNECTED.ATOM_ID WHERE BOND.BOND_ID = 'TR000_1_2' AND ATOM.ATOM_ID = 'TR000_1',"SELECT T2.MOLECULE_ID, T2.BOND_ID, T1.ATOM_ID FROM CONNECTED AS T1 INNER JOIN BOND AS T2 ON T1.BOND_ID = T2.BOND_ID WHERE T1.ATOM_ID = 'TR000_1' AND T2.BOND_ID = 'TR000_1_2'",
1,297,True,,0.044019,SELECT ATOM.ATOM_ID FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE ATOM.ELEMENT = 'C' AND MOLECULE.LABEL = '-',SELECT T1.ATOM_ID FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.ELEMENT = 'C' AND T2.LABEL = '-',
1,298,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(SUM(CASE WHEN MOLECULE.LABEL = '+' AND ATOM.ELEMENT = 'H' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT MOLECULE.MOLECULE_ID) FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID WHERE MOLECULE.LABEL = '+',SELECT CAST(COUNT(CASE WHEN T1.ELEMENT = 'H' AND T2.LABEL = '+' THEN T2.MOLECULE_ID ELSE NULL END) AS REAL) * 100 / COUNT(T2.MOLECULE_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID,
2,298,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(SUM(CASE WHEN MOLECULE.LABEL = '+' AND ATOM.ELEMENT = 'H' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT MOLECULE.MOLECULE_ID) FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID WHERE MOLECULE.LABEL = '+',SELECT CAST(COUNT(CASE WHEN T1.ELEMENT = 'H' AND T2.LABEL = '+' THEN T2.MOLECULE_ID ELSE NULL END) AS REAL) * 100 / COUNT(T2.MOLECULE_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID,
3,298,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(SUM(CASE WHEN MOLECULE.LABEL = '+' AND ATOM.ELEMENT = 'H' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT MOLECULE.MOLECULE_ID) FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID WHERE MOLECULE.LABEL = '+',SELECT CAST(COUNT(CASE WHEN T1.ELEMENT = 'H' AND T2.LABEL = '+' THEN T2.MOLECULE_ID ELSE NULL END) AS REAL) * 100 / COUNT(T2.MOLECULE_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID,
1,299,True,,0.013162,SELECT MOLECULE.LABEL FROM MOLECULE WHERE MOLECULE.MOLECULE_ID = 'TR124';,SELECT T.LABEL FROM MOLECULE AS T WHERE T.MOLECULE_ID = 'TR124',
1,300,True,,0.012183,SELECT ATOM.ATOM_ID FROM ATOM WHERE ATOM.MOLECULE_ID = 'TR186',SELECT T.ATOM_ID FROM ATOM AS T WHERE T.MOLECULE_ID = 'TR186',
1,301,True,,0.012168,SELECT BOND.BOND_TYPE FROM BOND WHERE BOND.BOND_ID = 'TR007_4_19';,SELECT T.BOND_TYPE FROM BOND AS T WHERE T.BOND_ID = 'TR007_4_19',
1,302,True,,0.026594,SELECT ATOM.ELEMENT FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID WHERE CONNECTED.BOND_ID = 'TR001_2_4',SELECT DISTINCT T1.ELEMENT FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T2.BOND_ID = 'TR001_2_4',
1,303,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ATOM (
	ATOM_ID VARCHAR(20),
	MOLECULE_ID VARCHAR(20),
	ELEMENT VARCHAR(20)
);
INSERT INTO ATOM VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE BOND (
	BOND_ID VARCHAR(20),
	MOLECULE_ID VARCHAR(20),
	BOND_TYPE VARCHAR(20)
);
INSERT INTO BOND VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE CONNECTED (
	ATOM_ID VARCHAR(20),
	ATOM_ID2 VARCHAR(20),
	BOND_ID VARCHAR(20)
);
INSERT INTO CONNECTED VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE MOLECULE (
	MOLECULE_ID VARCHAR(20),
	LABEL VARCHAR(20)
);
INSERT INTO MOLECULE VALUES ('2147483648', '2147483648');
-- ----------sql1------------
-- 0, NULL
SELECT COUNT(*), MOLECULE.LABEL FROM MOLECULE INNER JOIN BOND ON MOLECULE.MOLECULE_ID = BOND.MOLECULE_ID WHERE MOLECULE.LABEL = 'TR006' AND BOND.BOND_TYPE = '=';
-- ----------sql2------------
SELECT COUNT(T1.BOND_ID), T2.LABEL FROM BOND AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.BOND_TYPE = '=' AND T2.MOLECULE_ID = 'TR006' GROUP BY T2.LABEL;
",0.053957,"SELECT COUNT(*), MOLECULE.LABEL FROM MOLECULE INNER JOIN BOND ON MOLECULE.MOLECULE_ID = BOND.MOLECULE_ID WHERE MOLECULE.LABEL = 'TR006' AND BOND.BOND_TYPE = '=';","SELECT COUNT(T1.BOND_ID), T2.LABEL FROM BOND AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.BOND_TYPE = '=' AND T2.MOLECULE_ID = 'TR006' GROUP BY T2.LABEL",
1,304,True,,0.0252939999999999,"SELECT MOLECULE.MOLECULE_ID, ATOM.ELEMENT FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID WHERE MOLECULE.LABEL = '+'","SELECT DISTINCT T2.MOLECULE_ID, T1.ELEMENT FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.LABEL = '+'",
1,305,True,,0.026932,"SELECT BOND.BOND_ID, CONNECTED.ATOM_ID, CONNECTED.ATOM_ID2 FROM BOND INNER JOIN CONNECTED ON BOND.BOND_ID = CONNECTED.BOND_ID WHERE BOND.BOND_TYPE = '-';","SELECT T1.BOND_ID, T2.ATOM_ID, T2.ATOM_ID2 FROM BOND AS T1 INNER JOIN CONNECTED AS T2 ON T1.BOND_ID = T2.BOND_ID WHERE T1.BOND_TYPE = '-'",
1,306,True,,0.032654,"SELECT MOLECULE.MOLECULE_ID, ATOM.ELEMENT FROM MOLECULE INNER JOIN BOND ON MOLECULE.MOLECULE_ID = BOND.MOLECULE_ID INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID WHERE BOND.BOND_TYPE = '#'","SELECT DISTINCT T1.MOLECULE_ID, T2.ELEMENT FROM BOND AS T1 INNER JOIN ATOM AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.BOND_TYPE = '#'",
1,307,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BOND__ATOM_ID`,,SELECT ATOM.ELEMENT FROM ATOM INNER JOIN BOND ON ATOM.ATOM_ID = BOND.ATOM_ID WHERE BOND.BOND_ID = 'TR000_2_3',SELECT T2.ELEMENT FROM CONNECTED AS T1 INNER JOIN ATOM AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T1.BOND_ID = 'TR000_2_3',
2,307,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BOND__ATOM_ID`,,SELECT ATOM.ELEMENT FROM ATOM INNER JOIN BOND ON ATOM.ATOM_ID = BOND.ATOM_ID WHERE BOND.BOND_ID = 'TR000_2_3',SELECT T2.ELEMENT FROM CONNECTED AS T1 INNER JOIN ATOM AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T1.BOND_ID = 'TR000_2_3',
3,307,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BOND__ATOM_ID`,,SELECT ATOM.ELEMENT FROM ATOM INNER JOIN BOND ON ATOM.ATOM_ID = BOND.ATOM_ID WHERE BOND.BOND_ID = 'TR000_2_3',SELECT T2.ELEMENT FROM CONNECTED AS T1 INNER JOIN ATOM AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T1.BOND_ID = 'TR000_2_3',
1,308,True,,0.023918,SELECT COUNT(*) FROM ATOM WHERE ELEMENT = 'CL',SELECT COUNT(T1.BOND_ID) FROM CONNECTED AS T1 INNER JOIN ATOM AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T2.ELEMENT = 'CL',
1,309,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BOND__ATOM_ID`,,"SELECT ATOM.ATOM_ID, COUNT(DISTINCT BOND.BOND_TYPE) FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID INNER JOIN BOND ON ATOM.ATOM_ID = BOND.ATOM_ID WHERE MOLECULE.MOLECULE_ID = 'TR346' GROUP BY ATOM.ATOM_ID;","SELECT T1.ATOM_ID, COUNT(DISTINCT T2.BOND_TYPE),T1.MOLECULE_ID FROM ATOM AS T1 INNER JOIN BOND AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.MOLECULE_ID = 'TR000' GROUP BY T1.ATOM_ID, T2.BOND_TYPE",
2,309,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BOND__ATOM_ID`,,"SELECT ATOM.ATOM_ID, COUNT(DISTINCT BOND.BOND_TYPE) FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID INNER JOIN BOND ON ATOM.ATOM_ID = BOND.ATOM_ID WHERE MOLECULE.MOLECULE_ID = 'TR346' GROUP BY ATOM.ATOM_ID;","SELECT T1.ATOM_ID, COUNT(DISTINCT T2.BOND_TYPE),T1.MOLECULE_ID FROM ATOM AS T1 INNER JOIN BOND AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.MOLECULE_ID = 'TR000' GROUP BY T1.ATOM_ID, T2.BOND_TYPE",
3,309,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BOND__ATOM_ID`,,"SELECT ATOM.ATOM_ID, COUNT(DISTINCT BOND.BOND_TYPE) FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID INNER JOIN BOND ON ATOM.ATOM_ID = BOND.ATOM_ID WHERE MOLECULE.MOLECULE_ID = 'TR346' GROUP BY ATOM.ATOM_ID;","SELECT T1.ATOM_ID, COUNT(DISTINCT T2.BOND_TYPE),T1.MOLECULE_ID FROM ATOM AS T1 INNER JOIN BOND AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.MOLECULE_ID = 'TR000' GROUP BY T1.ATOM_ID, T2.BOND_TYPE",
1,310,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ATOM (
	ATOM_ID VARCHAR(20),
	MOLECULE_ID VARCHAR(20),
	ELEMENT VARCHAR(20)
);
INSERT INTO ATOM VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE BOND (
	BOND_ID VARCHAR(20),
	MOLECULE_ID VARCHAR(20),
	BOND_TYPE VARCHAR(20)
);
INSERT INTO BOND VALUES ('2147483648', '2147483648', ' = ');
CREATE TABLE CONNECTED (
	ATOM_ID VARCHAR(20),
	ATOM_ID2 VARCHAR(20),
	BOND_ID VARCHAR(20)
);
INSERT INTO CONNECTED VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE MOLECULE (
	MOLECULE_ID VARCHAR(20),
	LABEL VARCHAR(20)
);
INSERT INTO MOLECULE VALUES ('2147483648', '1338908228323634197');
-- ----------sql1------------
-- 1, 0
SELECT COUNT(DISTINCT BOND.MOLECULE_ID), COUNT(DISTINCT CASE WHEN MOLECULE.LABEL = '+' THEN BOND.MOLECULE_ID END) FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE BOND.BOND_TYPE = ' = ';
-- ----------sql2------------
-- 0, NULL
SELECT COUNT(DISTINCT T2.MOLECULE_ID), SUM(CASE WHEN T2.LABEL = '+' THEN 1 ELSE 0 END) FROM BOND AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.BOND_TYPE = '=';
",0.040189,"SELECT COUNT(DISTINCT BOND.MOLECULE_ID), COUNT(DISTINCT CASE WHEN MOLECULE.LABEL = '+' THEN BOND.MOLECULE_ID END) FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE BOND.BOND_TYPE = ' = '","SELECT COUNT(DISTINCT T2.MOLECULE_ID), SUM(CASE WHEN T2.LABEL = '+' THEN 1 ELSE 0 END) FROM BOND AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.BOND_TYPE = '='",
1,311,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ATOM (
	ATOM_ID VARCHAR(20),
	MOLECULE_ID VARCHAR(20),
	ELEMENT VARCHAR(20)
);
INSERT INTO ATOM VALUES ('2147483648', '2147483648', '5684164767073474192');
CREATE TABLE BOND (
	BOND_ID VARCHAR(20),
	MOLECULE_ID VARCHAR(20),
	BOND_TYPE VARCHAR(20)
);
INSERT INTO BOND VALUES ('2147483648', '2147483648', ' = ');
CREATE TABLE CONNECTED (
	ATOM_ID VARCHAR(20),
	ATOM_ID2 VARCHAR(20),
	BOND_ID VARCHAR(20)
);
INSERT INTO CONNECTED VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE MOLECULE (
	MOLECULE_ID VARCHAR(20),
	LABEL VARCHAR(20)
);
INSERT INTO MOLECULE VALUES ('2147483648', '2147483648');
-- ----------sql1------------
-- 0
SELECT COUNT(DISTINCT MOLECULE.MOLECULE_ID) FROM MOLECULE LEFT JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID LEFT JOIN BOND ON MOLECULE.MOLECULE_ID = BOND.MOLECULE_ID WHERE ATOM.ELEMENT != 'S' AND BOND.BOND_TYPE != ' = ';
-- ----------sql2------------
-- 1
SELECT COUNT(DISTINCT T1.MOLECULE_ID) FROM ATOM AS T1 INNER JOIN BOND AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.ELEMENT <> 'S' AND T2.BOND_TYPE <> '=';
",0.124901,SELECT COUNT(DISTINCT MOLECULE.MOLECULE_ID) FROM MOLECULE LEFT JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID LEFT JOIN BOND ON MOLECULE.MOLECULE_ID = BOND.MOLECULE_ID WHERE ATOM.ELEMENT != 'S' AND BOND.BOND_TYPE != ' = ',SELECT COUNT(DISTINCT T1.MOLECULE_ID) FROM ATOM AS T1 INNER JOIN BOND AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.ELEMENT <> 'S' AND T2.BOND_TYPE <> '=',
1,312,True,,0.031283,SELECT MOLECULE.LABEL FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE BOND.BOND_ID = 'TR001_2_4';,SELECT DISTINCT T2.LABEL FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID INNER JOIN BOND AS T3 ON T2.MOLECULE_ID = T3.MOLECULE_ID WHERE T3.BOND_ID = 'TR001_2_4',
1,313,True,,0.018571,SELECT COUNT(*) FROM ATOM WHERE ATOM.MOLECULE_ID = 'TR001';,SELECT COUNT(T.ATOM_ID) FROM ATOM AS T WHERE T.MOLECULE_ID = 'TR001',
1,314,True,,0.017915,SELECT COUNT(*) FROM BOND WHERE BOND_TYPE = '-';,SELECT COUNT(T.BOND_ID) FROM BOND AS T WHERE T.BOND_TYPE = '-',
1,315,True,,0.045266,SELECT MOLECULE.MOLECULE_ID FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID WHERE ATOM.ELEMENT = 'CL' AND MOLECULE.LABEL = '+',SELECT DISTINCT T1.MOLECULE_ID FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.ELEMENT = 'CL' AND T2.LABEL = '+',
1,316,True,,0.045338,SELECT MOLECULE.MOLECULE_ID FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID WHERE ATOM.ELEMENT = 'C' AND MOLECULE.LABEL = '-',SELECT DISTINCT T1.MOLECULE_ID FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.ELEMENT = 'C' AND T2.LABEL = '-',
1,317,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID WHERE MOLECULE.LABEL = '+' AND ATOM.ELEMENT = 'CL') AS REAL) / (SELECT COUNT(*) FROM MOLECULE)) * 100 AS PERCENTAGE FROM MOLECULE LIMIT 1,SELECT COUNT(CASE WHEN T2.LABEL = '+' AND T1.ELEMENT = 'CL' THEN T2.MOLECULE_ID ELSE NULL END) * 100 / COUNT(T2.MOLECULE_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID,
2,317,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID WHERE MOLECULE.LABEL = '+' AND ATOM.ELEMENT = 'CL') AS REAL) / (SELECT COUNT(*) FROM MOLECULE)) * 100 AS PERCENTAGE FROM MOLECULE LIMIT 1,SELECT COUNT(CASE WHEN T2.LABEL = '+' AND T1.ELEMENT = 'CL' THEN T2.MOLECULE_ID ELSE NULL END) * 100 / COUNT(T2.MOLECULE_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID,
3,317,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID WHERE MOLECULE.LABEL = '+' AND ATOM.ELEMENT = 'CL') AS REAL) / (SELECT COUNT(*) FROM MOLECULE)) * 100 AS PERCENTAGE FROM MOLECULE LIMIT 1,SELECT COUNT(CASE WHEN T2.LABEL = '+' AND T1.ELEMENT = 'CL' THEN T2.MOLECULE_ID ELSE NULL END) * 100 / COUNT(T2.MOLECULE_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID,
1,318,True,,0.020544,SELECT BOND.MOLECULE_ID FROM BOND WHERE BOND.BOND_ID = 'TR001_1_7';,SELECT DISTINCT T1.MOLECULE_ID FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T2.BOND_ID = 'TR001_1_7',
1,319,True,,0.030532,SELECT COUNT(ATOM.ELEMENT) FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID WHERE CONNECTED.BOND_ID = 'TR001_3_4',SELECT COUNT(DISTINCT T1.ELEMENT) FROM ATOM AS T1 INNER JOIN CONNECTED AS T2 ON T1.ATOM_ID = T2.ATOM_ID WHERE T2.BOND_ID = 'TR001_3_4',
1,320,True,,0.045895,SELECT BOND.BOND_TYPE FROM CONNECTED INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID WHERE CONNECTED.ATOM_ID = 'TR000_1' AND CONNECTED.ATOM_ID2 = 'TR000_2',SELECT T1.BOND_TYPE FROM BOND AS T1 INNER JOIN CONNECTED AS T2 ON T1.BOND_ID = T2.BOND_ID WHERE T2.ATOM_ID = 'TR000_1' AND T2.ATOM_ID2 = 'TR000_2',
1,321,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ATOM (
	ATOM_ID VARCHAR(20),
	MOLECULE_ID VARCHAR(20),
	ELEMENT VARCHAR(20)
);
INSERT INTO ATOM VALUES ('TR000_4', '2147483648', '2147483648');
CREATE TABLE BOND (
	BOND_ID VARCHAR(20),
	MOLECULE_ID VARCHAR(20),
	BOND_TYPE VARCHAR(20)
);
INSERT INTO BOND VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE CONNECTED (
	ATOM_ID VARCHAR(20),
	ATOM_ID2 VARCHAR(20),
	BOND_ID VARCHAR(20)
);
INSERT INTO CONNECTED VALUES ('TR000_4', 'TR000_4', '2147483648');
CREATE TABLE MOLECULE (
	MOLECULE_ID VARCHAR(20),
	LABEL VARCHAR(20)
);
INSERT INTO MOLECULE VALUES ('2147483648', '2147483648');
-- ----------sql1------------
-- 2147483648
SELECT ATOM.MOLECULE_ID FROM ATOM WHERE ATOM.ATOM_ID = 'TR000_2' UNION SELECT ATOM.MOLECULE_ID FROM ATOM WHERE ATOM.ATOM_ID = 'TR000_4';
-- ----------sql2------------
SELECT T1.MOLECULE_ID FROM BOND AS T1 INNER JOIN CONNECTED AS T2 ON T1.BOND_ID = T2.BOND_ID WHERE T2.ATOM_ID = 'TR000_2' AND T2.ATOM_ID2 = 'TR000_4';
",0.034691,SELECT ATOM.MOLECULE_ID FROM ATOM WHERE ATOM.ATOM_ID = 'TR000_2' UNION SELECT ATOM.MOLECULE_ID FROM ATOM WHERE ATOM.ATOM_ID = 'TR000_4',SELECT T1.MOLECULE_ID FROM BOND AS T1 INNER JOIN CONNECTED AS T2 ON T1.BOND_ID = T2.BOND_ID WHERE T2.ATOM_ID = 'TR000_2' AND T2.ATOM_ID2 = 'TR000_4',
1,322,True,,0.013823,SELECT ATOM.ELEMENT FROM ATOM WHERE ATOM.ATOM_ID = 'TR000_1';,SELECT T.ELEMENT FROM ATOM AS T WHERE T.ATOM_ID = 'TR000_1',
1,323,True,,0.012223,SELECT MOLECULE.LABEL FROM MOLECULE WHERE MOLECULE.MOLECULE_ID = 'TR000';,SELECT LABEL FROM MOLECULE AS T WHERE T.MOLECULE_ID = 'TR000',
1,324,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(CASE WHEN BOND.BOND_TYPE = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(BOND.BOND_ID)) AS PERCENTAGE FROM BOND,SELECT CAST(COUNT(CASE WHEN T.BOND_TYPE = '-' THEN T.BOND_ID ELSE NULL END) AS REAL) * 100 / COUNT(T.BOND_ID) FROM BOND T,
2,324,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(CASE WHEN BOND.BOND_TYPE = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(BOND.BOND_ID)) AS PERCENTAGE FROM BOND,SELECT CAST(COUNT(CASE WHEN T.BOND_TYPE = '-' THEN T.BOND_ID ELSE NULL END) AS REAL) * 100 / COUNT(T.BOND_ID) FROM BOND T,
3,324,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(CASE WHEN BOND.BOND_TYPE = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(BOND.BOND_ID)) AS PERCENTAGE FROM BOND,SELECT CAST(COUNT(CASE WHEN T.BOND_TYPE = '-' THEN T.BOND_ID ELSE NULL END) AS REAL) * 100 / COUNT(T.BOND_ID) FROM BOND T,
1,325,True,,0.0504779999999999,SELECT COUNT(DISTINCT MOLECULE.MOLECULE_ID) FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID WHERE MOLECULE.LABEL = '+' AND ATOM.ELEMENT = 'N',SELECT COUNT(DISTINCT T1.MOLECULE_ID) FROM MOLECULE AS T1 INNER JOIN ATOM AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.ELEMENT = 'N' AND T1.LABEL = '+',
1,326,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BOND__ATOM_ID`,,SELECT ATOM.MOLECULE_ID FROM ATOM INNER JOIN BOND ON ATOM.ATOM_ID = BOND.ATOM_ID WHERE ATOM.ELEMENT = 'S' AND BOND.BOND_TYPE = '=';,SELECT DISTINCT T1.MOLECULE_ID FROM ATOM AS T1 INNER JOIN BOND AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.ELEMENT = 'S' AND T2.BOND_TYPE = '=',
2,326,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BOND__ATOM_ID`,,SELECT ATOM.MOLECULE_ID FROM ATOM INNER JOIN BOND ON ATOM.ATOM_ID = BOND.ATOM_ID WHERE ATOM.ELEMENT = 'S' AND BOND.BOND_TYPE = '=';,SELECT DISTINCT T1.MOLECULE_ID FROM ATOM AS T1 INNER JOIN BOND AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.ELEMENT = 'S' AND T2.BOND_TYPE = '=',
3,326,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BOND__ATOM_ID`,,SELECT ATOM.MOLECULE_ID FROM ATOM INNER JOIN BOND ON ATOM.ATOM_ID = BOND.ATOM_ID WHERE ATOM.ELEMENT = 'S' AND BOND.BOND_TYPE = '=';,SELECT DISTINCT T1.MOLECULE_ID FROM ATOM AS T1 INNER JOIN BOND AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.ELEMENT = 'S' AND T2.BOND_TYPE = '=',
1,327,True,,0.036275,SELECT MOLECULE.MOLECULE_ID FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.LABEL = '-' GROUP BY ATOM.MOLECULE_ID HAVING COUNT(ATOM.ATOM_ID) > 5,"SELECT T.MOLECULE_ID FROM ( SELECT T1.MOLECULE_ID, COUNT(T2.ATOM_ID) FROM MOLECULE AS T1 INNER JOIN ATOM AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.LABEL = '-' GROUP BY T1.MOLECULE_ID HAVING COUNT(T2.ATOM_ID) > 5 ) T",
1,328,True,,0.053047,SELECT ATOM.ELEMENT FROM ATOM INNER JOIN CONNECTED ON ATOM.ATOM_ID = CONNECTED.ATOM_ID INNER JOIN BOND ON CONNECTED.BOND_ID = BOND.BOND_ID WHERE BOND.BOND_TYPE = '=' AND ATOM.MOLECULE_ID = 'TR024',SELECT T1.ELEMENT FROM ATOM AS T1 INNER JOIN BOND AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.MOLECULE_ID = 'TR024' AND T2.BOND_TYPE = '=',
1,329,ERROR,AttributeError: 'GroupbyContext' object has no attribute 'groupby_ctx',,SELECT MOLECULE.MOLECULE_ID FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID WHERE MOLECULE.LABEL = '+' GROUP BY ATOM.MOLECULE_ID HAVING COUNT(ATOM.ATOM_ID) = (SELECT MAX(COUNT(ATOM.ATOM_ID)) FROM ATOM GROUP BY ATOM.MOLECULE_ID),"SELECT T.MOLECULE_ID FROM ( SELECT T2.MOLECULE_ID, COUNT(T1.ATOM_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.LABEL = '+' GROUP BY T2.MOLECULE_ID ORDER BY COUNT(T1.ATOM_ID) DESC LIMIT 1 ) T",
2,329,ERROR,AttributeError: 'GroupbyContext' object has no attribute 'groupby_ctx',,SELECT MOLECULE.MOLECULE_ID FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID WHERE MOLECULE.LABEL = '+' GROUP BY ATOM.MOLECULE_ID HAVING COUNT(ATOM.ATOM_ID) = (SELECT MAX(COUNT(ATOM.ATOM_ID)) FROM ATOM GROUP BY ATOM.MOLECULE_ID),"SELECT T.MOLECULE_ID FROM ( SELECT T2.MOLECULE_ID, COUNT(T1.ATOM_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.LABEL = '+' GROUP BY T2.MOLECULE_ID ORDER BY COUNT(T1.ATOM_ID) DESC LIMIT 1 ) T",
3,329,ERROR,AttributeError: 'GroupbyContext' object has no attribute 'groupby_ctx',,SELECT MOLECULE.MOLECULE_ID FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID WHERE MOLECULE.LABEL = '+' GROUP BY ATOM.MOLECULE_ID HAVING COUNT(ATOM.ATOM_ID) = (SELECT MAX(COUNT(ATOM.ATOM_ID)) FROM ATOM GROUP BY ATOM.MOLECULE_ID),"SELECT T.MOLECULE_ID FROM ( SELECT T2.MOLECULE_ID, COUNT(T1.ATOM_ID) FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.LABEL = '+' GROUP BY T2.MOLECULE_ID ORDER BY COUNT(T1.ATOM_ID) DESC LIMIT 1 ) T",
1,330,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT COUNT(*) FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID INNER JOIN BOND ON MOLECULE.MOLECULE_ID = BOND.MOLECULE_ID INNER JOIN CONNECTED ON BOND.BOND_ID = CONNECTED.BOND_ID WHERE ATOM.ELEMENT = 'H' AND BOND.BOND_TYPE = '#' AND MOLECULE.LABEL = '+') AS REAL) * 100) / (SELECT COUNT(*) FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID INNER JOIN BOND ON MOLECULE.MOLECULE_ID = BOND.MOLECULE_ID INNER JOIN CONNECTED ON BOND.BOND_ID = CONNECTED.BOND_ID WHERE ATOM.ELEMENT = 'H' AND BOND.BOND_TYPE = '#') AS PERCENTAGE,SELECT CAST(SUM(CASE WHEN T1.LABEL = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.MOLECULE_ID) FROM MOLECULE AS T1 INNER JOIN ATOM AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID INNER JOIN BOND AS T3 ON T1.MOLECULE_ID = T3.MOLECULE_ID WHERE T3.BOND_TYPE = '#' AND T2.ELEMENT = 'H',
2,330,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT COUNT(*) FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID INNER JOIN BOND ON MOLECULE.MOLECULE_ID = BOND.MOLECULE_ID INNER JOIN CONNECTED ON BOND.BOND_ID = CONNECTED.BOND_ID WHERE ATOM.ELEMENT = 'H' AND BOND.BOND_TYPE = '#' AND MOLECULE.LABEL = '+') AS REAL) * 100) / (SELECT COUNT(*) FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID INNER JOIN BOND ON MOLECULE.MOLECULE_ID = BOND.MOLECULE_ID INNER JOIN CONNECTED ON BOND.BOND_ID = CONNECTED.BOND_ID WHERE ATOM.ELEMENT = 'H' AND BOND.BOND_TYPE = '#') AS PERCENTAGE,SELECT CAST(SUM(CASE WHEN T1.LABEL = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.MOLECULE_ID) FROM MOLECULE AS T1 INNER JOIN ATOM AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID INNER JOIN BOND AS T3 ON T1.MOLECULE_ID = T3.MOLECULE_ID WHERE T3.BOND_TYPE = '#' AND T2.ELEMENT = 'H',
3,330,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT COUNT(*) FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID INNER JOIN BOND ON MOLECULE.MOLECULE_ID = BOND.MOLECULE_ID INNER JOIN CONNECTED ON BOND.BOND_ID = CONNECTED.BOND_ID WHERE ATOM.ELEMENT = 'H' AND BOND.BOND_TYPE = '#' AND MOLECULE.LABEL = '+') AS REAL) * 100) / (SELECT COUNT(*) FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID INNER JOIN BOND ON MOLECULE.MOLECULE_ID = BOND.MOLECULE_ID INNER JOIN CONNECTED ON BOND.BOND_ID = CONNECTED.BOND_ID WHERE ATOM.ELEMENT = 'H' AND BOND.BOND_TYPE = '#') AS PERCENTAGE,SELECT CAST(SUM(CASE WHEN T1.LABEL = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.MOLECULE_ID) FROM MOLECULE AS T1 INNER JOIN ATOM AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID INNER JOIN BOND AS T3 ON T1.MOLECULE_ID = T3.MOLECULE_ID WHERE T3.BOND_TYPE = '#' AND T2.ELEMENT = 'H',
1,331,True,,0.017863,SELECT COUNT(*) FROM MOLECULE WHERE LABEL = '+';,SELECT COUNT(T.MOLECULE_ID) FROM MOLECULE AS T WHERE T.LABEL = '+',
1,332,True,,0.096591,SELECT COUNT(DISTINCT BOND.MOLECULE_ID) FROM BOND WHERE BOND.BOND_TYPE = '-' AND BOND.MOLECULE_ID BETWEEN 'TR004' AND 'TR010';,SELECT COUNT(DISTINCT T.MOLECULE_ID) FROM BOND AS T WHERE T.MOLECULE_ID BETWEEN 'TR004' AND 'TR010' AND T.BOND_TYPE = '-',
1,333,True,,0.038633,SELECT COUNT(*) FROM ATOM WHERE ATOM.MOLECULE_ID = 'TR008' AND ATOM.ELEMENT = 'C',SELECT COUNT(T.ATOM_ID) FROM ATOM AS T WHERE T.MOLECULE_ID = 'TR008' AND T.ELEMENT = 'C',
1,334,True,,0.043002,SELECT ATOM.ELEMENT FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.LABEL = '-' AND ATOM.ATOM_ID = 'TR004_7',SELECT T1.ELEMENT FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.ATOM_ID = 'TR004_7' AND T2.LABEL = '-',
1,335,True,,0.0577919999999999,SELECT COUNT(DISTINCT MOLECULE.MOLECULE_ID) FROM MOLECULE INNER JOIN ATOM ON MOLECULE.MOLECULE_ID = ATOM.MOLECULE_ID INNER JOIN BOND ON MOLECULE.MOLECULE_ID = BOND.MOLECULE_ID WHERE ATOM.ELEMENT = 'O' AND BOND.BOND_TYPE = '=';,SELECT COUNT(DISTINCT T1.MOLECULE_ID) FROM ATOM AS T1 INNER JOIN BOND AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.BOND_TYPE = '=' AND T1.ELEMENT = 'O',
1,336,True,,0.049721,SELECT COUNT(DISTINCT BOND.MOLECULE_ID) FROM BOND INNER JOIN MOLECULE ON BOND.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE BOND.BOND_TYPE = '#' AND MOLECULE.LABEL = '-',SELECT COUNT(DISTINCT T1.MOLECULE_ID) FROM MOLECULE AS T1 INNER JOIN BOND AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T2.BOND_TYPE = '#' AND T1.LABEL = '-',
1,337,True,,0.0272859999999999,"SELECT ATOM.ELEMENT, BOND.BOND_TYPE FROM ATOM INNER JOIN BOND ON ATOM.MOLECULE_ID = BOND.MOLECULE_ID WHERE ATOM.MOLECULE_ID = 'TR002';","SELECT DISTINCT T1.ELEMENT, T2.BOND_TYPE FROM ATOM AS T1 INNER JOIN BOND AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.MOLECULE_ID = 'TR002'",
1,338,True,,0.061653,SELECT ATOM.ATOM_ID FROM ATOM INNER JOIN BOND ON ATOM.MOLECULE_ID = BOND.MOLECULE_ID WHERE ATOM.ELEMENT = 'C' AND BOND.BOND_TYPE = '=' AND ATOM.MOLECULE_ID = 'TR012',SELECT T1.ATOM_ID FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID INNER JOIN BOND AS T3 ON T2.MOLECULE_ID = T3.MOLECULE_ID WHERE T2.MOLECULE_ID = 'TR012' AND T3.BOND_TYPE = '=' AND T1.ELEMENT = 'C',
1,339,True,,0.044542,SELECT ATOM.ATOM_ID FROM ATOM INNER JOIN MOLECULE ON ATOM.MOLECULE_ID = MOLECULE.MOLECULE_ID WHERE MOLECULE.LABEL = '+' AND ATOM.ELEMENT = 'O',SELECT T1.ATOM_ID FROM ATOM AS T1 INNER JOIN MOLECULE AS T2 ON T1.MOLECULE_ID = T2.MOLECULE_ID WHERE T1.ELEMENT = 'O' AND T2.LABEL = '+',
1,340,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARD`,,SELECT CARD FROM CARDS WHERE CARDKINGDOMFOILID IS NOT NULL AND CARDKINGDOMID IS NOT NULL,SELECT ID FROM CARDS WHERE CARDKINGDOMFOILID IS NOT NULL AND CARDKINGDOMID IS NOT NULL,
2,340,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARD`,,SELECT CARD FROM CARDS WHERE CARDKINGDOMFOILID IS NOT NULL AND CARDKINGDOMID IS NOT NULL,SELECT ID FROM CARDS WHERE CARDKINGDOMFOILID IS NOT NULL AND CARDKINGDOMID IS NOT NULL,
3,340,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARD`,,SELECT CARD FROM CARDS WHERE CARDKINGDOMFOILID IS NOT NULL AND CARDKINGDOMID IS NOT NULL,SELECT ID FROM CARDS WHERE CARDKINGDOMFOILID IS NOT NULL AND CARDKINGDOMID IS NOT NULL,
1,341,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CARDS (
	ID INTEGER,
	ARTIST VARCHAR(20),
	ASCIINAME VARCHAR(20),
	AVAILABILITY VARCHAR(20),
	BORDERCOLOR VARCHAR(20),
	CARDKINGDOMFOILID VARCHAR(20),
	CARDKINGDOMID VARCHAR(20),
	COLORIDENTITY VARCHAR(20),
	COLORINDICATOR VARCHAR(20),
	COLORS VARCHAR(20),
	CONVERTEDMANACOST INTEGER,
	DUELDECK VARCHAR(20),
	EDHRECRANK INTEGER,
	FACECONVERTEDMANACOST INTEGER,
	FACENAME VARCHAR(20),
	FLAVORNAME VARCHAR(20),
	FLAVORTEXT VARCHAR(20),
	FRAMEEFFECTS VARCHAR(20),
	FRAMEVERSION VARCHAR(20),
	HAND VARCHAR(20),
	HASALTERNATIVEDECKLIMIT INTEGER,
	HASCONTENTWARNING INTEGER,
	HASFOIL INTEGER,
	HASNONSFOIL INTEGER,
	ISALTERNATIVE INTEGER,
	ISFULLART INTEGER,
	ISONLINEONLY INTEGER,
	ISOVERSIZED INTEGER,
	ISPROMO INTEGER,
	ISREPRINT INTEGER,
	ISRESERVED INTEGER,
	ISSTARTER INTEGER,
	ISSTORYSPOTLIGHT INTEGER,
	ISTEXTLESS INTEGER,
	ISTIMESHIFTED INTEGER,
	KEYWORDS VARCHAR(20),
	LAYOUT VARCHAR(20),
	LEADERSHIPSKILLS VARCHAR(20),
	LIFE VARCHAR(20),
	LOYALTY VARCHAR(20),
	MANACOST VARCHAR(20),
	MCMID VARCHAR(20),
	MCMMETAID VARCHAR(20),
	MTGARENAID VARCHAR(20),
	MTGJSONV4ID VARCHAR(20),
	MTGOFOILID VARCHAR(20),
	MTGOID VARCHAR(20),
	MULTIVERSEID VARCHAR(20),
	NAME VARCHAR(20),
	NUMBER VARCHAR(20),
	ORIGINALRELEASEDATE VARCHAR(20),
	ORIGINALTEXT VARCHAR(20),
	ORIGINALTYPE VARCHAR(20),
	OTHERFACEIDS VARCHAR(20),
	POWER VARCHAR(20),
	PRINTINGS VARCHAR(20),
	PROMOTYPES VARCHAR(20),
	PURCHASEURLS VARCHAR(20),
	RARITY VARCHAR(20),
	SCRYFALLID VARCHAR(20),
	SCRYFALLILLUSTRATIONID VARCHAR(20),
	SCRYFALLORACLEID VARCHAR(20),
	SETCODE VARCHAR(20),
	SIDE VARCHAR(20),
	SUBTYPES VARCHAR(20),
	SUPERTYPES VARCHAR(20),
	TCGPLAYERPRODUCTID VARCHAR(20),
	TEXT VARCHAR(20),
	TOUGHNESS VARCHAR(20),
	TYPE VARCHAR(20),
	TYPES VARCHAR(20),
	UUID VARCHAR(20),
	VARIATIONS VARCHAR(20),
	WATERMARK VARCHAR(20)
);
INSERT INTO CARDS VALUES (2, NULL, NULL, NULL, 'BORDERLESS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2147483648', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2147483648', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2147483648', NULL, NULL);
CREATE TABLE FOREIGN_DATA (
	ID INTEGER,
	FLAVORTEXT VARCHAR(20),
	LANGUAGE VARCHAR(20),
	MULTIVERSEID INTEGER,
	NAME VARCHAR(20),
	TEXT VARCHAR(20),
	TYPE VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO FOREIGN_DATA VALUES (0, '2147483648', '2147483648', 0, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE LEGALITIES (
	ID INTEGER,
	FORMAT VARCHAR(20),
	STATUS VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO LEGALITIES VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE SETS (
	ID INTEGER,
	BASESETSIZE INTEGER,
	BLOCK VARCHAR(20),
	BOOSTER VARCHAR(20),
	CODE VARCHAR(20),
	ISFOILONLY INTEGER,
	ISFOREIGNONLY INTEGER,
	ISNONFOILONLY INTEGER,
	ISONLINEONLY INTEGER,
	ISPARTIALPREVIEW INTEGER,
	KEYRUNE_CODE VARCHAR(20),
	MCMID INTEGER,
	MCMIDEXTRAS INTEGER,
	MCMNAME VARCHAR(20),
	MTGOCODE VARCHAR(20),
	NAME VARCHAR(20),
	PARENTCODE VARCHAR(20),
	RELEASEDATE DATE,
	TCGPLAYERGROUPID INTEGER,
	TOTALSETSIZE INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO SETS VALUES (0, 0, '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, '2147483648', 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', 0, 0, '2147483648');
CREATE TABLE SET_TRANSLATIONS (
	ID INTEGER,
	LANGUAGE VARCHAR(20),
	SETCODE VARCHAR(20),
	TRANSLATION VARCHAR(20)
);
INSERT INTO SET_TRANSLATIONS VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE RULINGS (
	ID INTEGER,
	DATE DATE,
	TEXT VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO RULINGS VALUES (0, '1970-01-01', '2147483648', '2147483648');
-- ----------sql1------------
-- 2147483648
SELECT CARDS.NAME FROM CARDS WHERE CARDS.BORDERCOLOR = 'BORDERLESS' AND CARDS.CARDKINGDOMFOILID IS NULL;
-- ----------sql2------------
-- 2
SELECT ID FROM CARDS WHERE BORDERCOLOR = 'BORDERLESS' AND (CARDKINGDOMID IS NULL OR CARDKINGDOMID IS NULL);
",0.074361,SELECT CARDS.NAME FROM CARDS WHERE CARDS.BORDERCOLOR = 'BORDERLESS' AND CARDS.CARDKINGDOMFOILID IS NULL,SELECT ID FROM CARDS WHERE BORDERCOLOR = 'BORDERLESS' AND (CARDKINGDOMID IS NULL OR CARDKINGDOMID IS NULL),
1,342,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARD__NAME`,,SELECT CARD.NAME FROM CARDS ORDER BY CARD.FACECONVERTEDMANACOST DESC LIMIT 1,SELECT NAME FROM CARDS ORDER BY FACECONVERTEDMANACOST LIMIT 1,
2,342,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARD__NAME`,,SELECT CARD.NAME FROM CARDS ORDER BY CARD.FACECONVERTEDMANACOST DESC LIMIT 1,SELECT NAME FROM CARDS ORDER BY FACECONVERTEDMANACOST LIMIT 1,
3,342,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARD__NAME`,,SELECT CARD.NAME FROM CARDS ORDER BY CARD.FACECONVERTEDMANACOST DESC LIMIT 1,SELECT NAME FROM CARDS ORDER BY FACECONVERTEDMANACOST LIMIT 1,
1,343,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__EDHREC`,,SELECT CARDS.NAME FROM CARDS WHERE CARDS.FRAMEVERSION = '2015' AND CARDS.EDHREC < 100,SELECT ID FROM CARDS WHERE EDHRECRANK < 100 AND FRAMEVERSION = 2015,
2,343,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__EDHREC`,,SELECT CARDS.NAME FROM CARDS WHERE CARDS.FRAMEVERSION = '2015' AND CARDS.EDHREC < 100,SELECT ID FROM CARDS WHERE EDHRECRANK < 100 AND FRAMEVERSION = 2015,
3,343,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__EDHREC`,,SELECT CARDS.NAME FROM CARDS WHERE CARDS.FRAMEVERSION = '2015' AND CARDS.EDHREC < 100,SELECT ID FROM CARDS WHERE EDHRECRANK < 100 AND FRAMEVERSION = 2015,
1,344,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__STATUS`,,SELECT CARDS.NAME FROM CARDS WHERE CARDS.RARITY = 'MYTHIC' AND CARDS.STATUS = 'BANNED' AND CARDS.FORMAT = 'GLADIATOR',SELECT DISTINCT T1.ID FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T2.FORMAT = 'GLADIATOR' AND T2.STATUS = 'BANNED' AND T1.RARITY = 'MYTHIC',
2,344,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__STATUS`,,SELECT CARDS.NAME FROM CARDS WHERE CARDS.RARITY = 'MYTHIC' AND CARDS.STATUS = 'BANNED' AND CARDS.FORMAT = 'GLADIATOR',SELECT DISTINCT T1.ID FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T2.FORMAT = 'GLADIATOR' AND T2.STATUS = 'BANNED' AND T1.RARITY = 'MYTHIC',
3,344,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__STATUS`,,SELECT CARDS.NAME FROM CARDS WHERE CARDS.RARITY = 'MYTHIC' AND CARDS.STATUS = 'BANNED' AND CARDS.FORMAT = 'GLADIATOR',SELECT DISTINCT T1.ID FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T2.FORMAT = 'GLADIATOR' AND T2.STATUS = 'BANNED' AND T1.RARITY = 'MYTHIC',
1,345,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CARDS (
	ID INTEGER,
	ARTIST VARCHAR(20),
	ASCIINAME VARCHAR(20),
	AVAILABILITY VARCHAR(20),
	BORDERCOLOR VARCHAR(20),
	CARDKINGDOMFOILID VARCHAR(20),
	CARDKINGDOMID VARCHAR(20),
	COLORIDENTITY VARCHAR(20),
	COLORINDICATOR VARCHAR(20),
	COLORS VARCHAR(20),
	CONVERTEDMANACOST INTEGER,
	DUELDECK VARCHAR(20),
	EDHRECRANK INTEGER,
	FACECONVERTEDMANACOST INTEGER,
	FACENAME VARCHAR(20),
	FLAVORNAME VARCHAR(20),
	FLAVORTEXT VARCHAR(20),
	FRAMEEFFECTS VARCHAR(20),
	FRAMEVERSION VARCHAR(20),
	HAND VARCHAR(20),
	HASALTERNATIVEDECKLIMIT INTEGER,
	HASCONTENTWARNING INTEGER,
	HASFOIL INTEGER,
	HASNONSFOIL INTEGER,
	ISALTERNATIVE INTEGER,
	ISFULLART INTEGER,
	ISONLINEONLY INTEGER,
	ISOVERSIZED INTEGER,
	ISPROMO INTEGER,
	ISREPRINT INTEGER,
	ISRESERVED INTEGER,
	ISSTARTER INTEGER,
	ISSTORYSPOTLIGHT INTEGER,
	ISTEXTLESS INTEGER,
	ISTIMESHIFTED INTEGER,
	KEYWORDS VARCHAR(20),
	LAYOUT VARCHAR(20),
	LEADERSHIPSKILLS VARCHAR(20),
	LIFE VARCHAR(20),
	LOYALTY VARCHAR(20),
	MANACOST VARCHAR(20),
	MCMID VARCHAR(20),
	MCMMETAID VARCHAR(20),
	MTGARENAID VARCHAR(20),
	MTGJSONV4ID VARCHAR(20),
	MTGOFOILID VARCHAR(20),
	MTGOID VARCHAR(20),
	MULTIVERSEID VARCHAR(20),
	NAME VARCHAR(20),
	NUMBER VARCHAR(20),
	ORIGINALRELEASEDATE VARCHAR(20),
	ORIGINALTEXT VARCHAR(20),
	ORIGINALTYPE VARCHAR(20),
	OTHERFACEIDS VARCHAR(20),
	POWER VARCHAR(20),
	PRINTINGS VARCHAR(20),
	PROMOTYPES VARCHAR(20),
	PURCHASEURLS VARCHAR(20),
	RARITY VARCHAR(20),
	SCRYFALLID VARCHAR(20),
	SCRYFALLILLUSTRATIONID VARCHAR(20),
	SCRYFALLORACLEID VARCHAR(20),
	SETCODE VARCHAR(20),
	SIDE VARCHAR(20),
	SUBTYPES VARCHAR(20),
	SUPERTYPES VARCHAR(20),
	TCGPLAYERPRODUCTID VARCHAR(20),
	TEXT VARCHAR(20),
	TOUGHNESS VARCHAR(20),
	TYPE VARCHAR(20),
	TYPES VARCHAR(20),
	UUID VARCHAR(20),
	VARIATIONS VARCHAR(20),
	WATERMARK VARCHAR(20)
);
INSERT INTO CARDS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 3, '2147483648', 4, 5, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', NULL, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 'ARTIFACT', '1890289318153470068', '2147483648', '2147483648', '2147483648');
CREATE TABLE FOREIGN_DATA (
	ID INTEGER,
	FLAVORTEXT VARCHAR(20),
	LANGUAGE VARCHAR(20),
	MULTIVERSEID INTEGER,
	NAME VARCHAR(20),
	TEXT VARCHAR(20),
	TYPE VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO FOREIGN_DATA VALUES (0, '2147483648', '2147483648', 0, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE LEGALITIES (
	ID INTEGER,
	FORMAT VARCHAR(20),
	STATUS VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO LEGALITIES VALUES (21, 'VINTAGE', '2147483648', '2147483648');
CREATE TABLE SETS (
	ID INTEGER,
	BASESETSIZE INTEGER,
	BLOCK VARCHAR(20),
	BOOSTER VARCHAR(20),
	CODE VARCHAR(20),
	ISFOILONLY INTEGER,
	ISFOREIGNONLY INTEGER,
	ISNONFOILONLY INTEGER,
	ISONLINEONLY INTEGER,
	ISPARTIALPREVIEW INTEGER,
	KEYRUNE_CODE VARCHAR(20),
	MCMID INTEGER,
	MCMIDEXTRAS INTEGER,
	MCMNAME VARCHAR(20),
	MTGOCODE VARCHAR(20),
	NAME VARCHAR(20),
	PARENTCODE VARCHAR(20),
	RELEASEDATE DATE,
	TCGPLAYERGROUPID INTEGER,
	TOTALSETSIZE INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO SETS VALUES (0, 0, '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, '2147483648', 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', 0, 0, '2147483648');
CREATE TABLE SET_TRANSLATIONS (
	ID INTEGER,
	LANGUAGE VARCHAR(20),
	SETCODE VARCHAR(20),
	TRANSLATION VARCHAR(20)
);
INSERT INTO SET_TRANSLATIONS VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE RULINGS (
	ID INTEGER,
	DATE DATE,
	TEXT VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO RULINGS VALUES (0, '1970-01-01', '2147483648', '2147483648');
-- ----------sql1------------
SELECT LEGALITIES.STATUS FROM CARDS INNER JOIN LEGALITIES ON CARDS.UUID = LEGALITIES.UUID WHERE CARDS.TYPES = 'ARTIFACT' AND CARDS.SIDE IS NULL AND LEGALITIES.FORMAT = 'VINTAGE';
-- ----------sql2------------
-- 2147483648
SELECT DISTINCT T2.STATUS FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.TYPE = 'ARTIFACT' AND T2.FORMAT = 'VINTAGE' AND T1.SIDE IS NULL;
",0.1479339999999999,SELECT LEGALITIES.STATUS FROM CARDS INNER JOIN LEGALITIES ON CARDS.UUID = LEGALITIES.UUID WHERE CARDS.TYPES = 'ARTIFACT' AND CARDS.SIDE IS NULL AND LEGALITIES.FORMAT = 'VINTAGE';,SELECT DISTINCT T2.STATUS FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.TYPE = 'ARTIFACT' AND T2.FORMAT = 'VINTAGE' AND T1.SIDE IS NULL,
1,346,True,,0.237182,"SELECT CARDS.ID, CARDS.ARTIST FROM CARDS INNER JOIN LEGALITIES ON CARDS.UUID = LEGALITIES.UUID WHERE (CARDS.POWER = '*' OR CARDS.POWER IS NULL) AND LEGALITIES.FORMAT = 'COMMANDER' AND LEGALITIES.STATUS = 'LEGAL'","SELECT T1.ID, T1.ARTIST FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T2.STATUS = 'LEGAL' AND T2.FORMAT = 'COMMANDER' AND (T1.POWER IS NULL OR T1.POWER = '*')",
1,347,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__CARD_ID`,,"SELECT CARDS.CARD_ID, CARDS.RULING_TEXT FROM CARDS WHERE CARDS.ARTIST = 'STEPHEN DANIELE' AND CARDS.HASCONTENTWARNING = 1","SELECT T1.ID, T2.TEXT, T1.HASCONTENTWARNING FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID WHERE T1.ARTIST = 'STEPHEN DANIELE'",
2,347,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__CARD_ID`,,"SELECT CARDS.CARD_ID, CARDS.RULING_TEXT FROM CARDS WHERE CARDS.ARTIST = 'STEPHEN DANIELE' AND CARDS.HASCONTENTWARNING = 1","SELECT T1.ID, T2.TEXT, T1.HASCONTENTWARNING FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID WHERE T1.ARTIST = 'STEPHEN DANIELE'",
3,347,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__CARD_ID`,,"SELECT CARDS.CARD_ID, CARDS.RULING_TEXT FROM CARDS WHERE CARDS.ARTIST = 'STEPHEN DANIELE' AND CARDS.HASCONTENTWARNING = 1","SELECT T1.ID, T2.TEXT, T1.HASCONTENTWARNING FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID WHERE T1.ARTIST = 'STEPHEN DANIELE'",
1,348,True,,0.1488509999999999,SELECT RULINGS.TEXT FROM CARDS INNER JOIN RULINGS ON CARDS.UUID = RULINGS.UUID WHERE CARDS.NAME = 'SUBLIME EPIPHANY' AND CARDS.NUMBER = '74S',SELECT T2.TEXT FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID WHERE T1.NAME = 'SUBLIME EPIPHANY' AND T1.NUMBER = '74S',
1,349,ERROR,AttributeError: 'GroupbyContext' object has no attribute 'groupby_ctx',,"SELECT CARDS.NAME, CARDS.ARTIST FROM CARDS INNER JOIN RULINGS ON CARDS.UUID = RULINGS.UUID WHERE CARDS.ISPROMO = 1 GROUP BY CARDS.UUID HAVING COUNT(RULINGS.UUID) = (SELECT MAX(COUNT(RULINGS.UUID)) FROM RULINGS GROUP BY RULINGS.UUID)","SELECT T1.NAME, T1.ARTIST, T1.ISPROMO FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID WHERE T1.ISPROMO = 1 AND T1.ARTIST = (SELECT ARTIST FROM CARDS WHERE ISPROMO = 1 GROUP BY ARTIST HAVING COUNT(DISTINCT UUID) = (SELECT MAX(COUNT_UUID) FROM ( SELECT COUNT(DISTINCT UUID) AS COUNT_UUID FROM CARDS WHERE ISPROMO = 1 GROUP BY ARTIST ))) LIMIT 1",
2,349,ERROR,AttributeError: 'GroupbyContext' object has no attribute 'groupby_ctx',,"SELECT CARDS.NAME, CARDS.ARTIST FROM CARDS INNER JOIN RULINGS ON CARDS.UUID = RULINGS.UUID WHERE CARDS.ISPROMO = 1 GROUP BY CARDS.UUID HAVING COUNT(RULINGS.UUID) = (SELECT MAX(COUNT(RULINGS.UUID)) FROM RULINGS GROUP BY RULINGS.UUID)","SELECT T1.NAME, T1.ARTIST, T1.ISPROMO FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID WHERE T1.ISPROMO = 1 AND T1.ARTIST = (SELECT ARTIST FROM CARDS WHERE ISPROMO = 1 GROUP BY ARTIST HAVING COUNT(DISTINCT UUID) = (SELECT MAX(COUNT_UUID) FROM ( SELECT COUNT(DISTINCT UUID) AS COUNT_UUID FROM CARDS WHERE ISPROMO = 1 GROUP BY ARTIST ))) LIMIT 1",
3,349,ERROR,AttributeError: 'GroupbyContext' object has no attribute 'groupby_ctx',,"SELECT CARDS.NAME, CARDS.ARTIST FROM CARDS INNER JOIN RULINGS ON CARDS.UUID = RULINGS.UUID WHERE CARDS.ISPROMO = 1 GROUP BY CARDS.UUID HAVING COUNT(RULINGS.UUID) = (SELECT MAX(COUNT(RULINGS.UUID)) FROM RULINGS GROUP BY RULINGS.UUID)","SELECT T1.NAME, T1.ARTIST, T1.ISPROMO FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID WHERE T1.ISPROMO = 1 AND T1.ARTIST = (SELECT ARTIST FROM CARDS WHERE ISPROMO = 1 GROUP BY ARTIST HAVING COUNT(DISTINCT UUID) = (SELECT MAX(COUNT_UUID) FROM ( SELECT COUNT(DISTINCT UUID) AS COUNT_UUID FROM CARDS WHERE ISPROMO = 1 GROUP BY ARTIST ))) LIMIT 1",
1,350,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute ALTERNATIVE_LANGUAGES`,,SELECT ALTERNATIVE_LANGUAGES FROM CARDS WHERE NAME = 'ANNUL' AND NUMBER = '29',SELECT T2.LANGUAGE FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T1.NAME = 'ANNUL' AND T1.NUMBER = 29,
2,350,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute ALTERNATIVE_LANGUAGES`,,SELECT ALTERNATIVE_LANGUAGES FROM CARDS WHERE NAME = 'ANNUL' AND NUMBER = '29',SELECT T2.LANGUAGE FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T1.NAME = 'ANNUL' AND T1.NUMBER = 29,
3,350,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute ALTERNATIVE_LANGUAGES`,,SELECT ALTERNATIVE_LANGUAGES FROM CARDS WHERE NAME = 'ANNUL' AND NUMBER = '29',SELECT T2.LANGUAGE FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T1.NAME = 'ANNUL' AND T1.NUMBER = 29,
1,351,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__ALTERNATIVE_LANGUAGE`,,SELECT CARDS.CARD_NAME FROM CARDS WHERE CARDS.ALTERNATIVE_LANGUAGE = 'JAPANESE';,SELECT T1.NAME FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T2.LANGUAGE = 'JAPANESE',
2,351,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__ALTERNATIVE_LANGUAGE`,,SELECT CARDS.CARD_NAME FROM CARDS WHERE CARDS.ALTERNATIVE_LANGUAGE = 'JAPANESE';,SELECT T1.NAME FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T2.LANGUAGE = 'JAPANESE',
3,351,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__ALTERNATIVE_LANGUAGE`,,SELECT CARDS.CARD_NAME FROM CARDS WHERE CARDS.ALTERNATIVE_LANGUAGE = 'JAPANESE';,SELECT T1.NAME FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T2.LANGUAGE = 'JAPANESE',
1,352,ERROR,"CorrelatedQueryError: Not supported feature: CorrelatedQueryError {'select': {'value': {'count': '*'}}, 'from': 'CARDS', 'where': {'eq': ['LANGUAGE', {'literal': 'CHINESE SIMPLIFIED'}]}}",,SELECT (CAST((SELECT COUNT(*) FROM CARDS WHERE LANGUAGE = 'CHINESE SIMPLIFIED') AS REAL) / COUNT(*) * 100) AS PERCENTAGE FROM CARDS,SELECT CAST(SUM(CASE WHEN T2.LANGUAGE = 'CHINESE SIMPLIFIED' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID,
2,352,ERROR,"CorrelatedQueryError: Not supported feature: CorrelatedQueryError {'select': {'value': {'count': '*'}}, 'from': 'CARDS', 'where': {'eq': ['LANGUAGE', {'literal': 'CHINESE SIMPLIFIED'}]}}",,SELECT (CAST((SELECT COUNT(*) FROM CARDS WHERE LANGUAGE = 'CHINESE SIMPLIFIED') AS REAL) / COUNT(*) * 100) AS PERCENTAGE FROM CARDS,SELECT CAST(SUM(CASE WHEN T2.LANGUAGE = 'CHINESE SIMPLIFIED' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID,
3,352,ERROR,"CorrelatedQueryError: Not supported feature: CorrelatedQueryError {'select': {'value': {'count': '*'}}, 'from': 'CARDS', 'where': {'eq': ['LANGUAGE', {'literal': 'CHINESE SIMPLIFIED'}]}}",,SELECT (CAST((SELECT COUNT(*) FROM CARDS WHERE LANGUAGE = 'CHINESE SIMPLIFIED') AS REAL) / COUNT(*) * 100) AS PERCENTAGE FROM CARDS,SELECT CAST(SUM(CASE WHEN T2.LANGUAGE = 'CHINESE SIMPLIFIED' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID,
1,353,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__SETNAME`,,"SELECT SETS.SETNAME, SETS.TOTALSETSIZE FROM SETS INNER JOIN SET_TRANSLATIONS ON SETS.CODE = SET_TRANSLATIONS.SETCODE WHERE SET_TRANSLATIONS.LANGUAGE = 'ITALIAN';","SELECT T1.NAME, T1.TOTALSETSIZE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T2.LANGUAGE = 'ITALIAN'",
2,353,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__SETNAME`,,"SELECT SETS.SETNAME, SETS.TOTALSETSIZE FROM SETS INNER JOIN SET_TRANSLATIONS ON SETS.CODE = SET_TRANSLATIONS.SETCODE WHERE SET_TRANSLATIONS.LANGUAGE = 'ITALIAN';","SELECT T1.NAME, T1.TOTALSETSIZE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T2.LANGUAGE = 'ITALIAN'",
3,353,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__SETNAME`,,"SELECT SETS.SETNAME, SETS.TOTALSETSIZE FROM SETS INNER JOIN SET_TRANSLATIONS ON SETS.CODE = SET_TRANSLATIONS.SETCODE WHERE SET_TRANSLATIONS.LANGUAGE = 'ITALIAN';","SELECT T1.NAME, T1.TOTALSETSIZE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T2.LANGUAGE = 'ITALIAN'",
1,354,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__ART`,,SELECT COUNT(DISTINCT CARDS.ART) FROM CARDS WHERE CARDS.ARTIST = 'AARON BOYD',SELECT COUNT(TYPE) FROM CARDS WHERE ARTIST = 'AARON BOYD',
2,354,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__ART`,,SELECT COUNT(DISTINCT CARDS.ART) FROM CARDS WHERE CARDS.ARTIST = 'AARON BOYD',SELECT COUNT(TYPE) FROM CARDS WHERE ARTIST = 'AARON BOYD',
3,354,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__ART`,,SELECT COUNT(DISTINCT CARDS.ART) FROM CARDS WHERE CARDS.ARTIST = 'AARON BOYD',SELECT COUNT(TYPE) FROM CARDS WHERE ARTIST = 'AARON BOYD',
1,355,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__KEYWORD`,,SELECT CARDS.KEYWORD FROM CARDS WHERE CARDS.NAME = 'ANGEL OF MERCY';,SELECT DISTINCT KEYWORDS FROM CARDS WHERE NAME = 'ANGEL OF MERCY',
2,355,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__KEYWORD`,,SELECT CARDS.KEYWORD FROM CARDS WHERE CARDS.NAME = 'ANGEL OF MERCY';,SELECT DISTINCT KEYWORDS FROM CARDS WHERE NAME = 'ANGEL OF MERCY',
3,355,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__KEYWORD`,,SELECT CARDS.KEYWORD FROM CARDS WHERE CARDS.NAME = 'ANGEL OF MERCY';,SELECT DISTINCT KEYWORDS FROM CARDS WHERE NAME = 'ANGEL OF MERCY',
1,356,True,,0.051739,SELECT COUNT(*) FROM CARDS WHERE POWER = '*';,SELECT COUNT(*) FROM CARDS WHERE POWER = '*',
1,357,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CARDS (
	ID INTEGER,
	ARTIST VARCHAR(20),
	ASCIINAME VARCHAR(20),
	AVAILABILITY VARCHAR(20),
	BORDERCOLOR VARCHAR(20),
	CARDKINGDOMFOILID VARCHAR(20),
	CARDKINGDOMID VARCHAR(20),
	COLORIDENTITY VARCHAR(20),
	COLORINDICATOR VARCHAR(20),
	COLORS VARCHAR(20),
	CONVERTEDMANACOST INTEGER,
	DUELDECK VARCHAR(20),
	EDHRECRANK INTEGER,
	FACECONVERTEDMANACOST INTEGER,
	FACENAME VARCHAR(20),
	FLAVORNAME VARCHAR(20),
	FLAVORTEXT VARCHAR(20),
	FRAMEEFFECTS VARCHAR(20),
	FRAMEVERSION VARCHAR(20),
	HAND VARCHAR(20),
	HASALTERNATIVEDECKLIMIT INTEGER,
	HASCONTENTWARNING INTEGER,
	HASFOIL INTEGER,
	HASNONSFOIL INTEGER,
	ISALTERNATIVE INTEGER,
	ISFULLART INTEGER,
	ISONLINEONLY INTEGER,
	ISOVERSIZED INTEGER,
	ISPROMO INTEGER,
	ISREPRINT INTEGER,
	ISRESERVED INTEGER,
	ISSTARTER INTEGER,
	ISSTORYSPOTLIGHT INTEGER,
	ISTEXTLESS INTEGER,
	ISTIMESHIFTED INTEGER,
	KEYWORDS VARCHAR(20),
	LAYOUT VARCHAR(20),
	LEADERSHIPSKILLS VARCHAR(20),
	LIFE VARCHAR(20),
	LOYALTY VARCHAR(20),
	MANACOST VARCHAR(20),
	MCMID VARCHAR(20),
	MCMMETAID VARCHAR(20),
	MTGARENAID VARCHAR(20),
	MTGJSONV4ID VARCHAR(20),
	MTGOFOILID VARCHAR(20),
	MTGOID VARCHAR(20),
	MULTIVERSEID VARCHAR(20),
	NAME VARCHAR(20),
	NUMBER VARCHAR(20),
	ORIGINALRELEASEDATE VARCHAR(20),
	ORIGINALTEXT VARCHAR(20),
	ORIGINALTYPE VARCHAR(20),
	OTHERFACEIDS VARCHAR(20),
	POWER VARCHAR(20),
	PRINTINGS VARCHAR(20),
	PROMOTYPES VARCHAR(20),
	PURCHASEURLS VARCHAR(20),
	RARITY VARCHAR(20),
	SCRYFALLID VARCHAR(20),
	SCRYFALLILLUSTRATIONID VARCHAR(20),
	SCRYFALLORACLEID VARCHAR(20),
	SETCODE VARCHAR(20),
	SIDE VARCHAR(20),
	SUBTYPES VARCHAR(20),
	SUPERTYPES VARCHAR(20),
	TCGPLAYERPRODUCTID VARCHAR(20),
	TEXT VARCHAR(20),
	TOUGHNESS VARCHAR(20),
	TYPE VARCHAR(20),
	TYPES VARCHAR(20),
	UUID VARCHAR(20),
	VARIATIONS VARCHAR(20),
	WATERMARK VARCHAR(20)
);
INSERT INTO CARDS VALUES (0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '2147483648', 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 'DURESS', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', NULL, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE FOREIGN_DATA (
	ID INTEGER,
	FLAVORTEXT VARCHAR(20),
	LANGUAGE VARCHAR(20),
	MULTIVERSEID INTEGER,
	NAME VARCHAR(20),
	TEXT VARCHAR(20),
	TYPE VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO FOREIGN_DATA VALUES (0, '2147483648', '2147483648', 0, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE LEGALITIES (
	ID INTEGER,
	FORMAT VARCHAR(20),
	STATUS VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO LEGALITIES VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE SETS (
	ID INTEGER,
	BASESETSIZE INTEGER,
	BLOCK VARCHAR(20),
	BOOSTER VARCHAR(20),
	CODE VARCHAR(20),
	ISFOILONLY INTEGER,
	ISFOREIGNONLY INTEGER,
	ISNONFOILONLY INTEGER,
	ISONLINEONLY INTEGER,
	ISPARTIALPREVIEW INTEGER,
	KEYRUNE_CODE VARCHAR(20),
	MCMID INTEGER,
	MCMIDEXTRAS INTEGER,
	MCMNAME VARCHAR(20),
	MTGOCODE VARCHAR(20),
	NAME VARCHAR(20),
	PARENTCODE VARCHAR(20),
	RELEASEDATE DATE,
	TCGPLAYERGROUPID INTEGER,
	TOTALSETSIZE INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO SETS VALUES (0, 0, '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, '2147483648', 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', 0, 0, '2147483648');
CREATE TABLE SET_TRANSLATIONS (
	ID INTEGER,
	LANGUAGE VARCHAR(20),
	SETCODE VARCHAR(20),
	TRANSLATION VARCHAR(20)
);
INSERT INTO SET_TRANSLATIONS VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE RULINGS (
	ID INTEGER,
	DATE DATE,
	TEXT VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO RULINGS VALUES (0, '1970-01-01', '2147483648', '2147483648');
-- ----------sql1------------
-- NULL
SELECT PROMOTYPES FROM CARDS WHERE NAME = 'DURESS';
-- ----------sql2------------
SELECT PROMOTYPES FROM CARDS WHERE NAME = 'DURESS' AND PROMOTYPES IS NOT NULL;
",0.0548,SELECT PROMOTYPES FROM CARDS WHERE NAME = 'DURESS';,SELECT PROMOTYPES FROM CARDS WHERE NAME = 'DURESS' AND PROMOTYPES IS NOT NULL,
1,358,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__BORDER_COLOR`,,SELECT CARDS.BORDER_COLOR FROM CARDS WHERE CARDS.NAME = 'ANCESTOR''S CHOSEN',SELECT DISTINCT BORDERCOLOR FROM CARDS WHERE NAME = 'ANCESTOR''S CHOSEN',
2,358,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__BORDER_COLOR`,,SELECT CARDS.BORDER_COLOR FROM CARDS WHERE CARDS.NAME = 'ANCESTOR''S CHOSEN',SELECT DISTINCT BORDERCOLOR FROM CARDS WHERE NAME = 'ANCESTOR''S CHOSEN',
3,358,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__BORDER_COLOR`,,SELECT CARDS.BORDER_COLOR FROM CARDS WHERE CARDS.NAME = 'ANCESTOR''S CHOSEN',SELECT DISTINCT BORDERCOLOR FROM CARDS WHERE NAME = 'ANCESTOR''S CHOSEN',
1,359,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT CARDS.ORIGINALTYPE FROM CARDS WHERE CARDS.NAME = 'ANCESTOR'S CHOSEN';`,,SELECT CARDS.ORIGINALTYPE FROM CARDS WHERE CARDS.NAME = 'ANCESTOR'S CHOSEN';,SELECT ORIGINALTYPE FROM CARDS WHERE NAME = 'ANCESTOR''S CHOSEN' AND ORIGINALTYPE IS NOT NULL,
2,359,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT CARDS.ORIGINALTYPE FROM CARDS WHERE CARDS.NAME = 'ANCESTOR'S CHOSEN';`,,SELECT CARDS.ORIGINALTYPE FROM CARDS WHERE CARDS.NAME = 'ANCESTOR'S CHOSEN';,SELECT ORIGINALTYPE FROM CARDS WHERE NAME = 'ANCESTOR''S CHOSEN' AND ORIGINALTYPE IS NOT NULL,
3,359,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT CARDS.ORIGINALTYPE FROM CARDS WHERE CARDS.NAME = 'ANCESTOR'S CHOSEN';`,,SELECT CARDS.ORIGINALTYPE FROM CARDS WHERE CARDS.NAME = 'ANCESTOR'S CHOSEN';,SELECT ORIGINALTYPE FROM CARDS WHERE NAME = 'ANCESTOR''S CHOSEN' AND ORIGINALTYPE IS NOT NULL,
1,360,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__LANGUAGE`,,SELECT SETS.LANGUAGE FROM CARDS INNER JOIN SETS ON CARDS.SETCODE = SETS.CODE WHERE CARDS.NAME = 'ANGEL OF MERCY';,SELECT LANGUAGE FROM SET_TRANSLATIONS WHERE ID IN ( SELECT ID FROM CARDS WHERE NAME = 'ANGEL OF MERCY' ),
2,360,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__LANGUAGE`,,SELECT SETS.LANGUAGE FROM CARDS INNER JOIN SETS ON CARDS.SETCODE = SETS.CODE WHERE CARDS.NAME = 'ANGEL OF MERCY';,SELECT LANGUAGE FROM SET_TRANSLATIONS WHERE ID IN ( SELECT ID FROM CARDS WHERE NAME = 'ANGEL OF MERCY' ),
3,360,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__LANGUAGE`,,SELECT SETS.LANGUAGE FROM CARDS INNER JOIN SETS ON CARDS.SETCODE = SETS.CODE WHERE CARDS.NAME = 'ANGEL OF MERCY';,SELECT LANGUAGE FROM SET_TRANSLATIONS WHERE ID IN ( SELECT ID FROM CARDS WHERE NAME = 'ANGEL OF MERCY' ),
1,361,True,,0.151821,SELECT COUNT(*) FROM LEGALITIES INNER JOIN CARDS ON LEGALITIES.UUID = CARDS.UUID WHERE LEGALITIES.STATUS = 'RESTRICTED' AND CARDS.ISTEXTLESS = 0,SELECT COUNT(DISTINCT T1.ID) FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T2.STATUS = 'RESTRICTED' AND T1.ISTEXTLESS = 0,
1,362,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CARDS (
	ID INTEGER,
	ARTIST VARCHAR(20),
	ASCIINAME VARCHAR(20),
	AVAILABILITY VARCHAR(20),
	BORDERCOLOR VARCHAR(20),
	CARDKINGDOMFOILID VARCHAR(20),
	CARDKINGDOMID VARCHAR(20),
	COLORIDENTITY VARCHAR(20),
	COLORINDICATOR VARCHAR(20),
	COLORS VARCHAR(20),
	CONVERTEDMANACOST INTEGER,
	DUELDECK VARCHAR(20),
	EDHRECRANK INTEGER,
	FACECONVERTEDMANACOST INTEGER,
	FACENAME VARCHAR(20),
	FLAVORNAME VARCHAR(20),
	FLAVORTEXT VARCHAR(20),
	FRAMEEFFECTS VARCHAR(20),
	FRAMEVERSION VARCHAR(20),
	HAND VARCHAR(20),
	HASALTERNATIVEDECKLIMIT INTEGER,
	HASCONTENTWARNING INTEGER,
	HASFOIL INTEGER,
	HASNONSFOIL INTEGER,
	ISALTERNATIVE INTEGER,
	ISFULLART INTEGER,
	ISONLINEONLY INTEGER,
	ISOVERSIZED INTEGER,
	ISPROMO INTEGER,
	ISREPRINT INTEGER,
	ISRESERVED INTEGER,
	ISSTARTER INTEGER,
	ISSTORYSPOTLIGHT INTEGER,
	ISTEXTLESS INTEGER,
	ISTIMESHIFTED INTEGER,
	KEYWORDS VARCHAR(20),
	LAYOUT VARCHAR(20),
	LEADERSHIPSKILLS VARCHAR(20),
	LIFE VARCHAR(20),
	LOYALTY VARCHAR(20),
	MANACOST VARCHAR(20),
	MCMID VARCHAR(20),
	MCMMETAID VARCHAR(20),
	MTGARENAID VARCHAR(20),
	MTGJSONV4ID VARCHAR(20),
	MTGOFOILID VARCHAR(20),
	MTGOID VARCHAR(20),
	MULTIVERSEID VARCHAR(20),
	NAME VARCHAR(20),
	NUMBER VARCHAR(20),
	ORIGINALRELEASEDATE VARCHAR(20),
	ORIGINALTEXT VARCHAR(20),
	ORIGINALTYPE VARCHAR(20),
	OTHERFACEIDS VARCHAR(20),
	POWER VARCHAR(20),
	PRINTINGS VARCHAR(20),
	PROMOTYPES VARCHAR(20),
	PURCHASEURLS VARCHAR(20),
	RARITY VARCHAR(20),
	SCRYFALLID VARCHAR(20),
	SCRYFALLILLUSTRATIONID VARCHAR(20),
	SCRYFALLORACLEID VARCHAR(20),
	SETCODE VARCHAR(20),
	SIDE VARCHAR(20),
	SUBTYPES VARCHAR(20),
	SUPERTYPES VARCHAR(20),
	TCGPLAYERPRODUCTID VARCHAR(20),
	TEXT VARCHAR(20),
	TOUGHNESS VARCHAR(20),
	TYPE VARCHAR(20),
	TYPES VARCHAR(20),
	UUID VARCHAR(20),
	VARIATIONS VARCHAR(20),
	WATERMARK VARCHAR(20)
);
INSERT INTO CARDS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 3, '2147483648', 4, 5, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 'CONDEMN', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE FOREIGN_DATA (
	ID INTEGER,
	FLAVORTEXT VARCHAR(20),
	LANGUAGE VARCHAR(20),
	MULTIVERSEID INTEGER,
	NAME VARCHAR(20),
	TEXT VARCHAR(20),
	TYPE VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO FOREIGN_DATA VALUES (0, '2147483648', '2147483648', 0, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE LEGALITIES (
	ID INTEGER,
	FORMAT VARCHAR(20),
	STATUS VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO LEGALITIES VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE SETS (
	ID INTEGER,
	BASESETSIZE INTEGER,
	BLOCK VARCHAR(20),
	BOOSTER VARCHAR(20),
	CODE VARCHAR(20),
	ISFOILONLY INTEGER,
	ISFOREIGNONLY INTEGER,
	ISNONFOILONLY INTEGER,
	ISONLINEONLY INTEGER,
	ISPARTIALPREVIEW INTEGER,
	KEYRUNE_CODE VARCHAR(20),
	MCMID INTEGER,
	MCMIDEXTRAS INTEGER,
	MCMNAME VARCHAR(20),
	MTGOCODE VARCHAR(20),
	NAME VARCHAR(20),
	PARENTCODE VARCHAR(20),
	RELEASEDATE DATE,
	TCGPLAYERGROUPID INTEGER,
	TOTALSETSIZE INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO SETS VALUES (0, 0, '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, '2147483648', 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', 0, 0, '2147483648');
CREATE TABLE SET_TRANSLATIONS (
	ID INTEGER,
	LANGUAGE VARCHAR(20),
	SETCODE VARCHAR(20),
	TRANSLATION VARCHAR(20)
);
INSERT INTO SET_TRANSLATIONS VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE RULINGS (
	ID INTEGER,
	DATE DATE,
	TEXT VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO RULINGS VALUES (21, '1970-01-01', '2147483649', '2147483648');
-- ----------sql1------------
-- 2147483648
SELECT CARDS.TEXT FROM CARDS WHERE CARDS.NAME = 'CONDEMN';
-- ----------sql2------------
-- 2147483649
SELECT T2.TEXT FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID WHERE T1.NAME = 'CONDEMN';
",0.088677,SELECT CARDS.TEXT FROM CARDS WHERE CARDS.NAME = 'CONDEMN',SELECT T2.TEXT FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID WHERE T1.NAME = 'CONDEMN',
1,363,True,,0.154651,SELECT COUNT(*) FROM LEGALITIES INNER JOIN CARDS ON LEGALITIES.UUID = CARDS.UUID WHERE LEGALITIES.STATUS = 'RESTRICTED' AND CARDS.ISSTARTER = 1,SELECT COUNT(DISTINCT T1.ID) FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T2.STATUS = 'RESTRICTED' AND T1.ISSTARTER = 1,
1,364,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARD__NAME`,,SELECT CARD.STATUS FROM CARDS WHERE CARD.NAME = 'CLOUDCHASER EAGLE',SELECT DISTINCT T2.STATUS FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.NAME = 'CLOUDCHASER EAGLE',
2,364,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARD__NAME`,,SELECT CARD.STATUS FROM CARDS WHERE CARD.NAME = 'CLOUDCHASER EAGLE',SELECT DISTINCT T2.STATUS FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.NAME = 'CLOUDCHASER EAGLE',
3,364,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARD__NAME`,,SELECT CARD.STATUS FROM CARDS WHERE CARD.NAME = 'CLOUDCHASER EAGLE',SELECT DISTINCT T2.STATUS FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.NAME = 'CLOUDCHASER EAGLE',
1,365,True,,0.0915,SELECT CARDS.TYPE FROM CARDS WHERE CARDS.NAME = 'BENALISH KNIGHT';,SELECT DISTINCT T1.TYPE FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T1.NAME = 'BENALISH KNIGHT',
1,366,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FORMAT`,,SELECT CARDS.FORMAT FROM CARDS WHERE CARDS.NAME = 'BENALISH KNIGHT';,SELECT T2.FORMAT FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.NAME = 'BENALISH KNIGHT',
2,366,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FORMAT`,,SELECT CARDS.FORMAT FROM CARDS WHERE CARDS.NAME = 'BENALISH KNIGHT';,SELECT T2.FORMAT FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.NAME = 'BENALISH KNIGHT',
3,366,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FORMAT`,,SELECT CARDS.FORMAT FROM CARDS WHERE CARDS.NAME = 'BENALISH KNIGHT';,SELECT T2.FORMAT FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.NAME = 'BENALISH KNIGHT',
1,367,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.ARTIST FROM CARDS WHERE CARDS.LANGUAGE = 'PHYREXIAN',SELECT T1.ARTIST FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T2.LANGUAGE = 'PHYREXIAN',
2,367,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.ARTIST FROM CARDS WHERE CARDS.LANGUAGE = 'PHYREXIAN',SELECT T1.ARTIST FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T2.LANGUAGE = 'PHYREXIAN',
3,367,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.ARTIST FROM CARDS WHERE CARDS.LANGUAGE = 'PHYREXIAN',SELECT T1.ARTIST FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T2.LANGUAGE = 'PHYREXIAN',
1,368,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(ID) FROM CARDS WHERE BORDERCOLOR = 'BORDERLESS') AS REAL) / COUNT(ID)) * 100 FROM CARDS,SELECT CAST(SUM(CASE WHEN BORDERCOLOR = 'BORDERLESS' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM CARDS,
2,368,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(ID) FROM CARDS WHERE BORDERCOLOR = 'BORDERLESS') AS REAL) / COUNT(ID)) * 100 FROM CARDS,SELECT CAST(SUM(CASE WHEN BORDERCOLOR = 'BORDERLESS' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM CARDS,
3,368,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(ID) FROM CARDS WHERE BORDERCOLOR = 'BORDERLESS') AS REAL) / COUNT(ID)) * 100 FROM CARDS,SELECT CAST(SUM(CASE WHEN BORDERCOLOR = 'BORDERLESS' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM CARDS,
1,369,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT COUNT(*) FROM CARDS WHERE LANGUAGE = 'GERMAN' AND ISREPRINT = 1,SELECT COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T2.LANGUAGE = 'GERMAN' AND T1.ISREPRINT = 1,
2,369,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT COUNT(*) FROM CARDS WHERE LANGUAGE = 'GERMAN' AND ISREPRINT = 1,SELECT COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T2.LANGUAGE = 'GERMAN' AND T1.ISREPRINT = 1,
3,369,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT COUNT(*) FROM CARDS WHERE LANGUAGE = 'GERMAN' AND ISREPRINT = 1,SELECT COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T2.LANGUAGE = 'GERMAN' AND T1.ISREPRINT = 1,
1,370,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT COUNT(*) FROM CARDS WHERE BORDERCOLOR = 'BORDERLESS' AND LANGUAGE = 'RUSSIAN',SELECT COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T1.BORDERCOLOR = 'BORDERLESS' AND T2.LANGUAGE = 'RUSSIAN',
2,370,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT COUNT(*) FROM CARDS WHERE BORDERCOLOR = 'BORDERLESS' AND LANGUAGE = 'RUSSIAN',SELECT COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T1.BORDERCOLOR = 'BORDERLESS' AND T2.LANGUAGE = 'RUSSIAN',
3,370,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT COUNT(*) FROM CARDS WHERE BORDERCOLOR = 'BORDERLESS' AND LANGUAGE = 'RUSSIAN',SELECT COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T1.BORDERCOLOR = 'BORDERLESS' AND T2.LANGUAGE = 'RUSSIAN',
1,371,ERROR,"CorrelatedQueryError: Not supported feature: CorrelatedQueryError {'select': {'value': {'count': '*'}}, 'from': 'CARDS', 'where': {'and': [{'eq': ['ISSTORYSPOTLIGHT', 1]}, {'eq': ['LANGUAGE', {'literal': 'FRENCH'}]}]}}",,SELECT CAST((SELECT COUNT(*) FROM CARDS WHERE ISSTORYSPOTLIGHT = 1 AND LANGUAGE = 'FRENCH') AS REAL) * 100 / (SELECT COUNT(*) FROM CARDS WHERE ISSTORYSPOTLIGHT = 1) AS PERCENTAGE FROM CARDS LIMIT 1,SELECT CAST(SUM(CASE WHEN T2.LANGUAGE = 'FRENCH' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T1.ISSTORYSPOTLIGHT = 1,
2,371,ERROR,"CorrelatedQueryError: Not supported feature: CorrelatedQueryError {'select': {'value': {'count': '*'}}, 'from': 'CARDS', 'where': {'and': [{'eq': ['ISSTORYSPOTLIGHT', 1]}, {'eq': ['LANGUAGE', {'literal': 'FRENCH'}]}]}}",,SELECT CAST((SELECT COUNT(*) FROM CARDS WHERE ISSTORYSPOTLIGHT = 1 AND LANGUAGE = 'FRENCH') AS REAL) * 100 / (SELECT COUNT(*) FROM CARDS WHERE ISSTORYSPOTLIGHT = 1) AS PERCENTAGE FROM CARDS LIMIT 1,SELECT CAST(SUM(CASE WHEN T2.LANGUAGE = 'FRENCH' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T1.ISSTORYSPOTLIGHT = 1,
3,371,ERROR,"CorrelatedQueryError: Not supported feature: CorrelatedQueryError {'select': {'value': {'count': '*'}}, 'from': 'CARDS', 'where': {'and': [{'eq': ['ISSTORYSPOTLIGHT', 1]}, {'eq': ['LANGUAGE', {'literal': 'FRENCH'}]}]}}",,SELECT CAST((SELECT COUNT(*) FROM CARDS WHERE ISSTORYSPOTLIGHT = 1 AND LANGUAGE = 'FRENCH') AS REAL) * 100 / (SELECT COUNT(*) FROM CARDS WHERE ISSTORYSPOTLIGHT = 1) AS PERCENTAGE FROM CARDS LIMIT 1,SELECT CAST(SUM(CASE WHEN T2.LANGUAGE = 'FRENCH' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T1.ISSTORYSPOTLIGHT = 1,
1,372,True,,0.052493,SELECT COUNT(*) FROM CARDS WHERE TOUGHNESS = '99';,SELECT COUNT(ID) FROM CARDS WHERE TOUGHNESS = 99,
1,373,True,,0.0473139999999999,SELECT CARDS.NAME FROM CARDS WHERE CARDS.ARTIST = 'AARON BOYD';,SELECT DISTINCT NAME FROM CARDS WHERE ARTIST = 'AARON BOYD',
1,374,True,,0.072582,SELECT COUNT(*) FROM CARDS WHERE BORDERCOLOR = 'BLACK' AND AVAILABILITY = 'MTGO',SELECT COUNT(ID) FROM CARDS WHERE AVAILABILITY = 'MTGO' AND BORDERCOLOR = 'BLACK',
1,375,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__CARD_ID`,,SELECT CARDS.CARD_ID FROM CARDS WHERE CARDS.CONVERTEDMANACOST = 0,SELECT ID FROM CARDS WHERE CONVERTEDMANACOST = 0,
2,375,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__CARD_ID`,,SELECT CARDS.CARD_ID FROM CARDS WHERE CARDS.CONVERTEDMANACOST = 0,SELECT ID FROM CARDS WHERE CONVERTEDMANACOST = 0,
3,375,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__CARD_ID`,,SELECT CARDS.CARD_ID FROM CARDS WHERE CARDS.CONVERTEDMANACOST = 0,SELECT ID FROM CARDS WHERE CONVERTEDMANACOST = 0,
1,376,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__KEYWORD`,,SELECT CARDS.CARD_LAYOUT FROM CARDS WHERE CARDS.KEYWORD = 'FLYING';,SELECT LAYOUT FROM CARDS WHERE KEYWORDS = 'FLYING',
2,376,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__KEYWORD`,,SELECT CARDS.CARD_LAYOUT FROM CARDS WHERE CARDS.KEYWORD = 'FLYING';,SELECT LAYOUT FROM CARDS WHERE KEYWORDS = 'FLYING',
3,376,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__KEYWORD`,,SELECT CARDS.CARD_LAYOUT FROM CARDS WHERE CARDS.KEYWORD = 'FLYING';,SELECT LAYOUT FROM CARDS WHERE KEYWORDS = 'FLYING',
1,377,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute ORIGINAL_TYPE`,,SELECT COUNT(*) FROM CARDS WHERE ORIGINAL_TYPE = 'SUMMON - ANGEL' AND SUBTYPES != 'ANGEL',SELECT COUNT(ID) FROM CARDS WHERE ORIGINALTYPE = 'SUMMON - ANGEL' AND SUBTYPES != 'ANGEL',
2,377,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute ORIGINAL_TYPE`,,SELECT COUNT(*) FROM CARDS WHERE ORIGINAL_TYPE = 'SUMMON - ANGEL' AND SUBTYPES != 'ANGEL',SELECT COUNT(ID) FROM CARDS WHERE ORIGINALTYPE = 'SUMMON - ANGEL' AND SUBTYPES != 'ANGEL',
3,377,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute ORIGINAL_TYPE`,,SELECT COUNT(*) FROM CARDS WHERE ORIGINAL_TYPE = 'SUMMON - ANGEL' AND SUBTYPES != 'ANGEL',SELECT COUNT(ID) FROM CARDS WHERE ORIGINALTYPE = 'SUMMON - ANGEL' AND SUBTYPES != 'ANGEL',
1,378,False,,,"SELECT CARDKINGDOMFOILID, CARDKINGDOMID FROM CARDS WHERE CARDKINGDOMFOILID IS NOT NULL AND CARDKINGDOMID IS NOT NULL;",SELECT ID FROM CARDS WHERE CARDKINGDOMID IS NOT NULL AND CARDKINGDOMFOILID IS NOT NULL,
1,379,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__CARD_ID`,,SELECT CARDS.CARD_ID FROM CARDS WHERE CARDS.DUELDECK = 'A';,SELECT ID FROM CARDS WHERE DUELDECK = 'A',
2,379,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__CARD_ID`,,SELECT CARDS.CARD_ID FROM CARDS WHERE CARDS.DUELDECK = 'A';,SELECT ID FROM CARDS WHERE DUELDECK = 'A',
3,379,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__CARD_ID`,,SELECT CARDS.CARD_ID FROM CARDS WHERE CARDS.DUELDECK = 'A';,SELECT ID FROM CARDS WHERE DUELDECK = 'A',
1,380,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FRAME_VERSION`,,SELECT CARDS.EDHRECRANK FROM CARDS WHERE CARDS.FRAME_VERSION = '2015',SELECT EDHRECRANK FROM CARDS WHERE FRAMEVERSION = 2015,
2,380,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FRAME_VERSION`,,SELECT CARDS.EDHRECRANK FROM CARDS WHERE CARDS.FRAME_VERSION = '2015',SELECT EDHRECRANK FROM CARDS WHERE FRAMEVERSION = 2015,
3,380,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FRAME_VERSION`,,SELECT CARDS.EDHRECRANK FROM CARDS WHERE CARDS.FRAME_VERSION = '2015',SELECT EDHRECRANK FROM CARDS WHERE FRAMEVERSION = 2015,
1,381,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.ARTIST_NAME FROM CARDS WHERE CARDS.LANGUAGE = 'CHINESE SIMPLIFIED',SELECT T1.ARTIST FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T2.LANGUAGE = 'CHINESE SIMPLIFIED',
2,381,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.ARTIST_NAME FROM CARDS WHERE CARDS.LANGUAGE = 'CHINESE SIMPLIFIED',SELECT T1.ARTIST FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T2.LANGUAGE = 'CHINESE SIMPLIFIED',
3,381,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.ARTIST_NAME FROM CARDS WHERE CARDS.LANGUAGE = 'CHINESE SIMPLIFIED',SELECT T1.ARTIST FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T2.LANGUAGE = 'CHINESE SIMPLIFIED',
1,382,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.CARD_NAME FROM CARDS WHERE CARDS.AVAILABILITY = 'PAPER' AND CARDS.LANGUAGE = 'JAPANESE',SELECT T1.NAME FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T1.AVAILABILITY = 'PAPER' AND T2.LANGUAGE = 'JAPANESE',
2,382,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.CARD_NAME FROM CARDS WHERE CARDS.AVAILABILITY = 'PAPER' AND CARDS.LANGUAGE = 'JAPANESE',SELECT T1.NAME FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T1.AVAILABILITY = 'PAPER' AND T2.LANGUAGE = 'JAPANESE',
3,382,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.CARD_NAME FROM CARDS WHERE CARDS.AVAILABILITY = 'PAPER' AND CARDS.LANGUAGE = 'JAPANESE',SELECT T1.NAME FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T1.AVAILABILITY = 'PAPER' AND T2.LANGUAGE = 'JAPANESE',
1,383,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute STATUS`,,SELECT COUNT(*) FROM CARDS WHERE STATUS = 'BANNED' AND BORDERCOLOR = 'WHITE',SELECT COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T2.STATUS = 'BANNED' AND T1.BORDERCOLOR = 'WHITE',
2,383,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute STATUS`,,SELECT COUNT(*) FROM CARDS WHERE STATUS = 'BANNED' AND BORDERCOLOR = 'WHITE',SELECT COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T2.STATUS = 'BANNED' AND T1.BORDERCOLOR = 'WHITE',
3,383,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute STATUS`,,SELECT COUNT(*) FROM CARDS WHERE STATUS = 'BANNED' AND BORDERCOLOR = 'WHITE',SELECT COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T2.STATUS = 'BANNED' AND T1.BORDERCOLOR = 'WHITE',
1,384,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FORMAT`,,"SELECT CARDS.UUID, FOREIGN_DATA.LANGUAGE FROM CARDS INNER JOIN FOREIGN_DATA ON CARDS.UUID = FOREIGN_DATA.UUID WHERE CARDS.FORMAT = 'LEGACY'","SELECT T1.UUID, T3.LANGUAGE FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID INNER JOIN FOREIGN_DATA AS T3 ON T1.UUID = T3.UUID WHERE T2.FORMAT = 'LEGACY'",
2,384,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FORMAT`,,"SELECT CARDS.UUID, FOREIGN_DATA.LANGUAGE FROM CARDS INNER JOIN FOREIGN_DATA ON CARDS.UUID = FOREIGN_DATA.UUID WHERE CARDS.FORMAT = 'LEGACY'","SELECT T1.UUID, T3.LANGUAGE FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID INNER JOIN FOREIGN_DATA AS T3 ON T1.UUID = T3.UUID WHERE T2.FORMAT = 'LEGACY'",
3,384,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FORMAT`,,"SELECT CARDS.UUID, FOREIGN_DATA.LANGUAGE FROM CARDS INNER JOIN FOREIGN_DATA ON CARDS.UUID = FOREIGN_DATA.UUID WHERE CARDS.FORMAT = 'LEGACY'","SELECT T1.UUID, T3.LANGUAGE FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID INNER JOIN FOREIGN_DATA AS T3 ON T1.UUID = T3.UUID WHERE T2.FORMAT = 'LEGACY'",
1,385,True,,0.127358,SELECT RULINGS.TEXT FROM RULINGS INNER JOIN CARDS ON RULINGS.UUID = CARDS.UUID WHERE CARDS.NAME = 'BEACON OF IMMORTALITY';,SELECT T2.TEXT FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID WHERE T1.NAME = 'BEACON OF IMMORTALITY',
1,386,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__CARD_ID`,,"SELECT CARDS.CARD_ID, CARDS.STATUS, COUNT(*) FROM CARDS WHERE CARDS.FRAMEVERSION = 'FUTURE' GROUP BY CARDS.CARD_ID, CARDS.STATUS",SELECT COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.FRAMEVERSION = 'FUTURE',
2,386,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__CARD_ID`,,"SELECT CARDS.CARD_ID, CARDS.STATUS, COUNT(*) FROM CARDS WHERE CARDS.FRAMEVERSION = 'FUTURE' GROUP BY CARDS.CARD_ID, CARDS.STATUS",SELECT COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.FRAMEVERSION = 'FUTURE',
3,386,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__CARD_ID`,,"SELECT CARDS.CARD_ID, CARDS.STATUS, COUNT(*) FROM CARDS WHERE CARDS.FRAMEVERSION = 'FUTURE' GROUP BY CARDS.CARD_ID, CARDS.STATUS",SELECT COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.FRAMEVERSION = 'FUTURE',
1,387,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__COLOR`,,"SELECT CARDS.NAME, CARDS.COLOR FROM CARDS WHERE CARDS.SETCODE = 'OGW';","SELECT ID, COLORS FROM CARDS WHERE ID IN ( SELECT ID FROM SET_TRANSLATIONS WHERE SETCODE = 'OGW' )",
2,387,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__COLOR`,,"SELECT CARDS.NAME, CARDS.COLOR FROM CARDS WHERE CARDS.SETCODE = 'OGW';","SELECT ID, COLORS FROM CARDS WHERE ID IN ( SELECT ID FROM SET_TRANSLATIONS WHERE SETCODE = 'OGW' )",
3,387,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__COLOR`,,"SELECT CARDS.NAME, CARDS.COLOR FROM CARDS WHERE CARDS.SETCODE = 'OGW';","SELECT ID, COLORS FROM CARDS WHERE ID IN ( SELECT ID FROM SET_TRANSLATIONS WHERE SETCODE = 'OGW' )",
1,388,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__HASTRANSLATION`,,"SELECT CARDS.CARDNAME, CARDS.LANGUAGE FROM CARDS WHERE CARDS.SETCODE = '10E' AND CARDS.CONVERTEDMANACOST = 5 AND CARDS.HASTRANSLATION = TRUE","SELECT ID, LANGUAGE FROM SET_TRANSLATIONS WHERE ID = ( SELECT ID FROM CARDS WHERE CONVERTEDMANACOST = 5 ) AND SETCODE = '10E'",
2,388,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__HASTRANSLATION`,,"SELECT CARDS.CARDNAME, CARDS.LANGUAGE FROM CARDS WHERE CARDS.SETCODE = '10E' AND CARDS.CONVERTEDMANACOST = 5 AND CARDS.HASTRANSLATION = TRUE","SELECT ID, LANGUAGE FROM SET_TRANSLATIONS WHERE ID = ( SELECT ID FROM CARDS WHERE CONVERTEDMANACOST = 5 ) AND SETCODE = '10E'",
3,388,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__HASTRANSLATION`,,"SELECT CARDS.CARDNAME, CARDS.LANGUAGE FROM CARDS WHERE CARDS.SETCODE = '10E' AND CARDS.CONVERTEDMANACOST = 5 AND CARDS.HASTRANSLATION = TRUE","SELECT ID, LANGUAGE FROM SET_TRANSLATIONS WHERE ID = ( SELECT ID FROM CARDS WHERE CONVERTEDMANACOST = 5 ) AND SETCODE = '10E'",
1,389,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CARDS (
	ID INTEGER,
	ARTIST VARCHAR(20),
	ASCIINAME VARCHAR(20),
	AVAILABILITY VARCHAR(20),
	BORDERCOLOR VARCHAR(20),
	CARDKINGDOMFOILID VARCHAR(20),
	CARDKINGDOMID VARCHAR(20),
	COLORIDENTITY VARCHAR(20),
	COLORINDICATOR VARCHAR(20),
	COLORS VARCHAR(20),
	CONVERTEDMANACOST INTEGER,
	DUELDECK VARCHAR(20),
	EDHRECRANK INTEGER,
	FACECONVERTEDMANACOST INTEGER,
	FACENAME VARCHAR(20),
	FLAVORNAME VARCHAR(20),
	FLAVORTEXT VARCHAR(20),
	FRAMEEFFECTS VARCHAR(20),
	FRAMEVERSION VARCHAR(20),
	HAND VARCHAR(20),
	HASALTERNATIVEDECKLIMIT INTEGER,
	HASCONTENTWARNING INTEGER,
	HASFOIL INTEGER,
	HASNONSFOIL INTEGER,
	ISALTERNATIVE INTEGER,
	ISFULLART INTEGER,
	ISONLINEONLY INTEGER,
	ISOVERSIZED INTEGER,
	ISPROMO INTEGER,
	ISREPRINT INTEGER,
	ISRESERVED INTEGER,
	ISSTARTER INTEGER,
	ISSTORYSPOTLIGHT INTEGER,
	ISTEXTLESS INTEGER,
	ISTIMESHIFTED INTEGER,
	KEYWORDS VARCHAR(20),
	LAYOUT VARCHAR(20),
	LEADERSHIPSKILLS VARCHAR(20),
	LIFE VARCHAR(20),
	LOYALTY VARCHAR(20),
	MANACOST VARCHAR(20),
	MCMID VARCHAR(20),
	MCMMETAID VARCHAR(20),
	MTGARENAID VARCHAR(20),
	MTGJSONV4ID VARCHAR(20),
	MTGOFOILID VARCHAR(20),
	MTGOID VARCHAR(20),
	MULTIVERSEID VARCHAR(20),
	NAME VARCHAR(20),
	NUMBER VARCHAR(20),
	ORIGINALRELEASEDATE VARCHAR(20),
	ORIGINALTEXT VARCHAR(20),
	ORIGINALTYPE VARCHAR(20),
	OTHERFACEIDS VARCHAR(20),
	POWER VARCHAR(20),
	PRINTINGS VARCHAR(20),
	PROMOTYPES VARCHAR(20),
	PURCHASEURLS VARCHAR(20),
	RARITY VARCHAR(20),
	SCRYFALLID VARCHAR(20),
	SCRYFALLILLUSTRATIONID VARCHAR(20),
	SCRYFALLORACLEID VARCHAR(20),
	SETCODE VARCHAR(20),
	SIDE VARCHAR(20),
	SUBTYPES VARCHAR(20),
	SUPERTYPES VARCHAR(20),
	TCGPLAYERPRODUCTID VARCHAR(20),
	TEXT VARCHAR(20),
	TOUGHNESS VARCHAR(20),
	TYPE VARCHAR(20),
	TYPES VARCHAR(20),
	UUID VARCHAR(20),
	VARIATIONS VARCHAR(20),
	WATERMARK VARCHAR(20)
);
INSERT INTO CARDS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 3, '2147483648', 4, 5, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 'CREATURE - ELF', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE FOREIGN_DATA (
	ID INTEGER,
	FLAVORTEXT VARCHAR(20),
	LANGUAGE VARCHAR(20),
	MULTIVERSEID INTEGER,
	NAME VARCHAR(20),
	TEXT VARCHAR(20),
	TYPE VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO FOREIGN_DATA VALUES (0, '2147483648', '2147483648', 0, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE LEGALITIES (
	ID INTEGER,
	FORMAT VARCHAR(20),
	STATUS VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO LEGALITIES VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE SETS (
	ID INTEGER,
	BASESETSIZE INTEGER,
	BLOCK VARCHAR(20),
	BOOSTER VARCHAR(20),
	CODE VARCHAR(20),
	ISFOILONLY INTEGER,
	ISFOREIGNONLY INTEGER,
	ISNONFOILONLY INTEGER,
	ISONLINEONLY INTEGER,
	ISPARTIALPREVIEW INTEGER,
	KEYRUNE_CODE VARCHAR(20),
	MCMID INTEGER,
	MCMIDEXTRAS INTEGER,
	MCMNAME VARCHAR(20),
	MTGOCODE VARCHAR(20),
	NAME VARCHAR(20),
	PARENTCODE VARCHAR(20),
	RELEASEDATE DATE,
	TCGPLAYERGROUPID INTEGER,
	TOTALSETSIZE INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO SETS VALUES (0, 0, '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, '2147483648', 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', 0, 0, '2147483648');
CREATE TABLE SET_TRANSLATIONS (
	ID INTEGER,
	LANGUAGE VARCHAR(20),
	SETCODE VARCHAR(20),
	TRANSLATION VARCHAR(20)
);
INSERT INTO SET_TRANSLATIONS VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE RULINGS (
	ID INTEGER,
	DATE DATE,
	TEXT VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO RULINGS VALUES (21, '1970-01-01', '2147483648', '2147483648');
-- ----------sql1------------
-- 2147483648, 1
SELECT CARDS.NAME, RULINGS.DATE FROM CARDS INNER JOIN RULINGS ON CARDS.UUID = RULINGS.UUID WHERE CARDS.ORIGINALTYPE = 'CREATURE - ELF';
-- ----------sql2------------
-- 2, 1
SELECT T1.ID, T2.DATE FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID WHERE T1.ORIGINALTYPE = 'CREATURE - ELF';
",0.129901,"SELECT CARDS.NAME, RULINGS.DATE FROM CARDS INNER JOIN RULINGS ON CARDS.UUID = RULINGS.UUID WHERE CARDS.ORIGINALTYPE = 'CREATURE - ELF';","SELECT T1.ID, T2.DATE FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID WHERE T1.ORIGINALTYPE = 'CREATURE - ELF'",
1,390,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__COLOR`,,"SELECT CARDS.COLOR, CARDS.FORMAT FROM CARDS WHERE CARDS.ID BETWEEN 1 AND 20","SELECT T1.COLORS, T2.FORMAT FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.ID BETWEEN 1 AND 20",
2,390,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__COLOR`,,"SELECT CARDS.COLOR, CARDS.FORMAT FROM CARDS WHERE CARDS.ID BETWEEN 1 AND 20","SELECT T1.COLORS, T2.FORMAT FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.ID BETWEEN 1 AND 20",
3,390,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__COLOR`,,"SELECT CARDS.COLOR, CARDS.FORMAT FROM CARDS WHERE CARDS.ID BETWEEN 1 AND 20","SELECT T1.COLORS, T2.FORMAT FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.ID BETWEEN 1 AND 20",
1,391,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CARDS (
	ID INTEGER,
	ARTIST VARCHAR(20),
	ASCIINAME VARCHAR(20),
	AVAILABILITY VARCHAR(20),
	BORDERCOLOR VARCHAR(20),
	CARDKINGDOMFOILID VARCHAR(20),
	CARDKINGDOMID VARCHAR(20),
	COLORIDENTITY VARCHAR(20),
	COLORINDICATOR VARCHAR(20),
	COLORS VARCHAR(20),
	CONVERTEDMANACOST INTEGER,
	DUELDECK VARCHAR(20),
	EDHRECRANK INTEGER,
	FACECONVERTEDMANACOST INTEGER,
	FACENAME VARCHAR(20),
	FLAVORNAME VARCHAR(20),
	FLAVORTEXT VARCHAR(20),
	FRAMEEFFECTS VARCHAR(20),
	FRAMEVERSION VARCHAR(20),
	HAND VARCHAR(20),
	HASALTERNATIVEDECKLIMIT INTEGER,
	HASCONTENTWARNING INTEGER,
	HASFOIL INTEGER,
	HASNONSFOIL INTEGER,
	ISALTERNATIVE INTEGER,
	ISFULLART INTEGER,
	ISONLINEONLY INTEGER,
	ISOVERSIZED INTEGER,
	ISPROMO INTEGER,
	ISREPRINT INTEGER,
	ISRESERVED INTEGER,
	ISSTARTER INTEGER,
	ISSTORYSPOTLIGHT INTEGER,
	ISTEXTLESS INTEGER,
	ISTIMESHIFTED INTEGER,
	KEYWORDS VARCHAR(20),
	LAYOUT VARCHAR(20),
	LEADERSHIPSKILLS VARCHAR(20),
	LIFE VARCHAR(20),
	LOYALTY VARCHAR(20),
	MANACOST VARCHAR(20),
	MCMID VARCHAR(20),
	MCMMETAID VARCHAR(20),
	MTGARENAID VARCHAR(20),
	MTGJSONV4ID VARCHAR(20),
	MTGOFOILID VARCHAR(20),
	MTGOID VARCHAR(20),
	MULTIVERSEID VARCHAR(20),
	NAME VARCHAR(20),
	NUMBER VARCHAR(20),
	ORIGINALRELEASEDATE VARCHAR(20),
	ORIGINALTEXT VARCHAR(20),
	ORIGINALTYPE VARCHAR(20),
	OTHERFACEIDS VARCHAR(20),
	POWER VARCHAR(20),
	PRINTINGS VARCHAR(20),
	PROMOTYPES VARCHAR(20),
	PURCHASEURLS VARCHAR(20),
	RARITY VARCHAR(20),
	SCRYFALLID VARCHAR(20),
	SCRYFALLILLUSTRATIONID VARCHAR(20),
	SCRYFALLORACLEID VARCHAR(20),
	SETCODE VARCHAR(20),
	SIDE VARCHAR(20),
	SUBTYPES VARCHAR(20),
	SUPERTYPES VARCHAR(20),
	TCGPLAYERPRODUCTID VARCHAR(20),
	TEXT VARCHAR(20),
	TOUGHNESS VARCHAR(20),
	TYPE VARCHAR(20),
	TYPES VARCHAR(20),
	UUID VARCHAR(20),
	VARIATIONS VARCHAR(20),
	WATERMARK VARCHAR(20)
);
INSERT INTO CARDS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 'B', 3, '2147483648', 4, 5, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 'ARTIFACT', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE FOREIGN_DATA (
	ID INTEGER,
	FLAVORTEXT VARCHAR(20),
	LANGUAGE VARCHAR(20),
	MULTIVERSEID INTEGER,
	NAME VARCHAR(20),
	TEXT VARCHAR(20),
	TYPE VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO FOREIGN_DATA VALUES (21, '2147483648', NULL, 22, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE LEGALITIES (
	ID INTEGER,
	FORMAT VARCHAR(20),
	STATUS VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO LEGALITIES VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE SETS (
	ID INTEGER,
	BASESETSIZE INTEGER,
	BLOCK VARCHAR(20),
	BOOSTER VARCHAR(20),
	CODE VARCHAR(20),
	ISFOILONLY INTEGER,
	ISFOREIGNONLY INTEGER,
	ISNONFOILONLY INTEGER,
	ISONLINEONLY INTEGER,
	ISPARTIALPREVIEW INTEGER,
	KEYRUNE_CODE VARCHAR(20),
	MCMID INTEGER,
	MCMIDEXTRAS INTEGER,
	MCMNAME VARCHAR(20),
	MTGOCODE VARCHAR(20),
	NAME VARCHAR(20),
	PARENTCODE VARCHAR(20),
	RELEASEDATE DATE,
	TCGPLAYERGROUPID INTEGER,
	TOTALSETSIZE INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO SETS VALUES (0, 0, '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, '2147483648', 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', 0, 0, '2147483648');
CREATE TABLE SET_TRANSLATIONS (
	ID INTEGER,
	LANGUAGE VARCHAR(20),
	SETCODE VARCHAR(20),
	TRANSLATION VARCHAR(20)
);
INSERT INTO SET_TRANSLATIONS VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE RULINGS (
	ID INTEGER,
	DATE DATE,
	TEXT VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO RULINGS VALUES (0, '1970-01-01', '2147483648', '2147483648');
-- ----------sql1------------
SELECT CARDS.NAME FROM CARDS INNER JOIN FOREIGN_DATA ON CARDS.UUID = FOREIGN_DATA.UUID WHERE CARDS.ORIGINALTYPE = 'ARTIFACT' AND CARDS.COLORS = 'B' AND FOREIGN_DATA.LANGUAGE IS NOT NULL;
-- ----------sql2------------
-- 2147483648
SELECT DISTINCT T1.NAME FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T1.ORIGINALTYPE = 'ARTIFACT' AND T1.COLORS = 'B';
",0.156314,SELECT CARDS.NAME FROM CARDS INNER JOIN FOREIGN_DATA ON CARDS.UUID = FOREIGN_DATA.UUID WHERE CARDS.ORIGINALTYPE = 'ARTIFACT' AND CARDS.COLORS = 'B' AND FOREIGN_DATA.LANGUAGE IS NOT NULL,SELECT DISTINCT T1.NAME FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T1.ORIGINALTYPE = 'ARTIFACT' AND T1.COLORS = 'B',
1,392,True,,0.135339,SELECT CARDS.NAME FROM CARDS INNER JOIN RULINGS ON CARDS.UUID = RULINGS.UUID WHERE CARDS.RARITY = 'UNCOMMON' ORDER BY RULINGS.DATE ASC LIMIT 3,SELECT DISTINCT T1.NAME FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID WHERE T1.RARITY = 'UNCOMMON' ORDER BY T2.DATE ASC LIMIT 3,
1,393,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CARDS (
	ID INTEGER,
	ARTIST VARCHAR(20),
	ASCIINAME VARCHAR(20),
	AVAILABILITY VARCHAR(20),
	BORDERCOLOR VARCHAR(20),
	CARDKINGDOMFOILID VARCHAR(20),
	CARDKINGDOMID VARCHAR(20),
	COLORIDENTITY VARCHAR(20),
	COLORINDICATOR VARCHAR(20),
	COLORS VARCHAR(20),
	CONVERTEDMANACOST INTEGER,
	DUELDECK VARCHAR(20),
	EDHRECRANK INTEGER,
	FACECONVERTEDMANACOST INTEGER,
	FACENAME VARCHAR(20),
	FLAVORNAME VARCHAR(20),
	FLAVORTEXT VARCHAR(20),
	FRAMEEFFECTS VARCHAR(20),
	FRAMEVERSION VARCHAR(20),
	HAND VARCHAR(20),
	HASALTERNATIVEDECKLIMIT INTEGER,
	HASCONTENTWARNING INTEGER,
	HASFOIL INTEGER,
	HASNONSFOIL INTEGER,
	ISALTERNATIVE INTEGER,
	ISFULLART INTEGER,
	ISONLINEONLY INTEGER,
	ISOVERSIZED INTEGER,
	ISPROMO INTEGER,
	ISREPRINT INTEGER,
	ISRESERVED INTEGER,
	ISSTARTER INTEGER,
	ISSTORYSPOTLIGHT INTEGER,
	ISTEXTLESS INTEGER,
	ISTIMESHIFTED INTEGER,
	KEYWORDS VARCHAR(20),
	LAYOUT VARCHAR(20),
	LEADERSHIPSKILLS VARCHAR(20),
	LIFE VARCHAR(20),
	LOYALTY VARCHAR(20),
	MANACOST VARCHAR(20),
	MCMID VARCHAR(20),
	MCMMETAID VARCHAR(20),
	MTGARENAID VARCHAR(20),
	MTGJSONV4ID VARCHAR(20),
	MTGOFOILID VARCHAR(20),
	MTGOID VARCHAR(20),
	MULTIVERSEID VARCHAR(20),
	NAME VARCHAR(20),
	NUMBER VARCHAR(20),
	ORIGINALRELEASEDATE VARCHAR(20),
	ORIGINALTEXT VARCHAR(20),
	ORIGINALTYPE VARCHAR(20),
	OTHERFACEIDS VARCHAR(20),
	POWER VARCHAR(20),
	PRINTINGS VARCHAR(20),
	PROMOTYPES VARCHAR(20),
	PURCHASEURLS VARCHAR(20),
	RARITY VARCHAR(20),
	SCRYFALLID VARCHAR(20),
	SCRYFALLILLUSTRATIONID VARCHAR(20),
	SCRYFALLORACLEID VARCHAR(20),
	SETCODE VARCHAR(20),
	SIDE VARCHAR(20),
	SUBTYPES VARCHAR(20),
	SUPERTYPES VARCHAR(20),
	TCGPLAYERPRODUCTID VARCHAR(20),
	TEXT VARCHAR(20),
	TOUGHNESS VARCHAR(20),
	TYPE VARCHAR(20),
	TYPES VARCHAR(20),
	UUID VARCHAR(20),
	VARIATIONS VARCHAR(20),
	WATERMARK VARCHAR(20)
);
INSERT INTO CARDS VALUES (0, 'JOHN AVON', NULL, NULL, NULL, '2147483648', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2147483648', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2147483648', NULL, NULL);
CREATE TABLE FOREIGN_DATA (
	ID INTEGER,
	FLAVORTEXT VARCHAR(20),
	LANGUAGE VARCHAR(20),
	MULTIVERSEID INTEGER,
	NAME VARCHAR(20),
	TEXT VARCHAR(20),
	TYPE VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO FOREIGN_DATA VALUES (0, '2147483648', '2147483648', 0, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE LEGALITIES (
	ID INTEGER,
	FORMAT VARCHAR(20),
	STATUS VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO LEGALITIES VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE SETS (
	ID INTEGER,
	BASESETSIZE INTEGER,
	BLOCK VARCHAR(20),
	BOOSTER VARCHAR(20),
	CODE VARCHAR(20),
	ISFOILONLY INTEGER,
	ISFOREIGNONLY INTEGER,
	ISNONFOILONLY INTEGER,
	ISONLINEONLY INTEGER,
	ISPARTIALPREVIEW INTEGER,
	KEYRUNE_CODE VARCHAR(20),
	MCMID INTEGER,
	MCMIDEXTRAS INTEGER,
	MCMNAME VARCHAR(20),
	MTGOCODE VARCHAR(20),
	NAME VARCHAR(20),
	PARENTCODE VARCHAR(20),
	RELEASEDATE DATE,
	TCGPLAYERGROUPID INTEGER,
	TOTALSETSIZE INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO SETS VALUES (0, 0, '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, '2147483648', 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', 0, 0, '2147483648');
CREATE TABLE SET_TRANSLATIONS (
	ID INTEGER,
	LANGUAGE VARCHAR(20),
	SETCODE VARCHAR(20),
	TRANSLATION VARCHAR(20)
);
INSERT INTO SET_TRANSLATIONS VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE RULINGS (
	ID INTEGER,
	DATE DATE,
	TEXT VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO RULINGS VALUES (0, '1970-01-01', '2147483648', '2147483648');
-- ----------sql1------------
-- 0
SELECT COUNT(*) FROM CARDS WHERE ARTIST = 'JOHN AVON' AND CARDKINGDOMID IS NOT NULL AND CARDKINGDOMFOILID IS NOT NULL;
-- ----------sql2------------
-- 1
SELECT COUNT(ID) FROM CARDS WHERE (CARDKINGDOMID IS NULL OR CARDKINGDOMFOILID IS NULL) AND ARTIST = 'JOHN AVON';
",0.081802,SELECT COUNT(*) FROM CARDS WHERE ARTIST = 'JOHN AVON' AND CARDKINGDOMID IS NOT NULL AND CARDKINGDOMFOILID IS NOT NULL,SELECT COUNT(ID) FROM CARDS WHERE (CARDKINGDOMID IS NULL OR CARDKINGDOMFOILID IS NULL) AND ARTIST = 'JOHN AVON',
1,394,True,,0.069956,SELECT COUNT(*) FROM CARDS WHERE BORDERCOLOR = 'WHITE' AND CARDKINGDOMFOILID IS NOT NULL AND CARDKINGDOMID IS NOT NULL,SELECT COUNT(ID) FROM CARDS WHERE BORDERCOLOR = 'WHITE' AND CARDKINGDOMID IS NOT NULL AND CARDKINGDOMFOILID IS NOT NULL,
1,395,ERROR,AttributeError: 'int' object has no attribute 'sort',,SELECT COUNT(*) FROM CARDS WHERE ARTIST = 'UDON' AND AVAILABILITY = 'MTGO' AND HAND = -1,SELECT COUNT(ID) FROM CARDS WHERE HAND = '-1' AND ARTIST = 'UDON' AND AVAILABILITY = 'MTGO' ,
2,395,ERROR,AttributeError: 'int' object has no attribute 'sort',,SELECT COUNT(*) FROM CARDS WHERE ARTIST = 'UDON' AND AVAILABILITY = 'MTGO' AND HAND = -1,SELECT COUNT(ID) FROM CARDS WHERE HAND = '-1' AND ARTIST = 'UDON' AND AVAILABILITY = 'MTGO' ,
3,395,ERROR,AttributeError: 'int' object has no attribute 'sort',,SELECT COUNT(*) FROM CARDS WHERE ARTIST = 'UDON' AND AVAILABILITY = 'MTGO' AND HAND = -1,SELECT COUNT(ID) FROM CARDS WHERE HAND = '-1' AND ARTIST = 'UDON' AND AVAILABILITY = 'MTGO' ,
1,396,True,,0.08263,SELECT COUNT(*) FROM CARDS WHERE FRAMEVERSION = '1993' AND AVAILABILITY = 'PAPER' AND HASCONTENTWARNING = 1,SELECT COUNT(ID) FROM CARDS WHERE FRAMEVERSION = 1993 AND AVAILABILITY = 'PAPER' AND HASCONTENTWARNING = 1,
1,397,True,,0.097348,"SELECT CARDS.MANACOST FROM CARDS WHERE CARDS.LAYOUT = 'NORMAL' AND CARDS.FRAMEVERSION = '2003' AND CARDS.BORDERCOLOR = 'BLACK' AND CARDS.AVAILABILITY = 'MTGO,PAPER'","SELECT MANACOST FROM CARDS WHERE AVAILABILITY = 'MTGO,PAPER' AND BORDERCOLOR = 'BLACK' AND FRAMEVERSION = 2003 AND LAYOUT = 'NORMAL'",
1,398,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CARDS (
	ID INTEGER,
	ARTIST VARCHAR(20),
	ASCIINAME VARCHAR(20),
	AVAILABILITY VARCHAR(20),
	BORDERCOLOR VARCHAR(20),
	CARDKINGDOMFOILID VARCHAR(20),
	CARDKINGDOMID VARCHAR(20),
	COLORIDENTITY VARCHAR(20),
	COLORINDICATOR VARCHAR(20),
	COLORS VARCHAR(20),
	CONVERTEDMANACOST INTEGER,
	DUELDECK VARCHAR(20),
	EDHRECRANK INTEGER,
	FACECONVERTEDMANACOST INTEGER,
	FACENAME VARCHAR(20),
	FLAVORNAME VARCHAR(20),
	FLAVORTEXT VARCHAR(20),
	FRAMEEFFECTS VARCHAR(20),
	FRAMEVERSION VARCHAR(20),
	HAND VARCHAR(20),
	HASALTERNATIVEDECKLIMIT INTEGER,
	HASCONTENTWARNING INTEGER,
	HASFOIL INTEGER,
	HASNONSFOIL INTEGER,
	ISALTERNATIVE INTEGER,
	ISFULLART INTEGER,
	ISONLINEONLY INTEGER,
	ISOVERSIZED INTEGER,
	ISPROMO INTEGER,
	ISREPRINT INTEGER,
	ISRESERVED INTEGER,
	ISSTARTER INTEGER,
	ISSTORYSPOTLIGHT INTEGER,
	ISTEXTLESS INTEGER,
	ISTIMESHIFTED INTEGER,
	KEYWORDS VARCHAR(20),
	LAYOUT VARCHAR(20),
	LEADERSHIPSKILLS VARCHAR(20),
	LIFE VARCHAR(20),
	LOYALTY VARCHAR(20),
	MANACOST VARCHAR(20),
	MCMID VARCHAR(20),
	MCMMETAID VARCHAR(20),
	MTGARENAID VARCHAR(20),
	MTGJSONV4ID VARCHAR(20),
	MTGOFOILID VARCHAR(20),
	MTGOID VARCHAR(20),
	MULTIVERSEID VARCHAR(20),
	NAME VARCHAR(20),
	NUMBER VARCHAR(20),
	ORIGINALRELEASEDATE VARCHAR(20),
	ORIGINALTEXT VARCHAR(20),
	ORIGINALTYPE VARCHAR(20),
	OTHERFACEIDS VARCHAR(20),
	POWER VARCHAR(20),
	PRINTINGS VARCHAR(20),
	PROMOTYPES VARCHAR(20),
	PURCHASEURLS VARCHAR(20),
	RARITY VARCHAR(20),
	SCRYFALLID VARCHAR(20),
	SCRYFALLILLUSTRATIONID VARCHAR(20),
	SCRYFALLORACLEID VARCHAR(20),
	SETCODE VARCHAR(20),
	SIDE VARCHAR(20),
	SUBTYPES VARCHAR(20),
	SUPERTYPES VARCHAR(20),
	TCGPLAYERPRODUCTID VARCHAR(20),
	TEXT VARCHAR(20),
	TOUGHNESS VARCHAR(20),
	TYPE VARCHAR(20),
	TYPES VARCHAR(20),
	UUID VARCHAR(20),
	VARIATIONS VARCHAR(20),
	WATERMARK VARCHAR(20)
);
INSERT INTO CARDS VALUES (0, '1307723497505385673', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '2147483648', 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE FOREIGN_DATA (
	ID INTEGER,
	FLAVORTEXT VARCHAR(20),
	LANGUAGE VARCHAR(20),
	MULTIVERSEID INTEGER,
	NAME VARCHAR(20),
	TEXT VARCHAR(20),
	TYPE VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO FOREIGN_DATA VALUES (0, '2147483648', '2147483648', 0, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE LEGALITIES (
	ID INTEGER,
	FORMAT VARCHAR(20),
	STATUS VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO LEGALITIES VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE SETS (
	ID INTEGER,
	BASESETSIZE INTEGER,
	BLOCK VARCHAR(20),
	BOOSTER VARCHAR(20),
	CODE VARCHAR(20),
	ISFOILONLY INTEGER,
	ISFOREIGNONLY INTEGER,
	ISNONFOILONLY INTEGER,
	ISONLINEONLY INTEGER,
	ISPARTIALPREVIEW INTEGER,
	KEYRUNE_CODE VARCHAR(20),
	MCMID INTEGER,
	MCMIDEXTRAS INTEGER,
	MCMNAME VARCHAR(20),
	MTGOCODE VARCHAR(20),
	NAME VARCHAR(20),
	PARENTCODE VARCHAR(20),
	RELEASEDATE DATE,
	TCGPLAYERGROUPID INTEGER,
	TOTALSETSIZE INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO SETS VALUES (0, 0, '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, '2147483648', 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', 0, 0, '2147483648');
CREATE TABLE SET_TRANSLATIONS (
	ID INTEGER,
	LANGUAGE VARCHAR(20),
	SETCODE VARCHAR(20),
	TRANSLATION VARCHAR(20)
);
INSERT INTO SET_TRANSLATIONS VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE RULINGS (
	ID INTEGER,
	DATE DATE,
	TEXT VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO RULINGS VALUES (0, '1970-01-01', '2147483648', '2147483648');
-- ----------sql1------------
-- NULL
SELECT SUM(CARDS.MANACOST) FROM CARDS WHERE CARDS.ARTIST = 'ROB ALEXANDER';
-- ----------sql2------------
SELECT MANACOST FROM CARDS WHERE ARTIST = 'ROB ALEXANDER';
",0.070412,SELECT SUM(CARDS.MANACOST) FROM CARDS WHERE CARDS.ARTIST = 'ROB ALEXANDER',SELECT MANACOST FROM CARDS WHERE ARTIST = 'ROB ALEXANDER',
1,399,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CARDS (
	ID INTEGER,
	ARTIST VARCHAR(20),
	ASCIINAME VARCHAR(20),
	AVAILABILITY VARCHAR(20),
	BORDERCOLOR VARCHAR(20),
	CARDKINGDOMFOILID VARCHAR(20),
	CARDKINGDOMID VARCHAR(20),
	COLORIDENTITY VARCHAR(20),
	COLORINDICATOR VARCHAR(20),
	COLORS VARCHAR(20),
	CONVERTEDMANACOST INTEGER,
	DUELDECK VARCHAR(20),
	EDHRECRANK INTEGER,
	FACECONVERTEDMANACOST INTEGER,
	FACENAME VARCHAR(20),
	FLAVORNAME VARCHAR(20),
	FLAVORTEXT VARCHAR(20),
	FRAMEEFFECTS VARCHAR(20),
	FRAMEVERSION VARCHAR(20),
	HAND VARCHAR(20),
	HASALTERNATIVEDECKLIMIT INTEGER,
	HASCONTENTWARNING INTEGER,
	HASFOIL INTEGER,
	HASNONSFOIL INTEGER,
	ISALTERNATIVE INTEGER,
	ISFULLART INTEGER,
	ISONLINEONLY INTEGER,
	ISOVERSIZED INTEGER,
	ISPROMO INTEGER,
	ISREPRINT INTEGER,
	ISRESERVED INTEGER,
	ISSTARTER INTEGER,
	ISSTORYSPOTLIGHT INTEGER,
	ISTEXTLESS INTEGER,
	ISTIMESHIFTED INTEGER,
	KEYWORDS VARCHAR(20),
	LAYOUT VARCHAR(20),
	LEADERSHIPSKILLS VARCHAR(20),
	LIFE VARCHAR(20),
	LOYALTY VARCHAR(20),
	MANACOST VARCHAR(20),
	MCMID VARCHAR(20),
	MCMMETAID VARCHAR(20),
	MTGARENAID VARCHAR(20),
	MTGJSONV4ID VARCHAR(20),
	MTGOFOILID VARCHAR(20),
	MTGOID VARCHAR(20),
	MULTIVERSEID VARCHAR(20),
	NAME VARCHAR(20),
	NUMBER VARCHAR(20),
	ORIGINALRELEASEDATE VARCHAR(20),
	ORIGINALTEXT VARCHAR(20),
	ORIGINALTYPE VARCHAR(20),
	OTHERFACEIDS VARCHAR(20),
	POWER VARCHAR(20),
	PRINTINGS VARCHAR(20),
	PROMOTYPES VARCHAR(20),
	PURCHASEURLS VARCHAR(20),
	RARITY VARCHAR(20),
	SCRYFALLID VARCHAR(20),
	SCRYFALLILLUSTRATIONID VARCHAR(20),
	SCRYFALLORACLEID VARCHAR(20),
	SETCODE VARCHAR(20),
	SIDE VARCHAR(20),
	SUBTYPES VARCHAR(20),
	SUPERTYPES VARCHAR(20),
	TCGPLAYERPRODUCTID VARCHAR(20),
	TEXT VARCHAR(20),
	TOUGHNESS VARCHAR(20),
	TYPE VARCHAR(20),
	TYPES VARCHAR(20),
	UUID VARCHAR(20),
	VARIATIONS VARCHAR(20),
	WATERMARK VARCHAR(20)
);
INSERT INTO CARDS VALUES (0, '2147483648', '2147483648', 'ARENA', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '2147483648', 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', NULL, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE FOREIGN_DATA (
	ID INTEGER,
	FLAVORTEXT VARCHAR(20),
	LANGUAGE VARCHAR(20),
	MULTIVERSEID INTEGER,
	NAME VARCHAR(20),
	TEXT VARCHAR(20),
	TYPE VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO FOREIGN_DATA VALUES (0, '2147483648', '2147483648', 0, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE LEGALITIES (
	ID INTEGER,
	FORMAT VARCHAR(20),
	STATUS VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO LEGALITIES VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE SETS (
	ID INTEGER,
	BASESETSIZE INTEGER,
	BLOCK VARCHAR(20),
	BOOSTER VARCHAR(20),
	CODE VARCHAR(20),
	ISFOILONLY INTEGER,
	ISFOREIGNONLY INTEGER,
	ISNONFOILONLY INTEGER,
	ISONLINEONLY INTEGER,
	ISPARTIALPREVIEW INTEGER,
	KEYRUNE_CODE VARCHAR(20),
	MCMID INTEGER,
	MCMIDEXTRAS INTEGER,
	MCMNAME VARCHAR(20),
	MTGOCODE VARCHAR(20),
	NAME VARCHAR(20),
	PARENTCODE VARCHAR(20),
	RELEASEDATE DATE,
	TCGPLAYERGROUPID INTEGER,
	TOTALSETSIZE INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO SETS VALUES (0, 0, '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, '2147483648', 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', 0, 0, '2147483648');
CREATE TABLE SET_TRANSLATIONS (
	ID INTEGER,
	LANGUAGE VARCHAR(20),
	SETCODE VARCHAR(20),
	TRANSLATION VARCHAR(20)
);
INSERT INTO SET_TRANSLATIONS VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE RULINGS (
	ID INTEGER,
	DATE DATE,
	TEXT VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO RULINGS VALUES (0, '1970-01-01', '2147483648', '2147483648');
-- ----------sql1------------
-- NULL, 2147483648
SELECT CARDS.SUBTYPES, CARDS.SUPERTYPES FROM CARDS WHERE CARDS.AVAILABILITY = 'ARENA';
-- ----------sql2------------
SELECT DISTINCT SUBTYPES, SUPERTYPES FROM CARDS WHERE AVAILABILITY = 'ARENA' AND SUBTYPES IS NOT NULL AND SUPERTYPES IS NOT NULL;
",0.0589569999999999,"SELECT CARDS.SUBTYPES, CARDS.SUPERTYPES FROM CARDS WHERE CARDS.AVAILABILITY = 'ARENA'","SELECT DISTINCT SUBTYPES, SUPERTYPES FROM CARDS WHERE AVAILABILITY = 'ARENA' AND SUBTYPES IS NOT NULL AND SUPERTYPES IS NOT NULL",
1,400,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.SETCODE FROM CARDS WHERE CARDS.LANGUAGE = 'SPANISH',SELECT SETCODE FROM SET_TRANSLATIONS WHERE LANGUAGE = 'SPANISH',
2,400,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.SETCODE FROM CARDS WHERE CARDS.LANGUAGE = 'SPANISH',SELECT SETCODE FROM SET_TRANSLATIONS WHERE LANGUAGE = 'SPANISH',
3,400,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.SETCODE FROM CARDS WHERE CARDS.LANGUAGE = 'SPANISH',SELECT SETCODE FROM SET_TRANSLATIONS WHERE LANGUAGE = 'SPANISH',
1,401,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) FILTER (WHERE CARDS.ISONLINEONLY = 1) AS REAL) * 100 / COUNT(*) FROM CARDS WHERE CARDS.FRAMEEFFECTS = 'LEGENDARY',SELECT SUM(CASE WHEN ISONLINEONLY = 1 THEN 1.0 ELSE 0 END) / COUNT(ID) * 100 FROM CARDS WHERE FRAMEEFFECTS = 'LEGENDARY',
2,401,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) FILTER (WHERE CARDS.ISONLINEONLY = 1) AS REAL) * 100 / COUNT(*) FROM CARDS WHERE CARDS.FRAMEEFFECTS = 'LEGENDARY',SELECT SUM(CASE WHEN ISONLINEONLY = 1 THEN 1.0 ELSE 0 END) / COUNT(ID) * 100 FROM CARDS WHERE FRAMEEFFECTS = 'LEGENDARY',
3,401,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) FILTER (WHERE CARDS.ISONLINEONLY = 1) AS REAL) * 100 / COUNT(*) FROM CARDS WHERE CARDS.FRAMEEFFECTS = 'LEGENDARY',SELECT SUM(CASE WHEN ISONLINEONLY = 1 THEN 1.0 ELSE 0 END) / COUNT(ID) * 100 FROM CARDS WHERE FRAMEEFFECTS = 'LEGENDARY',
1,402,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute ISSTORYLIGHT`,,"SELECT (CAST(COUNT(ID) FILTER (WHERE ISSTORYLIGHT = 1 AND ISTEXTLESS = 0) AS REAL) / COUNT(ID)) * 100 AS PERCENTAGE, ID FROM CARDS WHERE ISSTORYLIGHT = 1 AND ISTEXTLESS = 0",SELECT CAST(SUM(CASE WHEN ISTEXTLESS = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM CARDS WHERE ISSTORYSPOTLIGHT = 1,
2,402,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute ISSTORYLIGHT`,,"SELECT (CAST(COUNT(ID) FILTER (WHERE ISSTORYLIGHT = 1 AND ISTEXTLESS = 0) AS REAL) / COUNT(ID)) * 100 AS PERCENTAGE, ID FROM CARDS WHERE ISSTORYLIGHT = 1 AND ISTEXTLESS = 0",SELECT CAST(SUM(CASE WHEN ISTEXTLESS = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM CARDS WHERE ISSTORYSPOTLIGHT = 1,
3,402,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute ISSTORYLIGHT`,,"SELECT (CAST(COUNT(ID) FILTER (WHERE ISSTORYLIGHT = 1 AND ISTEXTLESS = 0) AS REAL) / COUNT(ID)) * 100 AS PERCENTAGE, ID FROM CARDS WHERE ISSTORYLIGHT = 1 AND ISTEXTLESS = 0",SELECT CAST(SUM(CASE WHEN ISTEXTLESS = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM CARDS WHERE ISSTORYSPOTLIGHT = 1,
1,403,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,"SELECT CAST((SELECT COUNT(*) FROM CARDS WHERE LANGUAGE = 'SPANISH') AS REAL) * 100 / COUNT(*), CARDS.NAME FROM CARDS WHERE LANGUAGE = 'SPANISH' GROUP BY CARDS.NAME","SELECT ( SELECT CAST(SUM(CASE WHEN LANGUAGE = 'SPANISH' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM FOREIGN_DATA ), NAME FROM FOREIGN_DATA WHERE LANGUAGE = 'SPANISH'",
2,403,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,"SELECT CAST((SELECT COUNT(*) FROM CARDS WHERE LANGUAGE = 'SPANISH') AS REAL) * 100 / COUNT(*), CARDS.NAME FROM CARDS WHERE LANGUAGE = 'SPANISH' GROUP BY CARDS.NAME","SELECT ( SELECT CAST(SUM(CASE WHEN LANGUAGE = 'SPANISH' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM FOREIGN_DATA ), NAME FROM FOREIGN_DATA WHERE LANGUAGE = 'SPANISH'",
3,403,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,"SELECT CAST((SELECT COUNT(*) FROM CARDS WHERE LANGUAGE = 'SPANISH') AS REAL) * 100 / COUNT(*), CARDS.NAME FROM CARDS WHERE LANGUAGE = 'SPANISH' GROUP BY CARDS.NAME","SELECT ( SELECT CAST(SUM(CASE WHEN LANGUAGE = 'SPANISH' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM FOREIGN_DATA ), NAME FROM FOREIGN_DATA WHERE LANGUAGE = 'SPANISH'",
1,404,True,,0.073905,SELECT LANGUAGE FROM SETS INNER JOIN SET_TRANSLATIONS ON SETS.CODE = SET_TRANSLATIONS.SETCODE WHERE SETS.BASESETSIZE = 309,SELECT T2.LANGUAGE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T1.BASESETSIZE = 309,
1,405,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CARDS (
	ID INTEGER,
	ARTIST VARCHAR(20),
	ASCIINAME VARCHAR(20),
	AVAILABILITY VARCHAR(20),
	BORDERCOLOR VARCHAR(20),
	CARDKINGDOMFOILID VARCHAR(20),
	CARDKINGDOMID VARCHAR(20),
	COLORIDENTITY VARCHAR(20),
	COLORINDICATOR VARCHAR(20),
	COLORS VARCHAR(20),
	CONVERTEDMANACOST INTEGER,
	DUELDECK VARCHAR(20),
	EDHRECRANK INTEGER,
	FACECONVERTEDMANACOST INTEGER,
	FACENAME VARCHAR(20),
	FLAVORNAME VARCHAR(20),
	FLAVORTEXT VARCHAR(20),
	FRAMEEFFECTS VARCHAR(20),
	FRAMEVERSION VARCHAR(20),
	HAND VARCHAR(20),
	HASALTERNATIVEDECKLIMIT INTEGER,
	HASCONTENTWARNING INTEGER,
	HASFOIL INTEGER,
	HASNONSFOIL INTEGER,
	ISALTERNATIVE INTEGER,
	ISFULLART INTEGER,
	ISONLINEONLY INTEGER,
	ISOVERSIZED INTEGER,
	ISPROMO INTEGER,
	ISREPRINT INTEGER,
	ISRESERVED INTEGER,
	ISSTARTER INTEGER,
	ISSTORYSPOTLIGHT INTEGER,
	ISTEXTLESS INTEGER,
	ISTIMESHIFTED INTEGER,
	KEYWORDS VARCHAR(20),
	LAYOUT VARCHAR(20),
	LEADERSHIPSKILLS VARCHAR(20),
	LIFE VARCHAR(20),
	LOYALTY VARCHAR(20),
	MANACOST VARCHAR(20),
	MCMID VARCHAR(20),
	MCMMETAID VARCHAR(20),
	MTGARENAID VARCHAR(20),
	MTGJSONV4ID VARCHAR(20),
	MTGOFOILID VARCHAR(20),
	MTGOID VARCHAR(20),
	MULTIVERSEID VARCHAR(20),
	NAME VARCHAR(20),
	NUMBER VARCHAR(20),
	ORIGINALRELEASEDATE VARCHAR(20),
	ORIGINALTEXT VARCHAR(20),
	ORIGINALTYPE VARCHAR(20),
	OTHERFACEIDS VARCHAR(20),
	POWER VARCHAR(20),
	PRINTINGS VARCHAR(20),
	PROMOTYPES VARCHAR(20),
	PURCHASEURLS VARCHAR(20),
	RARITY VARCHAR(20),
	SCRYFALLID VARCHAR(20),
	SCRYFALLILLUSTRATIONID VARCHAR(20),
	SCRYFALLORACLEID VARCHAR(20),
	SETCODE VARCHAR(20),
	SIDE VARCHAR(20),
	SUBTYPES VARCHAR(20),
	SUPERTYPES VARCHAR(20),
	TCGPLAYERPRODUCTID VARCHAR(20),
	TEXT VARCHAR(20),
	TOUGHNESS VARCHAR(20),
	TYPE VARCHAR(20),
	TYPES VARCHAR(20),
	UUID VARCHAR(20),
	VARIATIONS VARCHAR(20),
	WATERMARK VARCHAR(20)
);
INSERT INTO CARDS VALUES (0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '2147483648', 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE FOREIGN_DATA (
	ID INTEGER,
	FLAVORTEXT VARCHAR(20),
	LANGUAGE VARCHAR(20),
	MULTIVERSEID INTEGER,
	NAME VARCHAR(20),
	TEXT VARCHAR(20),
	TYPE VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO FOREIGN_DATA VALUES (0, '2147483648', '2147483648', 0, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE LEGALITIES (
	ID INTEGER,
	FORMAT VARCHAR(20),
	STATUS VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO LEGALITIES VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE SETS (
	ID INTEGER,
	BASESETSIZE INTEGER,
	BLOCK VARCHAR(20),
	BOOSTER VARCHAR(20),
	CODE VARCHAR(20),
	ISFOILONLY INTEGER,
	ISFOREIGNONLY INTEGER,
	ISNONFOILONLY INTEGER,
	ISONLINEONLY INTEGER,
	ISPARTIALPREVIEW INTEGER,
	KEYRUNE_CODE VARCHAR(20),
	MCMID INTEGER,
	MCMIDEXTRAS INTEGER,
	MCMNAME VARCHAR(20),
	MTGOCODE VARCHAR(20),
	NAME VARCHAR(20),
	PARENTCODE VARCHAR(20),
	RELEASEDATE DATE,
	TCGPLAYERGROUPID INTEGER,
	TOTALSETSIZE INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO SETS VALUES (4, 5, 'COMMANDER', '2147483648', '2147483648', 6, 7, 8, 9, 10, '2147483648', 11, 12, '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', 13, 14, '2147483648');
CREATE TABLE SET_TRANSLATIONS (
	ID INTEGER,
	LANGUAGE VARCHAR(20),
	SETCODE VARCHAR(20),
	TRANSLATION VARCHAR(20)
);
INSERT INTO SET_TRANSLATIONS VALUES (15, 'PORTUGUESE (BRASIL)', '2147483648', '2147483648');
CREATE TABLE RULINGS (
	ID INTEGER,
	DATE DATE,
	TEXT VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO RULINGS VALUES (0, '1970-01-01', '2147483648', '2147483648');
-- ----------sql1------------
-- 1
SELECT COUNT(*) FROM SETS INNER JOIN SET_TRANSLATIONS ON SETS.CODE = SET_TRANSLATIONS.SETCODE WHERE SETS.BLOCK = 'COMMANDER' AND SET_TRANSLATIONS.LANGUAGE = 'PORTUGUESE (BRASIL)';
-- ----------sql2------------
-- 0
SELECT COUNT(T1.ID) FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T2.LANGUAGE = 'PORTUGUESE (BRAZIL)' AND T1.BLOCK = 'COMMANDER';
",0.101612,SELECT COUNT(*) FROM SETS INNER JOIN SET_TRANSLATIONS ON SETS.CODE = SET_TRANSLATIONS.SETCODE WHERE SETS.BLOCK = 'COMMANDER' AND SET_TRANSLATIONS.LANGUAGE = 'PORTUGUESE (BRASIL)',SELECT COUNT(T1.ID) FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T2.LANGUAGE = 'PORTUGUESE (BRAZIL)' AND T1.BLOCK = 'COMMANDER',
1,406,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__STATUS`,,SELECT CARDS.ID FROM CARDS WHERE CARDS.TYPES = 'CREATURE' AND CARDS.STATUS = 'LEGAL',SELECT T1.ID FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID INNER JOIN LEGALITIES AS T3 ON T1.UUID = T3.UUID WHERE T3.STATUS = 'LEGAL' AND T1.TYPES = 'CREATURE',
2,406,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__STATUS`,,SELECT CARDS.ID FROM CARDS WHERE CARDS.TYPES = 'CREATURE' AND CARDS.STATUS = 'LEGAL',SELECT T1.ID FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID INNER JOIN LEGALITIES AS T3 ON T1.UUID = T3.UUID WHERE T3.STATUS = 'LEGAL' AND T1.TYPES = 'CREATURE',
3,406,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__STATUS`,,SELECT CARDS.ID FROM CARDS WHERE CARDS.TYPES = 'CREATURE' AND CARDS.STATUS = 'LEGAL',SELECT T1.ID FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID INNER JOIN LEGALITIES AS T3 ON T1.UUID = T3.UUID WHERE T3.STATUS = 'LEGAL' AND T1.TYPES = 'CREATURE',
1,407,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,"SELECT SUBTYPES, SUPERTYPES FROM CARDS WHERE LANGUAGE = 'GERMAN' AND SUBTYPES IS NOT NULL AND SUPERTYPES IS NOT NULL","SELECT T1.SUBTYPES, T1.SUPERTYPES FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T2.LANGUAGE = 'GERMAN' AND T1.SUBTYPES IS NOT NULL AND T1.SUPERTYPES IS NOT NULL",
2,407,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,"SELECT SUBTYPES, SUPERTYPES FROM CARDS WHERE LANGUAGE = 'GERMAN' AND SUBTYPES IS NOT NULL AND SUPERTYPES IS NOT NULL","SELECT T1.SUBTYPES, T1.SUPERTYPES FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T2.LANGUAGE = 'GERMAN' AND T1.SUBTYPES IS NOT NULL AND T1.SUPERTYPES IS NOT NULL",
3,407,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,"SELECT SUBTYPES, SUPERTYPES FROM CARDS WHERE LANGUAGE = 'GERMAN' AND SUBTYPES IS NOT NULL AND SUPERTYPES IS NOT NULL","SELECT T1.SUBTYPES, T1.SUPERTYPES FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T2.LANGUAGE = 'GERMAN' AND T1.SUBTYPES IS NOT NULL AND T1.SUPERTYPES IS NOT NULL",
1,408,ERROR,"NotImplementedError: {'like': ['CARDS__TEXT', {'literal': '%TRIGGERED ABILITY%'}]}",,SELECT COUNT(*) FROM CARDS WHERE (CARDS.POWER IS NULL OR CARDS.POWER = '*') AND CARDS.TEXT LIKE '%TRIGGERED ABILITY%',SELECT T2.TEXT FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID WHERE (T1.POWER IS NULL OR T1.POWER = '*') AND T2.TEXT LIKE '%TRIGGERED ABILITY%',
2,408,ERROR,"NotImplementedError: {'like': ['CARDS__TEXT', {'literal': '%TRIGGERED ABILITY%'}]}",,SELECT COUNT(*) FROM CARDS WHERE (CARDS.POWER IS NULL OR CARDS.POWER = '*') AND CARDS.TEXT LIKE '%TRIGGERED ABILITY%',SELECT T2.TEXT FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID WHERE (T1.POWER IS NULL OR T1.POWER = '*') AND T2.TEXT LIKE '%TRIGGERED ABILITY%',
3,408,ERROR,"NotImplementedError: {'like': ['CARDS__TEXT', {'literal': '%TRIGGERED ABILITY%'}]}",,SELECT COUNT(*) FROM CARDS WHERE (CARDS.POWER IS NULL OR CARDS.POWER = '*') AND CARDS.TEXT LIKE '%TRIGGERED ABILITY%',SELECT T2.TEXT FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID WHERE (T1.POWER IS NULL OR T1.POWER = '*') AND T2.TEXT LIKE '%TRIGGERED ABILITY%',
1,409,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FORMAT`,,SELECT COUNT(*) FROM CARDS WHERE FORMAT = 'PREMODERN' AND RULING_TEXT = 'THIS IS A TRIGGERED MANA ABILITY.' AND SIDE IS NULL,SELECT COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID INNER JOIN RULINGS AS T3 ON T1.UUID = T3.UUID WHERE T2.FORMAT = 'PREMODERN' AND T3.TEXT = 'THIS IS A TRIGGERED MANA ABILITY.' AND T1.SIDE IS NULL,
2,409,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FORMAT`,,SELECT COUNT(*) FROM CARDS WHERE FORMAT = 'PREMODERN' AND RULING_TEXT = 'THIS IS A TRIGGERED MANA ABILITY.' AND SIDE IS NULL,SELECT COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID INNER JOIN RULINGS AS T3 ON T1.UUID = T3.UUID WHERE T2.FORMAT = 'PREMODERN' AND T3.TEXT = 'THIS IS A TRIGGERED MANA ABILITY.' AND T1.SIDE IS NULL,
3,409,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FORMAT`,,SELECT COUNT(*) FROM CARDS WHERE FORMAT = 'PREMODERN' AND RULING_TEXT = 'THIS IS A TRIGGERED MANA ABILITY.' AND SIDE IS NULL,SELECT COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID INNER JOIN RULINGS AS T3 ON T1.UUID = T3.UUID WHERE T2.FORMAT = 'PREMODERN' AND T3.TEXT = 'THIS IS A TRIGGERED MANA ABILITY.' AND T1.SIDE IS NULL,
1,410,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FORMAT`,,SELECT CARDS.CARD_ID FROM CARDS WHERE CARDS.ARTIST = 'ERICA YANG' AND CARDS.FORMAT = 'PAUPER' AND CARDS.AVAILABILITY = 'PAPER',SELECT T1.ID FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.ARTIST = 'ERICA YANG' AND T2.FORMAT = 'PAUPER' AND T1.AVAILABILITY = 'PAPER',
2,410,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FORMAT`,,SELECT CARDS.CARD_ID FROM CARDS WHERE CARDS.ARTIST = 'ERICA YANG' AND CARDS.FORMAT = 'PAUPER' AND CARDS.AVAILABILITY = 'PAPER',SELECT T1.ID FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.ARTIST = 'ERICA YANG' AND T2.FORMAT = 'PAUPER' AND T1.AVAILABILITY = 'PAPER',
3,410,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FORMAT`,,SELECT CARDS.CARD_ID FROM CARDS WHERE CARDS.ARTIST = 'ERICA YANG' AND CARDS.FORMAT = 'PAUPER' AND CARDS.AVAILABILITY = 'PAPER',SELECT T1.ID FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.ARTIST = 'ERICA YANG' AND T2.FORMAT = 'PAUPER' AND T1.AVAILABILITY = 'PAPER',
1,411,ERROR,"NotImplementedError: {'like': ['T2__FLAVORTEXT', {'literal': '%DAS PERFEKTE GEGENMITTEL ZU EINER DICHTEN FORMATION%'}]}",,SELECT CARDS.ARTIST FROM CARDS WHERE CARDS.TEXT = 'DAS PERFEKTE GEGENMITTEL ZU EINER DICHTEN FORMATION';,SELECT DISTINCT T1.ARTIST FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T2.FLAVORTEXT LIKE '%DAS PERFEKTE GEGENMITTEL ZU EINER DICHTEN FORMATION%',
2,411,ERROR,"NotImplementedError: {'like': ['T2__FLAVORTEXT', {'literal': '%DAS PERFEKTE GEGENMITTEL ZU EINER DICHTEN FORMATION%'}]}",,SELECT CARDS.ARTIST FROM CARDS WHERE CARDS.TEXT = 'DAS PERFEKTE GEGENMITTEL ZU EINER DICHTEN FORMATION';,SELECT DISTINCT T1.ARTIST FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T2.FLAVORTEXT LIKE '%DAS PERFEKTE GEGENMITTEL ZU EINER DICHTEN FORMATION%',
3,411,ERROR,"NotImplementedError: {'like': ['T2__FLAVORTEXT', {'literal': '%DAS PERFEKTE GEGENMITTEL ZU EINER DICHTEN FORMATION%'}]}",,SELECT CARDS.ARTIST FROM CARDS WHERE CARDS.TEXT = 'DAS PERFEKTE GEGENMITTEL ZU EINER DICHTEN FORMATION';,SELECT DISTINCT T1.ARTIST FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T2.FLAVORTEXT LIKE '%DAS PERFEKTE GEGENMITTEL ZU EINER DICHTEN FORMATION%',
1,412,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.FOREIGNNAME FROM CARDS WHERE CARDS.TYPE = 'CREATURE' AND CARDS.LAYOUT = 'NORMAL' AND CARDS.BORDERCOLOR = 'BLACK' AND CARDS.ARTIST = 'MATTHEW D. WILSON' AND CARDS.LANGUAGE = 'FRENCH',SELECT NAME FROM FOREIGN_DATA WHERE UUID IN ( SELECT UUID FROM CARDS WHERE TYPES = 'CREATURE' AND LAYOUT = 'NORMAL' AND BORDERCOLOR = 'BLACK' AND ARTIST = 'MATTHEW D. WILSON' ) AND LANGUAGE = 'FRENCH',
2,412,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.FOREIGNNAME FROM CARDS WHERE CARDS.TYPE = 'CREATURE' AND CARDS.LAYOUT = 'NORMAL' AND CARDS.BORDERCOLOR = 'BLACK' AND CARDS.ARTIST = 'MATTHEW D. WILSON' AND CARDS.LANGUAGE = 'FRENCH',SELECT NAME FROM FOREIGN_DATA WHERE UUID IN ( SELECT UUID FROM CARDS WHERE TYPES = 'CREATURE' AND LAYOUT = 'NORMAL' AND BORDERCOLOR = 'BLACK' AND ARTIST = 'MATTHEW D. WILSON' ) AND LANGUAGE = 'FRENCH',
3,412,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.FOREIGNNAME FROM CARDS WHERE CARDS.TYPE = 'CREATURE' AND CARDS.LAYOUT = 'NORMAL' AND CARDS.BORDERCOLOR = 'BLACK' AND CARDS.ARTIST = 'MATTHEW D. WILSON' AND CARDS.LANGUAGE = 'FRENCH',SELECT NAME FROM FOREIGN_DATA WHERE UUID IN ( SELECT UUID FROM CARDS WHERE TYPES = 'CREATURE' AND LAYOUT = 'NORMAL' AND BORDERCOLOR = 'BLACK' AND ARTIST = 'MATTHEW D. WILSON' ) AND LANGUAGE = 'FRENCH',
1,413,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute DATE`,,SELECT COUNT(*) FROM CARDS WHERE RARITY = 'RARE' AND DATE = '2007-02-01',SELECT COUNT(DISTINCT T1.ID) FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID WHERE T1.RARITY = 'RARE' AND T2.DATE = '2007-02-01',
2,413,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute DATE`,,SELECT COUNT(*) FROM CARDS WHERE RARITY = 'RARE' AND DATE = '2007-02-01',SELECT COUNT(DISTINCT T1.ID) FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID WHERE T1.RARITY = 'RARE' AND T2.DATE = '2007-02-01',
3,413,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute DATE`,,SELECT COUNT(*) FROM CARDS WHERE RARITY = 'RARE' AND DATE = '2007-02-01',SELECT COUNT(DISTINCT T1.ID) FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T1.UUID = T2.UUID WHERE T1.RARITY = 'RARE' AND T2.DATE = '2007-02-01',
1,414,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__BASESETSIZE`,,SELECT CARDS.LANGUAGE FROM CARDS WHERE CARDS.BASESETSIZE = 180 AND CARDS.BLOCK = 'RAVNICA',SELECT T2.LANGUAGE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T1.BLOCK = 'RAVNICA' AND T1.BASESETSIZE = 180,
2,414,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__BASESETSIZE`,,SELECT CARDS.LANGUAGE FROM CARDS WHERE CARDS.BASESETSIZE = 180 AND CARDS.BLOCK = 'RAVNICA',SELECT T2.LANGUAGE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T1.BLOCK = 'RAVNICA' AND T1.BASESETSIZE = 180,
3,414,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__BASESETSIZE`,,SELECT CARDS.LANGUAGE FROM CARDS WHERE CARDS.BASESETSIZE = 180 AND CARDS.BLOCK = 'RAVNICA',SELECT T2.LANGUAGE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T1.BLOCK = 'RAVNICA' AND T1.BASESETSIZE = 180,
1,415,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FORMAT`,,SELECT CAST(COUNT(*) FILTER (WHERE CARDS.HASCONTENTWARNING = 0) AS REAL) * 100 / COUNT(*) FROM CARDS WHERE CARDS.FORMAT = 'COMMANDER' AND CARDS.STATUS = 'LEGAL',SELECT CAST(SUM(CASE WHEN T1.HASCONTENTWARNING = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T2.FORMAT = 'COMMANDER' AND T2.STATUS = 'LEGAL',
2,415,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FORMAT`,,SELECT CAST(COUNT(*) FILTER (WHERE CARDS.HASCONTENTWARNING = 0) AS REAL) * 100 / COUNT(*) FROM CARDS WHERE CARDS.FORMAT = 'COMMANDER' AND CARDS.STATUS = 'LEGAL',SELECT CAST(SUM(CASE WHEN T1.HASCONTENTWARNING = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T2.FORMAT = 'COMMANDER' AND T2.STATUS = 'LEGAL',
3,415,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FORMAT`,,SELECT CAST(COUNT(*) FILTER (WHERE CARDS.HASCONTENTWARNING = 0) AS REAL) * 100 / COUNT(*) FROM CARDS WHERE CARDS.FORMAT = 'COMMANDER' AND CARDS.STATUS = 'LEGAL',SELECT CAST(SUM(CASE WHEN T1.HASCONTENTWARNING = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T2.FORMAT = 'COMMANDER' AND T2.STATUS = 'LEGAL',
1,416,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT CAST(COUNT(*) FILTER (WHERE LANGUAGE = 'FRENCH' AND (POWER IS NULL OR POWER = '*')) AS REAL) * 100 / COUNT(*) FILTER (WHERE POWER IS NULL OR POWER = '*') FROM CARDS,SELECT CAST(SUM(CASE WHEN T2.LANGUAGE = 'FRENCH' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T1.POWER IS NULL OR T1.POWER = '*',
2,416,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT CAST(COUNT(*) FILTER (WHERE LANGUAGE = 'FRENCH' AND (POWER IS NULL OR POWER = '*')) AS REAL) * 100 / COUNT(*) FILTER (WHERE POWER IS NULL OR POWER = '*') FROM CARDS,SELECT CAST(SUM(CASE WHEN T2.LANGUAGE = 'FRENCH' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T1.POWER IS NULL OR T1.POWER = '*',
3,416,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT CAST(COUNT(*) FILTER (WHERE LANGUAGE = 'FRENCH' AND (POWER IS NULL OR POWER = '*')) AS REAL) * 100 / COUNT(*) FILTER (WHERE POWER IS NULL OR POWER = '*') FROM CARDS,SELECT CAST(SUM(CASE WHEN T2.LANGUAGE = 'FRENCH' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T1.UUID = T2.UUID WHERE T1.POWER IS NULL OR T1.POWER = '*',
1,417,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT CAST(COUNT(*) FILTER (WHERE LANGUAGE = 'JAPANESE' AND TYPE = 'EXPANSION') AS REAL) * 100 / COUNT(*) FILTER (WHERE LANGUAGE = 'JAPANESE') FROM SETS,SELECT CAST(SUM(CASE WHEN T2.LANGUAGE = 'JAPANESE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T1.TYPE = 'EXPANSION',
2,417,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT CAST(COUNT(*) FILTER (WHERE LANGUAGE = 'JAPANESE' AND TYPE = 'EXPANSION') AS REAL) * 100 / COUNT(*) FILTER (WHERE LANGUAGE = 'JAPANESE') FROM SETS,SELECT CAST(SUM(CASE WHEN T2.LANGUAGE = 'JAPANESE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T1.TYPE = 'EXPANSION',
3,417,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT CAST(COUNT(*) FILTER (WHERE LANGUAGE = 'JAPANESE' AND TYPE = 'EXPANSION') AS REAL) * 100 / COUNT(*) FILTER (WHERE LANGUAGE = 'JAPANESE') FROM SETS,SELECT CAST(SUM(CASE WHEN T2.LANGUAGE = 'JAPANESE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T1.TYPE = 'EXPANSION',
1,418,True,,0.0473979999999999,SELECT CARDS.AVAILABILITY FROM CARDS WHERE CARDS.ARTIST = 'DAREN BADER',SELECT DISTINCT AVAILABILITY FROM CARDS WHERE ARTIST = 'DAREN BADER',
1,419,True,,0.069558,SELECT COUNT(*) FROM CARDS WHERE BORDERCOLOR = 'BORDERLESS' AND EDHRECRANK > 12000,SELECT COUNT(ID) FROM CARDS WHERE EDHRECRANK > 12000 AND BORDERCOLOR = 'BORDERLESS',
1,420,True,,0.0809899999999999,SELECT COUNT(*) FROM CARDS WHERE ISOVERSIZED = 1 AND ISREPRINT = 1 AND ISPROMO = 1,SELECT COUNT(ID) FROM CARDS WHERE ISOVERSIZED = 1 AND ISREPRINT = 1 AND ISPROMO = 1,
1,421,ERROR,"NotImplementedError: {'like': ['POWER', {'literal': '%*%'}]}",,SELECT CARDS.NAME FROM CARDS WHERE (CARDS.POWER IS NULL OR CARDS.POWER = '*') AND CARDS.PROMOTYPES = 'ARENALEAGUE' ORDER BY CARDS.NAME ASC LIMIT 3,SELECT NAME FROM CARDS WHERE (POWER IS NULL OR POWER LIKE '%*%') AND PROMOTYPES = 'ARENALEAGUE' ORDER BY NAME LIMIT 3,
2,421,ERROR,"NotImplementedError: {'like': ['POWER', {'literal': '%*%'}]}",,SELECT CARDS.NAME FROM CARDS WHERE (CARDS.POWER IS NULL OR CARDS.POWER = '*') AND CARDS.PROMOTYPES = 'ARENALEAGUE' ORDER BY CARDS.NAME ASC LIMIT 3,SELECT NAME FROM CARDS WHERE (POWER IS NULL OR POWER LIKE '%*%') AND PROMOTYPES = 'ARENALEAGUE' ORDER BY NAME LIMIT 3,
3,421,ERROR,"NotImplementedError: {'like': ['POWER', {'literal': '%*%'}]}",,SELECT CARDS.NAME FROM CARDS WHERE (CARDS.POWER IS NULL OR CARDS.POWER = '*') AND CARDS.PROMOTYPES = 'ARENALEAGUE' ORDER BY CARDS.NAME ASC LIMIT 3,SELECT NAME FROM CARDS WHERE (POWER IS NULL OR POWER LIKE '%*%') AND PROMOTYPES = 'ARENALEAGUE' ORDER BY NAME LIMIT 3,
1,422,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.LANGUAGE FROM CARDS WHERE CARDS.MULTIVERSEID = 149934;,SELECT LANGUAGE FROM FOREIGN_DATA WHERE MULTIVERSEID = 149934,
2,422,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.LANGUAGE FROM CARDS WHERE CARDS.MULTIVERSEID = 149934;,SELECT LANGUAGE FROM FOREIGN_DATA WHERE MULTIVERSEID = 149934,
3,422,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.LANGUAGE FROM CARDS WHERE CARDS.MULTIVERSEID = 149934;,SELECT LANGUAGE FROM FOREIGN_DATA WHERE MULTIVERSEID = 149934,
1,423,True,,0.05566,"SELECT CARDKINGDOMFOILID, CARDKINGDOMID FROM CARDS WHERE CARDKINGDOMFOILID IS NOT NULL AND CARDKINGDOMID IS NOT NULL ORDER BY CARDKINGDOMFOILID ASC LIMIT 3","SELECT CARDKINGDOMFOILID, CARDKINGDOMID FROM CARDS WHERE CARDKINGDOMFOILID IS NOT NULL AND CARDKINGDOMID IS NOT NULL ORDER BY CARDKINGDOMFOILID LIMIT 3",
1,424,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT COUNT(*) FROM CARDS WHERE ISTEXTLESS = 1 AND LAYOUT = 'NORMAL') AS REAL) / (SELECT COUNT(*) FROM CARDS WHERE ISTEXTLESS = 1)) * 100,SELECT CAST(SUM(CASE WHEN ISTEXTLESS = 1 AND LAYOUT = 'NORMAL' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM CARDS,
2,424,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT COUNT(*) FROM CARDS WHERE ISTEXTLESS = 1 AND LAYOUT = 'NORMAL') AS REAL) / (SELECT COUNT(*) FROM CARDS WHERE ISTEXTLESS = 1)) * 100,SELECT CAST(SUM(CASE WHEN ISTEXTLESS = 1 AND LAYOUT = 'NORMAL' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM CARDS,
3,424,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT COUNT(*) FROM CARDS WHERE ISTEXTLESS = 1 AND LAYOUT = 'NORMAL') AS REAL) / (SELECT COUNT(*) FROM CARDS WHERE ISTEXTLESS = 1)) * 100,SELECT CAST(SUM(CASE WHEN ISTEXTLESS = 1 AND LAYOUT = 'NORMAL' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM CARDS,
1,425,ERROR,"NotImplementedError: {'like': ['CARDS__SUBTYPES', {'literal': '%ANGEL%'}]}",,SELECT CARDS.NUMBER FROM CARDS WHERE CARDS.SIDE IS NULL AND CARDS.SUBTYPES LIKE '%ANGEL%' AND CARDS.SUBTYPES LIKE '%WIZARD%',"SELECT ID FROM CARDS WHERE SUBTYPES = 'ANGEL,WIZARD' AND SIDE IS NULL",
2,425,ERROR,"NotImplementedError: {'like': ['CARDS__SUBTYPES', {'literal': '%ANGEL%'}]}",,SELECT CARDS.NUMBER FROM CARDS WHERE CARDS.SIDE IS NULL AND CARDS.SUBTYPES LIKE '%ANGEL%' AND CARDS.SUBTYPES LIKE '%WIZARD%',"SELECT ID FROM CARDS WHERE SUBTYPES = 'ANGEL,WIZARD' AND SIDE IS NULL",
3,425,ERROR,"NotImplementedError: {'like': ['CARDS__SUBTYPES', {'literal': '%ANGEL%'}]}",,SELECT CARDS.NUMBER FROM CARDS WHERE CARDS.SIDE IS NULL AND CARDS.SUBTYPES LIKE '%ANGEL%' AND CARDS.SUBTYPES LIKE '%WIZARD%',"SELECT ID FROM CARDS WHERE SUBTYPES = 'ANGEL,WIZARD' AND SIDE IS NULL",
1,426,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CARDS (
	ID INTEGER,
	ARTIST VARCHAR(20),
	ASCIINAME VARCHAR(20),
	AVAILABILITY VARCHAR(20),
	BORDERCOLOR VARCHAR(20),
	CARDKINGDOMFOILID VARCHAR(20),
	CARDKINGDOMID VARCHAR(20),
	COLORIDENTITY VARCHAR(20),
	COLORINDICATOR VARCHAR(20),
	COLORS VARCHAR(20),
	CONVERTEDMANACOST INTEGER,
	DUELDECK VARCHAR(20),
	EDHRECRANK INTEGER,
	FACECONVERTEDMANACOST INTEGER,
	FACENAME VARCHAR(20),
	FLAVORNAME VARCHAR(20),
	FLAVORTEXT VARCHAR(20),
	FRAMEEFFECTS VARCHAR(20),
	FRAMEVERSION VARCHAR(20),
	HAND VARCHAR(20),
	HASALTERNATIVEDECKLIMIT INTEGER,
	HASCONTENTWARNING INTEGER,
	HASFOIL INTEGER,
	HASNONSFOIL INTEGER,
	ISALTERNATIVE INTEGER,
	ISFULLART INTEGER,
	ISONLINEONLY INTEGER,
	ISOVERSIZED INTEGER,
	ISPROMO INTEGER,
	ISREPRINT INTEGER,
	ISRESERVED INTEGER,
	ISSTARTER INTEGER,
	ISSTORYSPOTLIGHT INTEGER,
	ISTEXTLESS INTEGER,
	ISTIMESHIFTED INTEGER,
	KEYWORDS VARCHAR(20),
	LAYOUT VARCHAR(20),
	LEADERSHIPSKILLS VARCHAR(20),
	LIFE VARCHAR(20),
	LOYALTY VARCHAR(20),
	MANACOST VARCHAR(20),
	MCMID VARCHAR(20),
	MCMMETAID VARCHAR(20),
	MTGARENAID VARCHAR(20),
	MTGJSONV4ID VARCHAR(20),
	MTGOFOILID VARCHAR(20),
	MTGOID VARCHAR(20),
	MULTIVERSEID VARCHAR(20),
	NAME VARCHAR(20),
	NUMBER VARCHAR(20),
	ORIGINALRELEASEDATE VARCHAR(20),
	ORIGINALTEXT VARCHAR(20),
	ORIGINALTYPE VARCHAR(20),
	OTHERFACEIDS VARCHAR(20),
	POWER VARCHAR(20),
	PRINTINGS VARCHAR(20),
	PROMOTYPES VARCHAR(20),
	PURCHASEURLS VARCHAR(20),
	RARITY VARCHAR(20),
	SCRYFALLID VARCHAR(20),
	SCRYFALLILLUSTRATIONID VARCHAR(20),
	SCRYFALLORACLEID VARCHAR(20),
	SETCODE VARCHAR(20),
	SIDE VARCHAR(20),
	SUBTYPES VARCHAR(20),
	SUPERTYPES VARCHAR(20),
	TCGPLAYERPRODUCTID VARCHAR(20),
	TEXT VARCHAR(20),
	TOUGHNESS VARCHAR(20),
	TYPE VARCHAR(20),
	TYPES VARCHAR(20),
	UUID VARCHAR(20),
	VARIATIONS VARCHAR(20),
	WATERMARK VARCHAR(20)
);
INSERT INTO CARDS VALUES (0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '2147483648', 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE FOREIGN_DATA (
	ID INTEGER,
	FLAVORTEXT VARCHAR(20),
	LANGUAGE VARCHAR(20),
	MULTIVERSEID INTEGER,
	NAME VARCHAR(20),
	TEXT VARCHAR(20),
	TYPE VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO FOREIGN_DATA VALUES (0, '2147483648', '2147483648', 0, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE LEGALITIES (
	ID INTEGER,
	FORMAT VARCHAR(20),
	STATUS VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO LEGALITIES VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE SETS (
	ID INTEGER,
	BASESETSIZE INTEGER,
	BLOCK VARCHAR(20),
	BOOSTER VARCHAR(20),
	CODE VARCHAR(20),
	ISFOILONLY INTEGER,
	ISFOREIGNONLY INTEGER,
	ISNONFOILONLY INTEGER,
	ISONLINEONLY INTEGER,
	ISPARTIALPREVIEW INTEGER,
	KEYRUNE_CODE VARCHAR(20),
	MCMID INTEGER,
	MCMIDEXTRAS INTEGER,
	MCMNAME VARCHAR(20),
	MTGOCODE VARCHAR(20),
	NAME VARCHAR(20),
	PARENTCODE VARCHAR(20),
	RELEASEDATE DATE,
	TCGPLAYERGROUPID INTEGER,
	TOTALSETSIZE INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO SETS VALUES (0, 0, '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, '2147483648', 0, 0, '2147483648', '', '2147483648', '2147483648', '1970-01-01', 0, 0, '2147483648');
CREATE TABLE SET_TRANSLATIONS (
	ID INTEGER,
	LANGUAGE VARCHAR(20),
	SETCODE VARCHAR(20),
	TRANSLATION VARCHAR(20)
);
INSERT INTO SET_TRANSLATIONS VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE RULINGS (
	ID INTEGER,
	DATE DATE,
	TEXT VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO RULINGS VALUES (0, '1970-01-01', '2147483648', '2147483648');
-- ----------sql1------------
-- 2147483648
SELECT SETS.NAME FROM SETS WHERE SETS.MTGOCODE IS NULL OR SETS.MTGOCODE = '' ORDER BY SETS.NAME ASC LIMIT 3;
-- ----------sql2------------
SELECT NAME FROM SETS WHERE MTGOCODE IS NULL ORDER BY NAME LIMIT 3;
",0.053077,SELECT SETS.NAME FROM SETS WHERE SETS.MTGOCODE IS NULL OR SETS.MTGOCODE = '' ORDER BY SETS.NAME ASC LIMIT 3,SELECT NAME FROM SETS WHERE MTGOCODE IS NULL ORDER BY NAME LIMIT 3,
1,427,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__SETCODE`,,SELECT CARDS.LANGUAGE FROM SETS INNER JOIN CARDS ON SETS.CODE = CARDS.SETCODE WHERE SETS.MCMNAME = 'ARCHENEMY' AND SETS.SETCODE = 'ARC',SELECT T2.LANGUAGE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T1.MCMNAME = 'ARCHENEMY' AND T2.SETCODE = 'ARC',
2,427,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__SETCODE`,,SELECT CARDS.LANGUAGE FROM SETS INNER JOIN CARDS ON SETS.CODE = CARDS.SETCODE WHERE SETS.MCMNAME = 'ARCHENEMY' AND SETS.SETCODE = 'ARC',SELECT T2.LANGUAGE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T1.MCMNAME = 'ARCHENEMY' AND T2.SETCODE = 'ARC',
3,427,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__SETCODE`,,SELECT CARDS.LANGUAGE FROM SETS INNER JOIN CARDS ON SETS.CODE = CARDS.SETCODE WHERE SETS.MCMNAME = 'ARCHENEMY' AND SETS.SETCODE = 'ARC',SELECT T2.LANGUAGE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T1.MCMNAME = 'ARCHENEMY' AND T2.SETCODE = 'ARC',
1,428,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__TRANSLATION`,,"SELECT SETS.NAME, SETS.TRANSLATION FROM SETS WHERE SETS.ID = 5","SELECT T1.NAME, T2.TRANSLATION FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T2.ID = 5 GROUP BY T1.NAME, T2.TRANSLATION",
2,428,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__TRANSLATION`,,"SELECT SETS.NAME, SETS.TRANSLATION FROM SETS WHERE SETS.ID = 5","SELECT T1.NAME, T2.TRANSLATION FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T2.ID = 5 GROUP BY T1.NAME, T2.TRANSLATION",
3,428,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__TRANSLATION`,,"SELECT SETS.NAME, SETS.TRANSLATION FROM SETS WHERE SETS.ID = 5","SELECT T1.NAME, T2.TRANSLATION FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T2.ID = 5 GROUP BY T1.NAME, T2.TRANSLATION",
1,429,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__LANGUAGE`,,"SELECT SETS.LANGUAGE, SETS.EXPANSION_TYPE FROM SETS WHERE SETS.ID = 206","SELECT T2.LANGUAGE, T1.TYPE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T2.ID = 206",
2,429,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__LANGUAGE`,,"SELECT SETS.LANGUAGE, SETS.EXPANSION_TYPE FROM SETS WHERE SETS.ID = 206","SELECT T2.LANGUAGE, T1.TYPE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T2.ID = 206",
3,429,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__LANGUAGE`,,"SELECT SETS.LANGUAGE, SETS.EXPANSION_TYPE FROM SETS WHERE SETS.ID = 206","SELECT T2.LANGUAGE, T1.TYPE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T2.ID = 206",
1,430,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,"SELECT CARDS.SET_ID, CARDS.CARD_ID FROM CARDS WHERE CARDS.LANGUAGE = 'ITALIAN' AND CARDS.BLOCK = 'SHADOWMOOR' ORDER BY CARDS.NAME ASC LIMIT 2","SELECT T1.NAME, T1.ID FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T1.BLOCK = 'SHADOWMOOR' AND T2.LANGUAGE = 'ITALIAN' ORDER BY T1.ID LIMIT 2",
2,430,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,"SELECT CARDS.SET_ID, CARDS.CARD_ID FROM CARDS WHERE CARDS.LANGUAGE = 'ITALIAN' AND CARDS.BLOCK = 'SHADOWMOOR' ORDER BY CARDS.NAME ASC LIMIT 2","SELECT T1.NAME, T1.ID FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T1.BLOCK = 'SHADOWMOOR' AND T2.LANGUAGE = 'ITALIAN' ORDER BY T1.ID LIMIT 2",
3,430,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,"SELECT CARDS.SET_ID, CARDS.CARD_ID FROM CARDS WHERE CARDS.LANGUAGE = 'ITALIAN' AND CARDS.BLOCK = 'SHADOWMOOR' ORDER BY CARDS.NAME ASC LIMIT 2","SELECT T1.NAME, T1.ID FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T1.BLOCK = 'SHADOWMOOR' AND T2.LANGUAGE = 'ITALIAN' ORDER BY T1.ID LIMIT 2",
1,431,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute ISFOREIGNONLY`,,SELECT SET_ID FROM CARDS WHERE ISFOREIGNONLY = 1 AND ISFOILONLY = 1 AND LANGUAGE = 'JAPANESE';,"SELECT T1.NAME, T1.ID FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T2.LANGUAGE = 'JAPANESE' AND T1.ISFOILONLY = 1 AND T1.ISFOREIGNONLY = 0",
2,431,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute ISFOREIGNONLY`,,SELECT SET_ID FROM CARDS WHERE ISFOREIGNONLY = 1 AND ISFOILONLY = 1 AND LANGUAGE = 'JAPANESE';,"SELECT T1.NAME, T1.ID FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T2.LANGUAGE = 'JAPANESE' AND T1.ISFOILONLY = 1 AND T1.ISFOREIGNONLY = 0",
3,431,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute ISFOREIGNONLY`,,SELECT SET_ID FROM CARDS WHERE ISFOREIGNONLY = 1 AND ISFOILONLY = 1 AND LANGUAGE = 'JAPANESE';,"SELECT T1.NAME, T1.ID FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T2.LANGUAGE = 'JAPANESE' AND T1.ISFOILONLY = 1 AND T1.ISFOREIGNONLY = 0",
1,432,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT SETNAME FROM SETS WHERE LANGUAGE = 'RUSSIAN' ORDER BY BASESETSIZE DESC LIMIT 1,SELECT T1.ID FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T2.LANGUAGE = 'RUSSIAN' GROUP BY T1.BASESETSIZE ORDER BY T1.BASESETSIZE DESC LIMIT 1,
2,432,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT SETNAME FROM SETS WHERE LANGUAGE = 'RUSSIAN' ORDER BY BASESETSIZE DESC LIMIT 1,SELECT T1.ID FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T2.LANGUAGE = 'RUSSIAN' GROUP BY T1.BASESETSIZE ORDER BY T1.BASESETSIZE DESC LIMIT 1,
3,432,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT SETNAME FROM SETS WHERE LANGUAGE = 'RUSSIAN' ORDER BY BASESETSIZE DESC LIMIT 1,SELECT T1.ID FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE WHERE T2.LANGUAGE = 'RUSSIAN' GROUP BY T1.BASESETSIZE ORDER BY T1.BASESETSIZE DESC LIMIT 1,
1,433,ERROR,"CorrelatedQueryError: Not supported feature: CorrelatedQueryError {'select': {'value': {'count': '*'}}, 'from': 'CARDS', 'where': {'and': [{'eq': ['LANGUAGE', {'literal': 'CHINESE SIMPLIFIED'}]}, {'eq': ['ISONLINEONLY', 1]}]}}",,SELECT (CAST((SELECT COUNT(*) FROM CARDS WHERE LANGUAGE = 'CHINESE SIMPLIFIED' AND ISONLINEONLY = 1) AS REAL) / COUNT(*) * 100) AS PERCENTAGE FROM CARDS,SELECT CAST(SUM(CASE WHEN T2.LANGUAGE = 'CHINESE SIMPLIFIED' AND T1.ISONLINEONLY = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE,
2,433,ERROR,"CorrelatedQueryError: Not supported feature: CorrelatedQueryError {'select': {'value': {'count': '*'}}, 'from': 'CARDS', 'where': {'and': [{'eq': ['LANGUAGE', {'literal': 'CHINESE SIMPLIFIED'}]}, {'eq': ['ISONLINEONLY', 1]}]}}",,SELECT (CAST((SELECT COUNT(*) FROM CARDS WHERE LANGUAGE = 'CHINESE SIMPLIFIED' AND ISONLINEONLY = 1) AS REAL) / COUNT(*) * 100) AS PERCENTAGE FROM CARDS,SELECT CAST(SUM(CASE WHEN T2.LANGUAGE = 'CHINESE SIMPLIFIED' AND T1.ISONLINEONLY = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE,
3,433,ERROR,"CorrelatedQueryError: Not supported feature: CorrelatedQueryError {'select': {'value': {'count': '*'}}, 'from': 'CARDS', 'where': {'and': [{'eq': ['LANGUAGE', {'literal': 'CHINESE SIMPLIFIED'}]}, {'eq': ['ISONLINEONLY', 1]}]}}",,SELECT (CAST((SELECT COUNT(*) FROM CARDS WHERE LANGUAGE = 'CHINESE SIMPLIFIED' AND ISONLINEONLY = 1) AS REAL) / COUNT(*) * 100) AS PERCENTAGE FROM CARDS,SELECT CAST(SUM(CASE WHEN T2.LANGUAGE = 'CHINESE SIMPLIFIED' AND T1.ISONLINEONLY = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.CODE = T2.SETCODE,
1,434,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT COUNT(*) FROM SETS WHERE LANGUAGE = 'JAPANESE' AND (MTGOCODE IS NULL OR MTGOCODE = ''),SELECT COUNT(T1.ID) FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T2.LANGUAGE = 'JAPANESE'  AND (T1.MTGOCODE IS NULL OR T1.MTGOCODE = ''),
2,434,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT COUNT(*) FROM SETS WHERE LANGUAGE = 'JAPANESE' AND (MTGOCODE IS NULL OR MTGOCODE = ''),SELECT COUNT(T1.ID) FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T2.LANGUAGE = 'JAPANESE'  AND (T1.MTGOCODE IS NULL OR T1.MTGOCODE = ''),
3,434,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT COUNT(*) FROM SETS WHERE LANGUAGE = 'JAPANESE' AND (MTGOCODE IS NULL OR MTGOCODE = ''),SELECT COUNT(T1.ID) FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T2.LANGUAGE = 'JAPANESE'  AND (T1.MTGOCODE IS NULL OR T1.MTGOCODE = ''),
1,435,True,,0.076359,SELECT CARDS.ID FROM CARDS WHERE CARDS.BORDERCOLOR = 'BLACK',SELECT ID FROM CARDS WHERE BORDERCOLOR = 'BLACK' GROUP BY ID,
1,436,True,,0.083865,SELECT CARDS.ID FROM CARDS WHERE CARDS.FRAMEEFFECTS = 'EXTENDEDART',SELECT ID FROM CARDS WHERE FRAMEEFFECTS = 'EXTENDEDART' GROUP BY ID,
1,437,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CARDS (
	ID INTEGER,
	ARTIST VARCHAR(20),
	ASCIINAME VARCHAR(20),
	AVAILABILITY VARCHAR(20),
	BORDERCOLOR VARCHAR(20),
	CARDKINGDOMFOILID VARCHAR(20),
	CARDKINGDOMID VARCHAR(20),
	COLORIDENTITY VARCHAR(20),
	COLORINDICATOR VARCHAR(20),
	COLORS VARCHAR(20),
	CONVERTEDMANACOST INTEGER,
	DUELDECK VARCHAR(20),
	EDHRECRANK INTEGER,
	FACECONVERTEDMANACOST INTEGER,
	FACENAME VARCHAR(20),
	FLAVORNAME VARCHAR(20),
	FLAVORTEXT VARCHAR(20),
	FRAMEEFFECTS VARCHAR(20),
	FRAMEVERSION VARCHAR(20),
	HAND VARCHAR(20),
	HASALTERNATIVEDECKLIMIT INTEGER,
	HASCONTENTWARNING INTEGER,
	HASFOIL INTEGER,
	HASNONSFOIL INTEGER,
	ISALTERNATIVE INTEGER,
	ISFULLART INTEGER,
	ISONLINEONLY INTEGER,
	ISOVERSIZED INTEGER,
	ISPROMO INTEGER,
	ISREPRINT INTEGER,
	ISRESERVED INTEGER,
	ISSTARTER INTEGER,
	ISSTORYSPOTLIGHT INTEGER,
	ISTEXTLESS INTEGER,
	ISTIMESHIFTED INTEGER,
	KEYWORDS VARCHAR(20),
	LAYOUT VARCHAR(20),
	LEADERSHIPSKILLS VARCHAR(20),
	LIFE VARCHAR(20),
	LOYALTY VARCHAR(20),
	MANACOST VARCHAR(20),
	MCMID VARCHAR(20),
	MCMMETAID VARCHAR(20),
	MTGARENAID VARCHAR(20),
	MTGJSONV4ID VARCHAR(20),
	MTGOFOILID VARCHAR(20),
	MTGOID VARCHAR(20),
	MULTIVERSEID VARCHAR(20),
	NAME VARCHAR(20),
	NUMBER VARCHAR(20),
	ORIGINALRELEASEDATE VARCHAR(20),
	ORIGINALTEXT VARCHAR(20),
	ORIGINALTYPE VARCHAR(20),
	OTHERFACEIDS VARCHAR(20),
	POWER VARCHAR(20),
	PRINTINGS VARCHAR(20),
	PROMOTYPES VARCHAR(20),
	PURCHASEURLS VARCHAR(20),
	RARITY VARCHAR(20),
	SCRYFALLID VARCHAR(20),
	SCRYFALLILLUSTRATIONID VARCHAR(20),
	SCRYFALLORACLEID VARCHAR(20),
	SETCODE VARCHAR(20),
	SIDE VARCHAR(20),
	SUBTYPES VARCHAR(20),
	SUPERTYPES VARCHAR(20),
	TCGPLAYERPRODUCTID VARCHAR(20),
	TEXT VARCHAR(20),
	TOUGHNESS VARCHAR(20),
	TYPE VARCHAR(20),
	TYPES VARCHAR(20),
	UUID VARCHAR(20),
	VARIATIONS VARCHAR(20),
	WATERMARK VARCHAR(20)
);
INSERT INTO CARDS VALUES (2, '2147483648', '2147483648', '2147483648', 'BLACK', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '2147483648', 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE FOREIGN_DATA (
	ID INTEGER,
	FLAVORTEXT VARCHAR(20),
	LANGUAGE VARCHAR(20),
	MULTIVERSEID INTEGER,
	NAME VARCHAR(20),
	TEXT VARCHAR(20),
	TYPE VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO FOREIGN_DATA VALUES (0, '2147483648', '2147483648', 0, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE LEGALITIES (
	ID INTEGER,
	FORMAT VARCHAR(20),
	STATUS VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO LEGALITIES VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE SETS (
	ID INTEGER,
	BASESETSIZE INTEGER,
	BLOCK VARCHAR(20),
	BOOSTER VARCHAR(20),
	CODE VARCHAR(20),
	ISFOILONLY INTEGER,
	ISFOREIGNONLY INTEGER,
	ISNONFOILONLY INTEGER,
	ISONLINEONLY INTEGER,
	ISPARTIALPREVIEW INTEGER,
	KEYRUNE_CODE VARCHAR(20),
	MCMID INTEGER,
	MCMIDEXTRAS INTEGER,
	MCMNAME VARCHAR(20),
	MTGOCODE VARCHAR(20),
	NAME VARCHAR(20),
	PARENTCODE VARCHAR(20),
	RELEASEDATE DATE,
	TCGPLAYERGROUPID INTEGER,
	TOTALSETSIZE INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO SETS VALUES (0, 0, '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, '2147483648', 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', 0, 0, '2147483648');
CREATE TABLE SET_TRANSLATIONS (
	ID INTEGER,
	LANGUAGE VARCHAR(20),
	SETCODE VARCHAR(20),
	TRANSLATION VARCHAR(20)
);
INSERT INTO SET_TRANSLATIONS VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE RULINGS (
	ID INTEGER,
	DATE DATE,
	TEXT VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO RULINGS VALUES (0, '1970-01-01', '2147483648', '2147483648');
-- ----------sql1------------
-- 2147483648
SELECT CARDS.NAME FROM CARDS WHERE CARDS.BORDERCOLOR = 'BLACK' AND CARDS.ISFULLART = 1;
-- ----------sql2------------
-- 2
SELECT ID FROM CARDS WHERE BORDERCOLOR = 'BLACK' AND ISFULLART = 1;
",0.0675009999999999,SELECT CARDS.NAME FROM CARDS WHERE CARDS.BORDERCOLOR = 'BLACK' AND CARDS.ISFULLART = 1,SELECT ID FROM CARDS WHERE BORDERCOLOR = 'BLACK' AND ISFULLART = 1,
1,438,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT SET.LANGUAGE FROM SETS WHERE SET.ID = '174';`,,SELECT SET.LANGUAGE FROM SETS WHERE SET.ID = '174';,SELECT LANGUAGE FROM SET_TRANSLATIONS WHERE ID = 174,
2,438,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT SET.LANGUAGE FROM SETS WHERE SET.ID = '174';`,,SELECT SET.LANGUAGE FROM SETS WHERE SET.ID = '174';,SELECT LANGUAGE FROM SET_TRANSLATIONS WHERE ID = 174,
3,438,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT SET.LANGUAGE FROM SETS WHERE SET.ID = '174';`,,SELECT SET.LANGUAGE FROM SETS WHERE SET.ID = '174';,SELECT LANGUAGE FROM SET_TRANSLATIONS WHERE ID = 174,
1,439,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SET_CODE`,,SELECT SET_NAME FROM SETS WHERE SET_CODE = 'ALL';,SELECT NAME FROM SETS WHERE CODE = 'ALL',
2,439,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SET_CODE`,,SELECT SET_NAME FROM SETS WHERE SET_CODE = 'ALL';,SELECT NAME FROM SETS WHERE CODE = 'ALL',
3,439,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SET_CODE`,,SELECT SET_NAME FROM SETS WHERE SET_CODE = 'ALL';,SELECT NAME FROM SETS WHERE CODE = 'ALL',
1,440,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT LANGUAGE FROM CARDS WHERE NAME = 'A PEDRA FELLWAR',SELECT DISTINCT LANGUAGE FROM FOREIGN_DATA WHERE NAME = 'A PEDRA FELLWAR',
2,440,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT LANGUAGE FROM CARDS WHERE NAME = 'A PEDRA FELLWAR',SELECT DISTINCT LANGUAGE FROM FOREIGN_DATA WHERE NAME = 'A PEDRA FELLWAR',
3,440,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT LANGUAGE FROM CARDS WHERE NAME = 'A PEDRA FELLWAR',SELECT DISTINCT LANGUAGE FROM FOREIGN_DATA WHERE NAME = 'A PEDRA FELLWAR',
1,441,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__RELEASE_DATE`,,SELECT SETS.SET_CODE FROM SETS WHERE SETS.RELEASE_DATE = '07/13/2007',SELECT T2.SETCODE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T1.RELEASEDATE = '2007-07-13',
2,441,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__RELEASE_DATE`,,SELECT SETS.SET_CODE FROM SETS WHERE SETS.RELEASE_DATE = '07/13/2007',SELECT T2.SETCODE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T1.RELEASEDATE = '2007-07-13',
3,441,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__RELEASE_DATE`,,SELECT SETS.SET_CODE FROM SETS WHERE SETS.RELEASE_DATE = '07/13/2007',SELECT T2.SETCODE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T1.RELEASEDATE = '2007-07-13',
1,442,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT SET.BASE_SET_SIZE, SET.SET_CODE FROM SET WHERE BLOCK.NAME = 'MASQUES' AND BLOCK.NAME = 'MIRAGE'`",,"SELECT SET.BASE_SET_SIZE, SET.SET_CODE FROM SET WHERE BLOCK.NAME = 'MASQUES' AND BLOCK.NAME = 'MIRAGE'","SELECT DISTINCT T1.BASESETSIZE, T2.SETCODE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T1.BLOCK IN ('MASQUES', 'MIRAGE')",
2,442,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT SET.BASE_SET_SIZE, SET.SET_CODE FROM SET WHERE BLOCK.NAME = 'MASQUES' AND BLOCK.NAME = 'MIRAGE'`",,"SELECT SET.BASE_SET_SIZE, SET.SET_CODE FROM SET WHERE BLOCK.NAME = 'MASQUES' AND BLOCK.NAME = 'MIRAGE'","SELECT DISTINCT T1.BASESETSIZE, T2.SETCODE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T1.BLOCK IN ('MASQUES', 'MIRAGE')",
3,442,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT SET.BASE_SET_SIZE, SET.SET_CODE FROM SET WHERE BLOCK.NAME = 'MASQUES' AND BLOCK.NAME = 'MIRAGE'`",,"SELECT SET.BASE_SET_SIZE, SET.SET_CODE FROM SET WHERE BLOCK.NAME = 'MASQUES' AND BLOCK.NAME = 'MIRAGE'","SELECT DISTINCT T1.BASESETSIZE, T2.SETCODE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T1.BLOCK IN ('MASQUES', 'MIRAGE')",
1,443,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXPANSIONTYPE`,,SELECT SETCODE FROM SETS WHERE EXPANSIONTYPE = 'EXPANSION';,SELECT T2.SETCODE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T1.TYPE = 'EXPANSION' GROUP BY T2.SETCODE,
2,443,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXPANSIONTYPE`,,SELECT SETCODE FROM SETS WHERE EXPANSIONTYPE = 'EXPANSION';,SELECT T2.SETCODE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T1.TYPE = 'EXPANSION' GROUP BY T2.SETCODE,
3,443,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXPANSIONTYPE`,,SELECT SETCODE FROM SETS WHERE EXPANSIONTYPE = 'EXPANSION';,SELECT T2.SETCODE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T1.TYPE = 'EXPANSION' GROUP BY T2.SETCODE,
1,444,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FOREIGN_NAME`,,"SELECT CARDS.FOREIGN_NAME, CARDS.TYPE FROM CARDS WHERE CARDS.WATERMARK = 'BOROS';","SELECT DISTINCT T1.NAME, T1.TYPE FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.WATERMARK = 'BOROS'",
2,444,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FOREIGN_NAME`,,"SELECT CARDS.FOREIGN_NAME, CARDS.TYPE FROM CARDS WHERE CARDS.WATERMARK = 'BOROS';","SELECT DISTINCT T1.NAME, T1.TYPE FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.WATERMARK = 'BOROS'",
3,444,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FOREIGN_NAME`,,"SELECT CARDS.FOREIGN_NAME, CARDS.TYPE FROM CARDS WHERE CARDS.WATERMARK = 'BOROS';","SELECT DISTINCT T1.NAME, T1.TYPE FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.WATERMARK = 'BOROS'",
1,445,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,"SELECT CARDS.LANGUAGE, CARDS.FLAVOR_TEXT, CARDS.TYPE FROM CARDS WHERE CARDS.WATERMARK = 'COLORPIE';","SELECT DISTINCT T2.LANGUAGE, T2.FLAVORTEXT FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.WATERMARK = 'COLORPIE'",
2,445,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,"SELECT CARDS.LANGUAGE, CARDS.FLAVOR_TEXT, CARDS.TYPE FROM CARDS WHERE CARDS.WATERMARK = 'COLORPIE';","SELECT DISTINCT T2.LANGUAGE, T2.FLAVORTEXT FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.WATERMARK = 'COLORPIE'",
3,445,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,"SELECT CARDS.LANGUAGE, CARDS.FLAVOR_TEXT, CARDS.TYPE FROM CARDS WHERE CARDS.WATERMARK = 'COLORPIE';","SELECT DISTINCT T2.LANGUAGE, T2.FLAVORTEXT FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.WATERMARK = 'COLORPIE'",
1,446,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM CARDS WHERE CONVERTEDMANACOST = 10 AND NAME = 'ABYSSAL HORROR') AS REAL) * 100) / (SELECT COUNT(*) FROM CARDS WHERE NAME = 'ABYSSAL HORROR') AS PERCENTAGE FROM CARDS LIMIT 1,"SELECT CAST(SUM(CASE WHEN T1.CONVERTEDMANACOST = 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID), T1.NAME FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T1.NAME = 'ABYSSAL HORROR'",
2,446,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM CARDS WHERE CONVERTEDMANACOST = 10 AND NAME = 'ABYSSAL HORROR') AS REAL) * 100) / (SELECT COUNT(*) FROM CARDS WHERE NAME = 'ABYSSAL HORROR') AS PERCENTAGE FROM CARDS LIMIT 1,"SELECT CAST(SUM(CASE WHEN T1.CONVERTEDMANACOST = 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID), T1.NAME FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T1.NAME = 'ABYSSAL HORROR'",
3,446,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM CARDS WHERE CONVERTEDMANACOST = 10 AND NAME = 'ABYSSAL HORROR') AS REAL) * 100) / (SELECT COUNT(*) FROM CARDS WHERE NAME = 'ABYSSAL HORROR') AS PERCENTAGE FROM CARDS LIMIT 1,"SELECT CAST(SUM(CASE WHEN T1.CONVERTEDMANACOST = 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID), T1.NAME FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T1.NAME = 'ABYSSAL HORROR'",
1,447,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__SETCODE`,,SELECT SETS.SETCODE FROM SETS WHERE SETS.TYPE = 'EXPANSION.COMMANDER',SELECT T2.SETCODE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T1.TYPE = 'COMMANDER',
2,447,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__SETCODE`,,SELECT SETS.SETCODE FROM SETS WHERE SETS.TYPE = 'EXPANSION.COMMANDER',SELECT T2.SETCODE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T1.TYPE = 'COMMANDER',
3,447,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__SETCODE`,,SELECT SETS.SETCODE FROM SETS WHERE SETS.TYPE = 'EXPANSION.COMMANDER',SELECT T2.SETCODE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T1.TYPE = 'COMMANDER',
1,448,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FOREIGN_NAME`,,"SELECT CARDS.FOREIGN_NAME, CARDS.TYPE FROM CARDS WHERE CARDS.WATERMARK = 'ABZAN';","SELECT DISTINCT T1.NAME, T1.TYPE FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.WATERMARK = 'ABZAN'",
2,448,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FOREIGN_NAME`,,"SELECT CARDS.FOREIGN_NAME, CARDS.TYPE FROM CARDS WHERE CARDS.WATERMARK = 'ABZAN';","SELECT DISTINCT T1.NAME, T1.TYPE FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.WATERMARK = 'ABZAN'",
3,448,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FOREIGN_NAME`,,"SELECT CARDS.FOREIGN_NAME, CARDS.TYPE FROM CARDS WHERE CARDS.WATERMARK = 'ABZAN';","SELECT DISTINCT T1.NAME, T1.TYPE FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.WATERMARK = 'ABZAN'",
1,449,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,"SELECT CARDS.LANGUAGE, CARDS.TYPE FROM CARDS WHERE CARDS.WATERMARK = 'AZORIUS';","SELECT DISTINCT T2.LANGUAGE, T1.TYPE FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.WATERMARK = 'AZORIUS'",
2,449,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,"SELECT CARDS.LANGUAGE, CARDS.TYPE FROM CARDS WHERE CARDS.WATERMARK = 'AZORIUS';","SELECT DISTINCT T2.LANGUAGE, T1.TYPE FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.WATERMARK = 'AZORIUS'",
3,449,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,"SELECT CARDS.LANGUAGE, CARDS.TYPE FROM CARDS WHERE CARDS.WATERMARK = 'AZORIUS';","SELECT DISTINCT T2.LANGUAGE, T1.TYPE FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.WATERMARK = 'AZORIUS'",
1,450,True,,0.068223,SELECT COUNT(*) FROM CARDS WHERE ARTIST = 'AARON MILLER' AND CARDKINGDOMFOILID IS NOT NULL AND CARDKINGDOMID IS NOT NULL,SELECT SUM(CASE WHEN ARTIST = 'AARON MILLER' AND CARDKINGDOMFOILID IS NOT NULL AND CARDKINGDOMID IS NOT NULL THEN 1 ELSE 0 END) FROM CARDS,
1,451,ERROR,"NotImplementedError: {'like': ['AVAILABILITY', {'literal': '%PAPER%'}]}",,SELECT COUNT(*) FROM CARDS WHERE AVAILABILITY LIKE '%PAPER%' AND HAND > 0,SELECT SUM(CASE WHEN AVAILABILITY = 'PAPER' AND HAND = '3' THEN 1 ELSE 0 END) FROM CARDS,
2,451,ERROR,"NotImplementedError: {'like': ['AVAILABILITY', {'literal': '%PAPER%'}]}",,SELECT COUNT(*) FROM CARDS WHERE AVAILABILITY LIKE '%PAPER%' AND HAND > 0,SELECT SUM(CASE WHEN AVAILABILITY = 'PAPER' AND HAND = '3' THEN 1 ELSE 0 END) FROM CARDS,
3,451,ERROR,"NotImplementedError: {'like': ['AVAILABILITY', {'literal': '%PAPER%'}]}",,SELECT COUNT(*) FROM CARDS WHERE AVAILABILITY LIKE '%PAPER%' AND HAND > 0,SELECT SUM(CASE WHEN AVAILABILITY = 'PAPER' AND HAND = '3' THEN 1 ELSE 0 END) FROM CARDS,
1,452,True,,0.047151,SELECT CARDS.NAME FROM CARDS WHERE CARDS.ISTEXTLESS = 0,SELECT DISTINCT NAME FROM CARDS WHERE ISTEXTLESS = 0,
1,453,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARD__NAME`,,SELECT CARD.UNCONVERTED_MANA_COST FROM CARDS WHERE CARD.NAME = 'ANCESTOR`S CHOSEN';,SELECT DISTINCT MANACOST FROM CARDS WHERE NAME = 'ANCESTOR''S CHOSEN',
2,453,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARD__NAME`,,SELECT CARD.UNCONVERTED_MANA_COST FROM CARDS WHERE CARD.NAME = 'ANCESTOR`S CHOSEN';,SELECT DISTINCT MANACOST FROM CARDS WHERE NAME = 'ANCESTOR''S CHOSEN',
3,453,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARD__NAME`,,SELECT CARD.UNCONVERTED_MANA_COST FROM CARDS WHERE CARD.NAME = 'ANCESTOR`S CHOSEN';,SELECT DISTINCT MANACOST FROM CARDS WHERE NAME = 'ANCESTOR''S CHOSEN',
1,454,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BORDER_COLOR`,,SELECT COUNT(*) FROM CARDS WHERE BORDER_COLOR = 'WHITE' AND (POWER = '*' OR POWER IS NULL),SELECT SUM(CASE WHEN POWER LIKE '%*%' OR POWER IS NULL THEN 1 ELSE 0 END) FROM CARDS WHERE BORDERCOLOR = 'WHITE',
2,454,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BORDER_COLOR`,,SELECT COUNT(*) FROM CARDS WHERE BORDER_COLOR = 'WHITE' AND (POWER = '*' OR POWER IS NULL),SELECT SUM(CASE WHEN POWER LIKE '%*%' OR POWER IS NULL THEN 1 ELSE 0 END) FROM CARDS WHERE BORDERCOLOR = 'WHITE',
3,454,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BORDER_COLOR`,,SELECT COUNT(*) FROM CARDS WHERE BORDER_COLOR = 'WHITE' AND (POWER = '*' OR POWER IS NULL),SELECT SUM(CASE WHEN POWER LIKE '%*%' OR POWER IS NULL THEN 1 ELSE 0 END) FROM CARDS WHERE BORDERCOLOR = 'WHITE',
1,455,True,,0.060922,SELECT CARDS.NAME FROM CARDS WHERE CARDS.ISPROMO = 1 AND CARDS.SIDE IS NOT NULL,SELECT DISTINCT NAME FROM CARDS WHERE ISPROMO = 1 AND SIDE IS NOT NULL,
1,456,True,,0.0485489999999999,"SELECT CARDS.SUBTYPES, CARDS.SUPERTYPES FROM CARDS WHERE CARDS.NAME = 'MOLIMO, MARO-SORCERER'","SELECT DISTINCT SUBTYPES, SUPERTYPES FROM CARDS WHERE NAME = 'MOLIMO, MARO-SORCERER'",
1,457,True,,0.048533,SELECT PURCHASEURLS FROM CARDS WHERE PROMOTYPES = 'BUNDLE',SELECT DISTINCT PURCHASEURLS FROM CARDS WHERE PROMOTYPES = 'BUNDLE',
1,458,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__BORDER_COLOR`,,"SELECT COUNT(DISTINCT CARDS.ARTIST) FROM CARDS WHERE CARDS.BORDER_COLOR = 'BLACK' AND CARDS.AVAILABILITY LIKE '%ARENA,MTGO%'","SELECT COUNT(CASE WHEN AVAILABILITY LIKE '%ARENA,MTGO%' AND BORDERCOLOR = 'BLACK' THEN 1 ELSE NULL END) FROM CARDS",
2,458,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__BORDER_COLOR`,,"SELECT COUNT(DISTINCT CARDS.ARTIST) FROM CARDS WHERE CARDS.BORDER_COLOR = 'BLACK' AND CARDS.AVAILABILITY LIKE '%ARENA,MTGO%'","SELECT COUNT(CASE WHEN AVAILABILITY LIKE '%ARENA,MTGO%' AND BORDERCOLOR = 'BLACK' THEN 1 ELSE NULL END) FROM CARDS",
3,458,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__BORDER_COLOR`,,"SELECT COUNT(DISTINCT CARDS.ARTIST) FROM CARDS WHERE CARDS.BORDER_COLOR = 'BLACK' AND CARDS.AVAILABILITY LIKE '%ARENA,MTGO%'","SELECT COUNT(CASE WHEN AVAILABILITY LIKE '%ARENA,MTGO%' AND BORDERCOLOR = 'BLACK' THEN 1 ELSE NULL END) FROM CARDS",
1,459,True,,0.105791,SELECT (SELECT CONVERTEDMANACOST FROM CARDS WHERE NAME = 'SERRA ANGEL') > (SELECT CONVERTEDMANACOST FROM CARDS WHERE NAME = 'SHRINE KEEPER') FROM CARDS LIMIT 1;,"SELECT NAME FROM CARDS WHERE NAME IN ('SERRA ANGEL', 'SHRINE KEEPER') ORDER BY CONVERTEDMANACOST DESC LIMIT 1",
1,460,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `CARD`,,"SELECT CARD.ARTIST FROM CARD WHERE CARD.FLAVORNAME = 'BATTRA, DARK DESTROYER'","SELECT ARTIST FROM CARDS WHERE FLAVORNAME = 'BATTRA, DARK DESTROYER'",
2,460,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `CARD`,,"SELECT CARD.ARTIST FROM CARD WHERE CARD.FLAVORNAME = 'BATTRA, DARK DESTROYER'","SELECT ARTIST FROM CARDS WHERE FLAVORNAME = 'BATTRA, DARK DESTROYER'",
3,460,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `CARD`,,"SELECT CARD.ARTIST FROM CARD WHERE CARD.FLAVORNAME = 'BATTRA, DARK DESTROYER'","SELECT ARTIST FROM CARDS WHERE FLAVORNAME = 'BATTRA, DARK DESTROYER'",
1,461,True,,0.048574,SELECT CARDS.NAME FROM CARDS WHERE CARDS.FRAMEVERSION = '2003' ORDER BY CARDS.CONVERTEDMANACOST DESC LIMIT 3,SELECT NAME FROM CARDS WHERE FRAMEVERSION = 2003 ORDER BY CONVERTEDMANACOST DESC LIMIT 3,
1,462,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `CARD_SETS`,,SELECT CARD_SETS.SET_NAME FROM CARDS INNER JOIN CARD_SETS ON CARDS.SET_CODE = CARD_SETS.SET_CODE WHERE CARDS.NAME = 'ANCESTOR''S CHOSEN' AND CARD_SETS.LANGUAGE = 'ITALIAN';,SELECT TRANSLATION FROM SET_TRANSLATIONS WHERE SETCODE IN ( SELECT SETCODE FROM CARDS WHERE NAME = 'ANCESTOR''S CHOSEN' ) AND LANGUAGE = 'ITALIAN',
2,462,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `CARD_SETS`,,SELECT CARD_SETS.SET_NAME FROM CARDS INNER JOIN CARD_SETS ON CARDS.SET_CODE = CARD_SETS.SET_CODE WHERE CARDS.NAME = 'ANCESTOR''S CHOSEN' AND CARD_SETS.LANGUAGE = 'ITALIAN';,SELECT TRANSLATION FROM SET_TRANSLATIONS WHERE SETCODE IN ( SELECT SETCODE FROM CARDS WHERE NAME = 'ANCESTOR''S CHOSEN' ) AND LANGUAGE = 'ITALIAN',
3,462,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `CARD_SETS`,,SELECT CARD_SETS.SET_NAME FROM CARDS INNER JOIN CARD_SETS ON CARDS.SET_CODE = CARD_SETS.SET_CODE WHERE CARDS.NAME = 'ANCESTOR''S CHOSEN' AND CARD_SETS.LANGUAGE = 'ITALIAN';,SELECT TRANSLATION FROM SET_TRANSLATIONS WHERE SETCODE IN ( SELECT SETCODE FROM CARDS WHERE NAME = 'ANCESTOR''S CHOSEN' ) AND LANGUAGE = 'ITALIAN',
1,463,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CARDS (
	ID INTEGER,
	ARTIST VARCHAR(20),
	ASCIINAME VARCHAR(20),
	AVAILABILITY VARCHAR(20),
	BORDERCOLOR VARCHAR(20),
	CARDKINGDOMFOILID VARCHAR(20),
	CARDKINGDOMID VARCHAR(20),
	COLORIDENTITY VARCHAR(20),
	COLORINDICATOR VARCHAR(20),
	COLORS VARCHAR(20),
	CONVERTEDMANACOST INTEGER,
	DUELDECK VARCHAR(20),
	EDHRECRANK INTEGER,
	FACECONVERTEDMANACOST INTEGER,
	FACENAME VARCHAR(20),
	FLAVORNAME VARCHAR(20),
	FLAVORTEXT VARCHAR(20),
	FRAMEEFFECTS VARCHAR(20),
	FRAMEVERSION VARCHAR(20),
	HAND VARCHAR(20),
	HASALTERNATIVEDECKLIMIT INTEGER,
	HASCONTENTWARNING INTEGER,
	HASFOIL INTEGER,
	HASNONSFOIL INTEGER,
	ISALTERNATIVE INTEGER,
	ISFULLART INTEGER,
	ISONLINEONLY INTEGER,
	ISOVERSIZED INTEGER,
	ISPROMO INTEGER,
	ISREPRINT INTEGER,
	ISRESERVED INTEGER,
	ISSTARTER INTEGER,
	ISSTORYSPOTLIGHT INTEGER,
	ISTEXTLESS INTEGER,
	ISTIMESHIFTED INTEGER,
	KEYWORDS VARCHAR(20),
	LAYOUT VARCHAR(20),
	LEADERSHIPSKILLS VARCHAR(20),
	LIFE VARCHAR(20),
	LOYALTY VARCHAR(20),
	MANACOST VARCHAR(20),
	MCMID VARCHAR(20),
	MCMMETAID VARCHAR(20),
	MTGARENAID VARCHAR(20),
	MTGJSONV4ID VARCHAR(20),
	MTGOFOILID VARCHAR(20),
	MTGOID VARCHAR(20),
	MULTIVERSEID VARCHAR(20),
	NAME VARCHAR(20),
	NUMBER VARCHAR(20),
	ORIGINALRELEASEDATE VARCHAR(20),
	ORIGINALTEXT VARCHAR(20),
	ORIGINALTYPE VARCHAR(20),
	OTHERFACEIDS VARCHAR(20),
	POWER VARCHAR(20),
	PRINTINGS VARCHAR(20),
	PROMOTYPES VARCHAR(20),
	PURCHASEURLS VARCHAR(20),
	RARITY VARCHAR(20),
	SCRYFALLID VARCHAR(20),
	SCRYFALLILLUSTRATIONID VARCHAR(20),
	SCRYFALLORACLEID VARCHAR(20),
	SETCODE VARCHAR(20),
	SIDE VARCHAR(20),
	SUBTYPES VARCHAR(20),
	SUPERTYPES VARCHAR(20),
	TCGPLAYERPRODUCTID VARCHAR(20),
	TEXT VARCHAR(20),
	TOUGHNESS VARCHAR(20),
	TYPE VARCHAR(20),
	TYPES VARCHAR(20),
	UUID VARCHAR(20),
	VARIATIONS VARCHAR(20),
	WATERMARK VARCHAR(20)
);
INSERT INTO CARDS VALUES (3, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 4, '2147483648', 5, 6, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 'ANGEL OF MERCY', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE FOREIGN_DATA (
	ID INTEGER,
	FLAVORTEXT VARCHAR(20),
	LANGUAGE VARCHAR(20),
	MULTIVERSEID INTEGER,
	NAME VARCHAR(20),
	TEXT VARCHAR(20),
	TYPE VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO FOREIGN_DATA VALUES (0, '2147483648', '2147483648', 0, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE LEGALITIES (
	ID INTEGER,
	FORMAT VARCHAR(20),
	STATUS VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO LEGALITIES VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE SETS (
	ID INTEGER,
	BASESETSIZE INTEGER,
	BLOCK VARCHAR(20),
	BOOSTER VARCHAR(20),
	CODE VARCHAR(20),
	ISFOILONLY INTEGER,
	ISFOREIGNONLY INTEGER,
	ISNONFOILONLY INTEGER,
	ISONLINEONLY INTEGER,
	ISPARTIALPREVIEW INTEGER,
	KEYRUNE_CODE VARCHAR(20),
	MCMID INTEGER,
	MCMIDEXTRAS INTEGER,
	MCMNAME VARCHAR(20),
	MTGOCODE VARCHAR(20),
	NAME VARCHAR(20),
	PARENTCODE VARCHAR(20),
	RELEASEDATE DATE,
	TCGPLAYERGROUPID INTEGER,
	TOTALSETSIZE INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO SETS VALUES (0, 0, '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, '2147483648', 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', 0, 0, '2147483648');
CREATE TABLE SET_TRANSLATIONS (
	ID INTEGER,
	LANGUAGE VARCHAR(20),
	SETCODE VARCHAR(20),
	TRANSLATION VARCHAR(20)
);
INSERT INTO SET_TRANSLATIONS VALUES (2, '2147483648', '2147483648', NULL);
CREATE TABLE RULINGS (
	ID INTEGER,
	DATE DATE,
	TEXT VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO RULINGS VALUES (0, '1970-01-01', '2147483648', '2147483648');
-- ----------sql1------------
-- 1
SELECT COUNT(SET_TRANSLATIONS.SETCODE) FROM SET_TRANSLATIONS INNER JOIN CARDS ON SET_TRANSLATIONS.SETCODE = CARDS.SETCODE WHERE CARDS.NAME = 'ANGEL OF MERCY';
-- ----------sql2------------
-- 0
SELECT COUNT(DISTINCT TRANSLATION) FROM SET_TRANSLATIONS WHERE SETCODE IN ( SELECT SETCODE FROM CARDS WHERE NAME = 'ANGEL OF MERCY' ) AND TRANSLATION IS NOT NULL;
",0.151464,SELECT COUNT(SET_TRANSLATIONS.SETCODE) FROM SET_TRANSLATIONS INNER JOIN CARDS ON SET_TRANSLATIONS.SETCODE = CARDS.SETCODE WHERE CARDS.NAME = 'ANGEL OF MERCY',SELECT COUNT(DISTINCT TRANSLATION) FROM SET_TRANSLATIONS WHERE SETCODE IN ( SELECT SETCODE FROM CARDS WHERE NAME = 'ANGEL OF MERCY' ) AND TRANSLATION IS NOT NULL,
1,464,True,,0.129223,SELECT CARDS.NAME FROM CARDS INNER JOIN SET_TRANSLATIONS ON CARDS.SETCODE = SET_TRANSLATIONS.SETCODE WHERE SET_TRANSLATIONS.TRANSLATION = 'HAUPTSET ZEHNTE EDITION',SELECT DISTINCT T1.NAME FROM CARDS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.SETCODE WHERE T2.TRANSLATION = 'HAUPTSET ZEHNTE EDITION',
1,465,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT COUNT(*) FROM CARDS WHERE NAME = 'ANCESTOR''S CHOSEN' AND LANGUAGE = 'KOREAN',"SELECT IIF(SUM(CASE WHEN T2.LANGUAGE = 'KOREAN' AND T2.TRANSLATION IS NOT NULL THEN 1 ELSE 0 END) > 0, 'YES', 'NO') FROM CARDS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.SETCODE WHERE T1.NAME = 'ANCESTOR''S CHOSEN'",
2,465,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT COUNT(*) FROM CARDS WHERE NAME = 'ANCESTOR''S CHOSEN' AND LANGUAGE = 'KOREAN',"SELECT IIF(SUM(CASE WHEN T2.LANGUAGE = 'KOREAN' AND T2.TRANSLATION IS NOT NULL THEN 1 ELSE 0 END) > 0, 'YES', 'NO') FROM CARDS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.SETCODE WHERE T1.NAME = 'ANCESTOR''S CHOSEN'",
3,465,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT COUNT(*) FROM CARDS WHERE NAME = 'ANCESTOR''S CHOSEN' AND LANGUAGE = 'KOREAN',"SELECT IIF(SUM(CASE WHEN T2.LANGUAGE = 'KOREAN' AND T2.TRANSLATION IS NOT NULL THEN 1 ELSE 0 END) > 0, 'YES', 'NO') FROM CARDS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.SETCODE WHERE T1.NAME = 'ANCESTOR''S CHOSEN'",
1,466,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SET_TRANSLATIONS__UUID`,,SELECT COUNT(*) FROM CARDS INNER JOIN SET_TRANSLATIONS ON CARDS.UUID = SET_TRANSLATIONS.UUID WHERE SET_TRANSLATIONS.TRANSLATION = 'HAUPTSET ZEHNTE EDITION' AND CARDS.ARTIST = 'ADAM REX',SELECT COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.SETCODE WHERE T2.TRANSLATION = 'HAUPTSET ZEHNTE EDITION' AND T1.ARTIST = 'ADAM REX',
2,466,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SET_TRANSLATIONS__UUID`,,SELECT COUNT(*) FROM CARDS INNER JOIN SET_TRANSLATIONS ON CARDS.UUID = SET_TRANSLATIONS.UUID WHERE SET_TRANSLATIONS.TRANSLATION = 'HAUPTSET ZEHNTE EDITION' AND CARDS.ARTIST = 'ADAM REX',SELECT COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.SETCODE WHERE T2.TRANSLATION = 'HAUPTSET ZEHNTE EDITION' AND T1.ARTIST = 'ADAM REX',
3,466,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SET_TRANSLATIONS__UUID`,,SELECT COUNT(*) FROM CARDS INNER JOIN SET_TRANSLATIONS ON CARDS.UUID = SET_TRANSLATIONS.UUID WHERE SET_TRANSLATIONS.TRANSLATION = 'HAUPTSET ZEHNTE EDITION' AND CARDS.ARTIST = 'ADAM REX',SELECT COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.SETCODE WHERE T2.TRANSLATION = 'HAUPTSET ZEHNTE EDITION' AND T1.ARTIST = 'ADAM REX',
1,467,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TRANSLATION`,,SELECT BASESETSIZE FROM SETS WHERE TRANSLATION = 'HAUPTSET ZEHNTE EDITION',SELECT T1.BASESETSIZE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T2.TRANSLATION = 'HAUPTSET ZEHNTE EDITION',
2,467,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TRANSLATION`,,SELECT BASESETSIZE FROM SETS WHERE TRANSLATION = 'HAUPTSET ZEHNTE EDITION',SELECT T1.BASESETSIZE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T2.TRANSLATION = 'HAUPTSET ZEHNTE EDITION',
3,467,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TRANSLATION`,,SELECT BASESETSIZE FROM SETS WHERE TRANSLATION = 'HAUPTSET ZEHNTE EDITION',SELECT T1.BASESETSIZE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T2.TRANSLATION = 'HAUPTSET ZEHNTE EDITION',
1,468,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TRANSLATION__TRANSLATION`,,SELECT TRANSLATION.TRANSLATION FROM SETS INNER JOIN SET_TRANSLATIONS ON SETS.CODE = SET_TRANSLATIONS.SETCODE WHERE SETS.NAME = 'EIGHTH EDITION' AND SET_TRANSLATIONS.LANGUAGE = 'CHINESE SIMPLIFIED';,SELECT T2.TRANSLATION FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T1.NAME = 'EIGHTH EDITION' AND T2.LANGUAGE = 'CHINESE SIMPLIFIED',
2,468,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TRANSLATION__TRANSLATION`,,SELECT TRANSLATION.TRANSLATION FROM SETS INNER JOIN SET_TRANSLATIONS ON SETS.CODE = SET_TRANSLATIONS.SETCODE WHERE SETS.NAME = 'EIGHTH EDITION' AND SET_TRANSLATIONS.LANGUAGE = 'CHINESE SIMPLIFIED';,SELECT T2.TRANSLATION FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T1.NAME = 'EIGHTH EDITION' AND T2.LANGUAGE = 'CHINESE SIMPLIFIED',
3,468,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TRANSLATION__TRANSLATION`,,SELECT TRANSLATION.TRANSLATION FROM SETS INNER JOIN SET_TRANSLATIONS ON SETS.CODE = SET_TRANSLATIONS.SETCODE WHERE SETS.NAME = 'EIGHTH EDITION' AND SET_TRANSLATIONS.LANGUAGE = 'CHINESE SIMPLIFIED';,SELECT T2.TRANSLATION FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T1.NAME = 'EIGHTH EDITION' AND T2.LANGUAGE = 'CHINESE SIMPLIFIED',
1,469,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute MTGOCODE`,,SELECT COUNT(*) FROM CARDS WHERE NAME = 'ANGEL OF MERCY' AND MTGOCODE IS NOT NULL,"SELECT IIF(T2.MTGOCODE IS NOT NULL, 'YES', 'NO') FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T1.NAME = 'ANGEL OF MERCY'",
2,469,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute MTGOCODE`,,SELECT COUNT(*) FROM CARDS WHERE NAME = 'ANGEL OF MERCY' AND MTGOCODE IS NOT NULL,"SELECT IIF(T2.MTGOCODE IS NOT NULL, 'YES', 'NO') FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T1.NAME = 'ANGEL OF MERCY'",
3,469,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute MTGOCODE`,,SELECT COUNT(*) FROM CARDS WHERE NAME = 'ANGEL OF MERCY' AND MTGOCODE IS NOT NULL,"SELECT IIF(T2.MTGOCODE IS NOT NULL, 'YES', 'NO') FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T1.NAME = 'ANGEL OF MERCY'",
1,470,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__RELEASEDATE`,,SELECT CARDS.RELEASEDATE FROM CARDS WHERE CARDS.NAME = 'ANCESTOR''S CHOSEN',SELECT DISTINCT T2.RELEASEDATE FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T1.NAME = 'ANCESTOR''S CHOSEN',
2,470,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__RELEASEDATE`,,SELECT CARDS.RELEASEDATE FROM CARDS WHERE CARDS.NAME = 'ANCESTOR''S CHOSEN',SELECT DISTINCT T2.RELEASEDATE FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T1.NAME = 'ANCESTOR''S CHOSEN',
3,470,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__RELEASEDATE`,,SELECT CARDS.RELEASEDATE FROM CARDS WHERE CARDS.NAME = 'ANCESTOR''S CHOSEN',SELECT DISTINCT T2.RELEASEDATE FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T1.NAME = 'ANCESTOR''S CHOSEN',
1,471,True,,0.076468,SELECT SETS.TYPE FROM SETS INNER JOIN SET_TRANSLATIONS ON SETS.CODE = SET_TRANSLATIONS.SETCODE WHERE SET_TRANSLATIONS.TRANSLATION = 'HAUPTSET ZEHNTE EDITION',SELECT T1.TYPE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T2.TRANSLATION = 'HAUPTSET ZEHNTE EDITION',
1,472,True,,0.137685,SELECT COUNT(DISTINCT SETS.CODE) FROM SETS LEFT JOIN SET_TRANSLATIONS ON SETS.CODE = SET_TRANSLATIONS.SETCODE WHERE SETS.BLOCK = 'ICE AGE' AND SET_TRANSLATIONS.LANGUAGE = 'ITALIAN' AND SET_TRANSLATIONS.TRANSLATION IS NOT NULL,SELECT COUNT(DISTINCT T1.ID) FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T1.BLOCK = 'ICE AGE' AND T2.LANGUAGE = 'ITALIAN' AND T2.TRANSLATION IS NOT NULL,
1,473,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__ISFOREIGNONLY`,,SELECT CARDS.ISFOREIGNONLY FROM CARDS WHERE CARDS.NAME = 'ADARKAR VALKYRIE';,"SELECT IIF(ISFOREIGNONLY = 1, 'YES', 'NO') FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T1.NAME = 'ADARKAR VALKYRIE'",
2,473,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__ISFOREIGNONLY`,,SELECT CARDS.ISFOREIGNONLY FROM CARDS WHERE CARDS.NAME = 'ADARKAR VALKYRIE';,"SELECT IIF(ISFOREIGNONLY = 1, 'YES', 'NO') FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T1.NAME = 'ADARKAR VALKYRIE'",
3,473,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__ISFOREIGNONLY`,,SELECT CARDS.ISFOREIGNONLY FROM CARDS WHERE CARDS.NAME = 'ADARKAR VALKYRIE';,"SELECT IIF(ISFOREIGNONLY = 1, 'YES', 'NO') FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T1.NAME = 'ADARKAR VALKYRIE'",
1,474,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CARDS (
	ID INTEGER,
	ARTIST VARCHAR(20),
	ASCIINAME VARCHAR(20),
	AVAILABILITY VARCHAR(20),
	BORDERCOLOR VARCHAR(20),
	CARDKINGDOMFOILID VARCHAR(20),
	CARDKINGDOMID VARCHAR(20),
	COLORIDENTITY VARCHAR(20),
	COLORINDICATOR VARCHAR(20),
	COLORS VARCHAR(20),
	CONVERTEDMANACOST INTEGER,
	DUELDECK VARCHAR(20),
	EDHRECRANK INTEGER,
	FACECONVERTEDMANACOST INTEGER,
	FACENAME VARCHAR(20),
	FLAVORNAME VARCHAR(20),
	FLAVORTEXT VARCHAR(20),
	FRAMEEFFECTS VARCHAR(20),
	FRAMEVERSION VARCHAR(20),
	HAND VARCHAR(20),
	HASALTERNATIVEDECKLIMIT INTEGER,
	HASCONTENTWARNING INTEGER,
	HASFOIL INTEGER,
	HASNONSFOIL INTEGER,
	ISALTERNATIVE INTEGER,
	ISFULLART INTEGER,
	ISONLINEONLY INTEGER,
	ISOVERSIZED INTEGER,
	ISPROMO INTEGER,
	ISREPRINT INTEGER,
	ISRESERVED INTEGER,
	ISSTARTER INTEGER,
	ISSTORYSPOTLIGHT INTEGER,
	ISTEXTLESS INTEGER,
	ISTIMESHIFTED INTEGER,
	KEYWORDS VARCHAR(20),
	LAYOUT VARCHAR(20),
	LEADERSHIPSKILLS VARCHAR(20),
	LIFE VARCHAR(20),
	LOYALTY VARCHAR(20),
	MANACOST VARCHAR(20),
	MCMID VARCHAR(20),
	MCMMETAID VARCHAR(20),
	MTGARENAID VARCHAR(20),
	MTGJSONV4ID VARCHAR(20),
	MTGOFOILID VARCHAR(20),
	MTGOID VARCHAR(20),
	MULTIVERSEID VARCHAR(20),
	NAME VARCHAR(20),
	NUMBER VARCHAR(20),
	ORIGINALRELEASEDATE VARCHAR(20),
	ORIGINALTEXT VARCHAR(20),
	ORIGINALTYPE VARCHAR(20),
	OTHERFACEIDS VARCHAR(20),
	POWER VARCHAR(20),
	PRINTINGS VARCHAR(20),
	PROMOTYPES VARCHAR(20),
	PURCHASEURLS VARCHAR(20),
	RARITY VARCHAR(20),
	SCRYFALLID VARCHAR(20),
	SCRYFALLILLUSTRATIONID VARCHAR(20),
	SCRYFALLORACLEID VARCHAR(20),
	SETCODE VARCHAR(20),
	SIDE VARCHAR(20),
	SUBTYPES VARCHAR(20),
	SUPERTYPES VARCHAR(20),
	TCGPLAYERPRODUCTID VARCHAR(20),
	TEXT VARCHAR(20),
	TOUGHNESS VARCHAR(20),
	TYPE VARCHAR(20),
	TYPES VARCHAR(20),
	UUID VARCHAR(20),
	VARIATIONS VARCHAR(20),
	WATERMARK VARCHAR(20)
);
INSERT INTO CARDS VALUES (0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '2147483648', 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE FOREIGN_DATA (
	ID INTEGER,
	FLAVORTEXT VARCHAR(20),
	LANGUAGE VARCHAR(20),
	MULTIVERSEID INTEGER,
	NAME VARCHAR(20),
	TEXT VARCHAR(20),
	TYPE VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO FOREIGN_DATA VALUES (0, '2147483648', '2147483648', 0, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE LEGALITIES (
	ID INTEGER,
	FORMAT VARCHAR(20),
	STATUS VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO LEGALITIES VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE SETS (
	ID INTEGER,
	BASESETSIZE INTEGER,
	BLOCK VARCHAR(20),
	BOOSTER VARCHAR(20),
	CODE VARCHAR(20),
	ISFOILONLY INTEGER,
	ISFOREIGNONLY INTEGER,
	ISNONFOILONLY INTEGER,
	ISONLINEONLY INTEGER,
	ISPARTIALPREVIEW INTEGER,
	KEYRUNE_CODE VARCHAR(20),
	MCMID INTEGER,
	MCMIDEXTRAS INTEGER,
	MCMNAME VARCHAR(20),
	MTGOCODE VARCHAR(20),
	NAME VARCHAR(20),
	PARENTCODE VARCHAR(20),
	RELEASEDATE DATE,
	TCGPLAYERGROUPID INTEGER,
	TOTALSETSIZE INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO SETS VALUES (5, 0, '2147483648', '2147483648', '2147483648', 6, 7, 8, 9, 10, '2147483648', 11, 12, '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', 13, 14, '2147483648');
CREATE TABLE SET_TRANSLATIONS (
	ID INTEGER,
	LANGUAGE VARCHAR(20),
	SETCODE VARCHAR(20),
	TRANSLATION VARCHAR(20)
);
INSERT INTO SET_TRANSLATIONS VALUES (15, 'ITALIAN', '2147483648', NULL);
CREATE TABLE RULINGS (
	ID INTEGER,
	DATE DATE,
	TEXT VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO RULINGS VALUES (0, '1970-01-01', '2147483648', '2147483648');
-- ----------sql1------------
-- 1
SELECT COUNT(DISTINCT SETS.CODE) FROM SETS INNER JOIN SET_TRANSLATIONS ON SETS.CODE = SET_TRANSLATIONS.SETCODE WHERE SET_TRANSLATIONS.LANGUAGE = 'ITALIAN' AND SETS.BASESETSIZE < 100;
-- ----------sql2------------
-- 0
SELECT COUNT(T1.ID) FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T2.TRANSLATION IS NOT NULL AND T1.BASESETSIZE < 100 AND T2.LANGUAGE = 'ITALIAN';
",0.100918,SELECT COUNT(DISTINCT SETS.CODE) FROM SETS INNER JOIN SET_TRANSLATIONS ON SETS.CODE = SET_TRANSLATIONS.SETCODE WHERE SET_TRANSLATIONS.LANGUAGE = 'ITALIAN' AND SETS.BASESETSIZE < 100,SELECT COUNT(T1.ID) FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T2.TRANSLATION IS NOT NULL AND T1.BASESETSIZE < 100 AND T2.LANGUAGE = 'ITALIAN',
1,475,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT COUNT(*) FROM CARDS WHERE SET = 'COLDSNAP' AND BORDERCOLOR = 'BLACK'`,,SELECT COUNT(*) FROM CARDS WHERE SET = 'COLDSNAP' AND BORDERCOLOR = 'BLACK',SELECT SUM(CASE WHEN T1.BORDERCOLOR = 'BLACK' THEN 1 ELSE 0 END) FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T2.NAME = 'COLDSNAP',
2,475,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT COUNT(*) FROM CARDS WHERE SET = 'COLDSNAP' AND BORDERCOLOR = 'BLACK'`,,SELECT COUNT(*) FROM CARDS WHERE SET = 'COLDSNAP' AND BORDERCOLOR = 'BLACK',SELECT SUM(CASE WHEN T1.BORDERCOLOR = 'BLACK' THEN 1 ELSE 0 END) FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T2.NAME = 'COLDSNAP',
3,475,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT COUNT(*) FROM CARDS WHERE SET = 'COLDSNAP' AND BORDERCOLOR = 'BLACK'`,,SELECT COUNT(*) FROM CARDS WHERE SET = 'COLDSNAP' AND BORDERCOLOR = 'BLACK',SELECT SUM(CASE WHEN T1.BORDERCOLOR = 'BLACK' THEN 1 ELSE 0 END) FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T2.NAME = 'COLDSNAP',
1,476,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `CARD_SETS`,,SELECT CARDS.NAME FROM CARDS INNER JOIN CARD_SETS ON CARDS.SET_CODE = CARD_SETS.CODE WHERE CARD_SETS.NAME = 'COLDSNAP' ORDER BY CARDS.CONVERTED_MANA_COST DESC LIMIT 1,SELECT T1.NAME FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T2.NAME = 'COLDSNAP' ORDER BY T1.CONVERTEDMANACOST DESC LIMIT 1,
2,476,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `CARD_SETS`,,SELECT CARDS.NAME FROM CARDS INNER JOIN CARD_SETS ON CARDS.SET_CODE = CARD_SETS.CODE WHERE CARD_SETS.NAME = 'COLDSNAP' ORDER BY CARDS.CONVERTED_MANA_COST DESC LIMIT 1,SELECT T1.NAME FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T2.NAME = 'COLDSNAP' ORDER BY T1.CONVERTEDMANACOST DESC LIMIT 1,
3,476,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `CARD_SETS`,,SELECT CARDS.NAME FROM CARDS INNER JOIN CARD_SETS ON CARDS.SET_CODE = CARD_SETS.CODE WHERE CARD_SETS.NAME = 'COLDSNAP' ORDER BY CARDS.CONVERTED_MANA_COST DESC LIMIT 1,SELECT T1.NAME FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T2.NAME = 'COLDSNAP' ORDER BY T1.CONVERTEDMANACOST DESC LIMIT 1,
1,477,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__SET`,,"SELECT ARTIST.NAME FROM CARDS WHERE CARDS.SET = 'COLDSNAP' AND CARDS.ARTIST IN ('JEREMY JARVIS', 'AARON MILLER','CHIPPY')",SELECT T1.ARTIST FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE (T2.NAME = 'COLDSNAP' AND T1.ARTIST = 'CHIPPY') OR (T2.NAME = 'COLDSNAP' AND T1.ARTIST = 'AARON MILLER') OR (T2.NAME = 'COLDSNAP' AND T1.ARTIST = 'JEREMY JARVIS') GROUP BY T1.ARTIST,
2,477,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__SET`,,"SELECT ARTIST.NAME FROM CARDS WHERE CARDS.SET = 'COLDSNAP' AND CARDS.ARTIST IN ('JEREMY JARVIS', 'AARON MILLER','CHIPPY')",SELECT T1.ARTIST FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE (T2.NAME = 'COLDSNAP' AND T1.ARTIST = 'CHIPPY') OR (T2.NAME = 'COLDSNAP' AND T1.ARTIST = 'AARON MILLER') OR (T2.NAME = 'COLDSNAP' AND T1.ARTIST = 'JEREMY JARVIS') GROUP BY T1.ARTIST,
3,477,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__SET`,,"SELECT ARTIST.NAME FROM CARDS WHERE CARDS.SET = 'COLDSNAP' AND CARDS.ARTIST IN ('JEREMY JARVIS', 'AARON MILLER','CHIPPY')",SELECT T1.ARTIST FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE (T2.NAME = 'COLDSNAP' AND T1.ARTIST = 'CHIPPY') OR (T2.NAME = 'COLDSNAP' AND T1.ARTIST = 'AARON MILLER') OR (T2.NAME = 'COLDSNAP' AND T1.ARTIST = 'JEREMY JARVIS') GROUP BY T1.ARTIST,
1,478,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__SET`,,SELECT CARDS.NAME FROM CARDS WHERE CARDS.SET = 'COLDSNAP' AND CARDS.NUMBER = '4',SELECT T1.NAME FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T2.NAME = 'COLDSNAP' AND T1.NUMBER = 4,
2,478,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__SET`,,SELECT CARDS.NAME FROM CARDS WHERE CARDS.SET = 'COLDSNAP' AND CARDS.NUMBER = '4',SELECT T1.NAME FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T2.NAME = 'COLDSNAP' AND T1.NUMBER = 4,
3,478,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__SET`,,SELECT CARDS.NAME FROM CARDS WHERE CARDS.SET = 'COLDSNAP' AND CARDS.NUMBER = '4',SELECT T1.NAME FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T2.NAME = 'COLDSNAP' AND T1.NUMBER = 4,
1,479,ERROR,"NotImplementedError: {'like': ['T1__POWER', {'literal': '*'}]}",,SELECT COUNT(*) FROM CARDS AS T1 INNER JOIN SETS ON SETS.CODE = T1.SETCODE WHERE SETS.NAME = 'COLDSNAP' AND T1.CONVERTEDMANACOST > 5 AND (T1.POWER = '*' OR T1.POWER IS NULL),SELECT SUM(CASE WHEN T1.POWER LIKE '*' OR T1.POWER IS NULL THEN 1 ELSE 0 END) FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T2.NAME = 'COLDSNAP' AND T1.CONVERTEDMANACOST > 5,
2,479,ERROR,"NotImplementedError: {'like': ['T1__POWER', {'literal': '*'}]}",,SELECT COUNT(*) FROM CARDS AS T1 INNER JOIN SETS ON SETS.CODE = T1.SETCODE WHERE SETS.NAME = 'COLDSNAP' AND T1.CONVERTEDMANACOST > 5 AND (T1.POWER = '*' OR T1.POWER IS NULL),SELECT SUM(CASE WHEN T1.POWER LIKE '*' OR T1.POWER IS NULL THEN 1 ELSE 0 END) FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T2.NAME = 'COLDSNAP' AND T1.CONVERTEDMANACOST > 5,
3,479,ERROR,"NotImplementedError: {'like': ['T1__POWER', {'literal': '*'}]}",,SELECT COUNT(*) FROM CARDS AS T1 INNER JOIN SETS ON SETS.CODE = T1.SETCODE WHERE SETS.NAME = 'COLDSNAP' AND T1.CONVERTEDMANACOST > 5 AND (T1.POWER = '*' OR T1.POWER IS NULL),SELECT SUM(CASE WHEN T1.POWER LIKE '*' OR T1.POWER IS NULL THEN 1 ELSE 0 END) FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T2.NAME = 'COLDSNAP' AND T1.CONVERTEDMANACOST > 5,
1,480,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.FLAVORTEXT FROM CARDS WHERE CARDS.NAME = 'ANCESTOR''S CHOSEN' AND CARDS.LANGUAGE = 'ITALIAN';,SELECT T2.FLAVORTEXT FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.NAME = 'ANCESTOR''S CHOSEN' AND T2.LANGUAGE = 'ITALIAN',
2,480,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.FLAVORTEXT FROM CARDS WHERE CARDS.NAME = 'ANCESTOR''S CHOSEN' AND CARDS.LANGUAGE = 'ITALIAN';,SELECT T2.FLAVORTEXT FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.NAME = 'ANCESTOR''S CHOSEN' AND T2.LANGUAGE = 'ITALIAN',
3,480,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.FLAVORTEXT FROM CARDS WHERE CARDS.NAME = 'ANCESTOR''S CHOSEN' AND CARDS.LANGUAGE = 'ITALIAN';,SELECT T2.FLAVORTEXT FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.NAME = 'ANCESTOR''S CHOSEN' AND T2.LANGUAGE = 'ITALIAN',
1,481,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.LANGUAGE FROM CARDS WHERE CARDS.NAME = 'ANCESTOR''S CHOSEN' AND CARDS.FLAVORTEXT IS NOT NULL,SELECT T2.LANGUAGE FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.NAME = 'ANCESTOR''S CHOSEN' AND T2.FLAVORTEXT IS NOT NULL,
2,481,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.LANGUAGE FROM CARDS WHERE CARDS.NAME = 'ANCESTOR''S CHOSEN' AND CARDS.FLAVORTEXT IS NOT NULL,SELECT T2.LANGUAGE FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.NAME = 'ANCESTOR''S CHOSEN' AND T2.FLAVORTEXT IS NOT NULL,
3,481,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__LANGUAGE`,,SELECT CARDS.LANGUAGE FROM CARDS WHERE CARDS.NAME = 'ANCESTOR''S CHOSEN' AND CARDS.FLAVORTEXT IS NOT NULL,SELECT T2.LANGUAGE FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.NAME = 'ANCESTOR''S CHOSEN' AND T2.FLAVORTEXT IS NOT NULL,
1,482,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `CARD_TRANSLATIONS`,,SELECT CARDS.TYPE FROM CARDS INNER JOIN CARD_TRANSLATIONS ON CARDS.UUID = CARD_TRANSLATIONS.UUID WHERE CARDS.NAME = 'ANCESTOR''S CHOSEN' AND CARD_TRANSLATIONS.LANGUAGE = 'GERMAN',SELECT DISTINCT T1.TYPE FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.NAME = 'ANCESTOR''S CHOSEN' AND T2.LANGUAGE = 'GERMAN',
2,482,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `CARD_TRANSLATIONS`,,SELECT CARDS.TYPE FROM CARDS INNER JOIN CARD_TRANSLATIONS ON CARDS.UUID = CARD_TRANSLATIONS.UUID WHERE CARDS.NAME = 'ANCESTOR''S CHOSEN' AND CARD_TRANSLATIONS.LANGUAGE = 'GERMAN',SELECT DISTINCT T1.TYPE FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.NAME = 'ANCESTOR''S CHOSEN' AND T2.LANGUAGE = 'GERMAN',
3,482,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `CARD_TRANSLATIONS`,,SELECT CARDS.TYPE FROM CARDS INNER JOIN CARD_TRANSLATIONS ON CARDS.UUID = CARD_TRANSLATIONS.UUID WHERE CARDS.NAME = 'ANCESTOR''S CHOSEN' AND CARD_TRANSLATIONS.LANGUAGE = 'GERMAN',SELECT DISTINCT T1.TYPE FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.NAME = 'ANCESTOR''S CHOSEN' AND T2.LANGUAGE = 'GERMAN',
1,483,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `LANGUAGES`,,SELECT CARDS.TEXT FROM CARDS INNER JOIN SETS ON CARDS.SETCODE = SETS.CODE INNER JOIN RULINGS ON CARDS.UUID = RULINGS.UUID INNER JOIN LANGUAGES ON RULINGS.LANGUAGEID = LANGUAGES.ID WHERE SETS.NAME = 'COLDSNAP' AND LANGUAGES.NAME = 'ITALIAN',SELECT DISTINCT T1.TEXT FROM FOREIGN_DATA AS T1 INNER JOIN CARDS AS T2 ON T2.UUID = T1.UUID INNER JOIN SETS AS T3 ON T3.CODE = T2.SETCODE WHERE T3.NAME = 'COLDSNAP' AND T1.LANGUAGE = 'ITALIAN',
2,483,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `LANGUAGES`,,SELECT CARDS.TEXT FROM CARDS INNER JOIN SETS ON CARDS.SETCODE = SETS.CODE INNER JOIN RULINGS ON CARDS.UUID = RULINGS.UUID INNER JOIN LANGUAGES ON RULINGS.LANGUAGEID = LANGUAGES.ID WHERE SETS.NAME = 'COLDSNAP' AND LANGUAGES.NAME = 'ITALIAN',SELECT DISTINCT T1.TEXT FROM FOREIGN_DATA AS T1 INNER JOIN CARDS AS T2 ON T2.UUID = T1.UUID INNER JOIN SETS AS T3 ON T3.CODE = T2.SETCODE WHERE T3.NAME = 'COLDSNAP' AND T1.LANGUAGE = 'ITALIAN',
3,483,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `LANGUAGES`,,SELECT CARDS.TEXT FROM CARDS INNER JOIN SETS ON CARDS.SETCODE = SETS.CODE INNER JOIN RULINGS ON CARDS.UUID = RULINGS.UUID INNER JOIN LANGUAGES ON RULINGS.LANGUAGEID = LANGUAGES.ID WHERE SETS.NAME = 'COLDSNAP' AND LANGUAGES.NAME = 'ITALIAN',SELECT DISTINCT T1.TEXT FROM FOREIGN_DATA AS T1 INNER JOIN CARDS AS T2 ON T2.UUID = T1.UUID INNER JOIN SETS AS T3 ON T3.CODE = T2.SETCODE WHERE T3.NAME = 'COLDSNAP' AND T1.LANGUAGE = 'ITALIAN',
1,484,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `CARD_SETS`,,SELECT CARDS.ITALIAN_NAME FROM CARDS INNER JOIN CARD_SETS ON CARDS.UUID = CARD_SETS.UUID WHERE CARD_SETS.NAME = 'COLDSNAP' ORDER BY CARDS.CONVERTEDMANACOST DESC LIMIT 1,SELECT T2.NAME FROM FOREIGN_DATA AS T1 INNER JOIN CARDS AS T2 ON T2.UUID = T1.UUID INNER JOIN SETS AS T3 ON T3.CODE = T2.SETCODE WHERE T3.NAME = 'COLDSNAP' AND T1.LANGUAGE = 'ITALIAN' ORDER BY T2.CONVERTEDMANACOST DESC,
2,484,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `CARD_SETS`,,SELECT CARDS.ITALIAN_NAME FROM CARDS INNER JOIN CARD_SETS ON CARDS.UUID = CARD_SETS.UUID WHERE CARD_SETS.NAME = 'COLDSNAP' ORDER BY CARDS.CONVERTEDMANACOST DESC LIMIT 1,SELECT T2.NAME FROM FOREIGN_DATA AS T1 INNER JOIN CARDS AS T2 ON T2.UUID = T1.UUID INNER JOIN SETS AS T3 ON T3.CODE = T2.SETCODE WHERE T3.NAME = 'COLDSNAP' AND T1.LANGUAGE = 'ITALIAN' ORDER BY T2.CONVERTEDMANACOST DESC,
3,484,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `CARD_SETS`,,SELECT CARDS.ITALIAN_NAME FROM CARDS INNER JOIN CARD_SETS ON CARDS.UUID = CARD_SETS.UUID WHERE CARD_SETS.NAME = 'COLDSNAP' ORDER BY CARDS.CONVERTEDMANACOST DESC LIMIT 1,SELECT T2.NAME FROM FOREIGN_DATA AS T1 INNER JOIN CARDS AS T2 ON T2.UUID = T1.UUID INNER JOIN SETS AS T3 ON T3.CODE = T2.SETCODE WHERE T3.NAME = 'COLDSNAP' AND T1.LANGUAGE = 'ITALIAN' ORDER BY T2.CONVERTEDMANACOST DESC,
1,485,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__DATE`,,SELECT CARDS.DATE FROM CARDS WHERE CARDS.NAME = 'REMINISCE';,SELECT T2.DATE FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T2.UUID = T1.UUID WHERE T1.NAME = 'REMINISCE',
2,485,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__DATE`,,SELECT CARDS.DATE FROM CARDS WHERE CARDS.NAME = 'REMINISCE';,SELECT T2.DATE FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T2.UUID = T1.UUID WHERE T1.NAME = 'REMINISCE',
3,485,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__DATE`,,SELECT CARDS.DATE FROM CARDS WHERE CARDS.NAME = 'REMINISCE';,SELECT T2.DATE FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T2.UUID = T1.UUID WHERE T1.NAME = 'REMINISCE',
1,486,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) FILTER (WHERE CONVERTEDMANACOST = 7) AS REAL) * 100 / COUNT(*) FROM CARDS WHERE NAME = 'COLDSNAP',SELECT CAST(SUM(CASE WHEN T1.CONVERTEDMANACOST = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T2.NAME = 'COLDSNAP',
2,486,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) FILTER (WHERE CONVERTEDMANACOST = 7) AS REAL) * 100 / COUNT(*) FROM CARDS WHERE NAME = 'COLDSNAP',SELECT CAST(SUM(CASE WHEN T1.CONVERTEDMANACOST = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T2.NAME = 'COLDSNAP',
3,486,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) FILTER (WHERE CONVERTEDMANACOST = 7) AS REAL) * 100 / COUNT(*) FROM CARDS WHERE NAME = 'COLDSNAP',SELECT CAST(SUM(CASE WHEN T1.CONVERTEDMANACOST = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T2.NAME = 'COLDSNAP',
1,487,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT CAST(COUNT(*) FILTER (WHERE CARDKINGDOMFOILID IS NOT NULL AND CARDKINGDOMID IS NOT NULL), REAL) * 100 / COUNT(*) FROM CARDS WHERE SET = 'COLDSNAP'`",,"SELECT CAST(COUNT(*) FILTER (WHERE CARDKINGDOMFOILID IS NOT NULL AND CARDKINGDOMID IS NOT NULL), REAL) * 100 / COUNT(*) FROM CARDS WHERE SET = 'COLDSNAP'",SELECT CAST(SUM(CASE WHEN T1.CARDKINGDOMFOILID IS NOT NULL AND T1.CARDKINGDOMID IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T2.NAME = 'COLDSNAP',
2,487,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT CAST(COUNT(*) FILTER (WHERE CARDKINGDOMFOILID IS NOT NULL AND CARDKINGDOMID IS NOT NULL), REAL) * 100 / COUNT(*) FROM CARDS WHERE SET = 'COLDSNAP'`",,"SELECT CAST(COUNT(*) FILTER (WHERE CARDKINGDOMFOILID IS NOT NULL AND CARDKINGDOMID IS NOT NULL), REAL) * 100 / COUNT(*) FROM CARDS WHERE SET = 'COLDSNAP'",SELECT CAST(SUM(CASE WHEN T1.CARDKINGDOMFOILID IS NOT NULL AND T1.CARDKINGDOMID IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T2.NAME = 'COLDSNAP',
3,487,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT CAST(COUNT(*) FILTER (WHERE CARDKINGDOMFOILID IS NOT NULL AND CARDKINGDOMID IS NOT NULL), REAL) * 100 / COUNT(*) FROM CARDS WHERE SET = 'COLDSNAP'`",,"SELECT CAST(COUNT(*) FILTER (WHERE CARDKINGDOMFOILID IS NOT NULL AND CARDKINGDOMID IS NOT NULL), REAL) * 100 / COUNT(*) FROM CARDS WHERE SET = 'COLDSNAP'",SELECT CAST(SUM(CASE WHEN T1.CARDKINGDOMFOILID IS NOT NULL AND T1.CARDKINGDOMID IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T2.NAME = 'COLDSNAP',
1,488,True,,0.056755,SELECT CODE FROM SETS WHERE RELEASEDATE = '2017-07-14',"SELECT CODE FROM SETS WHERE RELEASEDATE = '2017-07-14' GROUP BY RELEASEDATE, CODE",
1,489,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT SET.KEYRUNECODE FROM SET WHERE SET.CODE = 'PKHC';`,,SELECT SET.KEYRUNECODE FROM SET WHERE SET.CODE = 'PKHC';,SELECT KEYRUNECODE FROM SETS WHERE CODE = 'PKHC',
2,489,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT SET.KEYRUNECODE FROM SET WHERE SET.CODE = 'PKHC';`,,SELECT SET.KEYRUNECODE FROM SET WHERE SET.CODE = 'PKHC';,SELECT KEYRUNECODE FROM SETS WHERE CODE = 'PKHC',
3,489,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT SET.KEYRUNECODE FROM SET WHERE SET.CODE = 'PKHC';`,,SELECT SET.KEYRUNECODE FROM SET WHERE SET.CODE = 'PKHC';,SELECT KEYRUNECODE FROM SETS WHERE CODE = 'PKHC',
1,490,True,,0.046432,SELECT MCMID FROM SETS WHERE CODE = 'SS2';,SELECT MCMID FROM SETS WHERE CODE = 'SS2',
1,491,True,,0.0472849999999999,SELECT SETS.MCMNAME FROM SETS WHERE SETS.RELEASEDATE = '2017/6/9';,SELECT MCMNAME FROM SETS WHERE RELEASEDATE = '2017-06-09',
1,492,ERROR,"NotImplementedError: {'like': ['NAME', {'literal': '%FROM THE VAULT: LORE%'}]}",,SELECT SETS.TYPE FROM SETS WHERE SETS.NAME = 'FROM THE VAULT: LORE',SELECT TYPE FROM SETS WHERE NAME LIKE '%FROM THE VAULT: LORE%',
2,492,ERROR,"NotImplementedError: {'like': ['NAME', {'literal': '%FROM THE VAULT: LORE%'}]}",,SELECT SETS.TYPE FROM SETS WHERE SETS.NAME = 'FROM THE VAULT: LORE',SELECT TYPE FROM SETS WHERE NAME LIKE '%FROM THE VAULT: LORE%',
3,492,ERROR,"NotImplementedError: {'like': ['NAME', {'literal': '%FROM THE VAULT: LORE%'}]}",,SELECT SETS.TYPE FROM SETS WHERE SETS.NAME = 'FROM THE VAULT: LORE',SELECT TYPE FROM SETS WHERE NAME LIKE '%FROM THE VAULT: LORE%',
1,493,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PARENT_CODE`,,SELECT PARENT_CODE FROM SETS WHERE NAME = 'COMMANDER 2014 OVERSIZED';,SELECT PARENTCODE FROM SETS WHERE NAME = 'COMMANDER 2014 OVERSIZED',
2,493,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PARENT_CODE`,,SELECT PARENT_CODE FROM SETS WHERE NAME = 'COMMANDER 2014 OVERSIZED';,SELECT PARENTCODE FROM SETS WHERE NAME = 'COMMANDER 2014 OVERSIZED',
3,493,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PARENT_CODE`,,SELECT PARENT_CODE FROM SETS WHERE NAME = 'COMMANDER 2014 OVERSIZED';,SELECT PARENTCODE FROM SETS WHERE NAME = 'COMMANDER 2014 OVERSIZED',
1,494,False,,,SELECT CARDS.TEXT FROM CARDS WHERE CARDS.ARTIST = 'JIM PAVELEC' AND CARDS.HASCONTENTWARNING = 1,"SELECT T2.TEXT , CASE WHEN T1.HASCONTENTWARNING = 1 THEN 'YES' ELSE 'NO' END FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T2.UUID = T1.UUID WHERE T1.ARTIST = 'JIM PAVELEC'",
1,495,True,,0.145008,SELECT SETS.RELEASEDATE FROM CARDS INNER JOIN SETS ON CARDS.SETCODE = SETS.CODE WHERE CARDS.NAME = 'EVACUATION',SELECT T2.RELEASEDATE FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T1.NAME = 'EVACUATION',
1,496,True,,0.076602,SELECT SETS.BASESETSIZE FROM SETS INNER JOIN SET_TRANSLATIONS ON SETS.CODE = SET_TRANSLATIONS.SETCODE WHERE SET_TRANSLATIONS.TRANSLATION = 'RINASCITA DI ALARA';,SELECT T1.BASESETSIZE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T2.TRANSLATION = 'RINASCITA DI ALARA',
1,497,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TRANSLATION`,,SELECT TYPE FROM SETS WHERE TRANSLATION = 'HUITIÈME ÉDITION',SELECT TYPE FROM SETS WHERE CODE IN ( SELECT SETCODE FROM SET_TRANSLATIONS WHERE TRANSLATION = 'HUITIÈME ÉDITION' ),
2,497,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TRANSLATION`,,SELECT TYPE FROM SETS WHERE TRANSLATION = 'HUITIÈME ÉDITION',SELECT TYPE FROM SETS WHERE CODE IN ( SELECT SETCODE FROM SET_TRANSLATIONS WHERE TRANSLATION = 'HUITIÈME ÉDITION' ),
3,497,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TRANSLATION`,,SELECT TYPE FROM SETS WHERE TRANSLATION = 'HUITIÈME ÉDITION',SELECT TYPE FROM SETS WHERE CODE IN ( SELECT SETCODE FROM SET_TRANSLATIONS WHERE TRANSLATION = 'HUITIÈME ÉDITION' ),
1,498,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `TRANSLATIONS`,,SELECT CARDS.SET_NAME FROM CARDS INNER JOIN TRANSLATIONS ON CARDS.UUID = TRANSLATIONS.UUID WHERE TRANSLATIONS.TRANSLATED_NAME = 'TENDO ICE BRIDGE' AND TRANSLATIONS.LANGUAGE = 'FRENCH',SELECT T2.TRANSLATION FROM CARDS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.SETCODE WHERE T1.NAME = 'TENDO ICE BRIDGE' AND T2.LANGUAGE = 'FRENCH' AND T2.TRANSLATION IS NOT NULL,
2,498,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `TRANSLATIONS`,,SELECT CARDS.SET_NAME FROM CARDS INNER JOIN TRANSLATIONS ON CARDS.UUID = TRANSLATIONS.UUID WHERE TRANSLATIONS.TRANSLATED_NAME = 'TENDO ICE BRIDGE' AND TRANSLATIONS.LANGUAGE = 'FRENCH',SELECT T2.TRANSLATION FROM CARDS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.SETCODE WHERE T1.NAME = 'TENDO ICE BRIDGE' AND T2.LANGUAGE = 'FRENCH' AND T2.TRANSLATION IS NOT NULL,
3,498,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `TRANSLATIONS`,,SELECT CARDS.SET_NAME FROM CARDS INNER JOIN TRANSLATIONS ON CARDS.UUID = TRANSLATIONS.UUID WHERE TRANSLATIONS.TRANSLATED_NAME = 'TENDO ICE BRIDGE' AND TRANSLATIONS.LANGUAGE = 'FRENCH',SELECT T2.TRANSLATION FROM CARDS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.SETCODE WHERE T1.NAME = 'TENDO ICE BRIDGE' AND T2.LANGUAGE = 'FRENCH' AND T2.TRANSLATION IS NOT NULL,
1,499,True,,0.095723,SELECT COUNT(*) FROM SETS INNER JOIN SET_TRANSLATIONS ON SETS.CODE = SET_TRANSLATIONS.SETCODE WHERE SETS.NAME = 'TENTH EDITION' AND SET_TRANSLATIONS.TRANSLATION IS NOT NULL,SELECT COUNT(DISTINCT T2.TRANSLATION) FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T1.NAME = 'TENTH EDITION' AND T2.TRANSLATION IS NOT NULL,
1,500,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__NAME`,,SELECT SETS.NAME FROM CARDS INNER JOIN SET_TRANSLATIONS ON CARDS.SETCODE = SET_TRANSLATIONS.SETCODE WHERE CARDS.NAME = 'FELLWAR STONE' AND SET_TRANSLATIONS.LANGUAGE = 'JAPANESE';,SELECT T2.TRANSLATION FROM CARDS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.SETCODE WHERE T1.NAME = 'FELLWAR STONE' AND T2.LANGUAGE = 'JAPANESE' AND T2.TRANSLATION IS NOT NULL,
2,500,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__NAME`,,SELECT SETS.NAME FROM CARDS INNER JOIN SET_TRANSLATIONS ON CARDS.SETCODE = SET_TRANSLATIONS.SETCODE WHERE CARDS.NAME = 'FELLWAR STONE' AND SET_TRANSLATIONS.LANGUAGE = 'JAPANESE';,SELECT T2.TRANSLATION FROM CARDS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.SETCODE WHERE T1.NAME = 'FELLWAR STONE' AND T2.LANGUAGE = 'JAPANESE' AND T2.TRANSLATION IS NOT NULL,
3,500,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__NAME`,,SELECT SETS.NAME FROM CARDS INNER JOIN SET_TRANSLATIONS ON CARDS.SETCODE = SET_TRANSLATIONS.SETCODE WHERE CARDS.NAME = 'FELLWAR STONE' AND SET_TRANSLATIONS.LANGUAGE = 'JAPANESE';,SELECT T2.TRANSLATION FROM CARDS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.SETCODE WHERE T1.NAME = 'FELLWAR STONE' AND T2.LANGUAGE = 'JAPANESE' AND T2.TRANSLATION IS NOT NULL,
1,501,True,,0.145479,SELECT CARDS.NAME FROM SETS INNER JOIN CARDS ON SETS.CODE = CARDS.SETCODE WHERE SETS.NAME = 'JOURNEY INTO NYX HERO''S PATH' ORDER BY CARDS.CONVERTEDMANACOST DESC LIMIT 1,SELECT T1.NAME FROM CARDS AS T1 INNER JOIN SETS AS T2 ON T2.CODE = T1.SETCODE WHERE T2.NAME = 'JOURNEY INTO NYX HERO''S PATH' ORDER BY T1.CONVERTEDMANACOST DESC LIMIT 1,
1,502,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__RELEASE_DATE`,,SELECT SETS.RELEASE_DATE FROM SETS INNER JOIN SET_TRANSLATIONS ON SETS.CODE = SET_TRANSLATIONS.SETCODE WHERE SET_TRANSLATIONS.TRANSLATION = 'OLA DE FRÍO';,SELECT T1.RELEASEDATE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T2.TRANSLATION = 'OLA DE FRÍO',
2,502,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__RELEASE_DATE`,,SELECT SETS.RELEASE_DATE FROM SETS INNER JOIN SET_TRANSLATIONS ON SETS.CODE = SET_TRANSLATIONS.SETCODE WHERE SET_TRANSLATIONS.TRANSLATION = 'OLA DE FRÍO';,SELECT T1.RELEASEDATE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T2.TRANSLATION = 'OLA DE FRÍO',
3,502,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__RELEASE_DATE`,,SELECT SETS.RELEASE_DATE FROM SETS INNER JOIN SET_TRANSLATIONS ON SETS.CODE = SET_TRANSLATIONS.SETCODE WHERE SET_TRANSLATIONS.TRANSLATION = 'OLA DE FRÍO';,SELECT T1.RELEASEDATE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T2.SETCODE = T1.CODE WHERE T2.TRANSLATION = 'OLA DE FRÍO',
1,503,True,,0.106669,SELECT SETS.TYPE FROM CARDS INNER JOIN SETS ON CARDS.SETCODE = SETS.CODE WHERE CARDS.NAME = 'SAMITE PILGRIM';,SELECT TYPE FROM SETS WHERE CODE IN ( SELECT SETCODE FROM CARDS WHERE NAME = 'SAMITE PILGRIM' ),
1,504,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__CONVERTED_MANA_COST`,,SELECT COUNT(*) FROM SETS INNER JOIN CARDS ON SETS.CODE = CARDS.SETCODE WHERE SETS.NAME = 'WORLD CHAMPIONSHIP DECKS 2004' AND CARDS.CONVERTED_MANA_COST = 3,SELECT COUNT(ID) FROM CARDS WHERE SETCODE IN ( SELECT CODE FROM SETS WHERE NAME = 'WORLD CHAMPIONSHIP DECKS 2004' ) AND CONVERTEDMANACOST = 3,
2,504,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__CONVERTED_MANA_COST`,,SELECT COUNT(*) FROM SETS INNER JOIN CARDS ON SETS.CODE = CARDS.SETCODE WHERE SETS.NAME = 'WORLD CHAMPIONSHIP DECKS 2004' AND CARDS.CONVERTED_MANA_COST = 3,SELECT COUNT(ID) FROM CARDS WHERE SETCODE IN ( SELECT CODE FROM SETS WHERE NAME = 'WORLD CHAMPIONSHIP DECKS 2004' ) AND CONVERTEDMANACOST = 3,
3,504,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__CONVERTED_MANA_COST`,,SELECT COUNT(*) FROM SETS INNER JOIN CARDS ON SETS.CODE = CARDS.SETCODE WHERE SETS.NAME = 'WORLD CHAMPIONSHIP DECKS 2004' AND CARDS.CONVERTED_MANA_COST = 3,SELECT COUNT(ID) FROM CARDS WHERE SETCODE IN ( SELECT CODE FROM SETS WHERE NAME = 'WORLD CHAMPIONSHIP DECKS 2004' ) AND CONVERTEDMANACOST = 3,
1,505,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `CARDSETLANGUAGE`,,SELECT CARDSETLANGUAGE.TRANSLATION FROM CARDSETLANGUAGE WHERE CARDSETLANGUAGE.NAME = 'MIRRODIN' AND CARDSETLANGUAGE.LANGUAGE = 'CHINESE SIMPLIFIED';,SELECT TRANSLATION FROM SET_TRANSLATIONS WHERE SETCODE IN ( SELECT CODE FROM SETS WHERE NAME = 'MIRRODIN' ) AND LANGUAGE = 'CHINESE SIMPLIFIED',
2,505,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `CARDSETLANGUAGE`,,SELECT CARDSETLANGUAGE.TRANSLATION FROM CARDSETLANGUAGE WHERE CARDSETLANGUAGE.NAME = 'MIRRODIN' AND CARDSETLANGUAGE.LANGUAGE = 'CHINESE SIMPLIFIED';,SELECT TRANSLATION FROM SET_TRANSLATIONS WHERE SETCODE IN ( SELECT CODE FROM SETS WHERE NAME = 'MIRRODIN' ) AND LANGUAGE = 'CHINESE SIMPLIFIED',
3,505,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `CARDSETLANGUAGE`,,SELECT CARDSETLANGUAGE.TRANSLATION FROM CARDSETLANGUAGE WHERE CARDSETLANGUAGE.NAME = 'MIRRODIN' AND CARDSETLANGUAGE.LANGUAGE = 'CHINESE SIMPLIFIED';,SELECT TRANSLATION FROM SET_TRANSLATIONS WHERE SETCODE IN ( SELECT CODE FROM SETS WHERE NAME = 'MIRRODIN' ) AND LANGUAGE = 'CHINESE SIMPLIFIED',
1,506,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SET_TRANSLATIONS__UUID`,,SELECT (CAST(SUM(CASE WHEN CARDS.ISNONFOILONLY = 1 THEN 1 ELSE 0 END) AS REAL) * 100) / SUM(CASE WHEN SET_TRANSLATIONS.LANGUAGE = 'JAPANESE' THEN 1 ELSE 0 END) FROM CARDS INNER JOIN SET_TRANSLATIONS ON CARDS.UUID = SET_TRANSLATIONS.UUID WHERE SET_TRANSLATIONS.LANGUAGE = 'JAPANESE',SELECT CAST(SUM(CASE WHEN ISNONFOILONLY = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM SETS WHERE CODE IN ( SELECT SETCODE FROM SET_TRANSLATIONS WHERE LANGUAGE = 'JAPANESE' ),
2,506,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SET_TRANSLATIONS__UUID`,,SELECT (CAST(SUM(CASE WHEN CARDS.ISNONFOILONLY = 1 THEN 1 ELSE 0 END) AS REAL) * 100) / SUM(CASE WHEN SET_TRANSLATIONS.LANGUAGE = 'JAPANESE' THEN 1 ELSE 0 END) FROM CARDS INNER JOIN SET_TRANSLATIONS ON CARDS.UUID = SET_TRANSLATIONS.UUID WHERE SET_TRANSLATIONS.LANGUAGE = 'JAPANESE',SELECT CAST(SUM(CASE WHEN ISNONFOILONLY = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM SETS WHERE CODE IN ( SELECT SETCODE FROM SET_TRANSLATIONS WHERE LANGUAGE = 'JAPANESE' ),
3,506,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SET_TRANSLATIONS__UUID`,,SELECT (CAST(SUM(CASE WHEN CARDS.ISNONFOILONLY = 1 THEN 1 ELSE 0 END) AS REAL) * 100) / SUM(CASE WHEN SET_TRANSLATIONS.LANGUAGE = 'JAPANESE' THEN 1 ELSE 0 END) FROM CARDS INNER JOIN SET_TRANSLATIONS ON CARDS.UUID = SET_TRANSLATIONS.UUID WHERE SET_TRANSLATIONS.LANGUAGE = 'JAPANESE',SELECT CAST(SUM(CASE WHEN ISNONFOILONLY = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM SETS WHERE CODE IN ( SELECT SETCODE FROM SET_TRANSLATIONS WHERE LANGUAGE = 'JAPANESE' ),
1,507,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SET_TRANSLATIONS__UUID`,,SELECT CAST(SUM(CASE WHEN CARDS.ISONLINEONLY = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM CARDS INNER JOIN SET_TRANSLATIONS ON CARDS.UUID = SET_TRANSLATIONS.UUID WHERE SET_TRANSLATIONS.LANGUAGE = 'PORTUGUESE (BRAZIL)',SELECT CAST(SUM(CASE WHEN ISONLINEONLY = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM SETS WHERE CODE IN ( SELECT SETCODE FROM SET_TRANSLATIONS WHERE LANGUAGE = 'PORTUGUESE (BRAZIL)' ),
2,507,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SET_TRANSLATIONS__UUID`,,SELECT CAST(SUM(CASE WHEN CARDS.ISONLINEONLY = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM CARDS INNER JOIN SET_TRANSLATIONS ON CARDS.UUID = SET_TRANSLATIONS.UUID WHERE SET_TRANSLATIONS.LANGUAGE = 'PORTUGUESE (BRAZIL)',SELECT CAST(SUM(CASE WHEN ISONLINEONLY = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM SETS WHERE CODE IN ( SELECT SETCODE FROM SET_TRANSLATIONS WHERE LANGUAGE = 'PORTUGUESE (BRAZIL)' ),
3,507,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SET_TRANSLATIONS__UUID`,,SELECT CAST(SUM(CASE WHEN CARDS.ISONLINEONLY = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM CARDS INNER JOIN SET_TRANSLATIONS ON CARDS.UUID = SET_TRANSLATIONS.UUID WHERE SET_TRANSLATIONS.LANGUAGE = 'PORTUGUESE (BRAZIL)',SELECT CAST(SUM(CASE WHEN ISONLINEONLY = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM SETS WHERE CODE IN ( SELECT SETCODE FROM SET_TRANSLATIONS WHERE LANGUAGE = 'PORTUGUESE (BRAZIL)' ),
1,508,True,,0.0667939999999999,SELECT CARDS.AVAILABILITY FROM CARDS WHERE CARDS.ARTIST = 'ALEKSI BRICLOT' AND CARDS.ISTEXTLESS = 1,SELECT DISTINCT AVAILABILITY FROM CARDS WHERE ARTIST = 'ALEKSI BRICLOT' AND ISTEXTLESS = 1,
1,509,True,,0.043668,SELECT ID FROM SETS ORDER BY BASESETSIZE DESC LIMIT 1;,SELECT ID FROM SETS ORDER BY BASESETSIZE DESC LIMIT 1,
1,510,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__CONVERTED_MANA_COST`,,SELECT CARDS.ARTIST FROM CARDS WHERE CARDS.SIDE IS NULL ORDER BY CARDS.CONVERTED_MANA_COST DESC LIMIT 1,SELECT ARTIST FROM CARDS WHERE SIDE IS NULL ORDER BY CONVERTEDMANACOST DESC LIMIT 1,
2,510,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__CONVERTED_MANA_COST`,,SELECT CARDS.ARTIST FROM CARDS WHERE CARDS.SIDE IS NULL ORDER BY CARDS.CONVERTED_MANA_COST DESC LIMIT 1,SELECT ARTIST FROM CARDS WHERE SIDE IS NULL ORDER BY CONVERTEDMANACOST DESC LIMIT 1,
3,510,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__CONVERTED_MANA_COST`,,SELECT CARDS.ARTIST FROM CARDS WHERE CARDS.SIDE IS NULL ORDER BY CARDS.CONVERTED_MANA_COST DESC LIMIT 1,SELECT ARTIST FROM CARDS WHERE SIDE IS NULL ORDER BY CONVERTEDMANACOST DESC LIMIT 1,
1,511,True,,0.1194659999999999,SELECT FRAMEEFFECTS FROM CARDS WHERE CARDKINGDOMFOILID IS NOT NULL AND CARDKINGDOMID IS NOT NULL GROUP BY FRAMEEFFECTS ORDER BY COUNT(*) DESC LIMIT 1,SELECT FRAMEEFFECTS FROM CARDS WHERE CARDKINGDOMFOILID IS NOT NULL AND CARDKINGDOMID IS NOT NULL GROUP BY FRAMEEFFECTS ORDER BY COUNT(FRAMEEFFECTS) DESC LIMIT 1,
1,512,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CARDS (
	ID INTEGER,
	ARTIST VARCHAR(20),
	ASCIINAME VARCHAR(20),
	AVAILABILITY VARCHAR(20),
	BORDERCOLOR VARCHAR(20),
	CARDKINGDOMFOILID VARCHAR(20),
	CARDKINGDOMID VARCHAR(20),
	COLORIDENTITY VARCHAR(20),
	COLORINDICATOR VARCHAR(20),
	COLORS VARCHAR(20),
	CONVERTEDMANACOST INTEGER,
	DUELDECK VARCHAR(20),
	EDHRECRANK INTEGER,
	FACECONVERTEDMANACOST INTEGER,
	FACENAME VARCHAR(20),
	FLAVORNAME VARCHAR(20),
	FLAVORTEXT VARCHAR(20),
	FRAMEEFFECTS VARCHAR(20),
	FRAMEVERSION VARCHAR(20),
	HAND VARCHAR(20),
	HASALTERNATIVEDECKLIMIT INTEGER,
	HASCONTENTWARNING INTEGER,
	HASFOIL INTEGER,
	HASNONSFOIL INTEGER,
	ISALTERNATIVE INTEGER,
	ISFULLART INTEGER,
	ISONLINEONLY INTEGER,
	ISOVERSIZED INTEGER,
	ISPROMO INTEGER,
	ISREPRINT INTEGER,
	ISRESERVED INTEGER,
	ISSTARTER INTEGER,
	ISSTORYSPOTLIGHT INTEGER,
	ISTEXTLESS INTEGER,
	ISTIMESHIFTED INTEGER,
	KEYWORDS VARCHAR(20),
	LAYOUT VARCHAR(20),
	LEADERSHIPSKILLS VARCHAR(20),
	LIFE VARCHAR(20),
	LOYALTY VARCHAR(20),
	MANACOST VARCHAR(20),
	MCMID VARCHAR(20),
	MCMMETAID VARCHAR(20),
	MTGARENAID VARCHAR(20),
	MTGJSONV4ID VARCHAR(20),
	MTGOFOILID VARCHAR(20),
	MTGOID VARCHAR(20),
	MULTIVERSEID VARCHAR(20),
	NAME VARCHAR(20),
	NUMBER VARCHAR(20),
	ORIGINALRELEASEDATE VARCHAR(20),
	ORIGINALTEXT VARCHAR(20),
	ORIGINALTYPE VARCHAR(20),
	OTHERFACEIDS VARCHAR(20),
	POWER VARCHAR(20),
	PRINTINGS VARCHAR(20),
	PROMOTYPES VARCHAR(20),
	PURCHASEURLS VARCHAR(20),
	RARITY VARCHAR(20),
	SCRYFALLID VARCHAR(20),
	SCRYFALLILLUSTRATIONID VARCHAR(20),
	SCRYFALLORACLEID VARCHAR(20),
	SETCODE VARCHAR(20),
	SIDE VARCHAR(20),
	SUBTYPES VARCHAR(20),
	SUPERTYPES VARCHAR(20),
	TCGPLAYERPRODUCTID VARCHAR(20),
	TEXT VARCHAR(20),
	TOUGHNESS VARCHAR(20),
	TYPE VARCHAR(20),
	TYPES VARCHAR(20),
	UUID VARCHAR(20),
	VARIATIONS VARCHAR(20),
	WATERMARK VARCHAR(20)
);
INSERT INTO CARDS VALUES (0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, '1303934540517341053', 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE FOREIGN_DATA (
	ID INTEGER,
	FLAVORTEXT VARCHAR(20),
	LANGUAGE VARCHAR(20),
	MULTIVERSEID INTEGER,
	NAME VARCHAR(20),
	TEXT VARCHAR(20),
	TYPE VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO FOREIGN_DATA VALUES (0, '2147483648', '2147483648', 0, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE LEGALITIES (
	ID INTEGER,
	FORMAT VARCHAR(20),
	STATUS VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO LEGALITIES VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE SETS (
	ID INTEGER,
	BASESETSIZE INTEGER,
	BLOCK VARCHAR(20),
	BOOSTER VARCHAR(20),
	CODE VARCHAR(20),
	ISFOILONLY INTEGER,
	ISFOREIGNONLY INTEGER,
	ISNONFOILONLY INTEGER,
	ISONLINEONLY INTEGER,
	ISPARTIALPREVIEW INTEGER,
	KEYRUNE_CODE VARCHAR(20),
	MCMID INTEGER,
	MCMIDEXTRAS INTEGER,
	MCMNAME VARCHAR(20),
	MTGOCODE VARCHAR(20),
	NAME VARCHAR(20),
	PARENTCODE VARCHAR(20),
	RELEASEDATE DATE,
	TCGPLAYERGROUPID INTEGER,
	TOTALSETSIZE INTEGER,
	TYPE VARCHAR(20)
);
INSERT INTO SETS VALUES (0, 0, '2147483648', '2147483648', '2147483648', 0, 0, 0, 0, 0, '2147483648', 0, 0, '2147483648', '2147483648', '2147483648', '2147483648', '1970-01-01', 0, 0, '2147483648');
CREATE TABLE SET_TRANSLATIONS (
	ID INTEGER,
	LANGUAGE VARCHAR(20),
	SETCODE VARCHAR(20),
	TRANSLATION VARCHAR(20)
);
INSERT INTO SET_TRANSLATIONS VALUES (0, '2147483648', '2147483648', '2147483648');
CREATE TABLE RULINGS (
	ID INTEGER,
	DATE DATE,
	TEXT VARCHAR(20),
	UUID VARCHAR(20)
);
INSERT INTO RULINGS VALUES (0, '1970-01-01', '2147483648', '2147483648');
-- ----------sql1------------
-- 0
SELECT COUNT(*) FROM CARDS WHERE (POWER IS NULL OR POWER = '*') AND HASFOIL = 0 AND DUELDECK = 'A';
-- ----------sql2------------
-- NULL
SELECT SUM(CASE WHEN POWER = '*' OR POWER IS NULL THEN 1 ELSE 0 END) FROM CARDS WHERE HASFOIL = 0 AND DUELDECK = 'A';
",0.111409,SELECT COUNT(*) FROM CARDS WHERE (POWER IS NULL OR POWER = '*') AND HASFOIL = 0 AND DUELDECK = 'A',SELECT SUM(CASE WHEN POWER = '*' OR POWER IS NULL THEN 1 ELSE 0 END) FROM CARDS WHERE HASFOIL = 0 AND DUELDECK = 'A',
1,513,True,,0.048665,SELECT SETS.ID FROM SETS WHERE SETS.TYPE = 'COMMANDER' ORDER BY SETS.TOTALSETSIZE DESC LIMIT 1,SELECT ID FROM SETS WHERE TYPE = 'COMMANDER' ORDER BY TOTALSETSIZE DESC LIMIT 1,
1,514,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FORMAT`,,"SELECT CARD FROM ( SELECT CARD, MANACOST FROM CARDS WHERE FORMAT = 'DUEL' ORDER BY MANACOST DESC LIMIT 10 )","SELECT DISTINCT NAME FROM CARDS WHERE UUID IN ( SELECT UUID FROM LEGALITIES WHERE FORMAT = 'DUEL' ) ORDER BY MANACOST DESC LIMIT 0, 10",
2,514,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FORMAT`,,"SELECT CARD FROM ( SELECT CARD, MANACOST FROM CARDS WHERE FORMAT = 'DUEL' ORDER BY MANACOST DESC LIMIT 10 )","SELECT DISTINCT NAME FROM CARDS WHERE UUID IN ( SELECT UUID FROM LEGALITIES WHERE FORMAT = 'DUEL' ) ORDER BY MANACOST DESC LIMIT 0, 10",
3,514,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FORMAT`,,"SELECT CARD FROM ( SELECT CARD, MANACOST FROM CARDS WHERE FORMAT = 'DUEL' ORDER BY MANACOST DESC LIMIT 10 )","SELECT DISTINCT NAME FROM CARDS WHERE UUID IN ( SELECT UUID FROM LEGALITIES WHERE FORMAT = 'DUEL' ) ORDER BY MANACOST DESC LIMIT 0, 10",
1,515,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `FORMATS`,,"SELECT CARDS.ORIGINALRELEASEDATE, FORMATS.FORMAT FROM CARDS INNER JOIN LEGALITIES ON CARDS.UUID = LEGALITIES.UUID INNER JOIN FORMATS ON LEGALITIES.FORMATID = FORMATS.ID WHERE CARDS.RARITY = 'MYTHIC' AND FORMATS.STATUS = 'LEGAL' ORDER BY CARDS.ORIGINALRELEASEDATE ASC LIMIT 1","SELECT T1.ORIGINALRELEASEDATE, T2.FORMAT FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.RARITY = 'MYTHIC' AND T1.ORIGINALRELEASEDATE IS NOT NULL AND T2.STATUS = 'LEGAL' ORDER BY T1.ORIGINALRELEASEDATE LIMIT 1",
2,515,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `FORMATS`,,"SELECT CARDS.ORIGINALRELEASEDATE, FORMATS.FORMAT FROM CARDS INNER JOIN LEGALITIES ON CARDS.UUID = LEGALITIES.UUID INNER JOIN FORMATS ON LEGALITIES.FORMATID = FORMATS.ID WHERE CARDS.RARITY = 'MYTHIC' AND FORMATS.STATUS = 'LEGAL' ORDER BY CARDS.ORIGINALRELEASEDATE ASC LIMIT 1","SELECT T1.ORIGINALRELEASEDATE, T2.FORMAT FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.RARITY = 'MYTHIC' AND T1.ORIGINALRELEASEDATE IS NOT NULL AND T2.STATUS = 'LEGAL' ORDER BY T1.ORIGINALRELEASEDATE LIMIT 1",
3,515,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `FORMATS`,,"SELECT CARDS.ORIGINALRELEASEDATE, FORMATS.FORMAT FROM CARDS INNER JOIN LEGALITIES ON CARDS.UUID = LEGALITIES.UUID INNER JOIN FORMATS ON LEGALITIES.FORMATID = FORMATS.ID WHERE CARDS.RARITY = 'MYTHIC' AND FORMATS.STATUS = 'LEGAL' ORDER BY CARDS.ORIGINALRELEASEDATE ASC LIMIT 1","SELECT T1.ORIGINALRELEASEDATE, T2.FORMAT FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.RARITY = 'MYTHIC' AND T1.ORIGINALRELEASEDATE IS NOT NULL AND T2.STATUS = 'LEGAL' ORDER BY T1.ORIGINALRELEASEDATE LIMIT 1",
1,516,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT COUNT(*) FROM CARDS WHERE ARTIST = 'VOLKAN BAǴA' AND LANGUAGE = 'FRENCH',SELECT COUNT(T3.ID) FROM ( SELECT T1.ID FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.ARTIST = 'VOLKAN BAǴA' AND T2.LANGUAGE = 'FRENCH' GROUP BY T1.ID ) AS T3,
2,516,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT COUNT(*) FROM CARDS WHERE ARTIST = 'VOLKAN BAǴA' AND LANGUAGE = 'FRENCH',SELECT COUNT(T3.ID) FROM ( SELECT T1.ID FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.ARTIST = 'VOLKAN BAǴA' AND T2.LANGUAGE = 'FRENCH' GROUP BY T1.ID ) AS T3,
3,516,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LANGUAGE`,,SELECT COUNT(*) FROM CARDS WHERE ARTIST = 'VOLKAN BAǴA' AND LANGUAGE = 'FRENCH',SELECT COUNT(T3.ID) FROM ( SELECT T1.ID FROM CARDS AS T1 INNER JOIN FOREIGN_DATA AS T2 ON T2.UUID = T1.UUID WHERE T1.ARTIST = 'VOLKAN BAǴA' AND T2.LANGUAGE = 'FRENCH' GROUP BY T1.ID ) AS T3,
1,517,True,,0.171429,SELECT COUNT(*) FROM CARDS INNER JOIN LEGALITIES ON CARDS.UUID = LEGALITIES.UUID WHERE CARDS.RARITY = 'RARE' AND CARDS.TYPES = 'ENCHANTMENT' AND CARDS.NAME = 'ABUNDANCE' AND LEGALITIES.STATUS = 'LEGAL',SELECT COUNT(T1.ID) FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T2.UUID = T1.UUID WHERE T1.RARITY = 'RARE' AND T1.TYPES = 'ENCHANTMENT' AND T1.NAME = 'ABUNDANCE' AND T2.STATUS = 'LEGAL',
1,518,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute STATUS`,,"SELECT FORMAT, CARD_NAME FROM CARDS WHERE STATUS = 'BANNED' GROUP BY FORMAT HAVING COUNT(STATUS) = (SELECT MAX(COUNT(STATUS)) FROM CARDS WHERE STATUS = 'BANNED') ORDER BY FORMAT","WITH MAXBANNED AS (SELECT FORMAT, COUNT(*) AS COUNT_BANNED FROM LEGALITIES WHERE STATUS = 'BANNED' GROUP BY FORMAT ORDER BY COUNT(*) DESC LIMIT 1) SELECT T2.FORMAT, T1.NAME FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T2.UUID = T1.UUID INNER JOIN MAXBANNED MB ON MB.FORMAT = T2.FORMAT WHERE T2.STATUS = 'BANNED'",
2,518,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute STATUS`,,"SELECT FORMAT, CARD_NAME FROM CARDS WHERE STATUS = 'BANNED' GROUP BY FORMAT HAVING COUNT(STATUS) = (SELECT MAX(COUNT(STATUS)) FROM CARDS WHERE STATUS = 'BANNED') ORDER BY FORMAT","WITH MAXBANNED AS (SELECT FORMAT, COUNT(*) AS COUNT_BANNED FROM LEGALITIES WHERE STATUS = 'BANNED' GROUP BY FORMAT ORDER BY COUNT(*) DESC LIMIT 1) SELECT T2.FORMAT, T1.NAME FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T2.UUID = T1.UUID INNER JOIN MAXBANNED MB ON MB.FORMAT = T2.FORMAT WHERE T2.STATUS = 'BANNED'",
3,518,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute STATUS`,,"SELECT FORMAT, CARD_NAME FROM CARDS WHERE STATUS = 'BANNED' GROUP BY FORMAT HAVING COUNT(STATUS) = (SELECT MAX(COUNT(STATUS)) FROM CARDS WHERE STATUS = 'BANNED') ORDER BY FORMAT","WITH MAXBANNED AS (SELECT FORMAT, COUNT(*) AS COUNT_BANNED FROM LEGALITIES WHERE STATUS = 'BANNED' GROUP BY FORMAT ORDER BY COUNT(*) DESC LIMIT 1) SELECT T2.FORMAT, T1.NAME FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T2.UUID = T1.UUID INNER JOIN MAXBANNED MB ON MB.FORMAT = T2.FORMAT WHERE T2.STATUS = 'BANNED'",
1,519,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__LANGUAGE`,,SELECT SETS.LANGUAGE FROM SETS WHERE SETS.NAME = 'BATTLEBOND';,SELECT LANGUAGE FROM SET_TRANSLATIONS WHERE ID IN ( SELECT ID FROM SETS WHERE NAME = 'BATTLEBOND' ),
2,519,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__LANGUAGE`,,SELECT SETS.LANGUAGE FROM SETS WHERE SETS.NAME = 'BATTLEBOND';,SELECT LANGUAGE FROM SET_TRANSLATIONS WHERE ID IN ( SELECT ID FROM SETS WHERE NAME = 'BATTLEBOND' ),
3,519,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SETS__LANGUAGE`,,SELECT SETS.LANGUAGE FROM SETS WHERE SETS.NAME = 'BATTLEBOND';,SELECT LANGUAGE FROM SET_TRANSLATIONS WHERE ID IN ( SELECT ID FROM SETS WHERE NAME = 'BATTLEBOND' ),
1,520,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FORMAT`,,"SELECT CARDS.ARTIST, CARDS.FORMAT FROM CARDS GROUP BY CARDS.ARTIST HAVING COUNT(CARDS.CARD_ID) = (SELECT MIN(COUNT(CARDS.CARD_ID)) FROM CARDS GROUP BY CARDS.ARTIST)","SELECT T1.ARTIST, T2.FORMAT FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T2.UUID = T1.UUID GROUP BY T1.ARTIST ORDER BY COUNT(T1.ID) ASC LIMIT 1",
2,520,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FORMAT`,,"SELECT CARDS.ARTIST, CARDS.FORMAT FROM CARDS GROUP BY CARDS.ARTIST HAVING COUNT(CARDS.CARD_ID) = (SELECT MIN(COUNT(CARDS.CARD_ID)) FROM CARDS GROUP BY CARDS.ARTIST)","SELECT T1.ARTIST, T2.FORMAT FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T2.UUID = T1.UUID GROUP BY T1.ARTIST ORDER BY COUNT(T1.ID) ASC LIMIT 1",
3,520,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FORMAT`,,"SELECT CARDS.ARTIST, CARDS.FORMAT FROM CARDS GROUP BY CARDS.ARTIST HAVING COUNT(CARDS.CARD_ID) = (SELECT MIN(COUNT(CARDS.CARD_ID)) FROM CARDS GROUP BY CARDS.ARTIST)","SELECT T1.ARTIST, T2.FORMAT FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T2.UUID = T1.UUID GROUP BY T1.ARTIST ORDER BY COUNT(T1.ID) ASC LIMIT 1",
1,521,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FORMAT`,,SELECT CARDS.STATUS FROM CARDS WHERE CARDS.FRAMEVERSION = '1997' AND CARDS.ARTIST = 'D. ALEXANDER GREGORY' AND CARDS.HASCONTENTWARNING = 1 AND CARDS.FORMAT = 'LEGACY',SELECT DISTINCT T2.STATUS FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T2.UUID = T1.UUID WHERE T1.FRAMEVERSION = 1997 AND T1.HASCONTENTWARNING = 1 AND T1.ARTIST = 'D. ALEXANDER GREGORY' AND T2.FORMAT = 'LEGACY',
2,521,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FORMAT`,,SELECT CARDS.STATUS FROM CARDS WHERE CARDS.FRAMEVERSION = '1997' AND CARDS.ARTIST = 'D. ALEXANDER GREGORY' AND CARDS.HASCONTENTWARNING = 1 AND CARDS.FORMAT = 'LEGACY',SELECT DISTINCT T2.STATUS FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T2.UUID = T1.UUID WHERE T1.FRAMEVERSION = 1997 AND T1.HASCONTENTWARNING = 1 AND T1.ARTIST = 'D. ALEXANDER GREGORY' AND T2.FORMAT = 'LEGACY',
3,521,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__FORMAT`,,SELECT CARDS.STATUS FROM CARDS WHERE CARDS.FRAMEVERSION = '1997' AND CARDS.ARTIST = 'D. ALEXANDER GREGORY' AND CARDS.HASCONTENTWARNING = 1 AND CARDS.FORMAT = 'LEGACY',SELECT DISTINCT T2.STATUS FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T2.UUID = T1.UUID WHERE T1.FRAMEVERSION = 1997 AND T1.HASCONTENTWARNING = 1 AND T1.ARTIST = 'D. ALEXANDER GREGORY' AND T2.FORMAT = 'LEGACY',
1,522,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__STATUS`,,"SELECT CARDS.NAME, CARDS.FORMAT FROM CARDS WHERE CARDS.EDHRECRANK = 1 AND CARDS.STATUS = 'BANNED'","SELECT T1.NAME, T2.FORMAT FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T2.UUID = T1.UUID WHERE T1.EDHRECRANK = 1 AND T2.STATUS = 'BANNED' GROUP BY T1.NAME, T2.FORMAT",
2,522,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__STATUS`,,"SELECT CARDS.NAME, CARDS.FORMAT FROM CARDS WHERE CARDS.EDHRECRANK = 1 AND CARDS.STATUS = 'BANNED'","SELECT T1.NAME, T2.FORMAT FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T2.UUID = T1.UUID WHERE T1.EDHRECRANK = 1 AND T2.STATUS = 'BANNED' GROUP BY T1.NAME, T2.FORMAT",
3,522,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__STATUS`,,"SELECT CARDS.NAME, CARDS.FORMAT FROM CARDS WHERE CARDS.EDHRECRANK = 1 AND CARDS.STATUS = 'BANNED'","SELECT T1.NAME, T2.FORMAT FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T2.UUID = T1.UUID WHERE T1.EDHRECRANK = 1 AND T2.STATUS = 'BANNED' GROUP BY T1.NAME, T2.FORMAT",
1,523,ERROR,"CorrelatedQueryError: Not supported feature: CorrelatedQueryError {'select': {'value': 'LANGUAGE'}, 'from': 'SETS', 'where': {'between': ['RELEASEDATE', {'literal': '1/1/2012'}, {'literal': '12/31/2015'}]}, 'groupby': {'value': 'LANGUAGE'}, 'orderby': {'value': {'count': 'LANGUAGE'}, 'sort': 'desc'}, 'limit': 1}",,"SELECT AVG(ID), (SELECT LANGUAGE FROM SETS WHERE RELEASEDATE BETWEEN '1/1/2012' AND '12/31/2015' GROUP BY LANGUAGE ORDER BY COUNT(LANGUAGE) DESC LIMIT 1) AS COMMON_LANGUAGE FROM SETS WHERE RELEASEDATE BETWEEN '1/1/2012' AND '12/31/2015' GROUP BY YEAR(RELEASEDATE)","SELECT (CAST(SUM(T1.ID) AS REAL) / COUNT(T1.ID)) / 4, T2.LANGUAGE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.ID = T2.ID WHERE T1.RELEASEDATE BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY T1.RELEASEDATE ORDER BY COUNT(T2.LANGUAGE) DESC LIMIT 1",
2,523,ERROR,"CorrelatedQueryError: Not supported feature: CorrelatedQueryError {'select': {'value': 'LANGUAGE'}, 'from': 'SETS', 'where': {'between': ['RELEASEDATE', {'literal': '1/1/2012'}, {'literal': '12/31/2015'}]}, 'groupby': {'value': 'LANGUAGE'}, 'orderby': {'value': {'count': 'LANGUAGE'}, 'sort': 'desc'}, 'limit': 1}",,"SELECT AVG(ID), (SELECT LANGUAGE FROM SETS WHERE RELEASEDATE BETWEEN '1/1/2012' AND '12/31/2015' GROUP BY LANGUAGE ORDER BY COUNT(LANGUAGE) DESC LIMIT 1) AS COMMON_LANGUAGE FROM SETS WHERE RELEASEDATE BETWEEN '1/1/2012' AND '12/31/2015' GROUP BY YEAR(RELEASEDATE)","SELECT (CAST(SUM(T1.ID) AS REAL) / COUNT(T1.ID)) / 4, T2.LANGUAGE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.ID = T2.ID WHERE T1.RELEASEDATE BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY T1.RELEASEDATE ORDER BY COUNT(T2.LANGUAGE) DESC LIMIT 1",
3,523,ERROR,"CorrelatedQueryError: Not supported feature: CorrelatedQueryError {'select': {'value': 'LANGUAGE'}, 'from': 'SETS', 'where': {'between': ['RELEASEDATE', {'literal': '1/1/2012'}, {'literal': '12/31/2015'}]}, 'groupby': {'value': 'LANGUAGE'}, 'orderby': {'value': {'count': 'LANGUAGE'}, 'sort': 'desc'}, 'limit': 1}",,"SELECT AVG(ID), (SELECT LANGUAGE FROM SETS WHERE RELEASEDATE BETWEEN '1/1/2012' AND '12/31/2015' GROUP BY LANGUAGE ORDER BY COUNT(LANGUAGE) DESC LIMIT 1) AS COMMON_LANGUAGE FROM SETS WHERE RELEASEDATE BETWEEN '1/1/2012' AND '12/31/2015' GROUP BY YEAR(RELEASEDATE)","SELECT (CAST(SUM(T1.ID) AS REAL) / COUNT(T1.ID)) / 4, T2.LANGUAGE FROM SETS AS T1 INNER JOIN SET_TRANSLATIONS AS T2 ON T1.ID = T2.ID WHERE T1.RELEASEDATE BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY T1.RELEASEDATE ORDER BY COUNT(T2.LANGUAGE) DESC LIMIT 1",
1,524,True,,0.066894,SELECT CARDS.ARTIST FROM CARDS WHERE CARDS.BORDERCOLOR = 'BLACK' AND CARDS.AVAILABILITY = 'ARENA',SELECT DISTINCT ARTIST FROM CARDS WHERE AVAILABILITY = 'ARENA' AND BORDERCOLOR = 'BLACK',
1,525,True,,0.21362,SELECT CARDS.UUID FROM CARDS INNER JOIN LEGALITIES ON CARDS.UUID = LEGALITIES.UUID WHERE LEGALITIES.FORMAT = 'OLDSCHOOL' AND (LEGALITIES.STATUS = 'BANNED' OR LEGALITIES.STATUS = 'RESTRICTED'),SELECT UUID FROM LEGALITIES WHERE FORMAT = 'OLDSCHOOL' AND (STATUS = 'BANNED' OR STATUS = 'RESTRICTED'),
1,526,True,,0.071902,SELECT COUNT(*) FROM CARDS WHERE ARTIST = 'MATTHEW D. WILSON' AND AVAILABILITY = 'PAPER',SELECT COUNT(ID) FROM CARDS WHERE ARTIST = 'MATTHEW D. WILSON' AND AVAILABILITY = 'PAPER',
1,527,True,,0.1273,SELECT RULINGS.TEXT FROM CARDS INNER JOIN RULINGS ON CARDS.UUID = RULINGS.UUID WHERE CARDS.ARTIST = 'KEV WALKER' ORDER BY RULINGS.DATE DESC,SELECT T2.TEXT FROM CARDS AS T1 INNER JOIN RULINGS AS T2 ON T2.UUID = T1.UUID WHERE T1.ARTIST = 'KEV WALKER' ORDER BY T2.DATE DESC,
1,528,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__SET`,,"SELECT CARDS.NAME, LEGALITIES.FORMAT FROM CARDS INNER JOIN SETS ON CARDS.SET = SETS.CODE INNER JOIN LEGALITIES ON CARDS.UUID = LEGALITIES.UUID WHERE SETS.NAME = 'HOUR OF DEVASTATION' AND LEGALITIES.STATUS = 'LEGAL';","SELECT DISTINCT T2.NAME , CASE WHEN T1.STATUS = 'LEGAL' THEN T1.FORMAT ELSE NULL END FROM LEGALITIES AS T1 INNER JOIN CARDS AS T2 ON T2.UUID = T1.UUID WHERE T2.SETCODE IN ( SELECT CODE FROM SETS WHERE NAME = 'HOUR OF DEVASTATION' )",
2,528,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__SET`,,"SELECT CARDS.NAME, LEGALITIES.FORMAT FROM CARDS INNER JOIN SETS ON CARDS.SET = SETS.CODE INNER JOIN LEGALITIES ON CARDS.UUID = LEGALITIES.UUID WHERE SETS.NAME = 'HOUR OF DEVASTATION' AND LEGALITIES.STATUS = 'LEGAL';","SELECT DISTINCT T2.NAME , CASE WHEN T1.STATUS = 'LEGAL' THEN T1.FORMAT ELSE NULL END FROM LEGALITIES AS T1 INNER JOIN CARDS AS T2 ON T2.UUID = T1.UUID WHERE T2.SETCODE IN ( SELECT CODE FROM SETS WHERE NAME = 'HOUR OF DEVASTATION' )",
3,528,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CARDS__SET`,,"SELECT CARDS.NAME, LEGALITIES.FORMAT FROM CARDS INNER JOIN SETS ON CARDS.SET = SETS.CODE INNER JOIN LEGALITIES ON CARDS.UUID = LEGALITIES.UUID WHERE SETS.NAME = 'HOUR OF DEVASTATION' AND LEGALITIES.STATUS = 'LEGAL';","SELECT DISTINCT T2.NAME , CASE WHEN T1.STATUS = 'LEGAL' THEN T1.FORMAT ELSE NULL END FROM LEGALITIES AS T1 INNER JOIN CARDS AS T2 ON T2.UUID = T1.UUID WHERE T2.SETCODE IN ( SELECT CODE FROM SETS WHERE NAME = 'HOUR OF DEVASTATION' )",
1,529,ERROR,"NotImplementedError: {'like': ['LANGUAGE', {'literal': '%JAPANESE%'}]}",,SELECT NAME FROM SETS WHERE CODE IN ( SELECT SETCODE FROM SET_TRANSLATIONS WHERE LANGUAGE = 'KOREAN' AND SETCODE NOT IN ( SELECT SETCODE FROM SET_TRANSLATIONS WHERE LANGUAGE LIKE '%JAPANESE%' ) ),SELECT NAME FROM SETS WHERE CODE IN ( SELECT SETCODE FROM SET_TRANSLATIONS WHERE LANGUAGE = 'KOREAN' AND LANGUAGE NOT LIKE '%JAPANESE%' ),
2,529,ERROR,"NotImplementedError: {'like': ['LANGUAGE', {'literal': '%JAPANESE%'}]}",,SELECT NAME FROM SETS WHERE CODE IN ( SELECT SETCODE FROM SET_TRANSLATIONS WHERE LANGUAGE = 'KOREAN' AND SETCODE NOT IN ( SELECT SETCODE FROM SET_TRANSLATIONS WHERE LANGUAGE LIKE '%JAPANESE%' ) ),SELECT NAME FROM SETS WHERE CODE IN ( SELECT SETCODE FROM SET_TRANSLATIONS WHERE LANGUAGE = 'KOREAN' AND LANGUAGE NOT LIKE '%JAPANESE%' ),
3,529,ERROR,"NotImplementedError: {'like': ['LANGUAGE', {'literal': '%JAPANESE%'}]}",,SELECT NAME FROM SETS WHERE CODE IN ( SELECT SETCODE FROM SET_TRANSLATIONS WHERE LANGUAGE = 'KOREAN' AND SETCODE NOT IN ( SELECT SETCODE FROM SET_TRANSLATIONS WHERE LANGUAGE LIKE '%JAPANESE%' ) ),SELECT NAME FROM SETS WHERE CODE IN ( SELECT SETCODE FROM SET_TRANSLATIONS WHERE LANGUAGE = 'KOREAN' AND LANGUAGE NOT LIKE '%JAPANESE%' ),
1,530,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute STATUS`,,"SELECT FRAMEVERSION, NAME FROM CARDS WHERE ARTIST = 'ALLEN WILLIAMS' AND STATUS = 'BANNED'","SELECT DISTINCT T1.FRAMEVERSION, T1.NAME , IIF(T2.STATUS = 'BANNED', T1.NAME, 'NO') FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.ARTIST = 'ALLEN WILLIAMS'",
2,530,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute STATUS`,,"SELECT FRAMEVERSION, NAME FROM CARDS WHERE ARTIST = 'ALLEN WILLIAMS' AND STATUS = 'BANNED'","SELECT DISTINCT T1.FRAMEVERSION, T1.NAME , IIF(T2.STATUS = 'BANNED', T1.NAME, 'NO') FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.ARTIST = 'ALLEN WILLIAMS'",
3,530,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute STATUS`,,"SELECT FRAMEVERSION, NAME FROM CARDS WHERE ARTIST = 'ALLEN WILLIAMS' AND STATUS = 'BANNED'","SELECT DISTINCT T1.FRAMEVERSION, T1.NAME , IIF(T2.STATUS = 'BANNED', T1.NAME, 'NO') FROM CARDS AS T1 INNER JOIN LEGALITIES AS T2 ON T1.UUID = T2.UUID WHERE T1.ARTIST = 'ALLEN WILLIAMS'",
1,531,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, MAX(USERS.REPUTATION) FROM USERS WHERE USERS.DISPLAYNAME IN ('HARLAN', 'JARROD DIXON') GROUP BY USERS.DISPLAYNAME","SELECT DISPLAYNAME FROM USERS WHERE DISPLAYNAME IN ('HARLAN', 'JARROD DIXON') AND REPUTATION = ( SELECT MAX(REPUTATION) FROM USERS WHERE DISPLAYNAME IN ('HARLAN', 'JARROD DIXON') )",
2,531,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, MAX(USERS.REPUTATION) FROM USERS WHERE USERS.DISPLAYNAME IN ('HARLAN', 'JARROD DIXON') GROUP BY USERS.DISPLAYNAME","SELECT DISPLAYNAME FROM USERS WHERE DISPLAYNAME IN ('HARLAN', 'JARROD DIXON') AND REPUTATION = ( SELECT MAX(REPUTATION) FROM USERS WHERE DISPLAYNAME IN ('HARLAN', 'JARROD DIXON') )",
3,531,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, MAX(USERS.REPUTATION) FROM USERS WHERE USERS.DISPLAYNAME IN ('HARLAN', 'JARROD DIXON') GROUP BY USERS.DISPLAYNAME","SELECT DISPLAYNAME FROM USERS WHERE DISPLAYNAME IN ('HARLAN', 'JARROD DIXON') AND REPUTATION = ( SELECT MAX(REPUTATION) FROM USERS WHERE DISPLAYNAME IN ('HARLAN', 'JARROD DIXON') )",
1,532,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME FROM USERS WHERE STRFTIME('%Y', USERS.CREATIONDATE) = '2011'","SELECT DISPLAYNAME FROM USERS WHERE STRFTIME('%Y', CREATIONDATE) = '2011'",
2,532,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME FROM USERS WHERE STRFTIME('%Y', USERS.CREATIONDATE) = '2011'","SELECT DISPLAYNAME FROM USERS WHERE STRFTIME('%Y', CREATIONDATE) = '2011'",
3,532,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME FROM USERS WHERE STRFTIME('%Y', USERS.CREATIONDATE) = '2011'","SELECT DISPLAYNAME FROM USERS WHERE STRFTIME('%Y', CREATIONDATE) = '2011'",
1,533,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS WHERE LASTACCESSDATE > '2014-09-01',SELECT COUNT(ID) FROM USERS WHERE DATE(LASTACCESSDATE) > '2014-09-01',
2,533,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS WHERE LASTACCESSDATE > '2014-09-01',SELECT COUNT(ID) FROM USERS WHERE DATE(LASTACCESSDATE) > '2014-09-01',
3,533,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS WHERE LASTACCESSDATE > '2014-09-01',SELECT COUNT(ID) FROM USERS WHERE DATE(LASTACCESSDATE) > '2014-09-01',
1,534,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS ORDER BY USERS.VIEWS DESC LIMIT 1,SELECT DISPLAYNAME FROM USERS WHERE VIEWS = ( SELECT MAX(VIEWS) FROM USERS ),
2,534,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS ORDER BY USERS.VIEWS DESC LIMIT 1,SELECT DISPLAYNAME FROM USERS WHERE VIEWS = ( SELECT MAX(VIEWS) FROM USERS ),
3,534,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS ORDER BY USERS.VIEWS DESC LIMIT 1,SELECT DISPLAYNAME FROM USERS WHERE VIEWS = ( SELECT MAX(VIEWS) FROM USERS ),
1,535,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS WHERE UPVOTES > 100 AND DOWNVOTES > 1,SELECT COUNT(ID) FROM USERS WHERE UPVOTES > 100 AND DOWNVOTES > 1,
2,535,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS WHERE UPVOTES > 100 AND DOWNVOTES > 1,SELECT COUNT(ID) FROM USERS WHERE UPVOTES > 100 AND DOWNVOTES > 1,
3,535,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS WHERE UPVOTES > 100 AND DOWNVOTES > 1,SELECT COUNT(ID) FROM USERS WHERE UPVOTES > 100 AND DOWNVOTES > 1,
1,536,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS WHERE VIEWS > 10 AND YEAR(CREATIONDATE) > 2013,"SELECT COUNT(ID) FROM USERS WHERE STRFTIME('%Y', CREATIONDATE) > '2013' AND VIEWS > 10",
2,536,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS WHERE VIEWS > 10 AND YEAR(CREATIONDATE) > 2013,"SELECT COUNT(ID) FROM USERS WHERE STRFTIME('%Y', CREATIONDATE) > '2013' AND VIEWS > 10",
3,536,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS WHERE VIEWS > 10 AND YEAR(CREATIONDATE) > 2013,"SELECT COUNT(ID) FROM USERS WHERE STRFTIME('%Y', CREATIONDATE) > '2013' AND VIEWS > 10",
1,537,ERROR,KeyError: 'codebase_community',,SELECT COUNT(POSTS.ID) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE';,SELECT COUNT(T1.ID) FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE',
2,537,ERROR,KeyError: 'codebase_community',,SELECT COUNT(POSTS.ID) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE';,SELECT COUNT(T1.ID) FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE',
3,537,ERROR,KeyError: 'codebase_community',,SELECT COUNT(POSTS.ID) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE';,SELECT COUNT(T1.ID) FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE',
1,538,ERROR,KeyError: 'codebase_community',,SELECT POSTS.TITLE FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE',SELECT T1.TITLE FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE',
2,538,ERROR,KeyError: 'codebase_community',,SELECT POSTS.TITLE FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE',SELECT T1.TITLE FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE',
3,538,ERROR,KeyError: 'codebase_community',,SELECT POSTS.TITLE FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE',SELECT T1.TITLE FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE',
1,539,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.TITLE = 'ELICITING PRIORS FROM EXPERTS';,SELECT T2.DISPLAYNAME FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T1.TITLE = 'ELICITING PRIORS FROM EXPERTS',
2,539,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.TITLE = 'ELICITING PRIORS FROM EXPERTS';,SELECT T2.DISPLAYNAME FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T1.TITLE = 'ELICITING PRIORS FROM EXPERTS',
3,539,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.TITLE = 'ELICITING PRIORS FROM EXPERTS';,SELECT T2.DISPLAYNAME FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T1.TITLE = 'ELICITING PRIORS FROM EXPERTS',
1,540,ERROR,KeyError: 'codebase_community',,SELECT POSTS.TITLE FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE' ORDER BY POSTS.VIEWCOUNT DESC LIMIT 1,SELECT T1.TITLE FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE' ORDER BY T1.VIEWCOUNT DESC LIMIT 1,
2,540,ERROR,KeyError: 'codebase_community',,SELECT POSTS.TITLE FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE' ORDER BY POSTS.VIEWCOUNT DESC LIMIT 1,SELECT T1.TITLE FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE' ORDER BY T1.VIEWCOUNT DESC LIMIT 1,
3,540,ERROR,KeyError: 'codebase_community',,SELECT POSTS.TITLE FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE' ORDER BY POSTS.VIEWCOUNT DESC LIMIT 1,SELECT T1.TITLE FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE' ORDER BY T1.VIEWCOUNT DESC LIMIT 1,
1,541,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID ORDER BY POSTS.FAVORITECOUNT DESC LIMIT 1,SELECT T2.DISPLAYNAME FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID ORDER BY T1.FAVORITECOUNT DESC LIMIT 1,
2,541,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID ORDER BY POSTS.FAVORITECOUNT DESC LIMIT 1,SELECT T2.DISPLAYNAME FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID ORDER BY T1.FAVORITECOUNT DESC LIMIT 1,
3,541,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID ORDER BY POSTS.FAVORITECOUNT DESC LIMIT 1,SELECT T2.DISPLAYNAME FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID ORDER BY T1.FAVORITECOUNT DESC LIMIT 1,
1,542,ERROR,KeyError: 'codebase_community',,SELECT SUM(POSTS.COMMENTCOUNT) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE',SELECT SUM(T1.COMMENTCOUNT) FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE',
2,542,ERROR,KeyError: 'codebase_community',,SELECT SUM(POSTS.COMMENTCOUNT) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE',SELECT SUM(T1.COMMENTCOUNT) FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE',
3,542,ERROR,KeyError: 'codebase_community',,SELECT SUM(POSTS.COMMENTCOUNT) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE',SELECT SUM(T1.COMMENTCOUNT) FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE',
1,543,ERROR,KeyError: 'codebase_community',,SELECT POSTS.ANSWERCOUNT FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE' ORDER BY POSTS.ANSWERCOUNT DESC LIMIT 1,SELECT MAX(T1.ANSWERCOUNT) FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE',
2,543,ERROR,KeyError: 'codebase_community',,SELECT POSTS.ANSWERCOUNT FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE' ORDER BY POSTS.ANSWERCOUNT DESC LIMIT 1,SELECT MAX(T1.ANSWERCOUNT) FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE',
3,543,ERROR,KeyError: 'codebase_community',,SELECT POSTS.ANSWERCOUNT FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE' ORDER BY POSTS.ANSWERCOUNT DESC LIMIT 1,SELECT MAX(T1.ANSWERCOUNT) FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE',
1,544,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.LASTEDITORUSERID = USERS.ID WHERE POSTS.TITLE = 'EXAMPLES FOR TEACHING: CORRELATION DOES NOT MEAN CAUSATION';,SELECT T2.DISPLAYNAME FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.LASTEDITORUSERID = T2.ID WHERE T1.TITLE = 'EXAMPLES FOR TEACHING: CORRELATION DOES NOT MEAN CAUSATION',
2,544,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.LASTEDITORUSERID = USERS.ID WHERE POSTS.TITLE = 'EXAMPLES FOR TEACHING: CORRELATION DOES NOT MEAN CAUSATION';,SELECT T2.DISPLAYNAME FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.LASTEDITORUSERID = T2.ID WHERE T1.TITLE = 'EXAMPLES FOR TEACHING: CORRELATION DOES NOT MEAN CAUSATION',
3,544,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.LASTEDITORUSERID = USERS.ID WHERE POSTS.TITLE = 'EXAMPLES FOR TEACHING: CORRELATION DOES NOT MEAN CAUSATION';,SELECT T2.DISPLAYNAME FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.LASTEDITORUSERID = T2.ID WHERE T1.TITLE = 'EXAMPLES FOR TEACHING: CORRELATION DOES NOT MEAN CAUSATION',
1,545,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE' AND POSTS.PARENTID IS NULL,SELECT COUNT(T1.ID) FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE' AND T1.PARENTID IS NULL,
2,545,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE' AND POSTS.PARENTID IS NULL,SELECT COUNT(T1.ID) FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE' AND T1.PARENTID IS NULL,
3,545,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE' AND POSTS.PARENTID IS NULL,SELECT COUNT(T1.ID) FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE' AND T1.PARENTID IS NULL,
1,546,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS INNER JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID WHERE POSTS.CLOSEDDATE IS NOT NULL,SELECT T2.DISPLAYNAME FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T1.CLOSEDDATE IS NOT NULL,
2,546,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS INNER JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID WHERE POSTS.CLOSEDDATE IS NOT NULL,SELECT T2.DISPLAYNAME FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T1.CLOSEDDATE IS NOT NULL,
3,546,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS INNER JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID WHERE POSTS.CLOSEDDATE IS NOT NULL,SELECT T2.DISPLAYNAME FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T1.CLOSEDDATE IS NOT NULL,
1,547,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.AGE > 65 AND POSTS.SCORE >= 20,SELECT COUNT(T1.ID) FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T1.SCORE >= 20 AND T2.AGE > 65,
2,547,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.AGE > 65 AND POSTS.SCORE >= 20,SELECT COUNT(T1.ID) FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T1.SCORE >= 20 AND T2.AGE > 65,
3,547,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.AGE > 65 AND POSTS.SCORE >= 20,SELECT COUNT(T1.ID) FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T1.SCORE >= 20 AND T2.AGE > 65,
1,548,ERROR,KeyError: 'codebase_community',,SELECT USERS.LOCATION FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.TITLE = 'ELICITING PRIORS FROM EXPERTS';,SELECT T2.LOCATION FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T1.TITLE = 'ELICITING PRIORS FROM EXPERTS',
2,548,ERROR,KeyError: 'codebase_community',,SELECT USERS.LOCATION FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.TITLE = 'ELICITING PRIORS FROM EXPERTS';,SELECT T2.LOCATION FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T1.TITLE = 'ELICITING PRIORS FROM EXPERTS',
3,548,ERROR,KeyError: 'codebase_community',,SELECT USERS.LOCATION FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.TITLE = 'ELICITING PRIORS FROM EXPERTS';,SELECT T2.LOCATION FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T1.TITLE = 'ELICITING PRIORS FROM EXPERTS',
1,549,ERROR,KeyError: 'codebase_community',,SELECT POSTS.BODY FROM TAGS INNER JOIN POSTS ON TAGS.EXCERPTPOSTID = POSTS.ID WHERE TAGS.TAGNAME = 'BAYESIAN',SELECT T2.BODY FROM TAGS AS T1 INNER JOIN POSTS AS T2 ON T2.ID = T1.EXCERPTPOSTID WHERE T1.TAGNAME = 'BAYESIAN',
2,549,ERROR,KeyError: 'codebase_community',,SELECT POSTS.BODY FROM TAGS INNER JOIN POSTS ON TAGS.EXCERPTPOSTID = POSTS.ID WHERE TAGS.TAGNAME = 'BAYESIAN',SELECT T2.BODY FROM TAGS AS T1 INNER JOIN POSTS AS T2 ON T2.ID = T1.EXCERPTPOSTID WHERE T1.TAGNAME = 'BAYESIAN',
3,549,ERROR,KeyError: 'codebase_community',,SELECT POSTS.BODY FROM TAGS INNER JOIN POSTS ON TAGS.EXCERPTPOSTID = POSTS.ID WHERE TAGS.TAGNAME = 'BAYESIAN',SELECT T2.BODY FROM TAGS AS T1 INNER JOIN POSTS AS T2 ON T2.ID = T1.EXCERPTPOSTID WHERE T1.TAGNAME = 'BAYESIAN',
1,550,ERROR,KeyError: 'codebase_community',,SELECT POSTS.BODY FROM POSTS INNER JOIN TAGS ON POSTS.ID = TAGS.EXCERPTPOSTID ORDER BY TAGS.COUNT DESC LIMIT 1,SELECT BODY FROM POSTS WHERE ID = ( SELECT EXCERPTPOSTID FROM TAGS ORDER BY COUNT DESC LIMIT 1 ),
2,550,ERROR,KeyError: 'codebase_community',,SELECT POSTS.BODY FROM POSTS INNER JOIN TAGS ON POSTS.ID = TAGS.EXCERPTPOSTID ORDER BY TAGS.COUNT DESC LIMIT 1,SELECT BODY FROM POSTS WHERE ID = ( SELECT EXCERPTPOSTID FROM TAGS ORDER BY COUNT DESC LIMIT 1 ),
3,550,ERROR,KeyError: 'codebase_community',,SELECT POSTS.BODY FROM POSTS INNER JOIN TAGS ON POSTS.ID = TAGS.EXCERPTPOSTID ORDER BY TAGS.COUNT DESC LIMIT 1,SELECT BODY FROM POSTS WHERE ID = ( SELECT EXCERPTPOSTID FROM TAGS ORDER BY COUNT DESC LIMIT 1 ),
1,551,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE';,SELECT COUNT(T1.ID) FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE',
2,551,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE';,SELECT COUNT(T1.ID) FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE',
3,551,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE';,SELECT COUNT(T1.ID) FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE',
1,552,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE',SELECT T1.`NAME` FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE',
2,552,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE',SELECT T1.`NAME` FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE',
3,552,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE',SELECT T1.`NAME` FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE',
1,553,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE' AND YEAR(BADGES.DATE) = 2011,"SELECT COUNT(T1.ID) FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE STRFTIME('%Y', T1.DATE) = '2011' AND T2.DISPLAYNAME = 'CSGILLESPIE'",
2,553,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE' AND YEAR(BADGES.DATE) = 2011,"SELECT COUNT(T1.ID) FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE STRFTIME('%Y', T1.DATE) = '2011' AND T2.DISPLAYNAME = 'CSGILLESPIE'",
3,553,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE' AND YEAR(BADGES.DATE) = 2011,"SELECT COUNT(T1.ID) FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE STRFTIME('%Y', T1.DATE) = '2011' AND T2.DISPLAYNAME = 'CSGILLESPIE'",
1,554,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID GROUP BY BADGES.USERID ORDER BY COUNT(BADGES.ID) DESC LIMIT 1;,SELECT T2.DISPLAYNAME FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID GROUP BY T2.DISPLAYNAME ORDER BY COUNT(T1.ID) DESC LIMIT 1,
2,554,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID GROUP BY BADGES.USERID ORDER BY COUNT(BADGES.ID) DESC LIMIT 1;,SELECT T2.DISPLAYNAME FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID GROUP BY T2.DISPLAYNAME ORDER BY COUNT(T1.ID) DESC LIMIT 1,
3,554,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID GROUP BY BADGES.USERID ORDER BY COUNT(BADGES.ID) DESC LIMIT 1;,SELECT T2.DISPLAYNAME FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID GROUP BY T2.DISPLAYNAME ORDER BY COUNT(T1.ID) DESC LIMIT 1,
1,555,ERROR,KeyError: 'codebase_community',,SELECT AVG(POSTS.SCORE) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE',SELECT AVG(T1.SCORE) FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE',
2,555,ERROR,KeyError: 'codebase_community',,SELECT AVG(POSTS.SCORE) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE',SELECT AVG(T1.SCORE) FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE',
3,555,ERROR,KeyError: 'codebase_community',,SELECT AVG(POSTS.SCORE) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'CSGILLESPIE',SELECT AVG(T1.SCORE) FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'CSGILLESPIE',
1,556,ERROR,KeyError: 'codebase_community',,SELECT AVG(BADGES.ID) FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.VIEWS > 200,SELECT CAST(COUNT(T1.ID) AS REAL) / COUNT(DISTINCT T2.DISPLAYNAME) FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T2.VIEWS > 200,
2,556,ERROR,KeyError: 'codebase_community',,SELECT AVG(BADGES.ID) FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.VIEWS > 200,SELECT CAST(COUNT(T1.ID) AS REAL) / COUNT(DISTINCT T2.DISPLAYNAME) FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T2.VIEWS > 200,
3,556,ERROR,KeyError: 'codebase_community',,SELECT AVG(BADGES.ID) FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.VIEWS > 200,SELECT CAST(COUNT(T1.ID) AS REAL) / COUNT(DISTINCT T2.DISPLAYNAME) FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T2.VIEWS > 200,
1,557,ERROR,KeyError: 'codebase_community',,SELECT (CAST((SELECT COUNT(POSTS.ID) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.SCORE > 5 AND USERS.AGE > 65) AS REAL) * 100) / (SELECT COUNT(POSTS.ID) FROM POSTS WHERE POSTS.SCORE > 5) AS PERCENTAGE FROM POSTS LIMIT 1,"SELECT CAST(SUM(IIF(T2.AGE > 65, 1, 0)) AS REAL) * 100 / COUNT(T1.ID) FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T1.SCORE > 5",
2,557,ERROR,KeyError: 'codebase_community',,SELECT (CAST((SELECT COUNT(POSTS.ID) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.SCORE > 5 AND USERS.AGE > 65) AS REAL) * 100) / (SELECT COUNT(POSTS.ID) FROM POSTS WHERE POSTS.SCORE > 5) AS PERCENTAGE FROM POSTS LIMIT 1,"SELECT CAST(SUM(IIF(T2.AGE > 65, 1, 0)) AS REAL) * 100 / COUNT(T1.ID) FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T1.SCORE > 5",
3,557,ERROR,KeyError: 'codebase_community',,SELECT (CAST((SELECT COUNT(POSTS.ID) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.SCORE > 5 AND USERS.AGE > 65) AS REAL) * 100) / (SELECT COUNT(POSTS.ID) FROM POSTS WHERE POSTS.SCORE > 5) AS PERCENTAGE FROM POSTS LIMIT 1,"SELECT CAST(SUM(IIF(T2.AGE > 65, 1, 0)) AS REAL) * 100 / COUNT(T1.ID) FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T1.SCORE > 5",
1,558,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM VOTES WHERE USERID = 58 AND CREATIONDATE = '2010-07-19',SELECT COUNT(ID) FROM VOTES WHERE USERID = 58 AND CREATIONDATE = '2010-07-19',
2,558,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM VOTES WHERE USERID = 58 AND CREATIONDATE = '2010-07-19',SELECT COUNT(ID) FROM VOTES WHERE USERID = 58 AND CREATIONDATE = '2010-07-19',
3,558,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM VOTES WHERE USERID = 58 AND CREATIONDATE = '2010-07-19',SELECT COUNT(ID) FROM VOTES WHERE USERID = 58 AND CREATIONDATE = '2010-07-19',
1,559,ERROR,KeyError: 'codebase_community',,SELECT VOTES.CREATIONDATE FROM VOTES GROUP BY VOTES.CREATIONDATE HAVING COUNT(VOTES.ID) = (SELECT MAX(COUNT(VOTES.ID)) FROM VOTES GROUP BY VOTES.CREATIONDATE),SELECT CREATIONDATE FROM VOTES GROUP BY CREATIONDATE ORDER BY COUNT(ID) DESC LIMIT 1,
2,559,ERROR,KeyError: 'codebase_community',,SELECT VOTES.CREATIONDATE FROM VOTES GROUP BY VOTES.CREATIONDATE HAVING COUNT(VOTES.ID) = (SELECT MAX(COUNT(VOTES.ID)) FROM VOTES GROUP BY VOTES.CREATIONDATE),SELECT CREATIONDATE FROM VOTES GROUP BY CREATIONDATE ORDER BY COUNT(ID) DESC LIMIT 1,
3,559,ERROR,KeyError: 'codebase_community',,SELECT VOTES.CREATIONDATE FROM VOTES GROUP BY VOTES.CREATIONDATE HAVING COUNT(VOTES.ID) = (SELECT MAX(COUNT(VOTES.ID)) FROM VOTES GROUP BY VOTES.CREATIONDATE),SELECT CREATIONDATE FROM VOTES GROUP BY CREATIONDATE ORDER BY COUNT(ID) DESC LIMIT 1,
1,560,ERROR,KeyError: 'codebase_community',,SELECT COUNT(BADGES.ID) FROM BADGES WHERE BADGES.NAME = 'REVIVAL',SELECT COUNT(ID) FROM BADGES WHERE NAME = 'REVIVAL',
2,560,ERROR,KeyError: 'codebase_community',,SELECT COUNT(BADGES.ID) FROM BADGES WHERE BADGES.NAME = 'REVIVAL',SELECT COUNT(ID) FROM BADGES WHERE NAME = 'REVIVAL',
3,560,ERROR,KeyError: 'codebase_community',,SELECT COUNT(BADGES.ID) FROM BADGES WHERE BADGES.NAME = 'REVIVAL',SELECT COUNT(ID) FROM BADGES WHERE NAME = 'REVIVAL',
1,561,ERROR,KeyError: 'codebase_community',,SELECT POSTS.TITLE FROM POSTS INNER JOIN COMMENTS ON POSTS.ID = COMMENTS.POSTID WHERE COMMENTS.SCORE = (SELECT MAX(COMMENTS.SCORE) FROM COMMENTS),SELECT TITLE FROM POSTS WHERE ID = ( SELECT POSTID FROM COMMENTS ORDER BY SCORE DESC LIMIT 1 ),
2,561,ERROR,KeyError: 'codebase_community',,SELECT POSTS.TITLE FROM POSTS INNER JOIN COMMENTS ON POSTS.ID = COMMENTS.POSTID WHERE COMMENTS.SCORE = (SELECT MAX(COMMENTS.SCORE) FROM COMMENTS),SELECT TITLE FROM POSTS WHERE ID = ( SELECT POSTID FROM COMMENTS ORDER BY SCORE DESC LIMIT 1 ),
3,561,ERROR,KeyError: 'codebase_community',,SELECT POSTS.TITLE FROM POSTS INNER JOIN COMMENTS ON POSTS.ID = COMMENTS.POSTID WHERE COMMENTS.SCORE = (SELECT MAX(COMMENTS.SCORE) FROM COMMENTS),SELECT TITLE FROM POSTS WHERE ID = ( SELECT POSTID FROM COMMENTS ORDER BY SCORE DESC LIMIT 1 ),
1,562,ERROR,KeyError: 'codebase_community',,SELECT POSTS.COMMENTCOUNT FROM POSTS WHERE POSTS.VIEWCOUNT = 1910,SELECT COUNT(T1.ID) FROM POSTS AS T1 INNER JOIN COMMENTS AS T2 ON T1.ID = T2.POSTID WHERE T1.VIEWCOUNT = 1910,
2,562,ERROR,KeyError: 'codebase_community',,SELECT POSTS.COMMENTCOUNT FROM POSTS WHERE POSTS.VIEWCOUNT = 1910,SELECT COUNT(T1.ID) FROM POSTS AS T1 INNER JOIN COMMENTS AS T2 ON T1.ID = T2.POSTID WHERE T1.VIEWCOUNT = 1910,
3,562,ERROR,KeyError: 'codebase_community',,SELECT POSTS.COMMENTCOUNT FROM POSTS WHERE POSTS.VIEWCOUNT = 1910,SELECT COUNT(T1.ID) FROM POSTS AS T1 INNER JOIN COMMENTS AS T2 ON T1.ID = T2.POSTID WHERE T1.VIEWCOUNT = 1910,
1,563,ERROR,KeyError: 'codebase_community',,SELECT POSTS.FAVORITECOUNT FROM COMMENTS INNER JOIN POSTS ON COMMENTS.POSTID = POSTS.ID WHERE COMMENTS.USERID = '3025' AND COMMENTS.CREATIONDATE = '2014/4/23 20:29:39.0',SELECT T1.FAVORITECOUNT FROM POSTS AS T1 INNER JOIN COMMENTS AS T2 ON T1.ID = T2.POSTID WHERE T2.CREATIONDATE = '2014-04-23 20:29:39.0' AND T2.USERID = 3025,
2,563,ERROR,KeyError: 'codebase_community',,SELECT POSTS.FAVORITECOUNT FROM COMMENTS INNER JOIN POSTS ON COMMENTS.POSTID = POSTS.ID WHERE COMMENTS.USERID = '3025' AND COMMENTS.CREATIONDATE = '2014/4/23 20:29:39.0',SELECT T1.FAVORITECOUNT FROM POSTS AS T1 INNER JOIN COMMENTS AS T2 ON T1.ID = T2.POSTID WHERE T2.CREATIONDATE = '2014-04-23 20:29:39.0' AND T2.USERID = 3025,
3,563,ERROR,KeyError: 'codebase_community',,SELECT POSTS.FAVORITECOUNT FROM COMMENTS INNER JOIN POSTS ON COMMENTS.POSTID = POSTS.ID WHERE COMMENTS.USERID = '3025' AND COMMENTS.CREATIONDATE = '2014/4/23 20:29:39.0',SELECT T1.FAVORITECOUNT FROM POSTS AS T1 INNER JOIN COMMENTS AS T2 ON T1.ID = T2.POSTID WHERE T2.CREATIONDATE = '2014-04-23 20:29:39.0' AND T2.USERID = 3025,
1,564,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM POSTS INNER JOIN COMMENTS ON POSTS.ID = COMMENTS.POSTID WHERE POSTS.PARENTID = '107829' AND POSTS.COMMENTCOUNT = '1' LIMIT 1,SELECT T2.TEXT FROM POSTS AS T1 INNER JOIN COMMENTS AS T2 ON T1.ID = T2.POSTID WHERE T1.PARENTID = 107829 AND T1.COMMENTCOUNT = 1,
2,564,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM POSTS INNER JOIN COMMENTS ON POSTS.ID = COMMENTS.POSTID WHERE POSTS.PARENTID = '107829' AND POSTS.COMMENTCOUNT = '1' LIMIT 1,SELECT T2.TEXT FROM POSTS AS T1 INNER JOIN COMMENTS AS T2 ON T1.ID = T2.POSTID WHERE T1.PARENTID = 107829 AND T1.COMMENTCOUNT = 1,
3,564,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM POSTS INNER JOIN COMMENTS ON POSTS.ID = COMMENTS.POSTID WHERE POSTS.PARENTID = '107829' AND POSTS.COMMENTCOUNT = '1' LIMIT 1,SELECT T2.TEXT FROM POSTS AS T1 INNER JOIN COMMENTS AS T2 ON T1.ID = T2.POSTID WHERE T1.PARENTID = 107829 AND T1.COMMENTCOUNT = 1,
1,565,ERROR,KeyError: 'codebase_community',,SELECT POSTS.ID FROM COMMENTS INNER JOIN POSTS ON COMMENTS.POSTID = POSTS.ID WHERE COMMENTS.USERID = '23853' AND COMMENTS.CREATIONDATE = '2013-07-12 09:08:18.0' AND POSTS.CLOSEDDATE IS NOT NULL,"SELECT IIF(T2.CLOSEDDATE IS NULL, 'NOT WELL-FINISHED', 'WELL-FINISHED') AS RESYLT FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T1.USERID = 23853 AND T1.CREATIONDATE = '2013-07-12 09:08:18.0'",
2,565,ERROR,KeyError: 'codebase_community',,SELECT POSTS.ID FROM COMMENTS INNER JOIN POSTS ON COMMENTS.POSTID = POSTS.ID WHERE COMMENTS.USERID = '23853' AND COMMENTS.CREATIONDATE = '2013-07-12 09:08:18.0' AND POSTS.CLOSEDDATE IS NOT NULL,"SELECT IIF(T2.CLOSEDDATE IS NULL, 'NOT WELL-FINISHED', 'WELL-FINISHED') AS RESYLT FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T1.USERID = 23853 AND T1.CREATIONDATE = '2013-07-12 09:08:18.0'",
3,565,ERROR,KeyError: 'codebase_community',,SELECT POSTS.ID FROM COMMENTS INNER JOIN POSTS ON COMMENTS.POSTID = POSTS.ID WHERE COMMENTS.USERID = '23853' AND COMMENTS.CREATIONDATE = '2013-07-12 09:08:18.0' AND POSTS.CLOSEDDATE IS NOT NULL,"SELECT IIF(T2.CLOSEDDATE IS NULL, 'NOT WELL-FINISHED', 'WELL-FINISHED') AS RESYLT FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T1.USERID = 23853 AND T1.CREATIONDATE = '2013-07-12 09:08:18.0'",
1,566,ERROR,KeyError: 'codebase_community',,SELECT USERS.REPUTATION FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.ID = '65041',SELECT T1.REPUTATION FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T2.ID = 65041,
2,566,ERROR,KeyError: 'codebase_community',,SELECT USERS.REPUTATION FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.ID = '65041',SELECT T1.REPUTATION FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T2.ID = 65041,
3,566,ERROR,KeyError: 'codebase_community',,SELECT USERS.REPUTATION FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.ID = '65041',SELECT T1.REPUTATION FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T2.ID = 65041,
1,567,ERROR,KeyError: 'codebase_community',,SELECT COUNT(POSTS.ID) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'TIAGO PASQUALINI',SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T1.DISPLAYNAME = 'TIAGO PASQUALINI',
2,567,ERROR,KeyError: 'codebase_community',,SELECT COUNT(POSTS.ID) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'TIAGO PASQUALINI',SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T1.DISPLAYNAME = 'TIAGO PASQUALINI',
3,567,ERROR,KeyError: 'codebase_community',,SELECT COUNT(POSTS.ID) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'TIAGO PASQUALINI',SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T1.DISPLAYNAME = 'TIAGO PASQUALINI',
1,568,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM VOTES INNER JOIN USERS ON VOTES.USERID = USERS.ID WHERE VOTES.ID = '6347';,SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN VOTES AS T2 ON T1.ID = T2.USERID WHERE T2.ID = 6347,
2,568,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM VOTES INNER JOIN USERS ON VOTES.USERID = USERS.ID WHERE VOTES.ID = '6347';,SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN VOTES AS T2 ON T1.ID = T2.USERID WHERE T2.ID = 6347,
3,568,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM VOTES INNER JOIN USERS ON VOTES.USERID = USERS.ID WHERE VOTES.ID = '6347';,SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN VOTES AS T2 ON T1.ID = T2.USERID WHERE T2.ID = 6347,
1,569,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM VOTES WHERE POSTID IN ( SELECT ID FROM POSTS WHERE TITLE LIKE '%DATA VISUALIZATION%' ),SELECT COUNT(T1.ID) FROM POSTS AS T1 INNER JOIN VOTES AS T2 ON T1.ID = T2.POSTID WHERE T1.TITLE LIKE '%DATA VISUALIZATION%',
2,569,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM VOTES WHERE POSTID IN ( SELECT ID FROM POSTS WHERE TITLE LIKE '%DATA VISUALIZATION%' ),SELECT COUNT(T1.ID) FROM POSTS AS T1 INNER JOIN VOTES AS T2 ON T1.ID = T2.POSTID WHERE T1.TITLE LIKE '%DATA VISUALIZATION%',
3,569,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM VOTES WHERE POSTID IN ( SELECT ID FROM POSTS WHERE TITLE LIKE '%DATA VISUALIZATION%' ),SELECT COUNT(T1.ID) FROM POSTS AS T1 INNER JOIN VOTES AS T2 ON T1.ID = T2.POSTID WHERE T1.TITLE LIKE '%DATA VISUALIZATION%',
1,570,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'DATEPICCODERGUYWHOPROGRAMS';,SELECT T2.NAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.DISPLAYNAME = 'DATEPICCODERGUYWHOPROGRAMS',
2,570,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'DATEPICCODERGUYWHOPROGRAMS';,SELECT T2.NAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.DISPLAYNAME = 'DATEPICCODERGUYWHOPROGRAMS',
3,570,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'DATEPICCODERGUYWHOPROGRAMS';,SELECT T2.NAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.DISPLAYNAME = 'DATEPICCODERGUYWHOPROGRAMS',
1,571,ERROR,KeyError: 'codebase_community',,SELECT (CAST((SELECT COUNT(*) FROM POSTS WHERE OWNERUSERID = '24') AS REAL)) / (SELECT COUNT(*) FROM VOTES WHERE USERID = '24') AS TIMES FROM POSTS LIMIT 1,SELECT CAST(COUNT(T2.ID) AS REAL) / COUNT(DISTINCT T1.ID) FROM VOTES AS T1 INNER JOIN POSTS AS T2 ON T1.USERID = T2.OWNERUSERID WHERE T1.USERID = 24,
2,571,ERROR,KeyError: 'codebase_community',,SELECT (CAST((SELECT COUNT(*) FROM POSTS WHERE OWNERUSERID = '24') AS REAL)) / (SELECT COUNT(*) FROM VOTES WHERE USERID = '24') AS TIMES FROM POSTS LIMIT 1,SELECT CAST(COUNT(T2.ID) AS REAL) / COUNT(DISTINCT T1.ID) FROM VOTES AS T1 INNER JOIN POSTS AS T2 ON T1.USERID = T2.OWNERUSERID WHERE T1.USERID = 24,
3,571,ERROR,KeyError: 'codebase_community',,SELECT (CAST((SELECT COUNT(*) FROM POSTS WHERE OWNERUSERID = '24') AS REAL)) / (SELECT COUNT(*) FROM VOTES WHERE USERID = '24') AS TIMES FROM POSTS LIMIT 1,SELECT CAST(COUNT(T2.ID) AS REAL) / COUNT(DISTINCT T1.ID) FROM VOTES AS T1 INNER JOIN POSTS AS T2 ON T1.USERID = T2.OWNERUSERID WHERE T1.USERID = 24,
1,572,ERROR,KeyError: 'codebase_community',,SELECT POSTS.VIEWCOUNT FROM POSTS WHERE POSTS.TITLE = 'INTEGRATION OF WEKA AND/OR RAPIDMINER INTO INFORMATICA POWERCENTER/DEVELOPER';,SELECT VIEWCOUNT FROM POSTS WHERE TITLE = 'INTEGRATION OF WEKA AND/OR RAPIDMINER INTO INFORMATICA POWERCENTER/DEVELOPER',
2,572,ERROR,KeyError: 'codebase_community',,SELECT POSTS.VIEWCOUNT FROM POSTS WHERE POSTS.TITLE = 'INTEGRATION OF WEKA AND/OR RAPIDMINER INTO INFORMATICA POWERCENTER/DEVELOPER';,SELECT VIEWCOUNT FROM POSTS WHERE TITLE = 'INTEGRATION OF WEKA AND/OR RAPIDMINER INTO INFORMATICA POWERCENTER/DEVELOPER',
3,572,ERROR,KeyError: 'codebase_community',,SELECT POSTS.VIEWCOUNT FROM POSTS WHERE POSTS.TITLE = 'INTEGRATION OF WEKA AND/OR RAPIDMINER INTO INFORMATICA POWERCENTER/DEVELOPER';,SELECT VIEWCOUNT FROM POSTS WHERE TITLE = 'INTEGRATION OF WEKA AND/OR RAPIDMINER INTO INFORMATICA POWERCENTER/DEVELOPER',
1,573,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM COMMENTS WHERE COMMENTS.SCORE = 17,SELECT TEXT FROM COMMENTS WHERE SCORE = 17,
2,573,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM COMMENTS WHERE COMMENTS.SCORE = 17,SELECT TEXT FROM COMMENTS WHERE SCORE = 17,
3,573,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM COMMENTS WHERE COMMENTS.SCORE = 17,SELECT TEXT FROM COMMENTS WHERE SCORE = 17,
1,574,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS WHERE USERS.WEBSITEURL = 'HTTP://STACKOVERFLOW.COM',SELECT DISPLAYNAME FROM USERS WHERE WEBSITEURL = 'HTTP://STACKOVERFLOW.COM',
2,574,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS WHERE USERS.WEBSITEURL = 'HTTP://STACKOVERFLOW.COM',SELECT DISPLAYNAME FROM USERS WHERE WEBSITEURL = 'HTTP://STACKOVERFLOW.COM',
3,574,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS WHERE USERS.WEBSITEURL = 'HTTP://STACKOVERFLOW.COM',SELECT DISPLAYNAME FROM USERS WHERE WEBSITEURL = 'HTTP://STACKOVERFLOW.COM',
1,575,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'SILENTGHOST',SELECT T2.NAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.DISPLAYNAME = 'SILENTGHOST',
2,575,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'SILENTGHOST',SELECT T2.NAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.DISPLAYNAME = 'SILENTGHOST',
3,575,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'SILENTGHOST',SELECT T2.NAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.DISPLAYNAME = 'SILENTGHOST',
1,576,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE COMMENTS.TEXT = 'THANK YOU USER93!',SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN COMMENTS AS T2 ON T1.ID = T2.USERID WHERE T2.TEXT = 'THANK YOU USER93!',
2,576,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE COMMENTS.TEXT = 'THANK YOU USER93!',SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN COMMENTS AS T2 ON T1.ID = T2.USERID WHERE T2.TEXT = 'THANK YOU USER93!',
3,576,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE COMMENTS.TEXT = 'THANK YOU USER93!',SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN COMMENTS AS T2 ON T1.ID = T2.USERID WHERE T2.TEXT = 'THANK YOU USER93!',
1,577,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'A LION',SELECT T2.TEXT FROM USERS AS T1 INNER JOIN COMMENTS AS T2 ON T1.ID = T2.USERID WHERE T1.DISPLAYNAME = 'A LION',
2,577,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'A LION',SELECT T2.TEXT FROM USERS AS T1 INNER JOIN COMMENTS AS T2 ON T1.ID = T2.USERID WHERE T1.DISPLAYNAME = 'A LION',
3,577,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'A LION',SELECT T2.TEXT FROM USERS AS T1 INNER JOIN COMMENTS AS T2 ON T1.ID = T2.USERID WHERE T1.DISPLAYNAME = 'A LION',
1,578,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, USERS.REPUTATION FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.TITLE = 'UNDERSTANDING WHAT DASSAULT ISIGHT IS DOING?';","SELECT T1.DISPLAYNAME, T1.REPUTATION FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T2.TITLE = 'UNDERSTANDING WHAT DASSAULT ISIGHT IS DOING?'",
2,578,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, USERS.REPUTATION FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.TITLE = 'UNDERSTANDING WHAT DASSAULT ISIGHT IS DOING?';","SELECT T1.DISPLAYNAME, T1.REPUTATION FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T2.TITLE = 'UNDERSTANDING WHAT DASSAULT ISIGHT IS DOING?'",
3,578,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, USERS.REPUTATION FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.TITLE = 'UNDERSTANDING WHAT DASSAULT ISIGHT IS DOING?';","SELECT T1.DISPLAYNAME, T1.REPUTATION FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T2.TITLE = 'UNDERSTANDING WHAT DASSAULT ISIGHT IS DOING?'",
1,579,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM COMMENTS INNER JOIN POSTS ON COMMENTS.POSTID = POSTS.ID WHERE POSTS.TITLE = 'HOW DOES GENTLE BOOSTING DIFFER FROM ADABOOST?',SELECT T1.TEXT FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T2.TITLE = 'HOW DOES GENTLE BOOSTING DIFFER FROM ADABOOST?',
2,579,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM COMMENTS INNER JOIN POSTS ON COMMENTS.POSTID = POSTS.ID WHERE POSTS.TITLE = 'HOW DOES GENTLE BOOSTING DIFFER FROM ADABOOST?',SELECT T1.TEXT FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T2.TITLE = 'HOW DOES GENTLE BOOSTING DIFFER FROM ADABOOST?',
3,579,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM COMMENTS INNER JOIN POSTS ON COMMENTS.POSTID = POSTS.ID WHERE POSTS.TITLE = 'HOW DOES GENTLE BOOSTING DIFFER FROM ADABOOST?',SELECT T1.TEXT FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T2.TITLE = 'HOW DOES GENTLE BOOSTING DIFFER FROM ADABOOST?',
1,580,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE BADGES.NAME = 'NECROMANCER' LIMIT 10,SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.NAME = 'NECROMANCER' LIMIT 10,
2,580,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE BADGES.NAME = 'NECROMANCER' LIMIT 10,SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.NAME = 'NECROMANCER' LIMIT 10,
3,580,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE BADGES.NAME = 'NECROMANCER' LIMIT 10,SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.NAME = 'NECROMANCER' LIMIT 10,
1,581,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.LASTEDITORUSERID = USERS.ID WHERE POSTS.TITLE = 'OPEN SOURCE TOOLS FOR VISUALIZING MULTI-DIMENSIONAL DATA';,SELECT T2.DISPLAYNAME FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T1.TITLE = 'OPEN SOURCE TOOLS FOR VISUALIZING MULTI-DIMENSIONAL DATA?',
2,581,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.LASTEDITORUSERID = USERS.ID WHERE POSTS.TITLE = 'OPEN SOURCE TOOLS FOR VISUALIZING MULTI-DIMENSIONAL DATA';,SELECT T2.DISPLAYNAME FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T1.TITLE = 'OPEN SOURCE TOOLS FOR VISUALIZING MULTI-DIMENSIONAL DATA?',
3,581,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.LASTEDITORUSERID = USERS.ID WHERE POSTS.TITLE = 'OPEN SOURCE TOOLS FOR VISUALIZING MULTI-DIMENSIONAL DATA';,SELECT T2.DISPLAYNAME FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T1.TITLE = 'OPEN SOURCE TOOLS FOR VISUALIZING MULTI-DIMENSIONAL DATA?',
1,582,ERROR,KeyError: 'codebase_community',,SELECT POSTS.TITLE FROM POSTS INNER JOIN USERS ON POSTS.LASTEDITORUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'VEBJORN LJOSA',SELECT T1.TITLE FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'VEBJORN LJOSA',
2,582,ERROR,KeyError: 'codebase_community',,SELECT POSTS.TITLE FROM POSTS INNER JOIN USERS ON POSTS.LASTEDITORUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'VEBJORN LJOSA',SELECT T1.TITLE FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'VEBJORN LJOSA',
3,582,ERROR,KeyError: 'codebase_community',,SELECT POSTS.TITLE FROM POSTS INNER JOIN USERS ON POSTS.LASTEDITORUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'VEBJORN LJOSA',SELECT T1.TITLE FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T2.DISPLAYNAME = 'VEBJORN LJOSA',
1,583,ERROR,KeyError: 'codebase_community',,"SELECT SUM(POSTS.SCORE), USERS.WEBSITEURL FROM POSTS INNER JOIN USERS ON POSTS.LASTEDITORUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'YEVGENY'","SELECT SUM(T1.SCORE), T2.WEBSITEURL FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.LASTEDITORUSERID = T2.ID WHERE T2.DISPLAYNAME = 'YEVGENY' GROUP BY T2.WEBSITEURL",
2,583,ERROR,KeyError: 'codebase_community',,"SELECT SUM(POSTS.SCORE), USERS.WEBSITEURL FROM POSTS INNER JOIN USERS ON POSTS.LASTEDITORUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'YEVGENY'","SELECT SUM(T1.SCORE), T2.WEBSITEURL FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.LASTEDITORUSERID = T2.ID WHERE T2.DISPLAYNAME = 'YEVGENY' GROUP BY T2.WEBSITEURL",
3,583,ERROR,KeyError: 'codebase_community',,"SELECT SUM(POSTS.SCORE), USERS.WEBSITEURL FROM POSTS INNER JOIN USERS ON POSTS.LASTEDITORUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'YEVGENY'","SELECT SUM(T1.SCORE), T2.WEBSITEURL FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.LASTEDITORUSERID = T2.ID WHERE T2.DISPLAYNAME = 'YEVGENY' GROUP BY T2.WEBSITEURL",
1,584,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM COMMENTS INNER JOIN POSTS ON COMMENTS.USERID = POSTS.LASTEDITORUSERID WHERE POSTS.TITLE = 'WHY SQUARE THE DIFFERENCE INSTEAD OF TAKING THE ABSOLUTE VALUE IN STANDARD DEVIATION?',SELECT T2.COMMENT FROM POSTS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.POSTID WHERE T1.TITLE = 'WHY SQUARE THE DIFFERENCE INSTEAD OF TAKING THE ABSOLUTE VALUE IN STANDARD DEVIATION?',
2,584,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM COMMENTS INNER JOIN POSTS ON COMMENTS.USERID = POSTS.LASTEDITORUSERID WHERE POSTS.TITLE = 'WHY SQUARE THE DIFFERENCE INSTEAD OF TAKING THE ABSOLUTE VALUE IN STANDARD DEVIATION?',SELECT T2.COMMENT FROM POSTS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.POSTID WHERE T1.TITLE = 'WHY SQUARE THE DIFFERENCE INSTEAD OF TAKING THE ABSOLUTE VALUE IN STANDARD DEVIATION?',
3,584,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM COMMENTS INNER JOIN POSTS ON COMMENTS.USERID = POSTS.LASTEDITORUSERID WHERE POSTS.TITLE = 'WHY SQUARE THE DIFFERENCE INSTEAD OF TAKING THE ABSOLUTE VALUE IN STANDARD DEVIATION?',SELECT T2.COMMENT FROM POSTS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.POSTID WHERE T1.TITLE = 'WHY SQUARE THE DIFFERENCE INSTEAD OF TAKING THE ABSOLUTE VALUE IN STANDARD DEVIATION?',
1,585,ERROR,KeyError: 'codebase_community',,SELECT SUM(VOTES.BOUNTYAMOUNT) FROM VOTES INNER JOIN POSTS ON VOTES.POSTID = POSTS.ID WHERE POSTS.TITLE LIKE '%DATA%',SELECT SUM(T2.BOUNTYAMOUNT) FROM POSTS AS T1 INNER JOIN VOTES AS T2 ON T1.ID = T2.POSTID WHERE T1.TITLE LIKE '%DATA%',
2,585,ERROR,KeyError: 'codebase_community',,SELECT SUM(VOTES.BOUNTYAMOUNT) FROM VOTES INNER JOIN POSTS ON VOTES.POSTID = POSTS.ID WHERE POSTS.TITLE LIKE '%DATA%',SELECT SUM(T2.BOUNTYAMOUNT) FROM POSTS AS T1 INNER JOIN VOTES AS T2 ON T1.ID = T2.POSTID WHERE T1.TITLE LIKE '%DATA%',
3,585,ERROR,KeyError: 'codebase_community',,SELECT SUM(VOTES.BOUNTYAMOUNT) FROM VOTES INNER JOIN POSTS ON VOTES.POSTID = POSTS.ID WHERE POSTS.TITLE LIKE '%DATA%',SELECT SUM(T2.BOUNTYAMOUNT) FROM POSTS AS T1 INNER JOIN VOTES AS T2 ON T1.ID = T2.POSTID WHERE T1.TITLE LIKE '%DATA%',
1,586,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM VOTES INNER JOIN POSTS ON VOTES.POSTID = POSTS.ID INNER JOIN USERS ON VOTES.USERID = USERS.ID WHERE VOTES.BOUNTYAMOUNT = 50 AND POSTS.TITLE LIKE '%VARIANCE%',"SELECT T3.DISPLAYNAME, T1.TITLE FROM POSTS AS T1 INNER JOIN VOTES AS T2 ON T1.ID = T2.POSTID INNER JOIN USERS AS T3 ON T3.ID = T2.USERID WHERE T2.BOUNTYAMOUNT = 50 AND T1.TITLE LIKE '%VARIANCE%'",
2,586,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM VOTES INNER JOIN POSTS ON VOTES.POSTID = POSTS.ID INNER JOIN USERS ON VOTES.USERID = USERS.ID WHERE VOTES.BOUNTYAMOUNT = 50 AND POSTS.TITLE LIKE '%VARIANCE%',"SELECT T3.DISPLAYNAME, T1.TITLE FROM POSTS AS T1 INNER JOIN VOTES AS T2 ON T1.ID = T2.POSTID INNER JOIN USERS AS T3 ON T3.ID = T2.USERID WHERE T2.BOUNTYAMOUNT = 50 AND T1.TITLE LIKE '%VARIANCE%'",
3,586,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM VOTES INNER JOIN POSTS ON VOTES.POSTID = POSTS.ID INNER JOIN USERS ON VOTES.USERID = USERS.ID WHERE VOTES.BOUNTYAMOUNT = 50 AND POSTS.TITLE LIKE '%VARIANCE%',"SELECT T3.DISPLAYNAME, T1.TITLE FROM POSTS AS T1 INNER JOIN VOTES AS T2 ON T1.ID = T2.POSTID INNER JOIN USERS AS T3 ON T3.ID = T2.USERID WHERE T2.BOUNTYAMOUNT = 50 AND T1.TITLE LIKE '%VARIANCE%'",
1,587,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.TITLE, COMMENTS.TEXT, AVG(POSTS.VIEWCOUNT) FROM POSTS INNER JOIN TAGS ON POSTS.ID = TAGS.ID INNER JOIN COMMENTS ON POSTS.ID = COMMENTS.POSTID WHERE TAGS.TAGNAME = '<HUMOR>' GROUP BY POSTS.ID","SELECT AVG(T2.VIEWCOUNT), T2.TITLE, T1.TEXT FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T2.ID = T1.POSTID  WHERE T2.TAGS = '<HUMOR>' GROUP BY T2.TITLE, T1.TEXT ",
2,587,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.TITLE, COMMENTS.TEXT, AVG(POSTS.VIEWCOUNT) FROM POSTS INNER JOIN TAGS ON POSTS.ID = TAGS.ID INNER JOIN COMMENTS ON POSTS.ID = COMMENTS.POSTID WHERE TAGS.TAGNAME = '<HUMOR>' GROUP BY POSTS.ID","SELECT AVG(T2.VIEWCOUNT), T2.TITLE, T1.TEXT FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T2.ID = T1.POSTID  WHERE T2.TAGS = '<HUMOR>' GROUP BY T2.TITLE, T1.TEXT ",
3,587,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.TITLE, COMMENTS.TEXT, AVG(POSTS.VIEWCOUNT) FROM POSTS INNER JOIN TAGS ON POSTS.ID = TAGS.ID INNER JOIN COMMENTS ON POSTS.ID = COMMENTS.POSTID WHERE TAGS.TAGNAME = '<HUMOR>' GROUP BY POSTS.ID","SELECT AVG(T2.VIEWCOUNT), T2.TITLE, T1.TEXT FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T2.ID = T1.POSTID  WHERE T2.TAGS = '<HUMOR>' GROUP BY T2.TITLE, T1.TEXT ",
1,588,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM COMMENTS WHERE USERID = 13,SELECT COUNT(ID) FROM COMMENTS WHERE USERID = 13,
2,588,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM COMMENTS WHERE USERID = 13,SELECT COUNT(ID) FROM COMMENTS WHERE USERID = 13,
3,588,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM COMMENTS WHERE USERID = 13,SELECT COUNT(ID) FROM COMMENTS WHERE USERID = 13,
1,589,ERROR,KeyError: 'codebase_community',,SELECT USERS.ID FROM USERS ORDER BY USERS.REPUTATION DESC LIMIT 1;,SELECT ID FROM USERS WHERE REPUTATION = ( SELECT MAX(REPUTATION) FROM USERS ),
2,589,ERROR,KeyError: 'codebase_community',,SELECT USERS.ID FROM USERS ORDER BY USERS.REPUTATION DESC LIMIT 1;,SELECT ID FROM USERS WHERE REPUTATION = ( SELECT MAX(REPUTATION) FROM USERS ),
3,589,ERROR,KeyError: 'codebase_community',,SELECT USERS.ID FROM USERS ORDER BY USERS.REPUTATION DESC LIMIT 1;,SELECT ID FROM USERS WHERE REPUTATION = ( SELECT MAX(REPUTATION) FROM USERS ),
1,590,ERROR,KeyError: 'codebase_community',,SELECT USERS.ID FROM USERS ORDER BY USERS.VIEWS ASC LIMIT 1,SELECT ID FROM USERS WHERE VIEWS = ( SELECT MIN(VIEWS) FROM USERS ),
2,590,ERROR,KeyError: 'codebase_community',,SELECT USERS.ID FROM USERS ORDER BY USERS.VIEWS ASC LIMIT 1,SELECT ID FROM USERS WHERE VIEWS = ( SELECT MIN(VIEWS) FROM USERS ),
3,590,ERROR,KeyError: 'codebase_community',,SELECT USERS.ID FROM USERS ORDER BY USERS.VIEWS ASC LIMIT 1,SELECT ID FROM USERS WHERE VIEWS = ( SELECT MIN(VIEWS) FROM USERS ),
1,591,ERROR,KeyError: 'codebase_community',,SELECT COUNT(DISTINCT BADGES.USERID) FROM BADGES WHERE BADGES.NAME = 'SUPPORTER' AND YEAR(BADGES.DATE) = 2011,"SELECT COUNT(ID) FROM BADGES WHERE STRFTIME('%Y', DATE) = '2011' AND NAME = 'SUPPORTER'",
2,591,ERROR,KeyError: 'codebase_community',,SELECT COUNT(DISTINCT BADGES.USERID) FROM BADGES WHERE BADGES.NAME = 'SUPPORTER' AND YEAR(BADGES.DATE) = 2011,"SELECT COUNT(ID) FROM BADGES WHERE STRFTIME('%Y', DATE) = '2011' AND NAME = 'SUPPORTER'",
3,591,ERROR,KeyError: 'codebase_community',,SELECT COUNT(DISTINCT BADGES.USERID) FROM BADGES WHERE BADGES.NAME = 'SUPPORTER' AND YEAR(BADGES.DATE) = 2011,"SELECT COUNT(ID) FROM BADGES WHERE STRFTIME('%Y', DATE) = '2011' AND NAME = 'SUPPORTER'",
1,592,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM (SELECT BADGES.USERID FROM BADGES GROUP BY BADGES.USERID HAVING COUNT(BADGES.NAME) > 5) AS SUBQUERY,"SELECT COUNT(USERID) FROM ( SELECT USERID, COUNT(NAME) AS NUM FROM BADGES GROUP BY USERID ) T WHERE T.NUM > 5",
2,592,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM (SELECT BADGES.USERID FROM BADGES GROUP BY BADGES.USERID HAVING COUNT(BADGES.NAME) > 5) AS SUBQUERY,"SELECT COUNT(USERID) FROM ( SELECT USERID, COUNT(NAME) AS NUM FROM BADGES GROUP BY USERID ) T WHERE T.NUM > 5",
3,592,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM (SELECT BADGES.USERID FROM BADGES GROUP BY BADGES.USERID HAVING COUNT(BADGES.NAME) > 5) AS SUBQUERY,"SELECT COUNT(USERID) FROM ( SELECT USERID, COUNT(NAME) AS NUM FROM BADGES GROUP BY USERID ) T WHERE T.NUM > 5",
1,593,ERROR,KeyError: 'codebase_community',,SELECT COUNT(DISTINCT USERS.ID) FROM USERS INNER JOIN BADGES ON USERS.ID = BADGES.USERID WHERE USERS.LOCATION = 'NEW YORK' AND (BADGES.NAME = 'SUPPORTER' OR BADGES.NAME = 'TEACHER'),"SELECT COUNT(DISTINCT T1.ID) FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.NAME IN ('SUPPORTER', 'TEACHER') AND T2.LOCATION = 'NEW YORK'",
2,593,ERROR,KeyError: 'codebase_community',,SELECT COUNT(DISTINCT USERS.ID) FROM USERS INNER JOIN BADGES ON USERS.ID = BADGES.USERID WHERE USERS.LOCATION = 'NEW YORK' AND (BADGES.NAME = 'SUPPORTER' OR BADGES.NAME = 'TEACHER'),"SELECT COUNT(DISTINCT T1.ID) FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.NAME IN ('SUPPORTER', 'TEACHER') AND T2.LOCATION = 'NEW YORK'",
3,593,ERROR,KeyError: 'codebase_community',,SELECT COUNT(DISTINCT USERS.ID) FROM USERS INNER JOIN BADGES ON USERS.ID = BADGES.USERID WHERE USERS.LOCATION = 'NEW YORK' AND (BADGES.NAME = 'SUPPORTER' OR BADGES.NAME = 'TEACHER'),"SELECT COUNT(DISTINCT T1.ID) FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.NAME IN ('SUPPORTER', 'TEACHER') AND T2.LOCATION = 'NEW YORK'",
1,594,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, USERS.REPUTATION FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.ID = 1","SELECT T2.ID, T2.REPUTATION FROM COMMENTS AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.POSTID = 1",
2,594,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, USERS.REPUTATION FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.ID = 1","SELECT T2.ID, T2.REPUTATION FROM COMMENTS AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.POSTID = 1",
3,594,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, USERS.REPUTATION FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.ID = 1","SELECT T2.ID, T2.REPUTATION FROM COMMENTS AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.POSTID = 1",
1,595,ERROR,KeyError: 'codebase_community',,SELECT POSTS.OWNERUSERID FROM POSTS INNER JOIN POSTHISTORY ON POSTS.ID = POSTHISTORY.POSTID WHERE POSTS.VIEWCOUNT >= 1000 GROUP BY POSTS.OWNERUSERID HAVING COUNT(POSTHISTORY.POSTID) = 1,SELECT T2.USERID FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN POSTS AS T3 ON T2.POSTID = T3.ID WHERE T3.VIEWCOUNT >= 1000 GROUP BY T2.USERID HAVING COUNT(DISTINCT T2.POSTHISTORYTYPEID) = 1,
2,595,ERROR,KeyError: 'codebase_community',,SELECT POSTS.OWNERUSERID FROM POSTS INNER JOIN POSTHISTORY ON POSTS.ID = POSTHISTORY.POSTID WHERE POSTS.VIEWCOUNT >= 1000 GROUP BY POSTS.OWNERUSERID HAVING COUNT(POSTHISTORY.POSTID) = 1,SELECT T2.USERID FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN POSTS AS T3 ON T2.POSTID = T3.ID WHERE T3.VIEWCOUNT >= 1000 GROUP BY T2.USERID HAVING COUNT(DISTINCT T2.POSTHISTORYTYPEID) = 1,
3,595,ERROR,KeyError: 'codebase_community',,SELECT POSTS.OWNERUSERID FROM POSTS INNER JOIN POSTHISTORY ON POSTS.ID = POSTHISTORY.POSTID WHERE POSTS.VIEWCOUNT >= 1000 GROUP BY POSTS.OWNERUSERID HAVING COUNT(POSTHISTORY.POSTID) = 1,SELECT T2.USERID FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN POSTS AS T3 ON T2.POSTID = T3.ID WHERE T3.VIEWCOUNT >= 1000 GROUP BY T2.USERID HAVING COUNT(DISTINCT T2.POSTHISTORYTYPEID) = 1,
1,596,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, BADGES.NAME FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID INNER JOIN BADGES ON USERS.ID = BADGES.USERID GROUP BY COMMENTS.USERID ORDER BY COUNT(COMMENTS.ID) DESC LIMIT 1",SELECT NAME FROM BADGES AS T1 INNER JOIN COMMENTS AS T2 ON T1.USERID = T2.USERID GROUP BY T2.USERID ORDER BY COUNT(T2.USERID) DESC LIMIT 1,
2,596,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, BADGES.NAME FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID INNER JOIN BADGES ON USERS.ID = BADGES.USERID GROUP BY COMMENTS.USERID ORDER BY COUNT(COMMENTS.ID) DESC LIMIT 1",SELECT NAME FROM BADGES AS T1 INNER JOIN COMMENTS AS T2 ON T1.USERID = T2.USERID GROUP BY T2.USERID ORDER BY COUNT(T2.USERID) DESC LIMIT 1,
3,596,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, BADGES.NAME FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID INNER JOIN BADGES ON USERS.ID = BADGES.USERID GROUP BY COMMENTS.USERID ORDER BY COUNT(COMMENTS.ID) DESC LIMIT 1",SELECT NAME FROM BADGES AS T1 INNER JOIN COMMENTS AS T2 ON T1.USERID = T2.USERID GROUP BY T2.USERID ORDER BY COUNT(T2.USERID) DESC LIMIT 1,
1,597,ERROR,KeyError: 'codebase_community',,SELECT COUNT(DISTINCT USERS.ID) FROM USERS INNER JOIN BADGES ON USERS.ID = BADGES.USERID WHERE USERS.LOCATION = 'INDIA' AND BADGES.NAME = 'TEACHER',SELECT COUNT(T1.ID) FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T2.LOCATION = 'INDIA' AND T1.NAME = 'TEACHER',
2,597,ERROR,KeyError: 'codebase_community',,SELECT COUNT(DISTINCT USERS.ID) FROM USERS INNER JOIN BADGES ON USERS.ID = BADGES.USERID WHERE USERS.LOCATION = 'INDIA' AND BADGES.NAME = 'TEACHER',SELECT COUNT(T1.ID) FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T2.LOCATION = 'INDIA' AND T1.NAME = 'TEACHER',
3,597,ERROR,KeyError: 'codebase_community',,SELECT COUNT(DISTINCT USERS.ID) FROM USERS INNER JOIN BADGES ON USERS.ID = BADGES.USERID WHERE USERS.LOCATION = 'INDIA' AND BADGES.NAME = 'TEACHER',SELECT COUNT(T1.ID) FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T2.LOCATION = 'INDIA' AND T1.NAME = 'TEACHER',
1,598,ERROR,KeyError: 'codebase_community',,"SELECT (CAST((SELECT COUNT(*) FROM BADGES WHERE NAME = 'STUDENT' AND STRFTIME('%Y', DATE) = '2010') AS REAL) * 100 / (SELECT COUNT(*) FROM BADGES WHERE NAME = 'STUDENT')) - (CAST((SELECT COUNT(*) FROM BADGES WHERE NAME = 'STUDENT' AND STRFTIME('%Y', DATE) = '2011') AS REAL) * 100 / (SELECT COUNT(*) FROM BADGES WHERE NAME = 'STUDENT')) AS PERCENTAGE_DIFFERENCE","SELECT CAST(SUM(IIF(STRFTIME('%Y', DATE) = '2010', 1, 0)) AS REAL) * 100 / COUNT(ID) - CAST(SUM(IIF(STRFTIME('%Y', DATE) = '2011', 1, 0)) AS REAL) * 100 / COUNT(ID) FROM BADGES WHERE NAME = 'STUDENT'",
2,598,ERROR,KeyError: 'codebase_community',,"SELECT (CAST((SELECT COUNT(*) FROM BADGES WHERE NAME = 'STUDENT' AND STRFTIME('%Y', DATE) = '2010') AS REAL) * 100 / (SELECT COUNT(*) FROM BADGES WHERE NAME = 'STUDENT')) - (CAST((SELECT COUNT(*) FROM BADGES WHERE NAME = 'STUDENT' AND STRFTIME('%Y', DATE) = '2011') AS REAL) * 100 / (SELECT COUNT(*) FROM BADGES WHERE NAME = 'STUDENT')) AS PERCENTAGE_DIFFERENCE","SELECT CAST(SUM(IIF(STRFTIME('%Y', DATE) = '2010', 1, 0)) AS REAL) * 100 / COUNT(ID) - CAST(SUM(IIF(STRFTIME('%Y', DATE) = '2011', 1, 0)) AS REAL) * 100 / COUNT(ID) FROM BADGES WHERE NAME = 'STUDENT'",
3,598,ERROR,KeyError: 'codebase_community',,"SELECT (CAST((SELECT COUNT(*) FROM BADGES WHERE NAME = 'STUDENT' AND STRFTIME('%Y', DATE) = '2010') AS REAL) * 100 / (SELECT COUNT(*) FROM BADGES WHERE NAME = 'STUDENT')) - (CAST((SELECT COUNT(*) FROM BADGES WHERE NAME = 'STUDENT' AND STRFTIME('%Y', DATE) = '2011') AS REAL) * 100 / (SELECT COUNT(*) FROM BADGES WHERE NAME = 'STUDENT')) AS PERCENTAGE_DIFFERENCE","SELECT CAST(SUM(IIF(STRFTIME('%Y', DATE) = '2010', 1, 0)) AS REAL) * 100 / COUNT(ID) - CAST(SUM(IIF(STRFTIME('%Y', DATE) = '2011', 1, 0)) AS REAL) * 100 / COUNT(ID) FROM BADGES WHERE NAME = 'STUDENT'",
1,599,ERROR,KeyError: 'codebase_community',,SELECT POSTHISTORY.POSTHISTORYTYPEID FROM POSTHISTORY WHERE POSTHISTORY.POSTID = 3720 UNION SELECT COUNT(DISTINCT COMMENTS.USERID) FROM COMMENTS WHERE COMMENTS.POSTID = 3720;,"SELECT T1.POSTHISTORYTYPEID, (SELECT COUNT(DISTINCT USERID) FROM COMMENTS WHERE POSTID = 3720) AS NUMBEROFUSERS FROM POSTHISTORY AS T1 WHERE T1.POSTID = 3720",
2,599,ERROR,KeyError: 'codebase_community',,SELECT POSTHISTORY.POSTHISTORYTYPEID FROM POSTHISTORY WHERE POSTHISTORY.POSTID = 3720 UNION SELECT COUNT(DISTINCT COMMENTS.USERID) FROM COMMENTS WHERE COMMENTS.POSTID = 3720;,"SELECT T1.POSTHISTORYTYPEID, (SELECT COUNT(DISTINCT USERID) FROM COMMENTS WHERE POSTID = 3720) AS NUMBEROFUSERS FROM POSTHISTORY AS T1 WHERE T1.POSTID = 3720",
3,599,ERROR,KeyError: 'codebase_community',,SELECT POSTHISTORY.POSTHISTORYTYPEID FROM POSTHISTORY WHERE POSTHISTORY.POSTID = 3720 UNION SELECT COUNT(DISTINCT COMMENTS.USERID) FROM COMMENTS WHERE COMMENTS.POSTID = 3720;,"SELECT T1.POSTHISTORYTYPEID, (SELECT COUNT(DISTINCT USERID) FROM COMMENTS WHERE POSTID = 3720) AS NUMBEROFUSERS FROM POSTHISTORY AS T1 WHERE T1.POSTID = 3720",
1,600,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.VIEWCOUNT, POSTLINKS.POSTID FROM POSTLINKS INNER JOIN POSTS ON POSTLINKS.POSTID = POSTS.ID WHERE POSTLINKS.RELATEDPOSTID = 61217",SELECT T1.VIEWCOUNT FROM POSTS AS T1 INNER JOIN POSTLINKS AS T2 ON T1.ID = T2.POSTID WHERE T2.POSTID = 61217,
2,600,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.VIEWCOUNT, POSTLINKS.POSTID FROM POSTLINKS INNER JOIN POSTS ON POSTLINKS.POSTID = POSTS.ID WHERE POSTLINKS.RELATEDPOSTID = 61217",SELECT T1.VIEWCOUNT FROM POSTS AS T1 INNER JOIN POSTLINKS AS T2 ON T1.ID = T2.POSTID WHERE T2.POSTID = 61217,
3,600,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.VIEWCOUNT, POSTLINKS.POSTID FROM POSTLINKS INNER JOIN POSTS ON POSTLINKS.POSTID = POSTS.ID WHERE POSTLINKS.RELATEDPOSTID = 61217",SELECT T1.VIEWCOUNT FROM POSTS AS T1 INNER JOIN POSTLINKS AS T2 ON T1.ID = T2.POSTID WHERE T2.POSTID = 61217,
1,601,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.SCORE, POSTLINKS.LINKTYPEID FROM POSTS INNER JOIN POSTLINKS ON POSTS.ID = POSTLINKS.POSTID WHERE POSTS.ID = 395","SELECT T1.SCORE, T2.LINKTYPEID FROM POSTS AS T1 INNER JOIN POSTLINKS AS T2 ON T1.ID = T2.POSTID WHERE T2.POSTID = 395",
2,601,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.SCORE, POSTLINKS.LINKTYPEID FROM POSTS INNER JOIN POSTLINKS ON POSTS.ID = POSTLINKS.POSTID WHERE POSTS.ID = 395","SELECT T1.SCORE, T2.LINKTYPEID FROM POSTS AS T1 INNER JOIN POSTLINKS AS T2 ON T1.ID = T2.POSTID WHERE T2.POSTID = 395",
3,601,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.SCORE, POSTLINKS.LINKTYPEID FROM POSTS INNER JOIN POSTLINKS ON POSTS.ID = POSTLINKS.POSTID WHERE POSTS.ID = 395","SELECT T1.SCORE, T2.LINKTYPEID FROM POSTS AS T1 INNER JOIN POSTLINKS AS T2 ON T1.ID = T2.POSTID WHERE T2.POSTID = 395",
1,602,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID, POSTS.OWNERUSERID FROM POSTS WHERE POSTS.SCORE > 60","SELECT POSTID, USERID FROM POSTHISTORY WHERE POSTID IN ( SELECT ID FROM POSTS WHERE SCORE > 60 )",
2,602,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID, POSTS.OWNERUSERID FROM POSTS WHERE POSTS.SCORE > 60","SELECT POSTID, USERID FROM POSTHISTORY WHERE POSTID IN ( SELECT ID FROM POSTS WHERE SCORE > 60 )",
3,602,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID, POSTS.OWNERUSERID FROM POSTS WHERE POSTS.SCORE > 60","SELECT POSTID, USERID FROM POSTHISTORY WHERE POSTID IN ( SELECT ID FROM POSTS WHERE SCORE > 60 )",
1,603,ERROR,KeyError: 'codebase_community',,SELECT SUM(POSTS.FAVORITECOUNT) FROM POSTS WHERE POSTS.OWNERUSERID = 686 AND YEAR(POSTS.CREATINDATE) = 2011,"SELECT SUM(DISTINCT FAVORITECOUNT) FROM POSTS WHERE ID IN ( SELECT POSTID FROM POSTHISTORY WHERE USERID = 686 AND STRFTIME('%Y', CREATIONDATE) = '2011' )",
2,603,ERROR,KeyError: 'codebase_community',,SELECT SUM(POSTS.FAVORITECOUNT) FROM POSTS WHERE POSTS.OWNERUSERID = 686 AND YEAR(POSTS.CREATINDATE) = 2011,"SELECT SUM(DISTINCT FAVORITECOUNT) FROM POSTS WHERE ID IN ( SELECT POSTID FROM POSTHISTORY WHERE USERID = 686 AND STRFTIME('%Y', CREATIONDATE) = '2011' )",
3,603,ERROR,KeyError: 'codebase_community',,SELECT SUM(POSTS.FAVORITECOUNT) FROM POSTS WHERE POSTS.OWNERUSERID = 686 AND YEAR(POSTS.CREATINDATE) = 2011,"SELECT SUM(DISTINCT FAVORITECOUNT) FROM POSTS WHERE ID IN ( SELECT POSTID FROM POSTHISTORY WHERE USERID = 686 AND STRFTIME('%Y', CREATIONDATE) = '2011' )",
1,604,ERROR,KeyError: 'codebase_community',,"SELECT AVG(USERS.UPVOTES), AVG(USERS.AGE) FROM USERS INNER JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID GROUP BY POSTS.OWNERUSERID HAVING COUNT(POSTS.ID) > 10","SELECT AVG(T1.UPVOTES), AVG(T1.AGE) FROM USERS AS T1 INNER JOIN ( SELECT OWNERUSERID, COUNT(*) AS POST_COUNT FROM POSTS GROUP BY OWNERUSERID HAVING POST_COUNT > 10) AS T2 ON T1.ID = T2.OWNERUSERID",
2,604,ERROR,KeyError: 'codebase_community',,"SELECT AVG(USERS.UPVOTES), AVG(USERS.AGE) FROM USERS INNER JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID GROUP BY POSTS.OWNERUSERID HAVING COUNT(POSTS.ID) > 10","SELECT AVG(T1.UPVOTES), AVG(T1.AGE) FROM USERS AS T1 INNER JOIN ( SELECT OWNERUSERID, COUNT(*) AS POST_COUNT FROM POSTS GROUP BY OWNERUSERID HAVING POST_COUNT > 10) AS T2 ON T1.ID = T2.OWNERUSERID",
3,604,ERROR,KeyError: 'codebase_community',,"SELECT AVG(USERS.UPVOTES), AVG(USERS.AGE) FROM USERS INNER JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID GROUP BY POSTS.OWNERUSERID HAVING COUNT(POSTS.ID) > 10","SELECT AVG(T1.UPVOTES), AVG(T1.AGE) FROM USERS AS T1 INNER JOIN ( SELECT OWNERUSERID, COUNT(*) AS POST_COUNT FROM POSTS GROUP BY OWNERUSERID HAVING POST_COUNT > 10) AS T2 ON T1.ID = T2.OWNERUSERID",
1,605,ERROR,KeyError: 'codebase_community',,SELECT COUNT(BADGES.USERID) FROM BADGES WHERE BADGES.NAME = 'ANNOUNCER',SELECT COUNT(ID) FROM BADGES WHERE NAME = 'ANNOUNCER',
2,605,ERROR,KeyError: 'codebase_community',,SELECT COUNT(BADGES.USERID) FROM BADGES WHERE BADGES.NAME = 'ANNOUNCER',SELECT COUNT(ID) FROM BADGES WHERE NAME = 'ANNOUNCER',
3,605,ERROR,KeyError: 'codebase_community',,SELECT COUNT(BADGES.USERID) FROM BADGES WHERE BADGES.NAME = 'ANNOUNCER',SELECT COUNT(ID) FROM BADGES WHERE NAME = 'ANNOUNCER',
1,606,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES WHERE BADGES.DATE = '2010-07-19 19:39:08.0',SELECT NAME FROM BADGES WHERE DATE = '2010-07-19 19:39:08.0',
2,606,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES WHERE BADGES.DATE = '2010-07-19 19:39:08.0',SELECT NAME FROM BADGES WHERE DATE = '2010-07-19 19:39:08.0',
3,606,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES WHERE BADGES.DATE = '2010-07-19 19:39:08.0',SELECT NAME FROM BADGES WHERE DATE = '2010-07-19 19:39:08.0',
1,607,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM COMMENTS WHERE SCORE > 60,SELECT COUNT(ID) FROM COMMENTS WHERE SCORE > 60,
2,607,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM COMMENTS WHERE SCORE > 60,SELECT COUNT(ID) FROM COMMENTS WHERE SCORE > 60,
3,607,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM COMMENTS WHERE SCORE > 60,SELECT COUNT(ID) FROM COMMENTS WHERE SCORE > 60,
1,608,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM COMMENTS WHERE COMMENTS.CREATIONDATE = '2010-07-19 19:25:47.0',SELECT TEXT FROM COMMENTS WHERE CREATIONDATE = '2010-07-19 19:16:14.0',
2,608,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM COMMENTS WHERE COMMENTS.CREATIONDATE = '2010-07-19 19:25:47.0',SELECT TEXT FROM COMMENTS WHERE CREATIONDATE = '2010-07-19 19:16:14.0',
3,608,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM COMMENTS WHERE COMMENTS.CREATIONDATE = '2010-07-19 19:25:47.0',SELECT TEXT FROM COMMENTS WHERE CREATIONDATE = '2010-07-19 19:16:14.0',
1,609,ERROR,KeyError: 'codebase_community',,SELECT COUNT(POSTS.ID) FROM POSTS WHERE POSTS.SCORE = 10;,SELECT COUNT(ID) FROM POSTS WHERE SCORE = 10,
2,609,ERROR,KeyError: 'codebase_community',,SELECT COUNT(POSTS.ID) FROM POSTS WHERE POSTS.SCORE = 10;,SELECT COUNT(ID) FROM POSTS WHERE SCORE = 10,
3,609,ERROR,KeyError: 'codebase_community',,SELECT COUNT(POSTS.ID) FROM POSTS WHERE POSTS.SCORE = 10;,SELECT COUNT(ID) FROM POSTS WHERE SCORE = 10,
1,610,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.REPUTATION = (SELECT MAX(USERS.REPUTATION) FROM USERS),SELECT T2.NAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID ORDER BY T1.REPUTATION DESC LIMIT 1,
2,610,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.REPUTATION = (SELECT MAX(USERS.REPUTATION) FROM USERS),SELECT T2.NAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID ORDER BY T1.REPUTATION DESC LIMIT 1,
3,610,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.REPUTATION = (SELECT MAX(USERS.REPUTATION) FROM USERS),SELECT T2.NAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID ORDER BY T1.REPUTATION DESC LIMIT 1,
1,611,ERROR,KeyError: 'codebase_community',,SELECT USERS.REPUTATION FROM USERS INNER JOIN BADGES ON USERS.ID = BADGES.USERID WHERE BADGES.DATE = '2010-07-19 19:39:08.0',SELECT T1.REPUTATION FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.DATE = '2010-07-19 19:39:08.0',
2,611,ERROR,KeyError: 'codebase_community',,SELECT USERS.REPUTATION FROM USERS INNER JOIN BADGES ON USERS.ID = BADGES.USERID WHERE BADGES.DATE = '2010-07-19 19:39:08.0',SELECT T1.REPUTATION FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.DATE = '2010-07-19 19:39:08.0',
3,611,ERROR,KeyError: 'codebase_community',,SELECT USERS.REPUTATION FROM USERS INNER JOIN BADGES ON USERS.ID = BADGES.USERID WHERE BADGES.DATE = '2010-07-19 19:39:08.0',SELECT T1.REPUTATION FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.DATE = '2010-07-19 19:39:08.0',
1,612,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'PIERRE',SELECT T2.NAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.DISPLAYNAME = 'PIERRE',
2,612,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'PIERRE',SELECT T2.NAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.DISPLAYNAME = 'PIERRE',
3,612,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'PIERRE',SELECT T2.NAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.DISPLAYNAME = 'PIERRE',
1,613,ERROR,KeyError: 'codebase_community',,"SELECT BADGES.DATE FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.LOCATION = 'ROCHESTER, NY';","SELECT T2.DATE FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.LOCATION = 'ROCHESTER, NY'",
2,613,ERROR,KeyError: 'codebase_community',,"SELECT BADGES.DATE FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.LOCATION = 'ROCHESTER, NY';","SELECT T2.DATE FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.LOCATION = 'ROCHESTER, NY'",
3,613,ERROR,KeyError: 'codebase_community',,"SELECT BADGES.DATE FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.LOCATION = 'ROCHESTER, NY';","SELECT T2.DATE FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.LOCATION = 'ROCHESTER, NY'",
1,614,ERROR,KeyError: 'codebase_community',,SELECT (CAST((SELECT COUNT(*) FROM BADGES WHERE NAME = 'TEACHER') AS REAL) / (SELECT COUNT(*) FROM BADGES)) * 100 FROM BADGES,SELECT CAST(COUNT(T1.ID) AS REAL) * 100 / (SELECT COUNT(ID) FROM USERS) FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.NAME = 'TEACHER',
2,614,ERROR,KeyError: 'codebase_community',,SELECT (CAST((SELECT COUNT(*) FROM BADGES WHERE NAME = 'TEACHER') AS REAL) / (SELECT COUNT(*) FROM BADGES)) * 100 FROM BADGES,SELECT CAST(COUNT(T1.ID) AS REAL) * 100 / (SELECT COUNT(ID) FROM USERS) FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.NAME = 'TEACHER',
3,614,ERROR,KeyError: 'codebase_community',,SELECT (CAST((SELECT COUNT(*) FROM BADGES WHERE NAME = 'TEACHER') AS REAL) / (SELECT COUNT(*) FROM BADGES)) * 100 FROM BADGES,SELECT CAST(COUNT(T1.ID) AS REAL) * 100 / (SELECT COUNT(ID) FROM USERS) FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.NAME = 'TEACHER',
1,615,ERROR,KeyError: 'codebase_community',,SELECT (CAST(COUNT(DF2.USERID) AS REAL) * 100 / COUNT(DF1.USERID)) AS PERCENTAGE FROM BADGES AS DF1 LEFT JOIN USERS AS DF2 ON DF1.USERID = DF2.ID WHERE DF1.NAME = 'ORGANIZER' AND DF2.AGE BETWEEN 13 AND 18,"SELECT CAST(SUM(IIF(T2.AGE BETWEEN 13 AND 18, 1, 0)) AS REAL) * 100 / COUNT(T1.ID) FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.`NAME` = 'ORGANIZER'",
2,615,ERROR,KeyError: 'codebase_community',,SELECT (CAST(COUNT(DF2.USERID) AS REAL) * 100 / COUNT(DF1.USERID)) AS PERCENTAGE FROM BADGES AS DF1 LEFT JOIN USERS AS DF2 ON DF1.USERID = DF2.ID WHERE DF1.NAME = 'ORGANIZER' AND DF2.AGE BETWEEN 13 AND 18,"SELECT CAST(SUM(IIF(T2.AGE BETWEEN 13 AND 18, 1, 0)) AS REAL) * 100 / COUNT(T1.ID) FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.`NAME` = 'ORGANIZER'",
3,615,ERROR,KeyError: 'codebase_community',,SELECT (CAST(COUNT(DF2.USERID) AS REAL) * 100 / COUNT(DF1.USERID)) AS PERCENTAGE FROM BADGES AS DF1 LEFT JOIN USERS AS DF2 ON DF1.USERID = DF2.ID WHERE DF1.NAME = 'ORGANIZER' AND DF2.AGE BETWEEN 13 AND 18,"SELECT CAST(SUM(IIF(T2.AGE BETWEEN 13 AND 18, 1, 0)) AS REAL) * 100 / COUNT(T1.ID) FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.`NAME` = 'ORGANIZER'",
1,616,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.SCORE FROM COMMENTS INNER JOIN POSTS ON COMMENTS.POSTID = POSTS.ID WHERE POSTS.CREATIONDATE = '2010-07-19 19:19:56.0',SELECT T1.SCORE FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T1.CREATIONDATE = '2010-07-19 19:19:56.0',
2,616,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.SCORE FROM COMMENTS INNER JOIN POSTS ON COMMENTS.POSTID = POSTS.ID WHERE POSTS.CREATIONDATE = '2010-07-19 19:19:56.0',SELECT T1.SCORE FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T1.CREATIONDATE = '2010-07-19 19:19:56.0',
3,616,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.SCORE FROM COMMENTS INNER JOIN POSTS ON COMMENTS.POSTID = POSTS.ID WHERE POSTS.CREATIONDATE = '2010-07-19 19:19:56.0',SELECT T1.SCORE FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T1.CREATIONDATE = '2010-07-19 19:19:56.0',
1,617,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM COMMENTS WHERE COMMENTS.CREATIONDATE = '2010-07-19 19:37:33.0',SELECT T1.TEXT FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T1.CREATIONDATE = '2010-07-19 19:37:33.0',
2,617,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM COMMENTS WHERE COMMENTS.CREATIONDATE = '2010-07-19 19:37:33.0',SELECT T1.TEXT FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T1.CREATIONDATE = '2010-07-19 19:37:33.0',
3,617,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM COMMENTS WHERE COMMENTS.CREATIONDATE = '2010-07-19 19:37:33.0',SELECT T1.TEXT FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T1.CREATIONDATE = '2010-07-19 19:37:33.0',
1,618,ERROR,KeyError: 'codebase_community',,"SELECT USERS.AGE FROM USERS INNER JOIN BADGES ON USERS.ID = BADGES.USERID WHERE USERS.LOCATION = 'VIENNA, AUSTRIA';","SELECT T1.AGE FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.LOCATION = 'VIENNA, AUSTRIA'",
2,618,ERROR,KeyError: 'codebase_community',,"SELECT USERS.AGE FROM USERS INNER JOIN BADGES ON USERS.ID = BADGES.USERID WHERE USERS.LOCATION = 'VIENNA, AUSTRIA';","SELECT T1.AGE FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.LOCATION = 'VIENNA, AUSTRIA'",
3,618,ERROR,KeyError: 'codebase_community',,"SELECT USERS.AGE FROM USERS INNER JOIN BADGES ON USERS.ID = BADGES.USERID WHERE USERS.LOCATION = 'VIENNA, AUSTRIA';","SELECT T1.AGE FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.LOCATION = 'VIENNA, AUSTRIA'",
1,619,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE BADGES.NAME = 'SUPPORTER' AND USERS.AGE BETWEEN 19 AND 65,SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.NAME = 'SUPPORTER' AND T1.AGE BETWEEN 19 AND 65,
2,619,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE BADGES.NAME = 'SUPPORTER' AND USERS.AGE BETWEEN 19 AND 65,SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.NAME = 'SUPPORTER' AND T1.AGE BETWEEN 19 AND 65,
3,619,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE BADGES.NAME = 'SUPPORTER' AND USERS.AGE BETWEEN 19 AND 65,SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.NAME = 'SUPPORTER' AND T1.AGE BETWEEN 19 AND 65,
1,620,ERROR,KeyError: 'codebase_community',,SELECT USERS.VIEWS FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE BADGES.DATE = '2010-07-19 19:39:08.0',SELECT T1.VIEWS FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.DATE = '2010-07-19 19:39:08.0',
2,620,ERROR,KeyError: 'codebase_community',,SELECT USERS.VIEWS FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE BADGES.DATE = '2010-07-19 19:39:08.0',SELECT T1.VIEWS FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.DATE = '2010-07-19 19:39:08.0',
3,620,ERROR,KeyError: 'codebase_community',,SELECT USERS.VIEWS FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE BADGES.DATE = '2010-07-19 19:39:08.0',SELECT T1.VIEWS FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.DATE = '2010-07-19 19:39:08.0',
1,621,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN ( SELECT USERS.ID FROM USERS ORDER BY USERS.REPUTATION ASC LIMIT 1 ) AS SUBQUERY ON BADGES.USERID = SUBQUERY.ID,SELECT T2.NAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.REPUTATION = (SELECT MIN(REPUTATION) FROM USERS),
2,621,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN ( SELECT USERS.ID FROM USERS ORDER BY USERS.REPUTATION ASC LIMIT 1 ) AS SUBQUERY ON BADGES.USERID = SUBQUERY.ID,SELECT T2.NAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.REPUTATION = (SELECT MIN(REPUTATION) FROM USERS),
3,621,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN ( SELECT USERS.ID FROM USERS ORDER BY USERS.REPUTATION ASC LIMIT 1 ) AS SUBQUERY ON BADGES.USERID = SUBQUERY.ID,SELECT T2.NAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.REPUTATION = (SELECT MIN(REPUTATION) FROM USERS),
1,622,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'SHARPIE';,SELECT T2.NAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.DISPLAYNAME = 'SHARPIE',
2,622,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'SHARPIE';,SELECT T2.NAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.DISPLAYNAME = 'SHARPIE',
3,622,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'SHARPIE';,SELECT T2.NAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.DISPLAYNAME = 'SHARPIE',
1,623,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE BADGES.NAME = 'SUPPORTER' AND USERS.AGE > 65,SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.AGE > 65 AND T2.NAME = 'SUPPORTER',
2,623,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE BADGES.NAME = 'SUPPORTER' AND USERS.AGE > 65,SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.AGE > 65 AND T2.NAME = 'SUPPORTER',
3,623,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE BADGES.NAME = 'SUPPORTER' AND USERS.AGE > 65,SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T1.AGE > 65 AND T2.NAME = 'SUPPORTER',
1,624,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS WHERE USERS.ID = 30;,SELECT DISPLAYNAME FROM USERS WHERE ID = 30,
2,624,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS WHERE USERS.ID = 30;,SELECT DISPLAYNAME FROM USERS WHERE ID = 30,
3,624,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS WHERE USERS.ID = 30;,SELECT DISPLAYNAME FROM USERS WHERE ID = 30,
1,625,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS WHERE LOCATION = 'NEW YORK';,SELECT COUNT(ID) FROM USERS WHERE LOCATION = 'NEW YORK',
2,625,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS WHERE LOCATION = 'NEW YORK';,SELECT COUNT(ID) FROM USERS WHERE LOCATION = 'NEW YORK',
3,625,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS WHERE LOCATION = 'NEW YORK';,SELECT COUNT(ID) FROM USERS WHERE LOCATION = 'NEW YORK',
1,626,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM VOTES WHERE YEAR(CREATIONDATE) = 2010;,"SELECT COUNT(ID) FROM VOTES WHERE STRFTIME('%Y', CREATIONDATE) = '2010'",
2,626,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM VOTES WHERE YEAR(CREATIONDATE) = 2010;,"SELECT COUNT(ID) FROM VOTES WHERE STRFTIME('%Y', CREATIONDATE) = '2010'",
3,626,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM VOTES WHERE YEAR(CREATIONDATE) = 2010;,"SELECT COUNT(ID) FROM VOTES WHERE STRFTIME('%Y', CREATIONDATE) = '2010'",
1,627,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS WHERE AGE BETWEEN 19 AND 65,SELECT COUNT(ID) FROM USERS WHERE AGE BETWEEN 19 AND 65,
2,627,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS WHERE AGE BETWEEN 19 AND 65,SELECT COUNT(ID) FROM USERS WHERE AGE BETWEEN 19 AND 65,
3,627,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS WHERE AGE BETWEEN 19 AND 65,SELECT COUNT(ID) FROM USERS WHERE AGE BETWEEN 19 AND 65,
1,628,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS ORDER BY USERS.VIEWS DESC LIMIT 1;,"SELECT ID, DISPLAYNAME FROM USERS WHERE VIEWS = ( SELECT MAX(VIEWS) FROM USERS )",
2,628,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS ORDER BY USERS.VIEWS DESC LIMIT 1;,"SELECT ID, DISPLAYNAME FROM USERS WHERE VIEWS = ( SELECT MAX(VIEWS) FROM USERS )",
3,628,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS ORDER BY USERS.VIEWS DESC LIMIT 1;,"SELECT ID, DISPLAYNAME FROM USERS WHERE VIEWS = ( SELECT MAX(VIEWS) FROM USERS )",
1,629,ERROR,KeyError: 'codebase_community',,"SELECT (CAST((SELECT COUNT(ID) FROM VOTES WHERE STRFTIME('%Y', CREATIONDATE) = '2010') AS REAL) / (SELECT COUNT(ID) FROM VOTES WHERE STRFTIME('%Y', CREATIONDATE) = '2011')) AS RATIO FROM VOTES LIMIT 1;","SELECT CAST(SUM(IIF(STRFTIME('%Y', CREATIONDATE) = '2010', 1, 0)) AS REAL) / SUM(IIF(STRFTIME('%Y', CREATIONDATE) = '2011', 1, 0)) FROM VOTES",
2,629,ERROR,KeyError: 'codebase_community',,"SELECT (CAST((SELECT COUNT(ID) FROM VOTES WHERE STRFTIME('%Y', CREATIONDATE) = '2010') AS REAL) / (SELECT COUNT(ID) FROM VOTES WHERE STRFTIME('%Y', CREATIONDATE) = '2011')) AS RATIO FROM VOTES LIMIT 1;","SELECT CAST(SUM(IIF(STRFTIME('%Y', CREATIONDATE) = '2010', 1, 0)) AS REAL) / SUM(IIF(STRFTIME('%Y', CREATIONDATE) = '2011', 1, 0)) FROM VOTES",
3,629,ERROR,KeyError: 'codebase_community',,"SELECT (CAST((SELECT COUNT(ID) FROM VOTES WHERE STRFTIME('%Y', CREATIONDATE) = '2010') AS REAL) / (SELECT COUNT(ID) FROM VOTES WHERE STRFTIME('%Y', CREATIONDATE) = '2011')) AS RATIO FROM VOTES LIMIT 1;","SELECT CAST(SUM(IIF(STRFTIME('%Y', CREATIONDATE) = '2010', 1, 0)) AS REAL) / SUM(IIF(STRFTIME('%Y', CREATIONDATE) = '2011', 1, 0)) FROM VOTES",
1,630,ERROR,KeyError: 'codebase_community',,SELECT TAGS.TAGNAME FROM USERS INNER JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID INNER JOIN TAGS ON POSTS.ID = TAGS.ID WHERE USERS.DISPLAYNAME = 'JOHN SALVATIER';,SELECT T3.TAGS FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN POSTS AS T3 ON T2.POSTID = T3.ID WHERE T1.DISPLAYNAME = 'JOHN SALVATIER',
2,630,ERROR,KeyError: 'codebase_community',,SELECT TAGS.TAGNAME FROM USERS INNER JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID INNER JOIN TAGS ON POSTS.ID = TAGS.ID WHERE USERS.DISPLAYNAME = 'JOHN SALVATIER';,SELECT T3.TAGS FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN POSTS AS T3 ON T2.POSTID = T3.ID WHERE T1.DISPLAYNAME = 'JOHN SALVATIER',
3,630,ERROR,KeyError: 'codebase_community',,SELECT TAGS.TAGNAME FROM USERS INNER JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID INNER JOIN TAGS ON POSTS.ID = TAGS.ID WHERE USERS.DISPLAYNAME = 'JOHN SALVATIER';,SELECT T3.TAGS FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN POSTS AS T3 ON T2.POSTID = T3.ID WHERE T1.DISPLAYNAME = 'JOHN SALVATIER',
1,631,ERROR,KeyError: 'codebase_community',,SELECT COUNT(POSTS.ID) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'DANIEL VASSALLO';,SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID WHERE T1.DISPLAYNAME = 'DANIEL VASSALLO',
2,631,ERROR,KeyError: 'codebase_community',,SELECT COUNT(POSTS.ID) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'DANIEL VASSALLO';,SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID WHERE T1.DISPLAYNAME = 'DANIEL VASSALLO',
3,631,ERROR,KeyError: 'codebase_community',,SELECT COUNT(POSTS.ID) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'DANIEL VASSALLO';,SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID WHERE T1.DISPLAYNAME = 'DANIEL VASSALLO',
1,632,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS INNER JOIN VOTES ON USERS.ID = VOTES.USERID WHERE USERS.DISPLAYNAME = 'HARLAN';,SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN VOTES AS T3 ON T3.POSTID = T2.POSTID WHERE T1.DISPLAYNAME = 'HARLAN',
2,632,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS INNER JOIN VOTES ON USERS.ID = VOTES.USERID WHERE USERS.DISPLAYNAME = 'HARLAN';,SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN VOTES AS T3 ON T3.POSTID = T2.POSTID WHERE T1.DISPLAYNAME = 'HARLAN',
3,632,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS INNER JOIN VOTES ON USERS.ID = VOTES.USERID WHERE USERS.DISPLAYNAME = 'HARLAN';,SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN VOTES AS T3 ON T3.POSTID = T2.POSTID WHERE T1.DISPLAYNAME = 'HARLAN',
1,633,ERROR,KeyError: 'codebase_community',,SELECT POSTS.ID FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'SLASHNICK' ORDER BY POSTS.ANSWERCOUNT DESC LIMIT 1,SELECT T2.POSTID FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN POSTS AS T3 ON T2.POSTID = T3.ID WHERE T1.DISPLAYNAME = 'SLASHNICK' ORDER BY T3.ANSWERCOUNT DESC LIMIT 1,
2,633,ERROR,KeyError: 'codebase_community',,SELECT POSTS.ID FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'SLASHNICK' ORDER BY POSTS.ANSWERCOUNT DESC LIMIT 1,SELECT T2.POSTID FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN POSTS AS T3 ON T2.POSTID = T3.ID WHERE T1.DISPLAYNAME = 'SLASHNICK' ORDER BY T3.ANSWERCOUNT DESC LIMIT 1,
3,633,ERROR,KeyError: 'codebase_community',,SELECT POSTS.ID FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'SLASHNICK' ORDER BY POSTS.ANSWERCOUNT DESC LIMIT 1,SELECT T2.POSTID FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN POSTS AS T3 ON T2.POSTID = T3.ID WHERE T1.DISPLAYNAME = 'SLASHNICK' ORDER BY T3.ANSWERCOUNT DESC LIMIT 1,
1,634,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME IN ('HARVEY MOTULSKY', 'NOAH SNYDER') ORDER BY POSTS.VIEWCOUNT DESC LIMIT 1;",SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN POSTS AS T3 ON T2.POSTID = T3.ID WHERE T1.DISPLAYNAME = 'HARVEY MOTULSKY' OR T1.DISPLAYNAME = 'NOAH SNYDER' GROUP BY T1.DISPLAYNAME ORDER BY SUM(T3.VIEWCOUNT) DESC LIMIT 1,
2,634,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME IN ('HARVEY MOTULSKY', 'NOAH SNYDER') ORDER BY POSTS.VIEWCOUNT DESC LIMIT 1;",SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN POSTS AS T3 ON T2.POSTID = T3.ID WHERE T1.DISPLAYNAME = 'HARVEY MOTULSKY' OR T1.DISPLAYNAME = 'NOAH SNYDER' GROUP BY T1.DISPLAYNAME ORDER BY SUM(T3.VIEWCOUNT) DESC LIMIT 1,
3,634,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME IN ('HARVEY MOTULSKY', 'NOAH SNYDER') ORDER BY POSTS.VIEWCOUNT DESC LIMIT 1;",SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN POSTS AS T3 ON T2.POSTID = T3.ID WHERE T1.DISPLAYNAME = 'HARVEY MOTULSKY' OR T1.DISPLAYNAME = 'NOAH SNYDER' GROUP BY T1.DISPLAYNAME ORDER BY SUM(T3.VIEWCOUNT) DESC LIMIT 1,
1,635,ERROR,KeyError: 'codebase_community',,SELECT COUNT(POSTS.ID) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID INNER JOIN VOTES ON POSTS.ID = VOTES.POSTID WHERE USERS.DISPLAYNAME = 'MATT PARKER' GROUP BY POSTS.ID HAVING COUNT(VOTES.ID) > 4,"SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN POSTS AS T3 ON T2.POSTID = T3.ID INNER JOIN VOTES AS T4 ON T4.POSTID = T3.ID WHERE T1.DISPLAYNAME = 'MATT PARKER' GROUP BY T2.POSTID, T4.ID HAVING COUNT(T4.ID) > 4",
2,635,ERROR,KeyError: 'codebase_community',,SELECT COUNT(POSTS.ID) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID INNER JOIN VOTES ON POSTS.ID = VOTES.POSTID WHERE USERS.DISPLAYNAME = 'MATT PARKER' GROUP BY POSTS.ID HAVING COUNT(VOTES.ID) > 4,"SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN POSTS AS T3 ON T2.POSTID = T3.ID INNER JOIN VOTES AS T4 ON T4.POSTID = T3.ID WHERE T1.DISPLAYNAME = 'MATT PARKER' GROUP BY T2.POSTID, T4.ID HAVING COUNT(T4.ID) > 4",
3,635,ERROR,KeyError: 'codebase_community',,SELECT COUNT(POSTS.ID) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID INNER JOIN VOTES ON POSTS.ID = VOTES.POSTID WHERE USERS.DISPLAYNAME = 'MATT PARKER' GROUP BY POSTS.ID HAVING COUNT(VOTES.ID) > 4,"SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN POSTS AS T3 ON T2.POSTID = T3.ID INNER JOIN VOTES AS T4 ON T4.POSTID = T3.ID WHERE T1.DISPLAYNAME = 'MATT PARKER' GROUP BY T2.POSTID, T4.ID HAVING COUNT(T4.ID) > 4",
1,636,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'NEIL MCGUIGAN' AND COMMENTS.SCORE < 60,SELECT COUNT(T3.ID) FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID INNER JOIN COMMENTS AS T3 ON T2.ID = T3.POSTID WHERE T1.DISPLAYNAME = 'NEIL MCGUIGAN' AND T3.SCORE < 60,
2,636,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'NEIL MCGUIGAN' AND COMMENTS.SCORE < 60,SELECT COUNT(T3.ID) FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID INNER JOIN COMMENTS AS T3 ON T2.ID = T3.POSTID WHERE T1.DISPLAYNAME = 'NEIL MCGUIGAN' AND T3.SCORE < 60,
3,636,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'NEIL MCGUIGAN' AND COMMENTS.SCORE < 60,SELECT COUNT(T3.ID) FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID INNER JOIN COMMENTS AS T3 ON T2.ID = T3.POSTID WHERE T1.DISPLAYNAME = 'NEIL MCGUIGAN' AND T3.SCORE < 60,
1,637,ERROR,KeyError: 'codebase_community',,SELECT TAGS.TAGNAME FROM USERS INNER JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID INNER JOIN TAGS ON POSTS.ID = TAGS.ID WHERE USERS.DISPLAYNAME = 'MARK MECKES' AND POSTS.COMMENTCOUNT = 0,SELECT T3.TAGS FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN POSTS AS T3 ON T3.ID = T2.POSTID WHERE T1.DISPLAYNAME = 'MARK MECKES' AND T3.COMMENTCOUNT = 0,
2,637,ERROR,KeyError: 'codebase_community',,SELECT TAGS.TAGNAME FROM USERS INNER JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID INNER JOIN TAGS ON POSTS.ID = TAGS.ID WHERE USERS.DISPLAYNAME = 'MARK MECKES' AND POSTS.COMMENTCOUNT = 0,SELECT T3.TAGS FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN POSTS AS T3 ON T3.ID = T2.POSTID WHERE T1.DISPLAYNAME = 'MARK MECKES' AND T3.COMMENTCOUNT = 0,
3,637,ERROR,KeyError: 'codebase_community',,SELECT TAGS.TAGNAME FROM USERS INNER JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID INNER JOIN TAGS ON POSTS.ID = TAGS.ID WHERE USERS.DISPLAYNAME = 'MARK MECKES' AND POSTS.COMMENTCOUNT = 0,SELECT T3.TAGS FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN POSTS AS T3 ON T3.ID = T2.POSTID WHERE T1.DISPLAYNAME = 'MARK MECKES' AND T3.COMMENTCOUNT = 0,
1,638,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS INNER JOIN BADGES ON USERS.ID = BADGES.USERID WHERE BADGES.NAME = 'ORGANIZER',SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.`NAME` = 'ORGANIZER',
2,638,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS INNER JOIN BADGES ON USERS.ID = BADGES.USERID WHERE BADGES.NAME = 'ORGANIZER',SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.`NAME` = 'ORGANIZER',
3,638,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS INNER JOIN BADGES ON USERS.ID = BADGES.USERID WHERE BADGES.NAME = 'ORGANIZER',SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.`NAME` = 'ORGANIZER',
1,639,ERROR,KeyError: 'codebase_community',,SELECT CAST(COUNT(POSTS.ID) FILTER (WHERE TAGS.TAGNAME = 'R') AS REAL) * 100 / COUNT(POSTS.ID) FILTER (WHERE POSTS.OWNERDISPLAYNAME = 'COMMUNITY') AS PERCENTAGE FROM POSTS LEFT JOIN TAGS ON POSTS.ID = TAGS.EXCERPTPOSTID WHERE POSTS.OWNERDISPLAYNAME = 'COMMUNITY';,"SELECT CAST(SUM(IIF(T3.TAGNAME = 'R', 1, 0)) AS REAL) * 100 / COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN TAGS AS T3 ON T3.EXCERPTPOSTID = T2.POSTID WHERE T1.DISPLAYNAME = 'COMMUNITY'",
2,639,ERROR,KeyError: 'codebase_community',,SELECT CAST(COUNT(POSTS.ID) FILTER (WHERE TAGS.TAGNAME = 'R') AS REAL) * 100 / COUNT(POSTS.ID) FILTER (WHERE POSTS.OWNERDISPLAYNAME = 'COMMUNITY') AS PERCENTAGE FROM POSTS LEFT JOIN TAGS ON POSTS.ID = TAGS.EXCERPTPOSTID WHERE POSTS.OWNERDISPLAYNAME = 'COMMUNITY';,"SELECT CAST(SUM(IIF(T3.TAGNAME = 'R', 1, 0)) AS REAL) * 100 / COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN TAGS AS T3 ON T3.EXCERPTPOSTID = T2.POSTID WHERE T1.DISPLAYNAME = 'COMMUNITY'",
3,639,ERROR,KeyError: 'codebase_community',,SELECT CAST(COUNT(POSTS.ID) FILTER (WHERE TAGS.TAGNAME = 'R') AS REAL) * 100 / COUNT(POSTS.ID) FILTER (WHERE POSTS.OWNERDISPLAYNAME = 'COMMUNITY') AS PERCENTAGE FROM POSTS LEFT JOIN TAGS ON POSTS.ID = TAGS.EXCERPTPOSTID WHERE POSTS.OWNERDISPLAYNAME = 'COMMUNITY';,"SELECT CAST(SUM(IIF(T3.TAGNAME = 'R', 1, 0)) AS REAL) * 100 / COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN TAGS AS T3 ON T3.EXCERPTPOSTID = T2.POSTID WHERE T1.DISPLAYNAME = 'COMMUNITY'",
1,640,ERROR,KeyError: 'codebase_community',,SELECT (SELECT SUM(POSTS.VIEWCOUNT) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'MORNINGTON') - (SELECT SUM(POSTS.VIEWCOUNT) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'AMOS'),"SELECT SUM(IIF(T1.DISPLAYNAME = 'MORNINGTON', T3.VIEWCOUNT, 0)) - SUM(IIF(T1.DISPLAYNAME = 'AMOS', T3.VIEWCOUNT, 0)) AS DIFF FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN POSTS AS T3 ON T3.ID = T2.POSTID",
2,640,ERROR,KeyError: 'codebase_community',,SELECT (SELECT SUM(POSTS.VIEWCOUNT) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'MORNINGTON') - (SELECT SUM(POSTS.VIEWCOUNT) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'AMOS'),"SELECT SUM(IIF(T1.DISPLAYNAME = 'MORNINGTON', T3.VIEWCOUNT, 0)) - SUM(IIF(T1.DISPLAYNAME = 'AMOS', T3.VIEWCOUNT, 0)) AS DIFF FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN POSTS AS T3 ON T3.ID = T2.POSTID",
3,640,ERROR,KeyError: 'codebase_community',,SELECT (SELECT SUM(POSTS.VIEWCOUNT) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'MORNINGTON') - (SELECT SUM(POSTS.VIEWCOUNT) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'AMOS'),"SELECT SUM(IIF(T1.DISPLAYNAME = 'MORNINGTON', T3.VIEWCOUNT, 0)) - SUM(IIF(T1.DISPLAYNAME = 'AMOS', T3.VIEWCOUNT, 0)) AS DIFF FROM USERS AS T1 INNER JOIN POSTHISTORY AS T2 ON T1.ID = T2.USERID INNER JOIN POSTS AS T3 ON T3.ID = T2.POSTID",
1,641,ERROR,KeyError: 'codebase_community',,SELECT COUNT(DISTINCT BADGES.USERID) FROM BADGES WHERE BADGES.NAME = 'COMMENTATOR' AND YEAR(BADGES.DATE) = 2014,"SELECT COUNT(ID) FROM BADGES WHERE NAME = 'COMMENTATOR' AND STRFTIME('%Y', DATE) = '2014'",
2,641,ERROR,KeyError: 'codebase_community',,SELECT COUNT(DISTINCT BADGES.USERID) FROM BADGES WHERE BADGES.NAME = 'COMMENTATOR' AND YEAR(BADGES.DATE) = 2014,"SELECT COUNT(ID) FROM BADGES WHERE NAME = 'COMMENTATOR' AND STRFTIME('%Y', DATE) = '2014'",
3,641,ERROR,KeyError: 'codebase_community',,SELECT COUNT(DISTINCT BADGES.USERID) FROM BADGES WHERE BADGES.NAME = 'COMMENTATOR' AND YEAR(BADGES.DATE) = 2014,"SELECT COUNT(ID) FROM BADGES WHERE NAME = 'COMMENTATOR' AND STRFTIME('%Y', DATE) = '2014'",
1,642,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS WHERE CREATIONDATE BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59';,SELECT COUNT(ID) FROM POSTHISTORY WHERE DATE(CREATIONDATE) = '2010-07-21',
2,642,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS WHERE CREATIONDATE BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59';,SELECT COUNT(ID) FROM POSTHISTORY WHERE DATE(CREATIONDATE) = '2010-07-21',
3,642,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS WHERE CREATIONDATE BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59';,SELECT COUNT(ID) FROM POSTHISTORY WHERE DATE(CREATIONDATE) = '2010-07-21',
1,643,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, USERS.AGE FROM USERS WHERE USERS.VIEWS = (SELECT MAX(USERS.VIEWS) FROM USERS);","SELECT DISPLAYNAME, AGE FROM USERS WHERE VIEWS = ( SELECT MAX(VIEWS) FROM USERS )",
2,643,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, USERS.AGE FROM USERS WHERE USERS.VIEWS = (SELECT MAX(USERS.VIEWS) FROM USERS);","SELECT DISPLAYNAME, AGE FROM USERS WHERE VIEWS = ( SELECT MAX(VIEWS) FROM USERS )",
3,643,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, USERS.AGE FROM USERS WHERE USERS.VIEWS = (SELECT MAX(USERS.VIEWS) FROM USERS);","SELECT DISPLAYNAME, AGE FROM USERS WHERE VIEWS = ( SELECT MAX(VIEWS) FROM USERS )",
1,644,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.LASTEDITDATE, POSTS.LASTEDITORUSERID FROM POSTS WHERE POSTS.TITLE = 'DETECTING A GIVEN FACE IN A DATABASE OF FACIAL IMAGES';","SELECT LASTEDITDATE, LASTEDITORUSERID FROM POSTS WHERE TITLE = 'DETECTING A GIVEN FACE IN A DATABASE OF FACIAL IMAGES'",
2,644,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.LASTEDITDATE, POSTS.LASTEDITORUSERID FROM POSTS WHERE POSTS.TITLE = 'DETECTING A GIVEN FACE IN A DATABASE OF FACIAL IMAGES';","SELECT LASTEDITDATE, LASTEDITORUSERID FROM POSTS WHERE TITLE = 'DETECTING A GIVEN FACE IN A DATABASE OF FACIAL IMAGES'",
3,644,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.LASTEDITDATE, POSTS.LASTEDITORUSERID FROM POSTS WHERE POSTS.TITLE = 'DETECTING A GIVEN FACE IN A DATABASE OF FACIAL IMAGES';","SELECT LASTEDITDATE, LASTEDITORUSERID FROM POSTS WHERE TITLE = 'DETECTING A GIVEN FACE IN A DATABASE OF FACIAL IMAGES'",
1,645,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM COMMENTS WHERE USERID = 13 AND SCORE < 60,SELECT COUNT(ID) FROM COMMENTS WHERE USERID = 13 AND SCORE < 60,
2,645,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM COMMENTS WHERE USERID = 13 AND SCORE < 60,SELECT COUNT(ID) FROM COMMENTS WHERE USERID = 13 AND SCORE < 60,
3,645,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM COMMENTS WHERE USERID = 13 AND SCORE < 60,SELECT COUNT(ID) FROM COMMENTS WHERE USERID = 13 AND SCORE < 60,
1,646,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.TITLE, COMMENTS.USERDISPLAYNAME FROM COMMENTS INNER JOIN POSTS ON COMMENTS.POSTID = POSTS.ID WHERE COMMENTS.SCORE > 60","SELECT T1.TITLE, T2.USERDISPLAYNAME FROM POSTS AS T1 INNER JOIN COMMENTS AS T2 ON T2.POSTID = T2.ID WHERE T1.SCORE > 60",
2,646,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.TITLE, COMMENTS.USERDISPLAYNAME FROM COMMENTS INNER JOIN POSTS ON COMMENTS.POSTID = POSTS.ID WHERE COMMENTS.SCORE > 60","SELECT T1.TITLE, T2.USERDISPLAYNAME FROM POSTS AS T1 INNER JOIN COMMENTS AS T2 ON T2.POSTID = T2.ID WHERE T1.SCORE > 60",
3,646,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.TITLE, COMMENTS.USERDISPLAYNAME FROM COMMENTS INNER JOIN POSTS ON COMMENTS.POSTID = POSTS.ID WHERE COMMENTS.SCORE > 60","SELECT T1.TITLE, T2.USERDISPLAYNAME FROM POSTS AS T1 INNER JOIN COMMENTS AS T2 ON T2.POSTID = T2.ID WHERE T1.SCORE > 60",
1,647,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.LOCATION = 'NORTH POLE' AND YEAR(BADGES.DATE) = 2011,"SELECT T2.NAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE STRFTIME('%Y', T2.DATE) = '2011' AND T1.LOCATION = 'NORTH POLE'",
2,647,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.LOCATION = 'NORTH POLE' AND YEAR(BADGES.DATE) = 2011,"SELECT T2.NAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE STRFTIME('%Y', T2.DATE) = '2011' AND T1.LOCATION = 'NORTH POLE'",
3,647,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.LOCATION = 'NORTH POLE' AND YEAR(BADGES.DATE) = 2011,"SELECT T2.NAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE STRFTIME('%Y', T2.DATE) = '2011' AND T1.LOCATION = 'NORTH POLE'",
1,648,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, USERS.WEBSITEURL FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.FAVORITECOUNT > 150","SELECT T1.DISPLAYNAME, T1.WEBSITEURL FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T2.FAVORITECOUNT > 150",
2,648,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, USERS.WEBSITEURL FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.FAVORITECOUNT > 150","SELECT T1.DISPLAYNAME, T1.WEBSITEURL FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T2.FAVORITECOUNT > 150",
3,648,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, USERS.WEBSITEURL FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.FAVORITECOUNT > 150","SELECT T1.DISPLAYNAME, T1.WEBSITEURL FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T2.FAVORITECOUNT > 150",
1,649,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID, COUNT(POSTHISTORY.ID), POSTS.LASTEDITDATE FROM POSTS INNER JOIN POSTHISTORY ON POSTS.ID = POSTHISTORY.POSTID WHERE POSTS.TITLE = 'WHAT IS THE BEST INTRODUCTORY BAYESIAN STATISTICS TEXTBOOK?' GROUP BY POSTS.ID","SELECT T1.ID, T2.LASTEDITDATE FROM POSTHISTORY AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T2.TITLE = 'WHAT IS THE BEST INTRODUCTORY BAYESIAN STATISTICS TEXTBOOK?'",
2,649,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID, COUNT(POSTHISTORY.ID), POSTS.LASTEDITDATE FROM POSTS INNER JOIN POSTHISTORY ON POSTS.ID = POSTHISTORY.POSTID WHERE POSTS.TITLE = 'WHAT IS THE BEST INTRODUCTORY BAYESIAN STATISTICS TEXTBOOK?' GROUP BY POSTS.ID","SELECT T1.ID, T2.LASTEDITDATE FROM POSTHISTORY AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T2.TITLE = 'WHAT IS THE BEST INTRODUCTORY BAYESIAN STATISTICS TEXTBOOK?'",
3,649,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID, COUNT(POSTHISTORY.ID), POSTS.LASTEDITDATE FROM POSTS INNER JOIN POSTHISTORY ON POSTS.ID = POSTHISTORY.POSTID WHERE POSTS.TITLE = 'WHAT IS THE BEST INTRODUCTORY BAYESIAN STATISTICS TEXTBOOK?' GROUP BY POSTS.ID","SELECT T1.ID, T2.LASTEDITDATE FROM POSTHISTORY AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T2.TITLE = 'WHAT IS THE BEST INTRODUCTORY BAYESIAN STATISTICS TEXTBOOK?'",
1,650,ERROR,KeyError: 'codebase_community',,"SELECT USERS.LASTACCESSDATE, USERS.LOCATION FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE BADGES.NAME = 'OUTLIERS';","SELECT T1.LASTACCESSDATE, T1.LOCATION FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.NAME = 'OUTLIERS'",
2,650,ERROR,KeyError: 'codebase_community',,"SELECT USERS.LASTACCESSDATE, USERS.LOCATION FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE BADGES.NAME = 'OUTLIERS';","SELECT T1.LASTACCESSDATE, T1.LOCATION FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.NAME = 'OUTLIERS'",
3,650,ERROR,KeyError: 'codebase_community',,"SELECT USERS.LASTACCESSDATE, USERS.LOCATION FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE BADGES.NAME = 'OUTLIERS';","SELECT T1.LASTACCESSDATE, T1.LOCATION FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.NAME = 'OUTLIERS'",
1,651,ERROR,KeyError: 'codebase_community',,SELECT POSTS.TITLE FROM POSTS INNER JOIN POSTLINKS ON POSTS.ID = POSTLINKS.RELATEDPOSTID WHERE POSTLINKS.POSTID IN ( SELECT POSTLINKS.POSTID FROM POSTS INNER JOIN POSTLINKS ON POSTS.ID = POSTLINKS.POSTID WHERE POSTS.TITLE = 'HOW TO TELL IF SOMETHING HAPPENED IN A DATA SET WHICH MONITORS A VALUE OVER TIME' ),SELECT T3.TITLE FROM POSTLINKS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID INNER JOIN POSTS AS T3 ON T1.RELATEDPOSTID = T3.ID WHERE T2.TITLE = 'HOW TO TELL IF SOMETHING HAPPENED IN A DATA SET WHICH MONITORS A VALUE OVER TIME',
2,651,ERROR,KeyError: 'codebase_community',,SELECT POSTS.TITLE FROM POSTS INNER JOIN POSTLINKS ON POSTS.ID = POSTLINKS.RELATEDPOSTID WHERE POSTLINKS.POSTID IN ( SELECT POSTLINKS.POSTID FROM POSTS INNER JOIN POSTLINKS ON POSTS.ID = POSTLINKS.POSTID WHERE POSTS.TITLE = 'HOW TO TELL IF SOMETHING HAPPENED IN A DATA SET WHICH MONITORS A VALUE OVER TIME' ),SELECT T3.TITLE FROM POSTLINKS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID INNER JOIN POSTS AS T3 ON T1.RELATEDPOSTID = T3.ID WHERE T2.TITLE = 'HOW TO TELL IF SOMETHING HAPPENED IN A DATA SET WHICH MONITORS A VALUE OVER TIME',
3,651,ERROR,KeyError: 'codebase_community',,SELECT POSTS.TITLE FROM POSTS INNER JOIN POSTLINKS ON POSTS.ID = POSTLINKS.RELATEDPOSTID WHERE POSTLINKS.POSTID IN ( SELECT POSTLINKS.POSTID FROM POSTS INNER JOIN POSTLINKS ON POSTS.ID = POSTLINKS.POSTID WHERE POSTS.TITLE = 'HOW TO TELL IF SOMETHING HAPPENED IN A DATA SET WHICH MONITORS A VALUE OVER TIME' ),SELECT T3.TITLE FROM POSTLINKS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID INNER JOIN POSTS AS T3 ON T1.RELATEDPOSTID = T3.ID WHERE T2.TITLE = 'HOW TO TELL IF SOMETHING HAPPENED IN A DATA SET WHICH MONITORS A VALUE OVER TIME',
1,652,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID, BADGES.NAME FROM USERS INNER JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID INNER JOIN BADGES ON USERS.ID = BADGES.USERID WHERE USERS.DISPLAYNAME = 'SAMUEL' AND YEAR(USERS.CREATIONDATE) = 2013 AND YEAR(BADGES.DATE) = 2013","SELECT T1.POSTID, T2.NAME FROM POSTHISTORY AS T1 INNER JOIN BADGES AS T2 ON T1.USERID = T2.USERID WHERE T1.USERDISPLAYNAME = 'SAMUEL' AND STRFTIME('%Y', T1.CREATIONDATE) = '2013' AND STRFTIME('%Y', T2.DATE) = '2013'",
2,652,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID, BADGES.NAME FROM USERS INNER JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID INNER JOIN BADGES ON USERS.ID = BADGES.USERID WHERE USERS.DISPLAYNAME = 'SAMUEL' AND YEAR(USERS.CREATIONDATE) = 2013 AND YEAR(BADGES.DATE) = 2013","SELECT T1.POSTID, T2.NAME FROM POSTHISTORY AS T1 INNER JOIN BADGES AS T2 ON T1.USERID = T2.USERID WHERE T1.USERDISPLAYNAME = 'SAMUEL' AND STRFTIME('%Y', T1.CREATIONDATE) = '2013' AND STRFTIME('%Y', T2.DATE) = '2013'",
3,652,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID, BADGES.NAME FROM USERS INNER JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID INNER JOIN BADGES ON USERS.ID = BADGES.USERID WHERE USERS.DISPLAYNAME = 'SAMUEL' AND YEAR(USERS.CREATIONDATE) = 2013 AND YEAR(BADGES.DATE) = 2013","SELECT T1.POSTID, T2.NAME FROM POSTHISTORY AS T1 INNER JOIN BADGES AS T2 ON T1.USERID = T2.USERID WHERE T1.USERDISPLAYNAME = 'SAMUEL' AND STRFTIME('%Y', T1.CREATIONDATE) = '2013' AND STRFTIME('%Y', T2.DATE) = '2013'",
1,653,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID ORDER BY POSTS.VIEWCOUNT DESC LIMIT 1,SELECT DISPLAYNAME FROM USERS WHERE ID = ( SELECT OWNERUSERID FROM POSTS ORDER BY VIEWCOUNT DESC LIMIT 1 ),
2,653,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID ORDER BY POSTS.VIEWCOUNT DESC LIMIT 1,SELECT DISPLAYNAME FROM USERS WHERE ID = ( SELECT OWNERUSERID FROM POSTS ORDER BY VIEWCOUNT DESC LIMIT 1 ),
3,653,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID ORDER BY POSTS.VIEWCOUNT DESC LIMIT 1,SELECT DISPLAYNAME FROM USERS WHERE ID = ( SELECT OWNERUSERID FROM POSTS ORDER BY VIEWCOUNT DESC LIMIT 1 ),
1,654,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, USERS.LOCATION FROM USERS INNER JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID INNER JOIN TAGS ON POSTS.ID = TAGS.EXCERPTPOSTID WHERE TAGS.TAGNAME = 'HYPOTHESIS-TESTING';","SELECT T3.DISPLAYNAME, T3.LOCATION FROM TAGS AS T1 INNER JOIN POSTS AS T2 ON T1.EXCERPTPOSTID = T2.ID INNER JOIN USERS AS T3 ON T3.ID = T2.OWNERUSERID WHERE T1.TAGNAME = 'HYPOTHESIS-TESTING'",
2,654,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, USERS.LOCATION FROM USERS INNER JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID INNER JOIN TAGS ON POSTS.ID = TAGS.EXCERPTPOSTID WHERE TAGS.TAGNAME = 'HYPOTHESIS-TESTING';","SELECT T3.DISPLAYNAME, T3.LOCATION FROM TAGS AS T1 INNER JOIN POSTS AS T2 ON T1.EXCERPTPOSTID = T2.ID INNER JOIN USERS AS T3 ON T3.ID = T2.OWNERUSERID WHERE T1.TAGNAME = 'HYPOTHESIS-TESTING'",
3,654,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, USERS.LOCATION FROM USERS INNER JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID INNER JOIN TAGS ON POSTS.ID = TAGS.EXCERPTPOSTID WHERE TAGS.TAGNAME = 'HYPOTHESIS-TESTING';","SELECT T3.DISPLAYNAME, T3.LOCATION FROM TAGS AS T1 INNER JOIN POSTS AS T2 ON T1.EXCERPTPOSTID = T2.ID INNER JOIN USERS AS T3 ON T3.ID = T2.OWNERUSERID WHERE T1.TAGNAME = 'HYPOTHESIS-TESTING'",
1,655,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.TITLE, POSTLINKS.LINKTYPEID FROM POSTS INNER JOIN POSTLINKS ON POSTS.ID = POSTLINKS.RELATEDPOSTID WHERE POSTLINKS.POSTID = (SELECT ID FROM POSTS WHERE TITLE = 'WHAT ARE PRINCIPAL COMPONENT SCORES?')","SELECT T3.TITLE, T2.LINKTYPEID FROM POSTS AS T1 INNER JOIN POSTLINKS AS T2 ON T1.ID = T2.POSTID INNER JOIN POSTS AS T3 ON T2.RELATEDPOSTID = T3.ID WHERE T1.TITLE = 'WHAT ARE PRINCIPAL COMPONENT SCORES?'",
2,655,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.TITLE, POSTLINKS.LINKTYPEID FROM POSTS INNER JOIN POSTLINKS ON POSTS.ID = POSTLINKS.RELATEDPOSTID WHERE POSTLINKS.POSTID = (SELECT ID FROM POSTS WHERE TITLE = 'WHAT ARE PRINCIPAL COMPONENT SCORES?')","SELECT T3.TITLE, T2.LINKTYPEID FROM POSTS AS T1 INNER JOIN POSTLINKS AS T2 ON T1.ID = T2.POSTID INNER JOIN POSTS AS T3 ON T2.RELATEDPOSTID = T3.ID WHERE T1.TITLE = 'WHAT ARE PRINCIPAL COMPONENT SCORES?'",
3,655,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.TITLE, POSTLINKS.LINKTYPEID FROM POSTS INNER JOIN POSTLINKS ON POSTS.ID = POSTLINKS.RELATEDPOSTID WHERE POSTLINKS.POSTID = (SELECT ID FROM POSTS WHERE TITLE = 'WHAT ARE PRINCIPAL COMPONENT SCORES?')","SELECT T3.TITLE, T2.LINKTYPEID FROM POSTS AS T1 INNER JOIN POSTLINKS AS T2 ON T1.ID = T2.POSTID INNER JOIN POSTS AS T3 ON T2.RELATEDPOSTID = T3.ID WHERE T1.TITLE = 'WHAT ARE PRINCIPAL COMPONENT SCORES?'",
1,656,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.PARENTID IS NOT NULL ORDER BY POSTS.SCORE DESC LIMIT 1,SELECT DISPLAYNAME FROM USERS WHERE ID = ( SELECT OWNERUSERID FROM POSTS WHERE PARENTID IS NOT NULL ORDER BY SCORE DESC LIMIT 1 ),
2,656,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.PARENTID IS NOT NULL ORDER BY POSTS.SCORE DESC LIMIT 1,SELECT DISPLAYNAME FROM USERS WHERE ID = ( SELECT OWNERUSERID FROM POSTS WHERE PARENTID IS NOT NULL ORDER BY SCORE DESC LIMIT 1 ),
3,656,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.PARENTID IS NOT NULL ORDER BY POSTS.SCORE DESC LIMIT 1,SELECT DISPLAYNAME FROM USERS WHERE ID = ( SELECT OWNERUSERID FROM POSTS WHERE PARENTID IS NOT NULL ORDER BY SCORE DESC LIMIT 1 ),
1,657,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, USERS.WEBSITEURL FROM VOTES INNER JOIN USERS ON VOTES.USERID = USERS.ID WHERE VOTES.VOTETYPEID = 8 ORDER BY VOTES.BOUNTYAMOUNT DESC LIMIT 1","SELECT DISPLAYNAME, WEBSITEURL FROM USERS WHERE ID = ( SELECT USERID FROM VOTES WHERE VOTETYPEID = 8 ORDER BY BOUNTYAMOUNT DESC LIMIT 1 )",
2,657,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, USERS.WEBSITEURL FROM VOTES INNER JOIN USERS ON VOTES.USERID = USERS.ID WHERE VOTES.VOTETYPEID = 8 ORDER BY VOTES.BOUNTYAMOUNT DESC LIMIT 1","SELECT DISPLAYNAME, WEBSITEURL FROM USERS WHERE ID = ( SELECT USERID FROM VOTES WHERE VOTETYPEID = 8 ORDER BY BOUNTYAMOUNT DESC LIMIT 1 )",
3,657,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, USERS.WEBSITEURL FROM VOTES INNER JOIN USERS ON VOTES.USERID = USERS.ID WHERE VOTES.VOTETYPEID = 8 ORDER BY VOTES.BOUNTYAMOUNT DESC LIMIT 1","SELECT DISPLAYNAME, WEBSITEURL FROM USERS WHERE ID = ( SELECT USERID FROM VOTES WHERE VOTETYPEID = 8 ORDER BY BOUNTYAMOUNT DESC LIMIT 1 )",
1,658,ERROR,KeyError: 'codebase_community',,SELECT POSTS.TITLE FROM POSTS ORDER BY POSTS.VIEWCOUNT DESC LIMIT 5,SELECT TITLE FROM POSTS ORDER BY VIEWCOUNT DESC LIMIT 5,
2,658,ERROR,KeyError: 'codebase_community',,SELECT POSTS.TITLE FROM POSTS ORDER BY POSTS.VIEWCOUNT DESC LIMIT 5,SELECT TITLE FROM POSTS ORDER BY VIEWCOUNT DESC LIMIT 5,
3,658,ERROR,KeyError: 'codebase_community',,SELECT POSTS.TITLE FROM POSTS ORDER BY POSTS.VIEWCOUNT DESC LIMIT 5,SELECT TITLE FROM POSTS ORDER BY VIEWCOUNT DESC LIMIT 5,
1,659,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM TAGS WHERE COUNT BETWEEN 5000 AND 7000;,SELECT COUNT(ID) FROM TAGS WHERE COUNT BETWEEN 5000 AND 7000,
2,659,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM TAGS WHERE COUNT BETWEEN 5000 AND 7000;,SELECT COUNT(ID) FROM TAGS WHERE COUNT BETWEEN 5000 AND 7000,
3,659,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM TAGS WHERE COUNT BETWEEN 5000 AND 7000;,SELECT COUNT(ID) FROM TAGS WHERE COUNT BETWEEN 5000 AND 7000,
1,660,ERROR,KeyError: 'codebase_community',,SELECT POSTS.OWNERUSERID FROM POSTS ORDER BY POSTS.FAVORITECOUNT DESC LIMIT 1,SELECT OWNERUSERID FROM POSTS WHERE FAVORITECOUNT = ( SELECT MAX(FAVORITECOUNT) FROM POSTS ),
2,660,ERROR,KeyError: 'codebase_community',,SELECT POSTS.OWNERUSERID FROM POSTS ORDER BY POSTS.FAVORITECOUNT DESC LIMIT 1,SELECT OWNERUSERID FROM POSTS WHERE FAVORITECOUNT = ( SELECT MAX(FAVORITECOUNT) FROM POSTS ),
3,660,ERROR,KeyError: 'codebase_community',,SELECT POSTS.OWNERUSERID FROM POSTS ORDER BY POSTS.FAVORITECOUNT DESC LIMIT 1,SELECT OWNERUSERID FROM POSTS WHERE FAVORITECOUNT = ( SELECT MAX(FAVORITECOUNT) FROM POSTS ),
1,661,ERROR,KeyError: 'codebase_community',,SELECT USERS.AGE FROM USERS ORDER BY USERS.REPUTATION DESC LIMIT 1,SELECT AGE FROM USERS WHERE REPUTATION = ( SELECT MAX(REPUTATION) FROM USERS ),
2,661,ERROR,KeyError: 'codebase_community',,SELECT USERS.AGE FROM USERS ORDER BY USERS.REPUTATION DESC LIMIT 1,SELECT AGE FROM USERS WHERE REPUTATION = ( SELECT MAX(REPUTATION) FROM USERS ),
3,661,ERROR,KeyError: 'codebase_community',,SELECT USERS.AGE FROM USERS ORDER BY USERS.REPUTATION DESC LIMIT 1,SELECT AGE FROM USERS WHERE REPUTATION = ( SELECT MAX(REPUTATION) FROM USERS ),
1,662,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM VOTES INNER JOIN POSTS ON VOTES.POSTID = POSTS.ID WHERE YEAR(VOTES.CREATIONDATE) = 2011 AND VOTES.BOUNTYAMOUNT = 50,"SELECT COUNT(T1.ID) FROM POSTS AS T1 INNER JOIN VOTES AS T2 ON T1.ID = T2.POSTID WHERE T2.BOUNTYAMOUNT = 50 AND STRFTIME('%Y', T2.CREATIONDATE) = '2011'",
2,662,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM VOTES INNER JOIN POSTS ON VOTES.POSTID = POSTS.ID WHERE YEAR(VOTES.CREATIONDATE) = 2011 AND VOTES.BOUNTYAMOUNT = 50,"SELECT COUNT(T1.ID) FROM POSTS AS T1 INNER JOIN VOTES AS T2 ON T1.ID = T2.POSTID WHERE T2.BOUNTYAMOUNT = 50 AND STRFTIME('%Y', T2.CREATIONDATE) = '2011'",
3,662,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM VOTES INNER JOIN POSTS ON VOTES.POSTID = POSTS.ID WHERE YEAR(VOTES.CREATIONDATE) = 2011 AND VOTES.BOUNTYAMOUNT = 50,"SELECT COUNT(T1.ID) FROM POSTS AS T1 INNER JOIN VOTES AS T2 ON T1.ID = T2.POSTID WHERE T2.BOUNTYAMOUNT = 50 AND STRFTIME('%Y', T2.CREATIONDATE) = '2011'",
1,663,ERROR,KeyError: 'codebase_community',,SELECT USERS.ID FROM USERS ORDER BY USERS.AGE LIMIT 1;,SELECT ID FROM USERS WHERE AGE = ( SELECT MIN(AGE) FROM USERS ),
2,663,ERROR,KeyError: 'codebase_community',,SELECT USERS.ID FROM USERS ORDER BY USERS.AGE LIMIT 1;,SELECT ID FROM USERS WHERE AGE = ( SELECT MIN(AGE) FROM USERS ),
3,663,ERROR,KeyError: 'codebase_community',,SELECT USERS.ID FROM USERS ORDER BY USERS.AGE LIMIT 1;,SELECT ID FROM USERS WHERE AGE = ( SELECT MIN(AGE) FROM USERS ),
1,664,ERROR,KeyError: 'codebase_community',,SELECT SUM(POSTS.SCORE) FROM POSTS WHERE POSTS.LASACTIVITYDATE LIKE '2010-07-19%';,SELECT SUM(SCORE) FROM POSTS WHERE LASACTIVITYDATE LIKE '2010-07-19%',
2,664,ERROR,KeyError: 'codebase_community',,SELECT SUM(POSTS.SCORE) FROM POSTS WHERE POSTS.LASACTIVITYDATE LIKE '2010-07-19%';,SELECT SUM(SCORE) FROM POSTS WHERE LASACTIVITYDATE LIKE '2010-07-19%',
3,664,ERROR,KeyError: 'codebase_community',,SELECT SUM(POSTS.SCORE) FROM POSTS WHERE POSTS.LASACTIVITYDATE LIKE '2010-07-19%';,SELECT SUM(SCORE) FROM POSTS WHERE LASACTIVITYDATE LIKE '2010-07-19%',
1,665,ERROR,KeyError: 'codebase_community',,SELECT COUNT(POSTLINKS.ID) / 12 FROM POSTLINKS INNER JOIN POSTS ON POSTLINKS.POSTID = POSTS.ID WHERE YEAR(POSTLINKS.CREATIONDATE) = 2010 AND POSTS.ANSWERCOUNT <= 2,"SELECT CAST(COUNT(T1.ID) AS REAL) / 12 FROM POSTLINKS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T2.ANSWERCOUNT <= 2 AND STRFTIME('%Y', T1.CREATIONDATE) = '2010'",
2,665,ERROR,KeyError: 'codebase_community',,SELECT COUNT(POSTLINKS.ID) / 12 FROM POSTLINKS INNER JOIN POSTS ON POSTLINKS.POSTID = POSTS.ID WHERE YEAR(POSTLINKS.CREATIONDATE) = 2010 AND POSTS.ANSWERCOUNT <= 2,"SELECT CAST(COUNT(T1.ID) AS REAL) / 12 FROM POSTLINKS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T2.ANSWERCOUNT <= 2 AND STRFTIME('%Y', T1.CREATIONDATE) = '2010'",
3,665,ERROR,KeyError: 'codebase_community',,SELECT COUNT(POSTLINKS.ID) / 12 FROM POSTLINKS INNER JOIN POSTS ON POSTLINKS.POSTID = POSTS.ID WHERE YEAR(POSTLINKS.CREATIONDATE) = 2010 AND POSTS.ANSWERCOUNT <= 2,"SELECT CAST(COUNT(T1.ID) AS REAL) / 12 FROM POSTLINKS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T2.ANSWERCOUNT <= 2 AND STRFTIME('%Y', T1.CREATIONDATE) = '2010'",
1,666,ERROR,KeyError: 'codebase_community',,SELECT POSTS.ID FROM VOTES INNER JOIN POSTS ON VOTES.POSTID = POSTS.ID WHERE VOTES.USERID = 1465 ORDER BY POSTS.FAVORITECOUNT DESC LIMIT 1,SELECT T2.ID FROM VOTES AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T1.USERID = 1465 ORDER BY T2.FAVORITECOUNT DESC LIMIT 1,
2,666,ERROR,KeyError: 'codebase_community',,SELECT POSTS.ID FROM VOTES INNER JOIN POSTS ON VOTES.POSTID = POSTS.ID WHERE VOTES.USERID = 1465 ORDER BY POSTS.FAVORITECOUNT DESC LIMIT 1,SELECT T2.ID FROM VOTES AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T1.USERID = 1465 ORDER BY T2.FAVORITECOUNT DESC LIMIT 1,
3,666,ERROR,KeyError: 'codebase_community',,SELECT POSTS.ID FROM VOTES INNER JOIN POSTS ON VOTES.POSTID = POSTS.ID WHERE VOTES.USERID = 1465 ORDER BY POSTS.FAVORITECOUNT DESC LIMIT 1,SELECT T2.ID FROM VOTES AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T1.USERID = 1465 ORDER BY T2.FAVORITECOUNT DESC LIMIT 1,
1,667,ERROR,KeyError: 'codebase_community',,SELECT POSTS.TITLE FROM POSTLINKS INNER JOIN POSTS ON POSTLINKS.POSTID = POSTS.ID ORDER BY POSTLINKS.CREATIONDATE ASC LIMIT 1;,SELECT T1.TITLE FROM POSTS AS T1 INNER JOIN POSTLINKS AS T2 ON T2.POSTID = T1.ID ORDER BY T1.CREAIONDATE LIMIT 1,
2,667,ERROR,KeyError: 'codebase_community',,SELECT POSTS.TITLE FROM POSTLINKS INNER JOIN POSTS ON POSTLINKS.POSTID = POSTS.ID ORDER BY POSTLINKS.CREATIONDATE ASC LIMIT 1;,SELECT T1.TITLE FROM POSTS AS T1 INNER JOIN POSTLINKS AS T2 ON T2.POSTID = T1.ID ORDER BY T1.CREAIONDATE LIMIT 1,
3,667,ERROR,KeyError: 'codebase_community',,SELECT POSTS.TITLE FROM POSTLINKS INNER JOIN POSTS ON POSTLINKS.POSTID = POSTS.ID ORDER BY POSTLINKS.CREATIONDATE ASC LIMIT 1;,SELECT T1.TITLE FROM POSTS AS T1 INNER JOIN POSTLINKS AS T2 ON T2.POSTID = T1.ID ORDER BY T1.CREAIONDATE LIMIT 1,
1,668,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID GROUP BY BADGES.USERID ORDER BY COUNT(BADGES.NAME) DESC LIMIT 1,SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID GROUP BY T1.DISPLAYNAME ORDER BY COUNT(T1.ID) DESC LIMIT 1,
2,668,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID GROUP BY BADGES.USERID ORDER BY COUNT(BADGES.NAME) DESC LIMIT 1,SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID GROUP BY T1.DISPLAYNAME ORDER BY COUNT(T1.ID) DESC LIMIT 1,
3,668,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID GROUP BY BADGES.USERID ORDER BY COUNT(BADGES.NAME) DESC LIMIT 1,SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID GROUP BY T1.DISPLAYNAME ORDER BY COUNT(T1.ID) DESC LIMIT 1,
1,669,ERROR,KeyError: 'codebase_community',,SELECT VOTES.CREATIONDATE FROM USERS INNER JOIN VOTES ON USERS.ID = VOTES.USERID WHERE USERS.DISPLAYNAME = 'CHL' ORDER BY VOTES.CREATIONDATE ASC LIMIT 1,SELECT T2.CREATIONDATE FROM USERS AS T1 INNER JOIN VOTES AS T2 ON T1.ID = T2.USERID WHERE T1.DISPLAYNAME = 'CHL' ORDER BY T2.CREATIONDATE LIMIT 1,
2,669,ERROR,KeyError: 'codebase_community',,SELECT VOTES.CREATIONDATE FROM USERS INNER JOIN VOTES ON USERS.ID = VOTES.USERID WHERE USERS.DISPLAYNAME = 'CHL' ORDER BY VOTES.CREATIONDATE ASC LIMIT 1,SELECT T2.CREATIONDATE FROM USERS AS T1 INNER JOIN VOTES AS T2 ON T1.ID = T2.USERID WHERE T1.DISPLAYNAME = 'CHL' ORDER BY T2.CREATIONDATE LIMIT 1,
3,669,ERROR,KeyError: 'codebase_community',,SELECT VOTES.CREATIONDATE FROM USERS INNER JOIN VOTES ON USERS.ID = VOTES.USERID WHERE USERS.DISPLAYNAME = 'CHL' ORDER BY VOTES.CREATIONDATE ASC LIMIT 1,SELECT T2.CREATIONDATE FROM USERS AS T1 INNER JOIN VOTES AS T2 ON T1.ID = T2.USERID WHERE T1.DISPLAYNAME = 'CHL' ORDER BY T2.CREATIONDATE LIMIT 1,
1,670,ERROR,KeyError: 'codebase_community',,SELECT USERS.CREATIONDATE FROM USERS INNER JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID WHERE USERS.AGE = (SELECT MIN(AGE) FROM USERS) ORDER BY USERS.CREATIONDATE ASC LIMIT 1;,"SELECT T2.CREAIONDATE FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T1.AGE IS NOT NULL ORDER BY T1.AGE, T2.CREAIONDATE LIMIT 1",
2,670,ERROR,KeyError: 'codebase_community',,SELECT USERS.CREATIONDATE FROM USERS INNER JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID WHERE USERS.AGE = (SELECT MIN(AGE) FROM USERS) ORDER BY USERS.CREATIONDATE ASC LIMIT 1;,"SELECT T2.CREAIONDATE FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T1.AGE IS NOT NULL ORDER BY T1.AGE, T2.CREAIONDATE LIMIT 1",
3,670,ERROR,KeyError: 'codebase_community',,SELECT USERS.CREATIONDATE FROM USERS INNER JOIN POSTS ON USERS.ID = POSTS.OWNERUSERID WHERE USERS.AGE = (SELECT MIN(AGE) FROM USERS) ORDER BY USERS.CREATIONDATE ASC LIMIT 1;,"SELECT T2.CREAIONDATE FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T1.AGE IS NOT NULL ORDER BY T1.AGE, T2.CREAIONDATE LIMIT 1",
1,671,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE BADGES.NAME = 'AUTOBIOGRAPHER' ORDER BY BADGES.DATE ASC LIMIT 1,SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.`NAME` = 'AUTOBIOGRAPHER' ORDER BY T2.DATE LIMIT 1,
2,671,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE BADGES.NAME = 'AUTOBIOGRAPHER' ORDER BY BADGES.DATE ASC LIMIT 1,SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.`NAME` = 'AUTOBIOGRAPHER' ORDER BY T2.DATE LIMIT 1,
3,671,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE BADGES.NAME = 'AUTOBIOGRAPHER' ORDER BY BADGES.DATE ASC LIMIT 1,SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN BADGES AS T2 ON T1.ID = T2.USERID WHERE T2.`NAME` = 'AUTOBIOGRAPHER' ORDER BY T2.DATE LIMIT 1,
1,672,ERROR,KeyError: 'codebase_community',,SELECT COUNT(DISTINCT POSTS.OWNERUSERID) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.LOCATION = 'UNITED KINGDOM' GROUP BY POSTS.OWNERUSERID HAVING SUM(POSTS.FAVORITECOUNT) >= 4,SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T1.LOCATION = 'UNITED KINGDOM' AND T2.FAVORITECOUNT >= 4,
2,672,ERROR,KeyError: 'codebase_community',,SELECT COUNT(DISTINCT POSTS.OWNERUSERID) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.LOCATION = 'UNITED KINGDOM' GROUP BY POSTS.OWNERUSERID HAVING SUM(POSTS.FAVORITECOUNT) >= 4,SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T1.LOCATION = 'UNITED KINGDOM' AND T2.FAVORITECOUNT >= 4,
3,672,ERROR,KeyError: 'codebase_community',,SELECT COUNT(DISTINCT POSTS.OWNERUSERID) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.LOCATION = 'UNITED KINGDOM' GROUP BY POSTS.OWNERUSERID HAVING SUM(POSTS.FAVORITECOUNT) >= 4,SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T1.LOCATION = 'UNITED KINGDOM' AND T2.FAVORITECOUNT >= 4,
1,673,ERROR,KeyError: 'codebase_community',,SELECT AVG(VOTES.POSTID) FROM VOTES INNER JOIN USERS ON VOTES.USERID = USERS.ID WHERE USERS.AGE = (SELECT MAX(AGE) FROM USERS),SELECT AVG(POSTID) FROM VOTES WHERE USERID IN ( SELECT ID FROM USERS WHERE AGE = ( SELECT MAX(AGE) FROM USERS ) ),
2,673,ERROR,KeyError: 'codebase_community',,SELECT AVG(VOTES.POSTID) FROM VOTES INNER JOIN USERS ON VOTES.USERID = USERS.ID WHERE USERS.AGE = (SELECT MAX(AGE) FROM USERS),SELECT AVG(POSTID) FROM VOTES WHERE USERID IN ( SELECT ID FROM USERS WHERE AGE = ( SELECT MAX(AGE) FROM USERS ) ),
3,673,ERROR,KeyError: 'codebase_community',,SELECT AVG(VOTES.POSTID) FROM VOTES INNER JOIN USERS ON VOTES.USERID = USERS.ID WHERE USERS.AGE = (SELECT MAX(AGE) FROM USERS),SELECT AVG(POSTID) FROM VOTES WHERE USERID IN ( SELECT ID FROM USERS WHERE AGE = ( SELECT MAX(AGE) FROM USERS ) ),
1,674,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS ORDER BY USERS.REPUTATION DESC LIMIT 1;,SELECT DISPLAYNAME FROM USERS WHERE REPUTATION = ( SELECT MAX(REPUTATION) FROM USERS ),
2,674,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS ORDER BY USERS.REPUTATION DESC LIMIT 1;,SELECT DISPLAYNAME FROM USERS WHERE REPUTATION = ( SELECT MAX(REPUTATION) FROM USERS ),
3,674,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS ORDER BY USERS.REPUTATION DESC LIMIT 1;,SELECT DISPLAYNAME FROM USERS WHERE REPUTATION = ( SELECT MAX(REPUTATION) FROM USERS ),
1,675,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS WHERE REPUTATION > 2000 AND VIEWS > 1000,SELECT COUNT(ID) FROM USERS WHERE REPUTATION > 2000 AND VIEWS > 1000,
2,675,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS WHERE REPUTATION > 2000 AND VIEWS > 1000,SELECT COUNT(ID) FROM USERS WHERE REPUTATION > 2000 AND VIEWS > 1000,
3,675,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS WHERE REPUTATION > 2000 AND VIEWS > 1000,SELECT COUNT(ID) FROM USERS WHERE REPUTATION > 2000 AND VIEWS > 1000,
1,676,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS WHERE USERS.AGE BETWEEN 19 AND 65,SELECT DISPLAYNAME FROM USERS WHERE AGE BETWEEN 19 AND 65,
2,676,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS WHERE USERS.AGE BETWEEN 19 AND 65,SELECT DISPLAYNAME FROM USERS WHERE AGE BETWEEN 19 AND 65,
3,676,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM USERS WHERE USERS.AGE BETWEEN 19 AND 65,SELECT DISPLAYNAME FROM USERS WHERE AGE BETWEEN 19 AND 65,
1,677,ERROR,KeyError: 'codebase_community',,SELECT COUNT(POSTS.ID) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'JAY STEVENS' AND YEAR(USERS.CREATIONDATE) = 2010;,"SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE STRFTIME('%Y', T2.CREAIONDATE) = '2010' AND T1.DISPLAYNAME = 'JAY STEVENS'",
2,677,ERROR,KeyError: 'codebase_community',,SELECT COUNT(POSTS.ID) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'JAY STEVENS' AND YEAR(USERS.CREATIONDATE) = 2010;,"SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE STRFTIME('%Y', T2.CREAIONDATE) = '2010' AND T1.DISPLAYNAME = 'JAY STEVENS'",
3,677,ERROR,KeyError: 'codebase_community',,SELECT COUNT(POSTS.ID) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'JAY STEVENS' AND YEAR(USERS.CREATIONDATE) = 2010;,"SELECT COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE STRFTIME('%Y', T2.CREAIONDATE) = '2010' AND T1.DISPLAYNAME = 'JAY STEVENS'",
1,678,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID, POSTS.TITLE FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'HARVEY MOTULSKY' ORDER BY POSTS.VIEWCOUNT DESC LIMIT 1","SELECT T2.ID, T2.TITLE FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T1.DISPLAYNAME = 'HARVEY MOTULSKY' ORDER BY T2.VIEWCOUNT DESC LIMIT 1",
2,678,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID, POSTS.TITLE FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'HARVEY MOTULSKY' ORDER BY POSTS.VIEWCOUNT DESC LIMIT 1","SELECT T2.ID, T2.TITLE FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T1.DISPLAYNAME = 'HARVEY MOTULSKY' ORDER BY T2.VIEWCOUNT DESC LIMIT 1",
3,678,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID, POSTS.TITLE FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'HARVEY MOTULSKY' ORDER BY POSTS.VIEWCOUNT DESC LIMIT 1","SELECT T2.ID, T2.TITLE FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T1.DISPLAYNAME = 'HARVEY MOTULSKY' ORDER BY T2.VIEWCOUNT DESC LIMIT 1",
1,679,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID, POSTS.TITLE FROM POSTS ORDER BY POSTS.SCORE DESC LIMIT 1;","SELECT T1.ID, T2.TITLE FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID ORDER BY T2.SCORE DESC LIMIT 1",
2,679,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID, POSTS.TITLE FROM POSTS ORDER BY POSTS.SCORE DESC LIMIT 1;","SELECT T1.ID, T2.TITLE FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID ORDER BY T2.SCORE DESC LIMIT 1",
3,679,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID, POSTS.TITLE FROM POSTS ORDER BY POSTS.SCORE DESC LIMIT 1;","SELECT T1.ID, T2.TITLE FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID ORDER BY T2.SCORE DESC LIMIT 1",
1,680,ERROR,KeyError: 'codebase_community',,SELECT AVG(POSTS.SCORE) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'STEPHEN TURNER',SELECT AVG(T2.SCORE) FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T1.DISPLAYNAME = 'STEPHEN TURNER',
2,680,ERROR,KeyError: 'codebase_community',,SELECT AVG(POSTS.SCORE) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'STEPHEN TURNER',SELECT AVG(T2.SCORE) FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T1.DISPLAYNAME = 'STEPHEN TURNER',
3,680,ERROR,KeyError: 'codebase_community',,SELECT AVG(POSTS.SCORE) FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.DISPLAYNAME = 'STEPHEN TURNER',SELECT AVG(T2.SCORE) FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE T1.DISPLAYNAME = 'STEPHEN TURNER',
1,681,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.VIEWCOUNT > 20000 AND YEAR(USERS.CREATIONDATE) = 2011,"SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE STRFTIME('%Y', T2.CREAIONDATE) = '2011' AND T2.VIEWCOUNT > 20000",
2,681,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.VIEWCOUNT > 20000 AND YEAR(USERS.CREATIONDATE) = 2011,"SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE STRFTIME('%Y', T2.CREAIONDATE) = '2011' AND T2.VIEWCOUNT > 20000",
3,681,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE POSTS.VIEWCOUNT > 20000 AND YEAR(USERS.CREATIONDATE) = 2011,"SELECT T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE STRFTIME('%Y', T2.CREAIONDATE) = '2011' AND T2.VIEWCOUNT > 20000",
1,682,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID, USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE STRFTIME('%Y', POSTS.CREATIONDATE) = '2010' ORDER BY POSTS.FAVORITECOUNT DESC LIMIT 1;","SELECT T2.OWNERUSERID, T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE STRFTIME('%Y', T1.CREATIONDATE) = '2010' ORDER BY T2.FAVORITECOUNT DESC LIMIT 1",
2,682,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID, USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE STRFTIME('%Y', POSTS.CREATIONDATE) = '2010' ORDER BY POSTS.FAVORITECOUNT DESC LIMIT 1;","SELECT T2.OWNERUSERID, T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE STRFTIME('%Y', T1.CREATIONDATE) = '2010' ORDER BY T2.FAVORITECOUNT DESC LIMIT 1",
3,682,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID, USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE STRFTIME('%Y', POSTS.CREATIONDATE) = '2010' ORDER BY POSTS.FAVORITECOUNT DESC LIMIT 1;","SELECT T2.OWNERUSERID, T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID WHERE STRFTIME('%Y', T1.CREATIONDATE) = '2010' ORDER BY T2.FAVORITECOUNT DESC LIMIT 1",
1,683,ERROR,KeyError: 'codebase_community',,SELECT (CAST(COUNT(POSTS.ID) FILTER (WHERE USERS.REPUTATION > 1000 AND EXTRACT(YEAR FROM USERS.CREATIONDATE) = 2011) AS REAL) / COUNT(POSTS.ID)) * 100 FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID,"SELECT CAST(SUM(IIF(STRFTIME('%Y', T2.CREAIONDATE) = '2011' AND T1.REPUTATION > 1000, 1, 0)) AS REAL) * 100 / COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID",
2,683,ERROR,KeyError: 'codebase_community',,SELECT (CAST(COUNT(POSTS.ID) FILTER (WHERE USERS.REPUTATION > 1000 AND EXTRACT(YEAR FROM USERS.CREATIONDATE) = 2011) AS REAL) / COUNT(POSTS.ID)) * 100 FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID,"SELECT CAST(SUM(IIF(STRFTIME('%Y', T2.CREAIONDATE) = '2011' AND T1.REPUTATION > 1000, 1, 0)) AS REAL) * 100 / COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID",
3,683,ERROR,KeyError: 'codebase_community',,SELECT (CAST(COUNT(POSTS.ID) FILTER (WHERE USERS.REPUTATION > 1000 AND EXTRACT(YEAR FROM USERS.CREATIONDATE) = 2011) AS REAL) / COUNT(POSTS.ID)) * 100 FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID,"SELECT CAST(SUM(IIF(STRFTIME('%Y', T2.CREAIONDATE) = '2011' AND T1.REPUTATION > 1000, 1, 0)) AS REAL) * 100 / COUNT(T1.ID) FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID",
1,684,ERROR,KeyError: 'codebase_community',,SELECT (CAST(COUNT(USERS.ID) WHERE USERS.AGE BETWEEN 13 AND 18 AS REAL) / COUNT(USERS.ID)) * 100 AS PERCENTAGE FROM USERS;,"SELECT CAST(SUM(IIF(AGE BETWEEN 13 AND 18, 1, 0)) AS REAL) * 100 / COUNT(ID) FROM USERS",
2,684,ERROR,KeyError: 'codebase_community',,SELECT (CAST(COUNT(USERS.ID) WHERE USERS.AGE BETWEEN 13 AND 18 AS REAL) / COUNT(USERS.ID)) * 100 AS PERCENTAGE FROM USERS;,"SELECT CAST(SUM(IIF(AGE BETWEEN 13 AND 18, 1, 0)) AS REAL) * 100 / COUNT(ID) FROM USERS",
3,684,ERROR,KeyError: 'codebase_community',,SELECT (CAST(COUNT(USERS.ID) WHERE USERS.AGE BETWEEN 13 AND 18 AS REAL) / COUNT(USERS.ID)) * 100 AS PERCENTAGE FROM USERS;,"SELECT CAST(SUM(IIF(AGE BETWEEN 13 AND 18, 1, 0)) AS REAL) * 100 / COUNT(ID) FROM USERS",
1,685,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.VIEWCOUNT, USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.LASTEDITORUSERID = USERS.ID WHERE POSTS.TITLE = 'COMPUTER GAME DATASETS';","SELECT T2.VIEWCOUNT, T3.DISPLAYNAME FROM POSTHISTORY AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID INNER JOIN USERS AS T3 ON T2.LASTEDITORUSERID = T3.ID WHERE T1.TEXT = 'COMPUTER GAME DATASETS'",
2,685,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.VIEWCOUNT, USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.LASTEDITORUSERID = USERS.ID WHERE POSTS.TITLE = 'COMPUTER GAME DATASETS';","SELECT T2.VIEWCOUNT, T3.DISPLAYNAME FROM POSTHISTORY AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID INNER JOIN USERS AS T3 ON T2.LASTEDITORUSERID = T3.ID WHERE T1.TEXT = 'COMPUTER GAME DATASETS'",
3,685,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.VIEWCOUNT, USERS.DISPLAYNAME FROM POSTS INNER JOIN USERS ON POSTS.LASTEDITORUSERID = USERS.ID WHERE POSTS.TITLE = 'COMPUTER GAME DATASETS';","SELECT T2.VIEWCOUNT, T3.DISPLAYNAME FROM POSTHISTORY AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID INNER JOIN USERS AS T3 ON T2.LASTEDITORUSERID = T3.ID WHERE T1.TEXT = 'COMPUTER GAME DATASETS'",
1,686,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS WHERE VIEWCOUNT > (SELECT AVG(VIEWCOUNT) FROM POSTS);,SELECT ID FROM POSTS WHERE VIEWCOUNT > ( SELECT AVG(VIEWCOUNT) FROM POSTS ),
2,686,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS WHERE VIEWCOUNT > (SELECT AVG(VIEWCOUNT) FROM POSTS);,SELECT ID FROM POSTS WHERE VIEWCOUNT > ( SELECT AVG(VIEWCOUNT) FROM POSTS ),
3,686,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS WHERE VIEWCOUNT > (SELECT AVG(VIEWCOUNT) FROM POSTS);,SELECT ID FROM POSTS WHERE VIEWCOUNT > ( SELECT AVG(VIEWCOUNT) FROM POSTS ),
1,687,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM COMMENTS WHERE COMMENTS.POSTID = ( SELECT POSTS.ID FROM POSTS ORDER BY POSTS.SCORE DESC LIMIT 1 ),SELECT COUNT(T2.ID) FROM POSTS AS T1 INNER JOIN COMMENTS AS T2 ON T1.ID = T2.POSTID GROUP BY T1.ID ORDER BY SUM(T1.SCORE) DESC LIMIT 1,
2,687,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM COMMENTS WHERE COMMENTS.POSTID = ( SELECT POSTS.ID FROM POSTS ORDER BY POSTS.SCORE DESC LIMIT 1 ),SELECT COUNT(T2.ID) FROM POSTS AS T1 INNER JOIN COMMENTS AS T2 ON T1.ID = T2.POSTID GROUP BY T1.ID ORDER BY SUM(T1.SCORE) DESC LIMIT 1,
3,687,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM COMMENTS WHERE COMMENTS.POSTID = ( SELECT POSTS.ID FROM POSTS ORDER BY POSTS.SCORE DESC LIMIT 1 ),SELECT COUNT(T2.ID) FROM POSTS AS T1 INNER JOIN COMMENTS AS T2 ON T1.ID = T2.POSTID GROUP BY T1.ID ORDER BY SUM(T1.SCORE) DESC LIMIT 1,
1,688,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS WHERE VIEWCOUNT > 35000 AND COMMENTCOUNT = 0,SELECT COUNT(ID) FROM POSTS WHERE VIEWCOUNT > 35000 AND COMMENTCOUNT = 0,
2,688,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS WHERE VIEWCOUNT > 35000 AND COMMENTCOUNT = 0,SELECT COUNT(ID) FROM POSTS WHERE VIEWCOUNT > 35000 AND COMMENTCOUNT = 0,
3,688,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS WHERE VIEWCOUNT > 35000 AND COMMENTCOUNT = 0,SELECT COUNT(ID) FROM POSTS WHERE VIEWCOUNT > 35000 AND COMMENTCOUNT = 0,
1,689,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, USERS.LOCATION FROM POSTS INNER JOIN USERS ON POSTS.LASTEDITORUSERID = USERS.ID WHERE POSTS.ID = 183 ORDER BY POSTS.LASTEDITDATE DESC LIMIT 1","SELECT T2.DISPLAYNAME, T2.LOCATION FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T1.ID = 183 ORDER BY T1.LASTEDITDATE DESC LIMIT 1",
2,689,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, USERS.LOCATION FROM POSTS INNER JOIN USERS ON POSTS.LASTEDITORUSERID = USERS.ID WHERE POSTS.ID = 183 ORDER BY POSTS.LASTEDITDATE DESC LIMIT 1","SELECT T2.DISPLAYNAME, T2.LOCATION FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T1.ID = 183 ORDER BY T1.LASTEDITDATE DESC LIMIT 1",
3,689,ERROR,KeyError: 'codebase_community',,"SELECT USERS.DISPLAYNAME, USERS.LOCATION FROM POSTS INNER JOIN USERS ON POSTS.LASTEDITORUSERID = USERS.ID WHERE POSTS.ID = 183 ORDER BY POSTS.LASTEDITDATE DESC LIMIT 1","SELECT T2.DISPLAYNAME, T2.LOCATION FROM POSTS AS T1 INNER JOIN USERS AS T2 ON T1.OWNERUSERID = T2.ID WHERE T1.ID = 183 ORDER BY T1.LASTEDITDATE DESC LIMIT 1",
1,690,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'EMMETT' ORDER BY BADGES.DATE DESC LIMIT 1;,SELECT T1.NAME FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T2.DISPLAYNAME = 'EMMETT' ORDER BY T1.DATE DESC LIMIT 1,
2,690,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'EMMETT' ORDER BY BADGES.DATE DESC LIMIT 1;,SELECT T1.NAME FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T2.DISPLAYNAME = 'EMMETT' ORDER BY T1.DATE DESC LIMIT 1,
3,690,ERROR,KeyError: 'codebase_community',,SELECT BADGES.NAME FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'EMMETT' ORDER BY BADGES.DATE DESC LIMIT 1;,SELECT T1.NAME FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T2.DISPLAYNAME = 'EMMETT' ORDER BY T1.DATE DESC LIMIT 1,
1,691,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS WHERE AGE BETWEEN 19 AND 65 AND UPVOTES > 5000,SELECT COUNT(ID) FROM USERS WHERE AGE BETWEEN 19 AND 65 AND UPVOTES > 5000,
2,691,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS WHERE AGE BETWEEN 19 AND 65 AND UPVOTES > 5000,SELECT COUNT(ID) FROM USERS WHERE AGE BETWEEN 19 AND 65 AND UPVOTES > 5000,
3,691,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM USERS WHERE AGE BETWEEN 19 AND 65 AND UPVOTES > 5000,SELECT COUNT(ID) FROM USERS WHERE AGE BETWEEN 19 AND 65 AND UPVOTES > 5000,
1,692,ERROR,KeyError: 'codebase_community',,"SELECT DATEDIFF(BADGES.DATE, USERS.CREATIONDATE) FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'ZOLOMON';",SELECT T1.DATE - T2.CREATIONDATE FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T2.DISPLAYNAME = 'ZOLOMON',
2,692,ERROR,KeyError: 'codebase_community',,"SELECT DATEDIFF(BADGES.DATE, USERS.CREATIONDATE) FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'ZOLOMON';",SELECT T1.DATE - T2.CREATIONDATE FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T2.DISPLAYNAME = 'ZOLOMON',
3,692,ERROR,KeyError: 'codebase_community',,"SELECT DATEDIFF(BADGES.DATE, USERS.CREATIONDATE) FROM BADGES INNER JOIN USERS ON BADGES.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'ZOLOMON';",SELECT T1.DATE - T2.CREATIONDATE FROM BADGES AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T2.DISPLAYNAME = 'ZOLOMON',
1,693,ERROR,KeyError: 'codebase_community',,"SELECT (SELECT COUNT(*) FROM POSTS WHERE POSTS.OWNERUSERID = (SELECT USERS.ID FROM USERS ORDER BY USERS.CREATIONDATE DESC LIMIT 1)), (SELECT COUNT(*) FROM COMMENTS WHERE COMMENTS.USERID = (SELECT USERS.ID FROM USERS ORDER BY USERS.CREATIONDATE DESC LIMIT 1))",SELECT COUNT(T2.ID) FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID INNER JOIN COMMENTS AS T3 ON T3.POSTID = T2.ID ORDER BY T1.CREATIONDATE DESC LIMIT 1,
2,693,ERROR,KeyError: 'codebase_community',,"SELECT (SELECT COUNT(*) FROM POSTS WHERE POSTS.OWNERUSERID = (SELECT USERS.ID FROM USERS ORDER BY USERS.CREATIONDATE DESC LIMIT 1)), (SELECT COUNT(*) FROM COMMENTS WHERE COMMENTS.USERID = (SELECT USERS.ID FROM USERS ORDER BY USERS.CREATIONDATE DESC LIMIT 1))",SELECT COUNT(T2.ID) FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID INNER JOIN COMMENTS AS T3 ON T3.POSTID = T2.ID ORDER BY T1.CREATIONDATE DESC LIMIT 1,
3,693,ERROR,KeyError: 'codebase_community',,"SELECT (SELECT COUNT(*) FROM POSTS WHERE POSTS.OWNERUSERID = (SELECT USERS.ID FROM USERS ORDER BY USERS.CREATIONDATE DESC LIMIT 1)), (SELECT COUNT(*) FROM COMMENTS WHERE COMMENTS.USERID = (SELECT USERS.ID FROM USERS ORDER BY USERS.CREATIONDATE DESC LIMIT 1))",SELECT COUNT(T2.ID) FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID INNER JOIN COMMENTS AS T3 ON T3.POSTID = T2.ID ORDER BY T1.CREATIONDATE DESC LIMIT 1,
1,694,ERROR,KeyError: 'codebase_community',,"SELECT COMMENTS.TEXT, USERS.DISPLAYNAME FROM COMMENTS INNER JOIN POSTS ON COMMENTS.POSTID = POSTS.ID INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE POSTS.TITLE = 'ANALYSING WIND DATA WITH R' ORDER BY COMMENTS.CREATIONDATE DESC LIMIT 10","SELECT T3.TEXT, T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID INNER JOIN COMMENTS AS T3 ON T2.ID = T3.POSTID WHERE T2.TITLE = 'ANALYSING WIND DATA WITH R' ORDER BY T1.CREATIONDATE DESC LIMIT 10",
2,694,ERROR,KeyError: 'codebase_community',,"SELECT COMMENTS.TEXT, USERS.DISPLAYNAME FROM COMMENTS INNER JOIN POSTS ON COMMENTS.POSTID = POSTS.ID INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE POSTS.TITLE = 'ANALYSING WIND DATA WITH R' ORDER BY COMMENTS.CREATIONDATE DESC LIMIT 10","SELECT T3.TEXT, T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID INNER JOIN COMMENTS AS T3 ON T2.ID = T3.POSTID WHERE T2.TITLE = 'ANALYSING WIND DATA WITH R' ORDER BY T1.CREATIONDATE DESC LIMIT 10",
3,694,ERROR,KeyError: 'codebase_community',,"SELECT COMMENTS.TEXT, USERS.DISPLAYNAME FROM COMMENTS INNER JOIN POSTS ON COMMENTS.POSTID = POSTS.ID INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE POSTS.TITLE = 'ANALYSING WIND DATA WITH R' ORDER BY COMMENTS.CREATIONDATE DESC LIMIT 10","SELECT T3.TEXT, T1.DISPLAYNAME FROM USERS AS T1 INNER JOIN POSTS AS T2 ON T1.ID = T2.OWNERUSERID INNER JOIN COMMENTS AS T3 ON T2.ID = T3.POSTID WHERE T2.TITLE = 'ANALYSING WIND DATA WITH R' ORDER BY T1.CREATIONDATE DESC LIMIT 10",
1,695,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM BADGES WHERE NAME = 'CITIZEN PATROL';,SELECT COUNT(ID) FROM BADGES WHERE `NAME` = 'CITIZEN PATROL',
2,695,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM BADGES WHERE NAME = 'CITIZEN PATROL';,SELECT COUNT(ID) FROM BADGES WHERE `NAME` = 'CITIZEN PATROL',
3,695,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM BADGES WHERE NAME = 'CITIZEN PATROL';,SELECT COUNT(ID) FROM BADGES WHERE `NAME` = 'CITIZEN PATROL',
1,696,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS INNER JOIN TAGS ON POSTS.ID = TAGS.ID WHERE TAGS.TAGNAME = 'CAREERS';,SELECT COUNT(ID) FROM TAGS WHERE TAGNAME = 'CAREERS',
2,696,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS INNER JOIN TAGS ON POSTS.ID = TAGS.ID WHERE TAGS.TAGNAME = 'CAREERS';,SELECT COUNT(ID) FROM TAGS WHERE TAGNAME = 'CAREERS',
3,696,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS INNER JOIN TAGS ON POSTS.ID = TAGS.ID WHERE TAGS.TAGNAME = 'CAREERS';,SELECT COUNT(ID) FROM TAGS WHERE TAGNAME = 'CAREERS',
1,697,ERROR,KeyError: 'codebase_community',,"SELECT USERS.REPUTATION, USERS.VIEWS FROM USERS WHERE USERS.DISPLAYNAME = 'JARROD DIXON'","SELECT REPUTATION, VIEWS FROM USERS WHERE DISPLAYNAME = 'JARROD DIXON'",
2,697,ERROR,KeyError: 'codebase_community',,"SELECT USERS.REPUTATION, USERS.VIEWS FROM USERS WHERE USERS.DISPLAYNAME = 'JARROD DIXON'","SELECT REPUTATION, VIEWS FROM USERS WHERE DISPLAYNAME = 'JARROD DIXON'",
3,697,ERROR,KeyError: 'codebase_community',,"SELECT USERS.REPUTATION, USERS.VIEWS FROM USERS WHERE USERS.DISPLAYNAME = 'JARROD DIXON'","SELECT REPUTATION, VIEWS FROM USERS WHERE DISPLAYNAME = 'JARROD DIXON'",
1,698,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.COMMENTCOUNT, POSTS.ANSWERCOUNT FROM POSTS WHERE POSTS.TITLE = 'CLUSTERING 1D DATA'","SELECT COMMENTCOUNT, ANSWERCOUNT FROM POSTS WHERE TITLE = 'CLUSTERING 1D DATA'",
2,698,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.COMMENTCOUNT, POSTS.ANSWERCOUNT FROM POSTS WHERE POSTS.TITLE = 'CLUSTERING 1D DATA'","SELECT COMMENTCOUNT, ANSWERCOUNT FROM POSTS WHERE TITLE = 'CLUSTERING 1D DATA'",
3,698,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.COMMENTCOUNT, POSTS.ANSWERCOUNT FROM POSTS WHERE POSTS.TITLE = 'CLUSTERING 1D DATA'","SELECT COMMENTCOUNT, ANSWERCOUNT FROM POSTS WHERE TITLE = 'CLUSTERING 1D DATA'",
1,699,ERROR,KeyError: 'codebase_community',,SELECT USERS.CREATIONDATE FROM USERS WHERE USERS.DISPLAYNAME = 'IRISHSTAT';,SELECT CREATIONDATE FROM USERS WHERE DISPLAYNAME = 'IRISHSTAT',
2,699,ERROR,KeyError: 'codebase_community',,SELECT USERS.CREATIONDATE FROM USERS WHERE USERS.DISPLAYNAME = 'IRISHSTAT';,SELECT CREATIONDATE FROM USERS WHERE DISPLAYNAME = 'IRISHSTAT',
3,699,ERROR,KeyError: 'codebase_community',,SELECT USERS.CREATIONDATE FROM USERS WHERE USERS.DISPLAYNAME = 'IRISHSTAT';,SELECT CREATIONDATE FROM USERS WHERE DISPLAYNAME = 'IRISHSTAT',
1,700,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM VOTES WHERE BOUNTYAMOUNT > 30,SELECT COUNT(ID) FROM VOTES WHERE BOUNTYAMOUNT >= 30,
2,700,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM VOTES WHERE BOUNTYAMOUNT > 30,SELECT COUNT(ID) FROM VOTES WHERE BOUNTYAMOUNT >= 30,
3,700,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM VOTES WHERE BOUNTYAMOUNT > 30,SELECT COUNT(ID) FROM VOTES WHERE BOUNTYAMOUNT >= 30,
1,701,ERROR,KeyError: 'codebase_community',,"SELECT CAST(COUNT(DF2.ID) AS REAL) * 100 / COUNT(DF1.ID) FROM (SELECT POSTS.ID FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.REPUTATION = (SELECT MAX(REPUTATION) FROM USERS)) AS DF1, (SELECT POSTS.ID FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.REPUTATION = (SELECT MAX(REPUTATION) FROM USERS) AND POSTS.SCORE > 50) AS DF2",SELECT CAST(SUM(CASE WHEN T2.SCORE > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM USERS T1 INNER JOIN POSTS T2 ON T1.ID = T2.OWNERUSERID INNER JOIN ( SELECT MAX(REPUTATION) AS MAX_REPUTATION FROM USERS ) T3 ON T1.REPUTATION = T3.MAX_REPUTATION,
2,701,ERROR,KeyError: 'codebase_community',,"SELECT CAST(COUNT(DF2.ID) AS REAL) * 100 / COUNT(DF1.ID) FROM (SELECT POSTS.ID FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.REPUTATION = (SELECT MAX(REPUTATION) FROM USERS)) AS DF1, (SELECT POSTS.ID FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.REPUTATION = (SELECT MAX(REPUTATION) FROM USERS) AND POSTS.SCORE > 50) AS DF2",SELECT CAST(SUM(CASE WHEN T2.SCORE > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM USERS T1 INNER JOIN POSTS T2 ON T1.ID = T2.OWNERUSERID INNER JOIN ( SELECT MAX(REPUTATION) AS MAX_REPUTATION FROM USERS ) T3 ON T1.REPUTATION = T3.MAX_REPUTATION,
3,701,ERROR,KeyError: 'codebase_community',,"SELECT CAST(COUNT(DF2.ID) AS REAL) * 100 / COUNT(DF1.ID) FROM (SELECT POSTS.ID FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.REPUTATION = (SELECT MAX(REPUTATION) FROM USERS)) AS DF1, (SELECT POSTS.ID FROM POSTS INNER JOIN USERS ON POSTS.OWNERUSERID = USERS.ID WHERE USERS.REPUTATION = (SELECT MAX(REPUTATION) FROM USERS) AND POSTS.SCORE > 50) AS DF2",SELECT CAST(SUM(CASE WHEN T2.SCORE > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM USERS T1 INNER JOIN POSTS T2 ON T1.ID = T2.OWNERUSERID INNER JOIN ( SELECT MAX(REPUTATION) AS MAX_REPUTATION FROM USERS ) T3 ON T1.REPUTATION = T3.MAX_REPUTATION,
1,702,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS WHERE SCORE < 20;,SELECT COUNT(ID) FROM POSTS WHERE SCORE < 20,
2,702,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS WHERE SCORE < 20;,SELECT COUNT(ID) FROM POSTS WHERE SCORE < 20,
3,702,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS WHERE SCORE < 20;,SELECT COUNT(ID) FROM POSTS WHERE SCORE < 20,
1,703,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM TAGS WHERE ID < 15 AND COUNT <= 20;,SELECT COUNT(ID) FROM TAGS WHERE COUNT <= 20 AND ID < 15,
2,703,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM TAGS WHERE ID < 15 AND COUNT <= 20;,SELECT COUNT(ID) FROM TAGS WHERE COUNT <= 20 AND ID < 15,
3,703,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM TAGS WHERE ID < 15 AND COUNT <= 20;,SELECT COUNT(ID) FROM TAGS WHERE COUNT <= 20 AND ID < 15,
1,704,ERROR,KeyError: 'codebase_community',,"SELECT TAGS.EXCERPTPOSTID, TAGS.WIKIPOSTID FROM TAGS WHERE TAGS.TAGNAME = 'SAMPLE';","SELECT EXCERPTPOSTID, WIKIPOSTID FROM TAGS WHERE TAGNAME = 'SAMPLE'",
2,704,ERROR,KeyError: 'codebase_community',,"SELECT TAGS.EXCERPTPOSTID, TAGS.WIKIPOSTID FROM TAGS WHERE TAGS.TAGNAME = 'SAMPLE';","SELECT EXCERPTPOSTID, WIKIPOSTID FROM TAGS WHERE TAGNAME = 'SAMPLE'",
3,704,ERROR,KeyError: 'codebase_community',,"SELECT TAGS.EXCERPTPOSTID, TAGS.WIKIPOSTID FROM TAGS WHERE TAGS.TAGNAME = 'SAMPLE';","SELECT EXCERPTPOSTID, WIKIPOSTID FROM TAGS WHERE TAGNAME = 'SAMPLE'",
1,705,ERROR,KeyError: 'codebase_community',,"SELECT USERS.REPUTATION, USERS.UPVOTES FROM USERS INNER JOIN COMMENTS ON USERS.ID = COMMENTS.USERID WHERE COMMENTS.TEXT = 'FINE, YOU WIN :)';","SELECT T2.REPUTATION, T2.UPVOTES FROM COMMENTS AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.TEXT = 'FINE, YOU WIN :)'",
2,705,ERROR,KeyError: 'codebase_community',,"SELECT USERS.REPUTATION, USERS.UPVOTES FROM USERS INNER JOIN COMMENTS ON USERS.ID = COMMENTS.USERID WHERE COMMENTS.TEXT = 'FINE, YOU WIN :)';","SELECT T2.REPUTATION, T2.UPVOTES FROM COMMENTS AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.TEXT = 'FINE, YOU WIN :)'",
3,705,ERROR,KeyError: 'codebase_community',,"SELECT USERS.REPUTATION, USERS.UPVOTES FROM USERS INNER JOIN COMMENTS ON USERS.ID = COMMENTS.USERID WHERE COMMENTS.TEXT = 'FINE, YOU WIN :)';","SELECT T2.REPUTATION, T2.UPVOTES FROM COMMENTS AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.TEXT = 'FINE, YOU WIN :)'",
1,706,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM POSTS INNER JOIN COMMENTS ON POSTS.ID = COMMENTS.POSTID WHERE POSTS.TITLE LIKE '%LINEAR REGRESSION%',SELECT T1.TEXT FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T2.TITLE LIKE '%LINEAR REGRESSION%',
2,706,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM POSTS INNER JOIN COMMENTS ON POSTS.ID = COMMENTS.POSTID WHERE POSTS.TITLE LIKE '%LINEAR REGRESSION%',SELECT T1.TEXT FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T2.TITLE LIKE '%LINEAR REGRESSION%',
3,706,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM POSTS INNER JOIN COMMENTS ON POSTS.ID = COMMENTS.POSTID WHERE POSTS.TITLE LIKE '%LINEAR REGRESSION%',SELECT T1.TEXT FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T2.TITLE LIKE '%LINEAR REGRESSION%',
1,707,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM POSTS INNER JOIN COMMENTS ON POSTS.ID = COMMENTS.POSTID WHERE POSTS.VIEWCOUNT BETWEEN 100 AND 150 ORDER BY COMMENTS.SCORE DESC LIMIT 1,SELECT TEXT FROM COMMENTS WHERE POSTID IN ( SELECT ID FROM POSTS WHERE VIEWCOUNT BETWEEN 100 AND 150 ) ORDER BY SCORE DESC LIMIT 1,
2,707,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM POSTS INNER JOIN COMMENTS ON POSTS.ID = COMMENTS.POSTID WHERE POSTS.VIEWCOUNT BETWEEN 100 AND 150 ORDER BY COMMENTS.SCORE DESC LIMIT 1,SELECT TEXT FROM COMMENTS WHERE POSTID IN ( SELECT ID FROM POSTS WHERE VIEWCOUNT BETWEEN 100 AND 150 ) ORDER BY SCORE DESC LIMIT 1,
3,707,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM POSTS INNER JOIN COMMENTS ON POSTS.ID = COMMENTS.POSTID WHERE POSTS.VIEWCOUNT BETWEEN 100 AND 150 ORDER BY COMMENTS.SCORE DESC LIMIT 1,SELECT TEXT FROM COMMENTS WHERE POSTID IN ( SELECT ID FROM POSTS WHERE VIEWCOUNT BETWEEN 100 AND 150 ) ORDER BY SCORE DESC LIMIT 1,
1,708,ERROR,KeyError: 'codebase_community',,"SELECT USERS.CREATIONDATE, USERS.AGE FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE COMMENTS.TEXT LIKE '%HTTP://%'","SELECT T2.CREATIONDATE, T2.AGE FROM COMMENTS AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.TEXT LIKE '%HTTP://%'",
2,708,ERROR,KeyError: 'codebase_community',,"SELECT USERS.CREATIONDATE, USERS.AGE FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE COMMENTS.TEXT LIKE '%HTTP://%'","SELECT T2.CREATIONDATE, T2.AGE FROM COMMENTS AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.TEXT LIKE '%HTTP://%'",
3,708,ERROR,KeyError: 'codebase_community',,"SELECT USERS.CREATIONDATE, USERS.AGE FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE COMMENTS.TEXT LIKE '%HTTP://%'","SELECT T2.CREATIONDATE, T2.AGE FROM COMMENTS AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.TEXT LIKE '%HTTP://%'",
1,709,ERROR,KeyError: 'codebase_community',,SELECT COUNT(DISTINCT COMMENTS.POSTID) FROM COMMENTS INNER JOIN POSTS ON COMMENTS.POSTID = POSTS.ID WHERE COMMENTS.SCORE = 0 AND POSTS.VIEWCOUNT < 5,SELECT COUNT(T1.ID) FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T2.VIEWCOUNT < 5 AND T2.SCORE = 0,
2,709,ERROR,KeyError: 'codebase_community',,SELECT COUNT(DISTINCT COMMENTS.POSTID) FROM COMMENTS INNER JOIN POSTS ON COMMENTS.POSTID = POSTS.ID WHERE COMMENTS.SCORE = 0 AND POSTS.VIEWCOUNT < 5,SELECT COUNT(T1.ID) FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T2.VIEWCOUNT < 5 AND T2.SCORE = 0,
3,709,ERROR,KeyError: 'codebase_community',,SELECT COUNT(DISTINCT COMMENTS.POSTID) FROM COMMENTS INNER JOIN POSTS ON COMMENTS.POSTID = POSTS.ID WHERE COMMENTS.SCORE = 0 AND POSTS.VIEWCOUNT < 5,SELECT COUNT(T1.ID) FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T2.VIEWCOUNT < 5 AND T2.SCORE = 0,
1,710,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS INNER JOIN COMMENTS ON POSTS.ID = COMMENTS.POSTID WHERE POSTS.COMMENTCOUNT = 1 AND COMMENTS.SCORE = 0,SELECT COUNT(T1.ID) FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T2.COMMENTCOUNT = 1 AND T2.SCORE = 0,
2,710,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS INNER JOIN COMMENTS ON POSTS.ID = COMMENTS.POSTID WHERE POSTS.COMMENTCOUNT = 1 AND COMMENTS.SCORE = 0,SELECT COUNT(T1.ID) FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T2.COMMENTCOUNT = 1 AND T2.SCORE = 0,
3,710,ERROR,KeyError: 'codebase_community',,SELECT COUNT(*) FROM POSTS INNER JOIN COMMENTS ON POSTS.ID = COMMENTS.POSTID WHERE POSTS.COMMENTCOUNT = 1 AND COMMENTS.SCORE = 0,SELECT COUNT(T1.ID) FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T2.COMMENTCOUNT = 1 AND T2.SCORE = 0,
1,711,ERROR,KeyError: 'codebase_community',,SELECT COUNT(DISTINCT USERS.ID) FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE COMMENTS.SCORE = 0 AND USERS.AGE = 40,SELECT COUNT(DISTINCT T1.ID) FROM COMMENTS AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.SCORE = 0 AND T2.AGE = 40,
2,711,ERROR,KeyError: 'codebase_community',,SELECT COUNT(DISTINCT USERS.ID) FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE COMMENTS.SCORE = 0 AND USERS.AGE = 40,SELECT COUNT(DISTINCT T1.ID) FROM COMMENTS AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.SCORE = 0 AND T2.AGE = 40,
3,711,ERROR,KeyError: 'codebase_community',,SELECT COUNT(DISTINCT USERS.ID) FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE COMMENTS.SCORE = 0 AND USERS.AGE = 40,SELECT COUNT(DISTINCT T1.ID) FROM COMMENTS AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.SCORE = 0 AND T2.AGE = 40,
1,712,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID, COMMENTS.TEXT FROM POSTS INNER JOIN COMMENTS ON POSTS.ID = COMMENTS.POSTID WHERE POSTS.TITLE = 'GROUP DIFFERENCES ON A FIVE POINT LIKERT ITEM';","SELECT T2.ID, T1.TEXT FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T2.TITLE = 'GROUP DIFFERENCES ON A FIVE POINT LIKERT ITEM'",
2,712,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID, COMMENTS.TEXT FROM POSTS INNER JOIN COMMENTS ON POSTS.ID = COMMENTS.POSTID WHERE POSTS.TITLE = 'GROUP DIFFERENCES ON A FIVE POINT LIKERT ITEM';","SELECT T2.ID, T1.TEXT FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T2.TITLE = 'GROUP DIFFERENCES ON A FIVE POINT LIKERT ITEM'",
3,712,ERROR,KeyError: 'codebase_community',,"SELECT POSTS.ID, COMMENTS.TEXT FROM POSTS INNER JOIN COMMENTS ON POSTS.ID = COMMENTS.POSTID WHERE POSTS.TITLE = 'GROUP DIFFERENCES ON A FIVE POINT LIKERT ITEM';","SELECT T2.ID, T1.TEXT FROM COMMENTS AS T1 INNER JOIN POSTS AS T2 ON T1.POSTID = T2.ID WHERE T2.TITLE = 'GROUP DIFFERENCES ON A FIVE POINT LIKERT ITEM'",
1,713,ERROR,KeyError: 'codebase_community',,SELECT USERS.UPVOTES FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE COMMENTS.TEXT = 'R IS ALSO LAZY EVALUATED.';,SELECT T2.UPVOTES FROM COMMENTS AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.TEXT = 'R IS ALSO LAZY EVALUATED.',
2,713,ERROR,KeyError: 'codebase_community',,SELECT USERS.UPVOTES FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE COMMENTS.TEXT = 'R IS ALSO LAZY EVALUATED.';,SELECT T2.UPVOTES FROM COMMENTS AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.TEXT = 'R IS ALSO LAZY EVALUATED.',
3,713,ERROR,KeyError: 'codebase_community',,SELECT USERS.UPVOTES FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE COMMENTS.TEXT = 'R IS ALSO LAZY EVALUATED.';,SELECT T2.UPVOTES FROM COMMENTS AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.TEXT = 'R IS ALSO LAZY EVALUATED.',
1,714,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'HARVEY MOTULSKY';,SELECT T1.TEXT FROM COMMENTS AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T2.DISPLAYNAME = 'HARVEY MOTULSKY',
2,714,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'HARVEY MOTULSKY';,SELECT T1.TEXT FROM COMMENTS AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T2.DISPLAYNAME = 'HARVEY MOTULSKY',
3,714,ERROR,KeyError: 'codebase_community',,SELECT COMMENTS.TEXT FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE USERS.DISPLAYNAME = 'HARVEY MOTULSKY';,SELECT T1.TEXT FROM COMMENTS AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T2.DISPLAYNAME = 'HARVEY MOTULSKY',
1,715,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE COMMENTS.SCORE BETWEEN 1 AND 5 AND USERS.DOWNVOTES = 0,SELECT T2.DISPLAYNAME FROM COMMENTS AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.SCORE BETWEEN 1 AND 5 AND T2.DOWNVOTES = 0,
2,715,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE COMMENTS.SCORE BETWEEN 1 AND 5 AND USERS.DOWNVOTES = 0,SELECT T2.DISPLAYNAME FROM COMMENTS AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.SCORE BETWEEN 1 AND 5 AND T2.DOWNVOTES = 0,
3,715,ERROR,KeyError: 'codebase_community',,SELECT USERS.DISPLAYNAME FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE COMMENTS.SCORE BETWEEN 1 AND 5 AND USERS.DOWNVOTES = 0,SELECT T2.DISPLAYNAME FROM COMMENTS AS T1 INNER JOIN USERS AS T2 ON T1.USERID = T2.ID WHERE T1.SCORE BETWEEN 1 AND 5 AND T2.DOWNVOTES = 0,
1,716,ERROR,KeyError: 'codebase_community',,SELECT CAST(COUNT(DISTINCT DF2.USERID) * 100.0 / COUNT(DISTINCT DF1.USERID)) AS PERCENTAGE FROM (SELECT USERID FROM COMMENTS WHERE SCORE BETWEEN 5 AND 10) AS DF1 LEFT JOIN (SELECT USERID FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE USERS.UPVOTES = 0 AND COMMENTS.SCORE BETWEEN 5 AND 10) AS DF2 ON DF1.USERID = DF2.USERID,"SELECT CAST(SUM(IIF(T1.UPVOTES = 0, 1, 0)) AS REAL) * 100/ COUNT(T1.ID) AS PER FROM USERS AS T1 INNER JOIN COMMENTS AS T2 ON T1.ID = T2.USERID WHERE T2.SCORE BETWEEN 5 AND 10",
2,716,ERROR,KeyError: 'codebase_community',,SELECT CAST(COUNT(DISTINCT DF2.USERID) * 100.0 / COUNT(DISTINCT DF1.USERID)) AS PERCENTAGE FROM (SELECT USERID FROM COMMENTS WHERE SCORE BETWEEN 5 AND 10) AS DF1 LEFT JOIN (SELECT USERID FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE USERS.UPVOTES = 0 AND COMMENTS.SCORE BETWEEN 5 AND 10) AS DF2 ON DF1.USERID = DF2.USERID,"SELECT CAST(SUM(IIF(T1.UPVOTES = 0, 1, 0)) AS REAL) * 100/ COUNT(T1.ID) AS PER FROM USERS AS T1 INNER JOIN COMMENTS AS T2 ON T1.ID = T2.USERID WHERE T2.SCORE BETWEEN 5 AND 10",
3,716,ERROR,KeyError: 'codebase_community',,SELECT CAST(COUNT(DISTINCT DF2.USERID) * 100.0 / COUNT(DISTINCT DF1.USERID)) AS PERCENTAGE FROM (SELECT USERID FROM COMMENTS WHERE SCORE BETWEEN 5 AND 10) AS DF1 LEFT JOIN (SELECT USERID FROM COMMENTS INNER JOIN USERS ON COMMENTS.USERID = USERS.ID WHERE USERS.UPVOTES = 0 AND COMMENTS.SCORE BETWEEN 5 AND 10) AS DF2 ON DF1.USERID = DF2.USERID,"SELECT CAST(SUM(IIF(T1.UPVOTES = 0, 1, 0)) AS REAL) * 100/ COUNT(T1.ID) AS PER FROM USERS AS T1 INNER JOIN COMMENTS AS T2 ON T1.ID = T2.USERID WHERE T2.SCORE BETWEEN 5 AND 10",
1,717,True,,0.053181,SELECT SUPERPOWER.POWER_NAME FROM HERO_POWER INNER JOIN SUPERHERO ON HERO_POWER.HERO_ID = SUPERHERO.ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE SUPERHERO.SUPERHERO_NAME = '3-D MAN',SELECT T3.POWER_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID INNER JOIN SUPERPOWER AS T3 ON T2.POWER_ID = T3.ID WHERE T1.SUPERHERO_NAME = '3-D MAN',
1,718,True,,0.052958,SELECT COUNT(*) FROM SUPERHERO INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE SUPERPOWER.POWER_NAME = 'SUPER STRENGTH';,SELECT COUNT(T1.HERO_ID) FROM HERO_POWER AS T1 INNER JOIN SUPERPOWER AS T2 ON T1.POWER_ID = T2.ID WHERE T2.POWER_NAME = 'SUPER STRENGTH',
1,719,True,,0.083897,SELECT COUNT(*) FROM HERO_POWER INNER JOIN SUPERHERO ON HERO_POWER.HERO_ID = SUPERHERO.ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE SUPERPOWER.POWER_NAME = 'SUPER STRENGTH' AND SUPERHERO.HEIGHT_CM > 200,SELECT COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID INNER JOIN SUPERPOWER AS T3 ON T2.POWER_ID = T3.ID WHERE T3.POWER_NAME = 'SUPER STRENGTH' AND T1.HEIGHT_CM > 200,
1,720,True,,0.052625,SELECT SUPERHERO.FULL_NAME FROM SUPERHERO INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID GROUP BY SUPERHERO.ID HAVING COUNT(HERO_POWER.POWER_ID) > 15,SELECT DISTINCT T1.FULL_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID GROUP BY T1.FULL_NAME HAVING COUNT(T2.POWER_ID) > 15,
1,721,True,,0.045168,SELECT COUNT(*) FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID WHERE COLOUR.COLOUR = 'BLUE';,SELECT COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.EYE_COLOUR_ID = T2.ID WHERE T2.COLOUR = 'BLUE',
1,722,True,,0.040704,SELECT COLOUR.COLOUR FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.SKIN_COLOUR_ID = COLOUR.ID WHERE SUPERHERO.SUPERHERO_NAME = 'APOCALYPSE',SELECT T2.COLOUR FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.SKIN_COLOUR_ID = T2.ID WHERE T1.SUPERHERO_NAME = 'APOCALYPSE',
1,723,True,,0.105277,SELECT COUNT(*) FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE COLOUR.COLOUR = 'BLUE' AND SUPERPOWER.POWER_NAME = 'AGILITY',SELECT COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID INNER JOIN SUPERPOWER AS T3 ON T2.POWER_ID = T3.ID INNER JOIN COLOUR AS T4 ON T1.EYE_COLOUR_ID = T4.ID WHERE T3.POWER_NAME = 'AGILITY' AND T4.COLOUR = 'BLUE',
1,724,True,,0.083684,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN COLOUR AS EYE_COLOUR ON SUPERHERO.EYE_COLOUR_ID = EYE_COLOUR.ID INNER JOIN COLOUR AS HAIR_COLOUR ON SUPERHERO.HAIR_COLOUR_ID = HAIR_COLOUR.ID WHERE EYE_COLOUR.COLOUR = 'BLUE' AND HAIR_COLOUR.COLOUR = 'BLOND',SELECT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.EYE_COLOUR_ID = T2.ID INNER JOIN COLOUR AS T3 ON T1.HAIR_COLOUR_ID = T3.ID WHERE T2.COLOUR = 'BLUE' AND T3.COLOUR = 'BLOND',
1,725,True,,0.045889,SELECT COUNT(*) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS';,SELECT COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID WHERE T2.PUBLISHER_NAME = 'MARVEL COMICS',
1,726,ERROR,NotSupportedError: Not supported feature: OVER,,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS' ORDER BY SUPERHERO.HEIGHT_CM DESC,"SELECT SUPERHERO_NAME, HEIGHT_CM, RANK() OVER (ORDER BY HEIGHT_CM DESC) AS HEIGHTRANK FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS'",
2,726,ERROR,NotSupportedError: Not supported feature: OVER,,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS' ORDER BY SUPERHERO.HEIGHT_CM DESC,"SELECT SUPERHERO_NAME, HEIGHT_CM, RANK() OVER (ORDER BY HEIGHT_CM DESC) AS HEIGHTRANK FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS'",
3,726,ERROR,NotSupportedError: Not supported feature: OVER,,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS' ORDER BY SUPERHERO.HEIGHT_CM DESC,"SELECT SUPERHERO_NAME, HEIGHT_CM, RANK() OVER (ORDER BY HEIGHT_CM DESC) AS HEIGHTRANK FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS'",
1,727,True,,0.040649,SELECT PUBLISHER.PUBLISHER_NAME FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE SUPERHERO.SUPERHERO_NAME = 'SAURON',SELECT T2.PUBLISHER_NAME FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID WHERE T1.SUPERHERO_NAME = 'SAURON',
1,728,ERROR,NotSupportedError: Not supported feature: OVER,,"SELECT COLOUR.COLOUR, COUNT(SUPERHERO.ID) FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS' GROUP BY COLOUR.COLOUR ORDER BY COUNT(SUPERHERO.ID) DESC","SELECT COLOUR.COLOUR AS EYECOLOR, COUNT(SUPERHERO.ID) AS COUNT, RANK() OVER (ORDER BY COUNT(SUPERHERO.ID) DESC) AS POPULARITYRANK FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS' GROUP BY COLOUR.COLOUR",
2,728,ERROR,NotSupportedError: Not supported feature: OVER,,"SELECT COLOUR.COLOUR, COUNT(SUPERHERO.ID) FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS' GROUP BY COLOUR.COLOUR ORDER BY COUNT(SUPERHERO.ID) DESC","SELECT COLOUR.COLOUR AS EYECOLOR, COUNT(SUPERHERO.ID) AS COUNT, RANK() OVER (ORDER BY COUNT(SUPERHERO.ID) DESC) AS POPULARITYRANK FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS' GROUP BY COLOUR.COLOUR",
3,728,ERROR,NotSupportedError: Not supported feature: OVER,,"SELECT COLOUR.COLOUR, COUNT(SUPERHERO.ID) FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS' GROUP BY COLOUR.COLOUR ORDER BY COUNT(SUPERHERO.ID) DESC","SELECT COLOUR.COLOUR AS EYECOLOR, COUNT(SUPERHERO.ID) AS COUNT, RANK() OVER (ORDER BY COUNT(SUPERHERO.ID) DESC) AS POPULARITYRANK FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS' GROUP BY COLOUR.COLOUR",
1,729,True,,0.051631,SELECT AVG(SUPERHERO.HEIGHT_CM) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS',SELECT AVG(T1.HEIGHT_CM) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID WHERE T2.PUBLISHER_NAME = 'MARVEL COMICS',
1,730,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ALIGNMENT (
	ID VARCHAR(20),
	ALIGNMENT VARCHAR(20)
);
INSERT INTO ALIGNMENT VALUES ('2147483648', '2147483648');
CREATE TABLE ATTRIBUTE (
	ID VARCHAR(20),
	ATTRIBUTE_NAME VARCHAR(20)
);
INSERT INTO ATTRIBUTE VALUES ('2147483648', '2147483648');
CREATE TABLE COLOUR (
	ID VARCHAR(20),
	COLOUR VARCHAR(20)
);
INSERT INTO COLOUR VALUES ('2147483648', '2147483648');
CREATE TABLE GENDER (
	ID VARCHAR(20),
	GENDER VARCHAR(20)
);
INSERT INTO GENDER VALUES ('2147483648', '2147483648');
CREATE TABLE PUBLISHER (
	ID VARCHAR(20),
	PUBLISHER_NAME VARCHAR(20)
);
INSERT INTO PUBLISHER VALUES ('2147483648', 'MARVEL COMICS');
CREATE TABLE RACE (
	ID VARCHAR(20),
	RACE VARCHAR(20)
);
INSERT INTO RACE VALUES ('2147483648', '2147483648');
CREATE TABLE SUPERHERO (
	ID VARCHAR(20),
	SUPERHERO_NAME VARCHAR(20),
	FULL_NAME VARCHAR(20),
	GENDER_ID VARCHAR(20),
	EYE_COLOUR_ID VARCHAR(20),
	HAIR_COLOUR_ID VARCHAR(20),
	SKIN_COLOUR_ID VARCHAR(20),
	RACE_ID VARCHAR(20),
	PUBLISHER_ID VARCHAR(20),
	ALIGNMENT_ID VARCHAR(20),
	HEIGHT_CM VARCHAR(20),
	WEIGHT_KG VARCHAR(20)
);
INSERT INTO SUPERHERO VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE HERO_ATTRIBUTE (
	HERO_ID VARCHAR(20),
	ATTRIBUTE_ID VARCHAR(20),
	ATTRIBUTE_VALUE VARCHAR(20)
);
INSERT INTO HERO_ATTRIBUTE VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE SUPERPOWER (
	ID VARCHAR(20),
	POWER_NAME VARCHAR(20)
);
INSERT INTO SUPERPOWER VALUES ('2147483648', 'SUPER STRENGTH');
CREATE TABLE HERO_POWER (
	HERO_ID VARCHAR(20),
	POWER_ID VARCHAR(20)
);
INSERT INTO HERO_POWER VALUES ('2147483648', '2147483648');
-- ----------sql1------------
-- 2147483648
SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS' AND SUPERPOWER.POWER_NAME = 'SUPER STRENGTH';
-- ----------sql2------------
SELECT SUPERHERO_NAME FROM SUPERHERO AS T1 WHERE EXISTS (SELECT 1 FROM HERO_POWER AS T2 INNER JOIN SUPERPOWER AS T3 ON T2.POWER_ID = T3.ID WHERE T3.POWER_NAME = 'SUPER STRENGTH' AND T1.ID = T2.HERO_ID)AND EXISTS (SELECT 1 FROM PUBLISHER AS T4 WHERE T4.PUBLISHER_NAME = 'MARVEL COMICS' AND T1.PUBLISHER_ID = T4.ID);
",0.105219,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS' AND SUPERPOWER.POWER_NAME = 'SUPER STRENGTH';,SELECT SUPERHERO_NAME FROM SUPERHERO AS T1 WHERE EXISTS (SELECT 1 FROM HERO_POWER AS T2 INNER JOIN SUPERPOWER AS T3 ON T2.POWER_ID = T3.ID WHERE T3.POWER_NAME = 'SUPER STRENGTH' AND T1.ID = T2.HERO_ID)AND EXISTS (SELECT 1 FROM PUBLISHER AS T4 WHERE T4.PUBLISHER_NAME = 'MARVEL COMICS' AND T1.PUBLISHER_ID = T4.ID),
1,731,True,,0.046989,SELECT COUNT(*) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'DC COMICS';,SELECT COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID WHERE T2.PUBLISHER_NAME = 'DC COMICS',
1,732,True,,0.08554,SELECT PUBLISHER.PUBLISHER_NAME FROM HERO_ATTRIBUTE INNER JOIN SUPERHERO ON HERO_ATTRIBUTE.HERO_ID = SUPERHERO.ID INNER JOIN ATTRIBUTE ON HERO_ATTRIBUTE.ATTRIBUTE_ID = ATTRIBUTE.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE ATTRIBUTE.ATTRIBUTE_NAME = 'SPEED' ORDER BY HERO_ATTRIBUTE.ATTRIBUTE_VALUE ASC LIMIT 1,SELECT T2.PUBLISHER_NAME FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID INNER JOIN HERO_ATTRIBUTE AS T3 ON T1.ID = T3.HERO_ID INNER JOIN ATTRIBUTE AS T4 ON T3.ATTRIBUTE_ID = T4.ID WHERE T4.ATTRIBUTE_NAME = 'SPEED' ORDER BY T3.ATTRIBUTE_VALUE LIMIT 1,
1,733,True,,0.088055,SELECT COUNT(*) FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE COLOUR.COLOUR = 'GOLD' AND PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS',SELECT COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID INNER JOIN COLOUR AS T3 ON T1.EYE_COLOUR_ID = T3.ID WHERE T2.PUBLISHER_NAME = 'MARVEL COMICS' AND T3.COLOUR = 'GOLD',
1,734,True,,0.040942,SELECT PUBLISHER.PUBLISHER_NAME FROM PUBLISHER INNER JOIN SUPERHERO ON PUBLISHER.ID = SUPERHERO.PUBLISHER_ID WHERE SUPERHERO.SUPERHERO_NAME = 'BLUE BEETLE II',SELECT T2.PUBLISHER_NAME FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID WHERE T1.SUPERHERO_NAME = 'BLUE BEETLE II',
1,735,True,,0.056685,SELECT COUNT(SUPERHERO.ID) FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.HAIR_COLOUR_ID = COLOUR.ID WHERE COLOUR.COLOUR = 'BLOND',SELECT COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.HAIR_COLOUR_ID = T2.ID WHERE T2.COLOUR = 'BLOND',
1,736,True,,0.065323,SELECT SUPERHERO.SUPERHERO_NAME FROM HERO_ATTRIBUTE INNER JOIN SUPERHERO ON HERO_ATTRIBUTE.HERO_ID = SUPERHERO.ID INNER JOIN ATTRIBUTE ON HERO_ATTRIBUTE.ATTRIBUTE_ID = ATTRIBUTE.ID WHERE ATTRIBUTE.ATTRIBUTE_NAME = 'INTELLIGENCE' ORDER BY HERO_ATTRIBUTE.ATTRIBUTE_VALUE ASC LIMIT 1,SELECT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_ATTRIBUTE AS T2 ON T1.ID = T2.HERO_ID INNER JOIN ATTRIBUTE AS T3 ON T2.ATTRIBUTE_ID = T3.ID WHERE T3.ATTRIBUTE_NAME = 'INTELLIGENCE' ORDER BY T2.ATTRIBUTE_VALUE LIMIT 1,
1,737,True,,0.046547,SELECT RACE.RACE FROM SUPERHERO INNER JOIN RACE ON SUPERHERO.RACE_ID = RACE.ID WHERE SUPERHERO.SUPERHERO_NAME = 'COPYCAT';,SELECT T2.RACE FROM SUPERHERO AS T1 INNER JOIN RACE AS T2 ON T1.RACE_ID = T2.ID WHERE T1.SUPERHERO_NAME = 'COPYCAT',
1,738,True,,0.078247,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN HERO_ATTRIBUTE ON SUPERHERO.ID = HERO_ATTRIBUTE.HERO_ID INNER JOIN ATTRIBUTE ON HERO_ATTRIBUTE.ATTRIBUTE_ID = ATTRIBUTE.ID WHERE ATTRIBUTE.ATTRIBUTE_NAME = 'DURABILITY' AND HERO_ATTRIBUTE.ATTRIBUTE_VALUE < 50,SELECT SUPERHERO_NAME FROM SUPERHERO AS T1 WHERE EXISTS (SELECT 1 FROM HERO_ATTRIBUTE AS T2 INNER JOIN ATTRIBUTE AS T3 ON T2.ATTRIBUTE_ID = T3.ID WHERE T3.ATTRIBUTE_NAME = 'DURABILITY' AND T2.ATTRIBUTE_VALUE < 50 AND T1.ID = T2.HERO_ID),
1,739,True,,0.063185,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE SUPERPOWER.POWER_NAME = 'DEATH TOUCH',SELECT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID INNER JOIN SUPERPOWER AS T3 ON T2.POWER_ID = T3.ID WHERE T3.POWER_NAME = 'DEATH TOUCH',
1,740,True,,0.122319,SELECT COUNT(*) FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID INNER JOIN HERO_ATTRIBUTE ON SUPERHERO.ID = HERO_ATTRIBUTE.HERO_ID INNER JOIN ATTRIBUTE ON HERO_ATTRIBUTE.ATTRIBUTE_ID = ATTRIBUTE.ID WHERE GENDER.GENDER = 'FEMALE' AND ATTRIBUTE.ATTRIBUTE_NAME = 'STRENGTH' AND HERO_ATTRIBUTE.ATTRIBUTE_VALUE = 100,SELECT COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN HERO_ATTRIBUTE AS T2 ON T1.ID = T2.HERO_ID INNER JOIN ATTRIBUTE AS T3 ON T2.ATTRIBUTE_ID = T3.ID INNER JOIN GENDER AS T4 ON T1.GENDER_ID = T4.ID WHERE T3.ATTRIBUTE_NAME = 'STRENGTH' AND T2.ATTRIBUTE_VALUE = 100 AND T4.GENDER = 'FEMALE',
1,741,ERROR,AttributeError: 'GroupbyContext' object has no attribute 'groupby_ctx',,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID GROUP BY SUPERHERO.ID HAVING COUNT(HERO_POWER.POWER_ID) = (SELECT MAX(COUNT(HERO_POWER.POWER_ID)) FROM HERO_POWER GROUP BY HERO_POWER.HERO_ID),SELECT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID GROUP BY T1.SUPERHERO_NAME ORDER BY COUNT(T2.HERO_ID) DESC LIMIT 1,
2,741,ERROR,AttributeError: 'GroupbyContext' object has no attribute 'groupby_ctx',,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID GROUP BY SUPERHERO.ID HAVING COUNT(HERO_POWER.POWER_ID) = (SELECT MAX(COUNT(HERO_POWER.POWER_ID)) FROM HERO_POWER GROUP BY HERO_POWER.HERO_ID),SELECT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID GROUP BY T1.SUPERHERO_NAME ORDER BY COUNT(T2.HERO_ID) DESC LIMIT 1,
3,741,ERROR,AttributeError: 'GroupbyContext' object has no attribute 'groupby_ctx',,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID GROUP BY SUPERHERO.ID HAVING COUNT(HERO_POWER.POWER_ID) = (SELECT MAX(COUNT(HERO_POWER.POWER_ID)) FROM HERO_POWER GROUP BY HERO_POWER.HERO_ID),SELECT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID GROUP BY T1.SUPERHERO_NAME ORDER BY COUNT(T2.HERO_ID) DESC LIMIT 1,
1,742,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ALIGNMENT (
	ID VARCHAR(20),
	ALIGNMENT VARCHAR(20)
);
INSERT INTO ALIGNMENT VALUES ('2147483648', '2147483648');
CREATE TABLE ATTRIBUTE (
	ID VARCHAR(20),
	ATTRIBUTE_NAME VARCHAR(20)
);
INSERT INTO ATTRIBUTE VALUES ('2147483648', '2147483648');
CREATE TABLE COLOUR (
	ID VARCHAR(20),
	COLOUR VARCHAR(20)
);
INSERT INTO COLOUR VALUES ('2147483648', '2147483648');
CREATE TABLE GENDER (
	ID VARCHAR(20),
	GENDER VARCHAR(20)
);
INSERT INTO GENDER VALUES ('2147483648', '2147483648');
CREATE TABLE PUBLISHER (
	ID VARCHAR(20),
	PUBLISHER_NAME VARCHAR(20)
);
INSERT INTO PUBLISHER VALUES ('2147483648', '2147483648');
CREATE TABLE RACE (
	ID VARCHAR(20),
	RACE VARCHAR(20)
);
INSERT INTO RACE VALUES ('2147483648', 'VAMPIRE');
CREATE TABLE SUPERHERO (
	ID VARCHAR(20),
	SUPERHERO_NAME VARCHAR(20),
	FULL_NAME VARCHAR(20),
	GENDER_ID VARCHAR(20),
	EYE_COLOUR_ID VARCHAR(20),
	HAIR_COLOUR_ID VARCHAR(20),
	SKIN_COLOUR_ID VARCHAR(20),
	RACE_ID VARCHAR(20),
	PUBLISHER_ID VARCHAR(20),
	ALIGNMENT_ID VARCHAR(20),
	HEIGHT_CM VARCHAR(20),
	WEIGHT_KG VARCHAR(20)
);
INSERT INTO SUPERHERO VALUES ('2147483648', NULL, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE HERO_ATTRIBUTE (
	HERO_ID VARCHAR(20),
	ATTRIBUTE_ID VARCHAR(20),
	ATTRIBUTE_VALUE VARCHAR(20)
);
INSERT INTO HERO_ATTRIBUTE VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE SUPERPOWER (
	ID VARCHAR(20),
	POWER_NAME VARCHAR(20)
);
INSERT INTO SUPERPOWER VALUES ('2147483648', '2147483648');
CREATE TABLE HERO_POWER (
	HERO_ID VARCHAR(20),
	POWER_ID VARCHAR(20)
);
INSERT INTO HERO_POWER VALUES ('2147483648', '2147483648');
-- ----------sql1------------
-- 1
SELECT COUNT(*) FROM SUPERHERO INNER JOIN RACE ON SUPERHERO.RACE_ID = RACE.ID WHERE RACE.RACE = 'VAMPIRE';
-- ----------sql2------------
-- 0
SELECT COUNT(T1.SUPERHERO_NAME) FROM SUPERHERO AS T1 INNER JOIN RACE AS T2 ON T1.RACE_ID = T2.ID WHERE T2.RACE = 'VAMPIRE';
",0.047229,SELECT COUNT(*) FROM SUPERHERO INNER JOIN RACE ON SUPERHERO.RACE_ID = RACE.ID WHERE RACE.RACE = 'VAMPIRE';,SELECT COUNT(T1.SUPERHERO_NAME) FROM SUPERHERO AS T1 INNER JOIN RACE AS T2 ON T1.RACE_ID = T2.ID WHERE T2.RACE = 'VAMPIRE',
1,743,ERROR,NotImplementedError: {'real': {}},,"SELECT CAST(COUNT(*) FILTER (WHERE ALIGNMENT.ALIGNMENT = 'BAD' AND PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') AS REAL) * 100 / COUNT(*) FILTER (WHERE ALIGNMENT.ALIGNMENT = 'BAD'), COUNT(*) FILTER (WHERE ALIGNMENT.ALIGNMENT = 'BAD' AND PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') FROM SUPERHERO INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID","SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM SUPERHERO)), CAST(SUM(CASE WHEN T2.PUBLISHER_NAME = 'MARVEL COMICS' THEN 1 ELSE 0 END) AS REAL) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID INNER JOIN ALIGNMENT AS T3 ON T3.ID = T1.ALIGNMENT_ID WHERE T3.ALIGNMENT = 'BAD'",
2,743,ERROR,NotImplementedError: {'real': {}},,"SELECT CAST(COUNT(*) FILTER (WHERE ALIGNMENT.ALIGNMENT = 'BAD' AND PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') AS REAL) * 100 / COUNT(*) FILTER (WHERE ALIGNMENT.ALIGNMENT = 'BAD'), COUNT(*) FILTER (WHERE ALIGNMENT.ALIGNMENT = 'BAD' AND PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') FROM SUPERHERO INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID","SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM SUPERHERO)), CAST(SUM(CASE WHEN T2.PUBLISHER_NAME = 'MARVEL COMICS' THEN 1 ELSE 0 END) AS REAL) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID INNER JOIN ALIGNMENT AS T3 ON T3.ID = T1.ALIGNMENT_ID WHERE T3.ALIGNMENT = 'BAD'",
3,743,ERROR,NotImplementedError: {'real': {}},,"SELECT CAST(COUNT(*) FILTER (WHERE ALIGNMENT.ALIGNMENT = 'BAD' AND PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') AS REAL) * 100 / COUNT(*) FILTER (WHERE ALIGNMENT.ALIGNMENT = 'BAD'), COUNT(*) FILTER (WHERE ALIGNMENT.ALIGNMENT = 'BAD' AND PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') FROM SUPERHERO INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID","SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM SUPERHERO)), CAST(SUM(CASE WHEN T2.PUBLISHER_NAME = 'MARVEL COMICS' THEN 1 ELSE 0 END) AS REAL) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID INNER JOIN ALIGNMENT AS T3 ON T3.ID = T1.ALIGNMENT_ID WHERE T3.ALIGNMENT = 'BAD'",
1,744,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT COUNT(*) FROM SUPERHERO WHERE PUBLISHER_ID = (SELECT ID FROM PUBLISHER WHERE PUBLISHER_NAME = 'MARVEL COMICS')) - (SELECT COUNT(*) FROM SUPERHERO WHERE PUBLISHER_ID = (SELECT ID FROM PUBLISHER WHERE PUBLISHER_NAME = 'DC COMICS')) AS DIFFERENCE,SELECT SUM(CASE WHEN T2.PUBLISHER_NAME = 'MARVEL COMICS' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.PUBLISHER_NAME = 'DC COMICS' THEN 1 ELSE 0 END) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID,
2,744,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT COUNT(*) FROM SUPERHERO WHERE PUBLISHER_ID = (SELECT ID FROM PUBLISHER WHERE PUBLISHER_NAME = 'MARVEL COMICS')) - (SELECT COUNT(*) FROM SUPERHERO WHERE PUBLISHER_ID = (SELECT ID FROM PUBLISHER WHERE PUBLISHER_NAME = 'DC COMICS')) AS DIFFERENCE,SELECT SUM(CASE WHEN T2.PUBLISHER_NAME = 'MARVEL COMICS' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.PUBLISHER_NAME = 'DC COMICS' THEN 1 ELSE 0 END) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID,
3,744,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT COUNT(*) FROM SUPERHERO WHERE PUBLISHER_ID = (SELECT ID FROM PUBLISHER WHERE PUBLISHER_NAME = 'MARVEL COMICS')) - (SELECT COUNT(*) FROM SUPERHERO WHERE PUBLISHER_ID = (SELECT ID FROM PUBLISHER WHERE PUBLISHER_NAME = 'DC COMICS')) AS DIFFERENCE,SELECT SUM(CASE WHEN T2.PUBLISHER_NAME = 'MARVEL COMICS' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.PUBLISHER_NAME = 'DC COMICS' THEN 1 ELSE 0 END) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID,
1,745,True,,0.021144,SELECT PUBLISHER.ID FROM PUBLISHER WHERE PUBLISHER.PUBLISHER_NAME = 'STAR TREK';,SELECT ID FROM PUBLISHER WHERE PUBLISHER_NAME = 'STAR TREK',
1,746,True,,0.025223,SELECT AVG(HERO_ATTRIBUTE.ATTRIBUTE_VALUE) FROM HERO_ATTRIBUTE,SELECT AVG(ATTRIBUTE_VALUE) FROM HERO_ATTRIBUTE,
1,747,True,,0.0242749999999999,SELECT COUNT(*) FROM SUPERHERO WHERE FULL_NAME IS NULL,SELECT COUNT(ID) FROM SUPERHERO WHERE FULL_NAME IS NULL,
1,748,True,,0.040585,SELECT COLOUR.COLOUR FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID WHERE SUPERHERO.ID = 75;,SELECT T2.COLOUR FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.EYE_COLOUR_ID = T2.ID WHERE T1.ID = 75,
1,749,True,,0.062409,SELECT SUPERPOWER.POWER_NAME FROM SUPERHERO INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE SUPERHERO.SUPERHERO_NAME = 'DEATHLOK',SELECT T3.POWER_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID INNER JOIN SUPERPOWER AS T3 ON T2.POWER_ID = T3.ID WHERE T1.SUPERHERO_NAME = 'DEATHLOK',
1,750,True,,0.0556319999999999,SELECT AVG(SUPERHERO.WEIGHT_KG) FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID WHERE GENDER.GENDER = 'FEMALE',SELECT AVG(T1.WEIGHT_KG) FROM SUPERHERO AS T1 INNER JOIN GENDER AS T2 ON T1.GENDER_ID = T2.ID WHERE T2.GENDER = 'FEMALE',
1,751,True,,0.086359,SELECT DISTINCT SUPERPOWER.POWER_NAME FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE GENDER.GENDER = 'MALE' LIMIT 5,SELECT T3.POWER_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID INNER JOIN SUPERPOWER AS T3 ON T3.ID = T2.POWER_ID INNER JOIN GENDER AS T4 ON T4.ID = T1.GENDER_ID WHERE T4.GENDER = 'MALE' LIMIT 5,
1,752,True,,0.040957,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN RACE ON SUPERHERO.RACE_ID = RACE.ID WHERE RACE.RACE = 'ALIEN',SELECT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN RACE AS T2 ON T1.RACE_ID = T2.ID WHERE T2.RACE = 'ALIEN',
1,753,True,,0.189675,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO LEFT JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID WHERE SUPERHERO.HEIGHT_CM BETWEEN 170 AND 190 AND COLOUR.COLOUR = 'NO COLOUR',SELECT DISTINCT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.EYE_COLOUR_ID = T2.ID WHERE T1.HEIGHT_CM BETWEEN 170 AND 190 AND T2.COLOUR = 'NO COLOUR',
1,754,True,,0.03158,SELECT SUPERPOWER.POWER_NAME FROM SUPERPOWER INNER JOIN HERO_POWER ON SUPERPOWER.ID = HERO_POWER.POWER_ID WHERE HERO_POWER.HERO_ID = 56,SELECT T2.POWER_NAME FROM HERO_POWER AS T1 INNER JOIN SUPERPOWER AS T2 ON T1.POWER_ID = T2.ID WHERE T1.HERO_ID = 56,
1,755,True,,0.041159,SELECT SUPERHERO.FULL_NAME FROM SUPERHERO INNER JOIN RACE ON SUPERHERO.RACE_ID = RACE.ID WHERE RACE.RACE = 'DEMI-GOD' LIMIT 5,SELECT T1.FULL_NAME FROM SUPERHERO AS T1 INNER JOIN RACE AS T2 ON T1.RACE_ID = T2.ID WHERE T2.RACE = 'DEMI-GOD',
1,756,True,,0.0462259999999999,SELECT COUNT(*) FROM SUPERHERO INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID WHERE ALIGNMENT.ALIGNMENT = 'BAD';,SELECT COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN ALIGNMENT AS T2 ON T1.ALIGNMENT_ID = T2.ID WHERE T2.ALIGNMENT = 'BAD',
1,757,True,,0.040596,SELECT RACE.RACE FROM SUPERHERO INNER JOIN RACE ON SUPERHERO.RACE_ID = RACE.ID WHERE SUPERHERO.WEIGHT_KG = 169,SELECT T2.RACE FROM SUPERHERO AS T1 INNER JOIN RACE AS T2 ON T1.RACE_ID = T2.ID WHERE T1.WEIGHT_KG = 169,
1,758,True,,0.0812629999999999,SELECT COLOUR.COLOUR FROM SUPERHERO INNER JOIN RACE ON SUPERHERO.RACE_ID = RACE.ID INNER JOIN COLOUR ON SUPERHERO.HAIR_COLOUR_ID = COLOUR.ID WHERE SUPERHERO.HEIGHT_CM = 185 AND RACE.RACE = 'HUMAN';,SELECT DISTINCT T3.COLOUR FROM SUPERHERO AS T1 INNER JOIN RACE AS T2 ON T1.RACE_ID = T2.ID INNER JOIN COLOUR AS T3 ON T1.HAIR_COLOUR_ID = T3.ID WHERE T1.HEIGHT_CM = 185 AND T2.RACE = 'HUMAN',
1,759,True,,0.0378929999999999,SELECT COLOUR.COLOUR FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID ORDER BY SUPERHERO.WEIGHT_KG DESC LIMIT 1,SELECT T2.COLOUR FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.EYE_COLOUR_ID = T2.ID ORDER BY T1.WEIGHT_KG DESC LIMIT 1,
1,760,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE SUPERHERO.HEIGHT_CM BETWEEN 150 AND 180 AND PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') AS REAL) * 100) / (SELECT COUNT(*) FROM SUPERHERO WHERE SUPERHERO.HEIGHT_CM BETWEEN 150 AND 180) AS PERCENTAGE FROM SUPERHERO LIMIT 1;,SELECT CAST(COUNT(CASE WHEN T2.PUBLISHER_NAME = 'MARVEL COMICS' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID WHERE T1.HEIGHT_CM BETWEEN 150 AND 180,
2,760,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE SUPERHERO.HEIGHT_CM BETWEEN 150 AND 180 AND PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') AS REAL) * 100) / (SELECT COUNT(*) FROM SUPERHERO WHERE SUPERHERO.HEIGHT_CM BETWEEN 150 AND 180) AS PERCENTAGE FROM SUPERHERO LIMIT 1;,SELECT CAST(COUNT(CASE WHEN T2.PUBLISHER_NAME = 'MARVEL COMICS' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID WHERE T1.HEIGHT_CM BETWEEN 150 AND 180,
3,760,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE SUPERHERO.HEIGHT_CM BETWEEN 150 AND 180 AND PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') AS REAL) * 100) / (SELECT COUNT(*) FROM SUPERHERO WHERE SUPERHERO.HEIGHT_CM BETWEEN 150 AND 180) AS PERCENTAGE FROM SUPERHERO LIMIT 1;,SELECT CAST(COUNT(CASE WHEN T2.PUBLISHER_NAME = 'MARVEL COMICS' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID WHERE T1.HEIGHT_CM BETWEEN 150 AND 180,
1,761,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SUPERHERO__SUPERHERO_NAME`,,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID WHERE GENDER.GENDER = 'MALE' AND SUPERHERO.WEIGHT_KG > (SELECT AVG(SUPERHERO.WEIGHT_KG)*0.79 FROM SUPERHERO),SELECT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN GENDER AS T2 ON T1.GENDER_ID = T2.ID WHERE T2.GENDER = 'MALE' AND T1.WEIGHT_KG * 100 > ( SELECT AVG(WEIGHT_KG) FROM SUPERHERO ) * 79,
2,761,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SUPERHERO__SUPERHERO_NAME`,,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID WHERE GENDER.GENDER = 'MALE' AND SUPERHERO.WEIGHT_KG > (SELECT AVG(SUPERHERO.WEIGHT_KG)*0.79 FROM SUPERHERO),SELECT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN GENDER AS T2 ON T1.GENDER_ID = T2.ID WHERE T2.GENDER = 'MALE' AND T1.WEIGHT_KG * 100 > ( SELECT AVG(WEIGHT_KG) FROM SUPERHERO ) * 79,
3,761,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SUPERHERO__SUPERHERO_NAME`,,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID WHERE GENDER.GENDER = 'MALE' AND SUPERHERO.WEIGHT_KG > (SELECT AVG(SUPERHERO.WEIGHT_KG)*0.79 FROM SUPERHERO),SELECT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN GENDER AS T2 ON T1.GENDER_ID = T2.ID WHERE T2.GENDER = 'MALE' AND T1.WEIGHT_KG * 100 > ( SELECT AVG(WEIGHT_KG) FROM SUPERHERO ) * 79,
1,762,True,,0.034823,SELECT SUPERPOWER.POWER_NAME FROM SUPERPOWER INNER JOIN HERO_POWER ON SUPERPOWER.ID = HERO_POWER.POWER_ID GROUP BY SUPERPOWER.POWER_NAME ORDER BY COUNT(SUPERPOWER.POWER_NAME) DESC LIMIT 1,SELECT T2.POWER_NAME FROM HERO_POWER AS T1 INNER JOIN SUPERPOWER AS T2 ON T1.POWER_ID = T2.ID GROUP BY T2.POWER_NAME ORDER BY COUNT(T1.HERO_ID) DESC LIMIT 1,
1,763,True,,0.041675,SELECT HERO_ATTRIBUTE.ATTRIBUTE_VALUE FROM HERO_ATTRIBUTE INNER JOIN SUPERHERO ON HERO_ATTRIBUTE.HERO_ID = SUPERHERO.ID WHERE SUPERHERO.SUPERHERO_NAME = 'ABOMINATION';,SELECT T2.ATTRIBUTE_VALUE FROM SUPERHERO AS T1 INNER JOIN HERO_ATTRIBUTE AS T2 ON T1.ID = T2.HERO_ID WHERE T1.SUPERHERO_NAME = 'ABOMINATION',
1,764,True,,0.033372,SELECT SUPERPOWER.POWER_NAME FROM HERO_POWER INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE HERO_POWER.HERO_ID = 1,SELECT DISTINCT T2.POWER_NAME FROM HERO_POWER AS T1 INNER JOIN SUPERPOWER AS T2 ON T1.POWER_ID = T2.ID WHERE T1.HERO_ID = 1,
1,765,True,,0.037194,SELECT COUNT(*) FROM HERO_POWER INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE SUPERPOWER.POWER_NAME = 'STEALTH';,SELECT COUNT(T1.HERO_ID) FROM HERO_POWER AS T1 INNER JOIN SUPERPOWER AS T2 ON T1.POWER_ID = T2.ID WHERE T2.POWER_NAME = 'STEALTH',
1,766,True,,0.061215,SELECT SUPERHERO.FULL_NAME FROM HERO_ATTRIBUTE INNER JOIN ATTRIBUTE ON HERO_ATTRIBUTE.ATTRIBUTE_ID = ATTRIBUTE.ID INNER JOIN SUPERHERO ON HERO_ATTRIBUTE.HERO_ID = SUPERHERO.ID WHERE ATTRIBUTE.ATTRIBUTE_NAME = 'STRENGTH' ORDER BY HERO_ATTRIBUTE.ATTRIBUTE_VALUE DESC LIMIT 1;,SELECT T1.FULL_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_ATTRIBUTE AS T2 ON T1.ID = T2.HERO_ID INNER JOIN ATTRIBUTE AS T3 ON T2.ATTRIBUTE_ID = T3.ID WHERE T3.ATTRIBUTE_NAME = 'STRENGTH' ORDER BY T2.ATTRIBUTE_VALUE DESC LIMIT 1,
1,767,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(SUPERHERO.ID) AS REAL) / SUM(CASE WHEN SUPERHERO.SKIN_COLOUR_ID = 1 THEN 1 ELSE 0 END) AS AVERAGE FROM SUPERHERO WHERE SUPERHERO.SKIN_COLOUR_ID = 1,SELECT CAST(COUNT(*) AS REAL) / SUM(CASE WHEN T2.ID = 1 THEN 1 ELSE 0 END) FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.SKIN_COLOUR_ID = T2.ID,
2,767,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(SUPERHERO.ID) AS REAL) / SUM(CASE WHEN SUPERHERO.SKIN_COLOUR_ID = 1 THEN 1 ELSE 0 END) AS AVERAGE FROM SUPERHERO WHERE SUPERHERO.SKIN_COLOUR_ID = 1,SELECT CAST(COUNT(*) AS REAL) / SUM(CASE WHEN T2.ID = 1 THEN 1 ELSE 0 END) FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.SKIN_COLOUR_ID = T2.ID,
3,767,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(SUPERHERO.ID) AS REAL) / SUM(CASE WHEN SUPERHERO.SKIN_COLOUR_ID = 1 THEN 1 ELSE 0 END) AS AVERAGE FROM SUPERHERO WHERE SUPERHERO.SKIN_COLOUR_ID = 1,SELECT CAST(COUNT(*) AS REAL) / SUM(CASE WHEN T2.ID = 1 THEN 1 ELSE 0 END) FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.SKIN_COLOUR_ID = T2.ID,
1,768,True,,0.046611,SELECT COUNT(*) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'DARK HORSE COMICS';,SELECT COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID WHERE T2.PUBLISHER_NAME = 'DARK HORSE COMICS',
1,769,True,,0.1101559999999999,SELECT SUPERHERO.SUPERHERO_NAME FROM HERO_ATTRIBUTE INNER JOIN SUPERHERO ON HERO_ATTRIBUTE.HERO_ID = SUPERHERO.ID INNER JOIN ATTRIBUTE ON HERO_ATTRIBUTE.ATTRIBUTE_ID = ATTRIBUTE.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE ATTRIBUTE.ATTRIBUTE_NAME = 'DURABILITY' AND PUBLISHER.PUBLISHER_NAME = 'DARK HORSE COMICS' ORDER BY HERO_ATTRIBUTE.ATTRIBUTE_VALUE DESC LIMIT 1;,SELECT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_ATTRIBUTE AS T2 ON T1.ID = T2.HERO_ID INNER JOIN ATTRIBUTE AS T3 ON T3.ID = T2.ATTRIBUTE_ID INNER JOIN PUBLISHER AS T4 ON T4.ID = T1.PUBLISHER_ID WHERE T4.PUBLISHER_NAME = 'DARK HORSE COMICS' AND T3.ATTRIBUTE_NAME = 'DURABILITY' ORDER BY T2.ATTRIBUTE_VALUE DESC LIMIT 1,
1,770,True,,0.041285,SELECT COLOUR.COLOUR FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID WHERE SUPERHERO.FULL_NAME = 'ABRAHAM SAPIEN';,SELECT T2.COLOUR FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.EYE_COLOUR_ID = T2.ID WHERE T1.FULL_NAME = 'ABRAHAM SAPIEN',
1,771,True,,0.062261,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE SUPERPOWER.POWER_NAME = 'FLIGHT',SELECT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID INNER JOIN SUPERPOWER AS T3 ON T2.POWER_ID = T3.ID WHERE T3.POWER_NAME = 'FLIGHT',
1,772,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ALIGNMENT (
	ID VARCHAR(20),
	ALIGNMENT VARCHAR(20)
);
INSERT INTO ALIGNMENT VALUES ('2147483648', '2147483648');
CREATE TABLE ATTRIBUTE (
	ID VARCHAR(20),
	ATTRIBUTE_NAME VARCHAR(20)
);
INSERT INTO ATTRIBUTE VALUES ('2147483648', '2147483648');
CREATE TABLE COLOUR (
	ID VARCHAR(20),
	COLOUR VARCHAR(20)
);
INSERT INTO COLOUR VALUES ('2147483648', '2147483649');
CREATE TABLE GENDER (
	ID VARCHAR(20),
	GENDER VARCHAR(20)
);
INSERT INTO GENDER VALUES ('2147483648', 'FEMALE');
CREATE TABLE PUBLISHER (
	ID VARCHAR(20),
	PUBLISHER_NAME VARCHAR(20)
);
INSERT INTO PUBLISHER VALUES ('2147483648', 'DARK HORSE COMICS');
CREATE TABLE RACE (
	ID VARCHAR(20),
	RACE VARCHAR(20)
);
INSERT INTO RACE VALUES ('2147483648', '2147483648');
CREATE TABLE SUPERHERO (
	ID VARCHAR(20),
	SUPERHERO_NAME VARCHAR(20),
	FULL_NAME VARCHAR(20),
	GENDER_ID VARCHAR(20),
	EYE_COLOUR_ID VARCHAR(20),
	HAIR_COLOUR_ID VARCHAR(20),
	SKIN_COLOUR_ID VARCHAR(20),
	RACE_ID VARCHAR(20),
	PUBLISHER_ID VARCHAR(20),
	ALIGNMENT_ID VARCHAR(20),
	HEIGHT_CM VARCHAR(20),
	WEIGHT_KG VARCHAR(20)
);
INSERT INTO SUPERHERO VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE HERO_ATTRIBUTE (
	HERO_ID VARCHAR(20),
	ATTRIBUTE_ID VARCHAR(20),
	ATTRIBUTE_VALUE VARCHAR(20)
);
INSERT INTO HERO_ATTRIBUTE VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE SUPERPOWER (
	ID VARCHAR(20),
	POWER_NAME VARCHAR(20)
);
INSERT INTO SUPERPOWER VALUES ('2147483648', '2147483648');
CREATE TABLE HERO_POWER (
	HERO_ID VARCHAR(20),
	POWER_ID VARCHAR(20)
);
INSERT INTO HERO_POWER VALUES ('2147483648', '2147483648');
-- ----------sql1------------
-- 2147483649, 2147483649, 2147483649
SELECT COLOUR.COLOUR AS EYE_COLOUR, COLOUR_1.COLOUR AS SKIN_COLOUR, COLOUR_2.COLOUR AS HAIR_COLOUR FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID INNER JOIN COLOUR AS COLOUR_1 ON SUPERHERO.SKIN_COLOUR_ID = COLOUR_1.ID INNER JOIN COLOUR AS COLOUR_2 ON SUPERHERO.HAIR_COLOUR_ID = COLOUR_2.ID WHERE GENDER.GENDER = 'FEMALE' AND PUBLISHER.PUBLISHER_NAME = 'DARK HORSE COMICS';
-- ----------sql2------------
-- 2147483648, 2147483648, 2147483648
SELECT T1.EYE_COLOUR_ID, T1.HAIR_COLOUR_ID, T1.SKIN_COLOUR_ID FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T2.ID = T1.PUBLISHER_ID INNER JOIN GENDER AS T3 ON T3.ID = T1.GENDER_ID WHERE T2.PUBLISHER_NAME = 'DARK HORSE COMICS' AND T3.GENDER = 'FEMALE';
",0.122296,"SELECT COLOUR.COLOUR AS EYE_COLOUR, COLOUR_1.COLOUR AS SKIN_COLOUR, COLOUR_2.COLOUR AS HAIR_COLOUR FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID INNER JOIN COLOUR AS COLOUR_1 ON SUPERHERO.SKIN_COLOUR_ID = COLOUR_1.ID INNER JOIN COLOUR AS COLOUR_2 ON SUPERHERO.HAIR_COLOUR_ID = COLOUR_2.ID WHERE GENDER.GENDER = 'FEMALE' AND PUBLISHER.PUBLISHER_NAME = 'DARK HORSE COMICS'","SELECT T1.EYE_COLOUR_ID, T1.HAIR_COLOUR_ID, T1.SKIN_COLOUR_ID FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T2.ID = T1.PUBLISHER_ID INNER JOIN GENDER AS T3 ON T3.ID = T1.GENDER_ID WHERE T2.PUBLISHER_NAME = 'DARK HORSE COMICS' AND T3.GENDER = 'FEMALE'",
1,773,True,,0.067397,"SELECT SUPERHERO.SUPERHERO_NAME, PUBLISHER.PUBLISHER_NAME FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE SUPERHERO.HAIR_COLOUR_ID = SUPERHERO.SKIN_COLOUR_ID AND SUPERHERO.HAIR_COLOUR_ID = SUPERHERO.EYE_COLOUR_ID","SELECT T1.SUPERHERO_NAME, T2.PUBLISHER_NAME FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID WHERE T1.EYE_COLOUR_ID = T1.HAIR_COLOUR_ID AND T1.EYE_COLOUR_ID = T1.SKIN_COLOUR_ID",
1,774,True,,0.040803,SELECT RACE.RACE FROM SUPERHERO INNER JOIN RACE ON SUPERHERO.RACE_ID = RACE.ID WHERE SUPERHERO.SUPERHERO_NAME = 'A-BOMB',SELECT T2.RACE FROM SUPERHERO AS T1 INNER JOIN RACE AS T2 ON T1.RACE_ID = T2.ID WHERE T1.SUPERHERO_NAME = 'A-BOMB',
1,775,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.SKIN_COLOUR_ID = COLOUR.ID INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID WHERE COLOUR.COLOUR = 'BLUE' AND GENDER.GENDER = 'FEMALE') AS REAL) * 100) / (SELECT COUNT(*) FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID WHERE GENDER.GENDER = 'FEMALE') AS PERCENTAGE FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.SKIN_COLOUR_ID = COLOUR.ID INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID LIMIT 1;,SELECT CAST(COUNT(CASE WHEN T3.COLOUR = 'BLUE' THEN T1.ID ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN GENDER AS T2 ON T1.GENDER_ID = T2.ID INNER JOIN COLOUR AS T3 ON T1.SKIN_COLOUR_ID = T3.ID WHERE T2.GENDER = 'FEMALE',
2,775,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.SKIN_COLOUR_ID = COLOUR.ID INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID WHERE COLOUR.COLOUR = 'BLUE' AND GENDER.GENDER = 'FEMALE') AS REAL) * 100) / (SELECT COUNT(*) FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID WHERE GENDER.GENDER = 'FEMALE') AS PERCENTAGE FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.SKIN_COLOUR_ID = COLOUR.ID INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID LIMIT 1;,SELECT CAST(COUNT(CASE WHEN T3.COLOUR = 'BLUE' THEN T1.ID ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN GENDER AS T2 ON T1.GENDER_ID = T2.ID INNER JOIN COLOUR AS T3 ON T1.SKIN_COLOUR_ID = T3.ID WHERE T2.GENDER = 'FEMALE',
3,775,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.SKIN_COLOUR_ID = COLOUR.ID INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID WHERE COLOUR.COLOUR = 'BLUE' AND GENDER.GENDER = 'FEMALE') AS REAL) * 100) / (SELECT COUNT(*) FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID WHERE GENDER.GENDER = 'FEMALE') AS PERCENTAGE FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.SKIN_COLOUR_ID = COLOUR.ID INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID LIMIT 1;,SELECT CAST(COUNT(CASE WHEN T3.COLOUR = 'BLUE' THEN T1.ID ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN GENDER AS T2 ON T1.GENDER_ID = T2.ID INNER JOIN COLOUR AS T3 ON T1.SKIN_COLOUR_ID = T3.ID WHERE T2.GENDER = 'FEMALE',
1,776,True,,0.041344,"SELECT SUPERHERO.SUPERHERO_NAME, RACE.RACE FROM SUPERHERO INNER JOIN RACE ON SUPERHERO.RACE_ID = RACE.ID WHERE SUPERHERO.FULL_NAME = 'CHARLES CHANDLER';","SELECT T1.SUPERHERO_NAME, T2.RACE FROM SUPERHERO AS T1 INNER JOIN RACE AS T2 ON T1.RACE_ID = T2.ID WHERE T1.FULL_NAME = 'CHARLES CHANDLER'",
1,777,True,,0.0406399999999999,SELECT GENDER.GENDER FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID WHERE SUPERHERO.SUPERHERO_NAME = 'AGENT 13';,SELECT T2.GENDER FROM SUPERHERO AS T1 INNER JOIN GENDER AS T2 ON T1.GENDER_ID = T2.ID WHERE T1.SUPERHERO_NAME = 'AGENT 13',
1,778,True,,0.0622439999999999,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE SUPERPOWER.POWER_NAME = 'ADAPTATION';,SELECT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID INNER JOIN SUPERPOWER AS T3 ON T2.POWER_ID = T3.ID WHERE T3.POWER_NAME = 'ADAPTATION',
1,779,True,,0.046246,SELECT COUNT(*) FROM SUPERHERO INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID WHERE SUPERHERO.SUPERHERO_NAME = 'AMAZO';,SELECT COUNT(T1.POWER_ID) FROM HERO_POWER AS T1 INNER JOIN SUPERHERO AS T2 ON T1.HERO_ID = T2.ID WHERE T2.SUPERHERO_NAME = 'AMAZO',
1,780,True,,0.062209,SELECT SUPERPOWER.POWER_NAME FROM HERO_POWER INNER JOIN SUPERHERO ON HERO_POWER.HERO_ID = SUPERHERO.ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE SUPERHERO.FULL_NAME = 'HUNTER ZOLOMON';,SELECT T3.POWER_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID INNER JOIN SUPERPOWER AS T3 ON T2.POWER_ID = T3.ID WHERE T1.FULL_NAME = 'HUNTER ZOLOMON',
1,781,True,,0.0411,SELECT SUPERHERO.HEIGHT_CM FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID WHERE COLOUR.COLOUR = 'AMBER',SELECT T1.HEIGHT_CM FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.EYE_COLOUR_ID = T2.ID WHERE T2.COLOUR = 'AMBER',
1,782,True,,0.066305,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID AND SUPERHERO.HAIR_COLOUR_ID = COLOUR.ID WHERE COLOUR.COLOUR = 'BLACK',SELECT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.EYE_COLOUR_ID = T2.ID AND T1.HAIR_COLOUR_ID = T2.ID WHERE T2.COLOUR = 'BLACK',
1,783,True,,0.06351,SELECT COLOUR.COLOUR FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID WHERE SUPERHERO.SKIN_COLOUR_ID IN ( SELECT COLOUR.ID FROM COLOUR WHERE COLOUR.COLOUR = 'GOLD' );,SELECT T2.COLOUR FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.EYE_COLOUR_ID = T2.ID INNER JOIN COLOUR AS T3 ON T1.SKIN_COLOUR_ID = T3.ID WHERE T3.COLOUR = 'GOLD',
1,784,True,,0.041181,SELECT SUPERHERO.FULL_NAME FROM SUPERHERO INNER JOIN RACE ON SUPERHERO.RACE_ID = RACE.ID WHERE RACE.RACE = 'VAMPIRE',SELECT T1.FULL_NAME FROM SUPERHERO AS T1 INNER JOIN RACE AS T2 ON T1.RACE_ID = T2.ID WHERE T2.RACE = 'VAMPIRE',
1,785,True,,0.041023,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID WHERE ALIGNMENT.ALIGNMENT = 'NEUTRAL',SELECT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN ALIGNMENT AS T2 ON T1.ALIGNMENT_ID = T2.ID WHERE T2.ALIGNMENT = 'NEUTRAL',
1,786,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute HERO_ATTRIBUTE__HERO_ID`,,SELECT COUNT(HERO_ATTRIBUTE.HERO_ID) FROM HERO_ATTRIBUTE INNER JOIN ATTRIBUTE ON HERO_ATTRIBUTE.ATTRIBUTE_ID = ATTRIBUTE.ID WHERE ATTRIBUTE.ATTRIBUTE_NAME = 'STRENGTH' AND HERO_ATTRIBUTE.ATTRIBUTE_VALUE = ( SELECT MAX(HERO_ATTRIBUTE.ATTRIBUTE_VALUE) FROM HERO_ATTRIBUTE INNER JOIN ATTRIBUTE ON HERO_ATTRIBUTE.ATTRIBUTE_ID = ATTRIBUTE.ID WHERE ATTRIBUTE.ATTRIBUTE_NAME = 'STRENGTH' ),SELECT COUNT(T1.HERO_ID) FROM HERO_ATTRIBUTE AS T1 INNER JOIN ATTRIBUTE AS T2 ON T1.ATTRIBUTE_ID = T2.ID WHERE T2.ATTRIBUTE_NAME = 'STRENGTH' AND T1.ATTRIBUTE_VALUE = ( SELECT MAX(ATTRIBUTE_VALUE) FROM HERO_ATTRIBUTE ),
2,786,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute HERO_ATTRIBUTE__HERO_ID`,,SELECT COUNT(HERO_ATTRIBUTE.HERO_ID) FROM HERO_ATTRIBUTE INNER JOIN ATTRIBUTE ON HERO_ATTRIBUTE.ATTRIBUTE_ID = ATTRIBUTE.ID WHERE ATTRIBUTE.ATTRIBUTE_NAME = 'STRENGTH' AND HERO_ATTRIBUTE.ATTRIBUTE_VALUE = ( SELECT MAX(HERO_ATTRIBUTE.ATTRIBUTE_VALUE) FROM HERO_ATTRIBUTE INNER JOIN ATTRIBUTE ON HERO_ATTRIBUTE.ATTRIBUTE_ID = ATTRIBUTE.ID WHERE ATTRIBUTE.ATTRIBUTE_NAME = 'STRENGTH' ),SELECT COUNT(T1.HERO_ID) FROM HERO_ATTRIBUTE AS T1 INNER JOIN ATTRIBUTE AS T2 ON T1.ATTRIBUTE_ID = T2.ID WHERE T2.ATTRIBUTE_NAME = 'STRENGTH' AND T1.ATTRIBUTE_VALUE = ( SELECT MAX(ATTRIBUTE_VALUE) FROM HERO_ATTRIBUTE ),
3,786,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute HERO_ATTRIBUTE__HERO_ID`,,SELECT COUNT(HERO_ATTRIBUTE.HERO_ID) FROM HERO_ATTRIBUTE INNER JOIN ATTRIBUTE ON HERO_ATTRIBUTE.ATTRIBUTE_ID = ATTRIBUTE.ID WHERE ATTRIBUTE.ATTRIBUTE_NAME = 'STRENGTH' AND HERO_ATTRIBUTE.ATTRIBUTE_VALUE = ( SELECT MAX(HERO_ATTRIBUTE.ATTRIBUTE_VALUE) FROM HERO_ATTRIBUTE INNER JOIN ATTRIBUTE ON HERO_ATTRIBUTE.ATTRIBUTE_ID = ATTRIBUTE.ID WHERE ATTRIBUTE.ATTRIBUTE_NAME = 'STRENGTH' ),SELECT COUNT(T1.HERO_ID) FROM HERO_ATTRIBUTE AS T1 INNER JOIN ATTRIBUTE AS T2 ON T1.ATTRIBUTE_ID = T2.ID WHERE T2.ATTRIBUTE_NAME = 'STRENGTH' AND T1.ATTRIBUTE_VALUE = ( SELECT MAX(ATTRIBUTE_VALUE) FROM HERO_ATTRIBUTE ),
1,787,True,,0.062525,"SELECT RACE.RACE, ALIGNMENT.ALIGNMENT FROM SUPERHERO INNER JOIN RACE ON SUPERHERO.RACE_ID = RACE.ID INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID WHERE SUPERHERO.SUPERHERO_NAME = 'CAMERON HICKS';","SELECT T2.RACE, T3.ALIGNMENT FROM SUPERHERO AS T1 INNER JOIN RACE AS T2 ON T1.RACE_ID = T2.ID INNER JOIN ALIGNMENT AS T3 ON T1.ALIGNMENT_ID = T3.ID WHERE T1.SUPERHERO_NAME = 'CAMERON HICKS'",
1,788,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE GENDER.GENDER = 'FEMALE' AND PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') AS REAL) * 100) / (SELECT COUNT(*) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') AS PERCENT FROM SUPERHERO LIMIT 1;,SELECT CAST(COUNT(CASE WHEN T2.PUBLISHER_NAME = 'MARVEL COMICS' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID INNER JOIN GENDER AS T3 ON T1.GENDER_ID = T3.ID WHERE T3.GENDER = 'FEMALE',
2,788,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE GENDER.GENDER = 'FEMALE' AND PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') AS REAL) * 100) / (SELECT COUNT(*) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') AS PERCENT FROM SUPERHERO LIMIT 1;,SELECT CAST(COUNT(CASE WHEN T2.PUBLISHER_NAME = 'MARVEL COMICS' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID INNER JOIN GENDER AS T3 ON T1.GENDER_ID = T3.ID WHERE T3.GENDER = 'FEMALE',
3,788,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE GENDER.GENDER = 'FEMALE' AND PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') AS REAL) * 100) / (SELECT COUNT(*) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') AS PERCENT FROM SUPERHERO LIMIT 1;,SELECT CAST(COUNT(CASE WHEN T2.PUBLISHER_NAME = 'MARVEL COMICS' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID INNER JOIN GENDER AS T3 ON T1.GENDER_ID = T3.ID WHERE T3.GENDER = 'FEMALE',
1,789,ERROR,NotImplementedError: {'real': {}},,SELECT AVG(SUPERHERO.WEIGHT_KG) FROM SUPERHERO INNER JOIN RACE ON SUPERHERO.RACE_ID = RACE.ID WHERE RACE.RACE = 'ALIEN',SELECT CAST(SUM(T1.WEIGHT_KG) AS REAL) / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN RACE AS T2 ON T1.RACE_ID = T2.ID WHERE T2.RACE = 'ALIEN',
2,789,ERROR,NotImplementedError: {'real': {}},,SELECT AVG(SUPERHERO.WEIGHT_KG) FROM SUPERHERO INNER JOIN RACE ON SUPERHERO.RACE_ID = RACE.ID WHERE RACE.RACE = 'ALIEN',SELECT CAST(SUM(T1.WEIGHT_KG) AS REAL) / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN RACE AS T2 ON T1.RACE_ID = T2.ID WHERE T2.RACE = 'ALIEN',
3,789,ERROR,NotImplementedError: {'real': {}},,SELECT AVG(SUPERHERO.WEIGHT_KG) FROM SUPERHERO INNER JOIN RACE ON SUPERHERO.RACE_ID = RACE.ID WHERE RACE.RACE = 'ALIEN',SELECT CAST(SUM(T1.WEIGHT_KG) AS REAL) / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN RACE AS T2 ON T1.RACE_ID = T2.ID WHERE T2.RACE = 'ALIEN',
1,790,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT SUM(WEIGHT_KG) FROM SUPERHERO WHERE FULL_NAME = 'EMIL BLONSKY') - (SELECT SUM(WEIGHT_KG) FROM SUPERHERO WHERE FULL_NAME = 'CHARLES CHANDLER') AS DIFFERENCE;,SELECT ( SELECT WEIGHT_KG FROM SUPERHERO WHERE FULL_NAME LIKE 'EMIL BLONSKY' ) - ( SELECT WEIGHT_KG FROM SUPERHERO WHERE FULL_NAME LIKE 'CHARLES CHANDLER' ) AS CALCULATE,
2,790,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT SUM(WEIGHT_KG) FROM SUPERHERO WHERE FULL_NAME = 'EMIL BLONSKY') - (SELECT SUM(WEIGHT_KG) FROM SUPERHERO WHERE FULL_NAME = 'CHARLES CHANDLER') AS DIFFERENCE;,SELECT ( SELECT WEIGHT_KG FROM SUPERHERO WHERE FULL_NAME LIKE 'EMIL BLONSKY' ) - ( SELECT WEIGHT_KG FROM SUPERHERO WHERE FULL_NAME LIKE 'CHARLES CHANDLER' ) AS CALCULATE,
3,790,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT SUM(WEIGHT_KG) FROM SUPERHERO WHERE FULL_NAME = 'EMIL BLONSKY') - (SELECT SUM(WEIGHT_KG) FROM SUPERHERO WHERE FULL_NAME = 'CHARLES CHANDLER') AS DIFFERENCE;,SELECT ( SELECT WEIGHT_KG FROM SUPERHERO WHERE FULL_NAME LIKE 'EMIL BLONSKY' ) - ( SELECT WEIGHT_KG FROM SUPERHERO WHERE FULL_NAME LIKE 'CHARLES CHANDLER' ) AS CALCULATE,
1,791,ERROR,NotImplementedError: {'real': {}},,"SELECT SUPERHERO.SUPERHERO_NAME, AVG(SUPERHERO.HEIGHT_CM) FROM SUPERHERO GROUP BY SUPERHERO.SUPERHERO_NAME;",SELECT CAST(SUM(HEIGHT_CM) AS REAL) / COUNT(ID) FROM SUPERHERO,
2,791,ERROR,NotImplementedError: {'real': {}},,"SELECT SUPERHERO.SUPERHERO_NAME, AVG(SUPERHERO.HEIGHT_CM) FROM SUPERHERO GROUP BY SUPERHERO.SUPERHERO_NAME;",SELECT CAST(SUM(HEIGHT_CM) AS REAL) / COUNT(ID) FROM SUPERHERO,
3,791,ERROR,NotImplementedError: {'real': {}},,"SELECT SUPERHERO.SUPERHERO_NAME, AVG(SUPERHERO.HEIGHT_CM) FROM SUPERHERO GROUP BY SUPERHERO.SUPERHERO_NAME;",SELECT CAST(SUM(HEIGHT_CM) AS REAL) / COUNT(ID) FROM SUPERHERO,
1,792,True,,0.068828,SELECT SUPERPOWER.POWER_NAME FROM SUPERHERO INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE SUPERHERO.SUPERHERO_NAME = 'ABOMINATION';,SELECT T3.POWER_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID INNER JOIN SUPERPOWER AS T3 ON T2.POWER_ID = T3.ID WHERE T1.SUPERHERO_NAME = 'ABOMINATION',
1,793,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ALIGNMENT (
	ID VARCHAR(20),
	ALIGNMENT VARCHAR(20)
);
INSERT INTO ALIGNMENT VALUES ('2147483648', '2147483648');
CREATE TABLE ATTRIBUTE (
	ID VARCHAR(20),
	ATTRIBUTE_NAME VARCHAR(20)
);
INSERT INTO ATTRIBUTE VALUES ('2147483648', '2147483648');
CREATE TABLE COLOUR (
	ID VARCHAR(20),
	COLOUR VARCHAR(20)
);
INSERT INTO COLOUR VALUES ('2147483648', '2147483648');
CREATE TABLE GENDER (
	ID VARCHAR(20),
	GENDER VARCHAR(20)
);
INSERT INTO GENDER VALUES ('2147483648', 'MALE');
CREATE TABLE PUBLISHER (
	ID VARCHAR(20),
	PUBLISHER_NAME VARCHAR(20)
);
INSERT INTO PUBLISHER VALUES ('2147483648', '2147483648');
CREATE TABLE RACE (
	ID VARCHAR(20),
	RACE VARCHAR(20)
);
INSERT INTO RACE VALUES ('2147483648', 'GOD/ETERNAL');
CREATE TABLE SUPERHERO (
	ID VARCHAR(20),
	SUPERHERO_NAME VARCHAR(20),
	FULL_NAME VARCHAR(20),
	GENDER_ID VARCHAR(20),
	EYE_COLOUR_ID VARCHAR(20),
	HAIR_COLOUR_ID VARCHAR(20),
	SKIN_COLOUR_ID VARCHAR(20),
	RACE_ID VARCHAR(20),
	PUBLISHER_ID VARCHAR(20),
	ALIGNMENT_ID VARCHAR(20),
	HEIGHT_CM VARCHAR(20),
	WEIGHT_KG VARCHAR(20)
);
INSERT INTO SUPERHERO VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE HERO_ATTRIBUTE (
	HERO_ID VARCHAR(20),
	ATTRIBUTE_ID VARCHAR(20),
	ATTRIBUTE_VALUE VARCHAR(20)
);
INSERT INTO HERO_ATTRIBUTE VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE SUPERPOWER (
	ID VARCHAR(20),
	POWER_NAME VARCHAR(20)
);
INSERT INTO SUPERPOWER VALUES ('2147483648', '2147483648');
CREATE TABLE HERO_POWER (
	HERO_ID VARCHAR(20),
	POWER_ID VARCHAR(20)
);
INSERT INTO HERO_POWER VALUES ('2147483648', '2147483648');
-- ----------sql1------------
-- 1
SELECT COUNT(*) FROM SUPERHERO INNER JOIN RACE ON SUPERHERO.RACE_ID = RACE.ID INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID WHERE RACE.RACE = 'GOD/ETERNAL' AND GENDER.GENDER = 'MALE';
-- ----------sql2------------
-- 0
SELECT COUNT(*) FROM SUPERHERO AS T1 INNER JOIN RACE AS T2 ON T1.RACE_ID = T2.ID INNER JOIN GENDER AS T3 ON T3.ID = T1.GENDER_ID WHERE T1.RACE_ID = 21 AND T1.GENDER_ID = 1;
",0.0899649999999999,SELECT COUNT(*) FROM SUPERHERO INNER JOIN RACE ON SUPERHERO.RACE_ID = RACE.ID INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID WHERE RACE.RACE = 'GOD/ETERNAL' AND GENDER.GENDER = 'MALE',SELECT COUNT(*) FROM SUPERHERO AS T1 INNER JOIN RACE AS T2 ON T1.RACE_ID = T2.ID INNER JOIN GENDER AS T3 ON T3.ID = T1.GENDER_ID WHERE T1.RACE_ID = 21 AND T1.GENDER_ID = 1,
1,794,True,,0.065734,SELECT SUPERHERO.SUPERHERO_NAME FROM HERO_ATTRIBUTE INNER JOIN SUPERHERO ON HERO_ATTRIBUTE.HERO_ID = SUPERHERO.ID INNER JOIN ATTRIBUTE ON HERO_ATTRIBUTE.ATTRIBUTE_ID = ATTRIBUTE.ID WHERE ATTRIBUTE.ATTRIBUTE_NAME = 'SPEED' ORDER BY HERO_ATTRIBUTE.ATTRIBUTE_VALUE DESC LIMIT 1,SELECT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_ATTRIBUTE AS T2 ON T1.ID = T2.HERO_ID INNER JOIN ATTRIBUTE AS T3 ON T2.ATTRIBUTE_ID = T3.ID WHERE T3.ATTRIBUTE_NAME = 'SPEED' ORDER BY T2.ATTRIBUTE_VALUE DESC LIMIT 1,
1,795,True,,0.047241,SELECT COUNT(*) FROM SUPERHERO INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID WHERE ALIGNMENT.ALIGNMENT = 'NEUTRAL';,SELECT COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN ALIGNMENT AS T2 ON T1.ALIGNMENT_ID = T2.ID WHERE T2.ALIGNMENT = 'NEUTRAL',
1,796,True,,0.0645459999999999,"SELECT ATTRIBUTE.ATTRIBUTE_NAME, HERO_ATTRIBUTE.ATTRIBUTE_VALUE FROM SUPERHERO INNER JOIN HERO_ATTRIBUTE ON SUPERHERO.ID = HERO_ATTRIBUTE.HERO_ID INNER JOIN ATTRIBUTE ON HERO_ATTRIBUTE.ATTRIBUTE_ID = ATTRIBUTE.ID WHERE SUPERHERO.SUPERHERO_NAME = '3-D MAN'","SELECT T3.ATTRIBUTE_NAME, T2.ATTRIBUTE_VALUE FROM SUPERHERO AS T1 INNER JOIN HERO_ATTRIBUTE AS T2 ON T1.ID = T2.HERO_ID INNER JOIN ATTRIBUTE AS T3 ON T2.ATTRIBUTE_ID = T3.ID WHERE T1.SUPERHERO_NAME = '3-D MAN'",
1,797,True,,0.086825,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN COLOUR AS EYE_COLOUR ON SUPERHERO.EYE_COLOUR_ID = EYE_COLOUR.ID INNER JOIN COLOUR AS HAIR_COLOUR ON SUPERHERO.HAIR_COLOUR_ID = HAIR_COLOUR.ID WHERE EYE_COLOUR.COLOUR = 'BLUE' AND HAIR_COLOUR.COLOUR = 'BROWN',SELECT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.EYE_COLOUR_ID = T2.ID INNER JOIN COLOUR AS T3 ON T1.HAIR_COLOUR_ID = T3.ID WHERE T2.COLOUR = 'BLUE' AND T3.COLOUR = 'BROWN',
1,798,True,,0.210856,"SELECT PUBLISHER.PUBLISHER_NAME FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE SUPERHERO.SUPERHERO_NAME IN ('HAWKMAN', 'KARATE KID', 'SPEEDY')","SELECT T2.PUBLISHER_NAME FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID WHERE T1.SUPERHERO_NAME IN ('HAWKMAN', 'KARATE KID', 'SPEEDY')",
1,799,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ALIGNMENT (
	ID VARCHAR(20),
	ALIGNMENT VARCHAR(20)
);
INSERT INTO ALIGNMENT VALUES ('2147483648', '2147483648');
CREATE TABLE ATTRIBUTE (
	ID VARCHAR(20),
	ATTRIBUTE_NAME VARCHAR(20)
);
INSERT INTO ATTRIBUTE VALUES ('2147483648', '2147483648');
CREATE TABLE COLOUR (
	ID VARCHAR(20),
	COLOUR VARCHAR(20)
);
INSERT INTO COLOUR VALUES ('2147483648', '2147483648');
CREATE TABLE GENDER (
	ID VARCHAR(20),
	GENDER VARCHAR(20)
);
INSERT INTO GENDER VALUES ('2147483648', '2147483648');
CREATE TABLE PUBLISHER (
	ID VARCHAR(20),
	PUBLISHER_NAME VARCHAR(20)
);
INSERT INTO PUBLISHER VALUES ('2147483648', '2147483648');
CREATE TABLE RACE (
	ID VARCHAR(20),
	RACE VARCHAR(20)
);
INSERT INTO RACE VALUES ('2147483648', '2147483648');
CREATE TABLE SUPERHERO (
	ID VARCHAR(20),
	SUPERHERO_NAME VARCHAR(20),
	FULL_NAME VARCHAR(20),
	GENDER_ID VARCHAR(20),
	EYE_COLOUR_ID VARCHAR(20),
	HAIR_COLOUR_ID VARCHAR(20),
	SKIN_COLOUR_ID VARCHAR(20),
	RACE_ID VARCHAR(20),
	PUBLISHER_ID VARCHAR(20),
	ALIGNMENT_ID VARCHAR(20),
	HEIGHT_CM VARCHAR(20),
	WEIGHT_KG VARCHAR(20)
);
INSERT INTO SUPERHERO VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE HERO_ATTRIBUTE (
	HERO_ID VARCHAR(20),
	ATTRIBUTE_ID VARCHAR(20),
	ATTRIBUTE_VALUE VARCHAR(20)
);
INSERT INTO HERO_ATTRIBUTE VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE SUPERPOWER (
	ID VARCHAR(20),
	POWER_NAME VARCHAR(20)
);
INSERT INTO SUPERPOWER VALUES ('2147483648', '2147483648');
CREATE TABLE HERO_POWER (
	HERO_ID VARCHAR(20),
	POWER_ID VARCHAR(20)
);
INSERT INTO HERO_POWER VALUES ('2147483648', '2147483648');
-- ----------sql1------------
-- 1
SELECT COUNT(*) - (SELECT COUNT(*) FROM SUPERHERO WHERE PUBLISHER_ID = 1) FROM SUPERHERO;
-- ----------sql2------------
-- 0
SELECT COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID WHERE T2.ID = 1;
",0.043558,SELECT COUNT(*) - (SELECT COUNT(*) FROM SUPERHERO WHERE PUBLISHER_ID = 1) FROM SUPERHERO,SELECT COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID WHERE T2.ID = 1,
1,800,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(COUNT(SUPERHERO.ID) FILTER (WHERE SUPERHERO.EYE_COLOUR_ID = 7) AS REAL) * 100 / COUNT(SUPERHERO.ID)) AS PERCENTAGE FROM SUPERHERO JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID WHERE COLOUR.COLOUR = 'BLUE',SELECT CAST(COUNT(CASE WHEN T2.COLOUR = 'BLUE' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.EYE_COLOUR_ID = T2.ID,
2,800,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(COUNT(SUPERHERO.ID) FILTER (WHERE SUPERHERO.EYE_COLOUR_ID = 7) AS REAL) * 100 / COUNT(SUPERHERO.ID)) AS PERCENTAGE FROM SUPERHERO JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID WHERE COLOUR.COLOUR = 'BLUE',SELECT CAST(COUNT(CASE WHEN T2.COLOUR = 'BLUE' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.EYE_COLOUR_ID = T2.ID,
3,800,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(COUNT(SUPERHERO.ID) FILTER (WHERE SUPERHERO.EYE_COLOUR_ID = 7) AS REAL) * 100 / COUNT(SUPERHERO.ID)) AS PERCENTAGE FROM SUPERHERO JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID WHERE COLOUR.COLOUR = 'BLUE',SELECT CAST(COUNT(CASE WHEN T2.COLOUR = 'BLUE' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.EYE_COLOUR_ID = T2.ID,
1,801,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT COUNT(*) FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID WHERE GENDER.GENDER = 'MALE') AS REAL)) / (SELECT COUNT(*) FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID WHERE GENDER.GENDER = 'FEMALE') AS RATIO,SELECT CAST(COUNT(CASE WHEN T2.GENDER = 'MALE' THEN T1.ID ELSE NULL END) AS REAL) / COUNT(CASE WHEN T2.GENDER = 'FEMALE' THEN T1.ID ELSE NULL END) FROM SUPERHERO AS T1 INNER JOIN GENDER AS T2 ON T1.GENDER_ID = T2.ID,
2,801,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT COUNT(*) FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID WHERE GENDER.GENDER = 'MALE') AS REAL)) / (SELECT COUNT(*) FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID WHERE GENDER.GENDER = 'FEMALE') AS RATIO,SELECT CAST(COUNT(CASE WHEN T2.GENDER = 'MALE' THEN T1.ID ELSE NULL END) AS REAL) / COUNT(CASE WHEN T2.GENDER = 'FEMALE' THEN T1.ID ELSE NULL END) FROM SUPERHERO AS T1 INNER JOIN GENDER AS T2 ON T1.GENDER_ID = T2.ID,
3,801,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT COUNT(*) FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID WHERE GENDER.GENDER = 'MALE') AS REAL)) / (SELECT COUNT(*) FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID WHERE GENDER.GENDER = 'FEMALE') AS RATIO,SELECT CAST(COUNT(CASE WHEN T2.GENDER = 'MALE' THEN T1.ID ELSE NULL END) AS REAL) / COUNT(CASE WHEN T2.GENDER = 'FEMALE' THEN T1.ID ELSE NULL END) FROM SUPERHERO AS T1 INNER JOIN GENDER AS T2 ON T1.GENDER_ID = T2.ID,
1,802,True,,0.017608,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO ORDER BY SUPERHERO.HEIGHT_CM DESC LIMIT 1,SELECT SUPERHERO_NAME FROM SUPERHERO ORDER BY HEIGHT_CM DESC LIMIT 1,
1,803,True,,0.021219,SELECT SUPERPOWER.ID FROM SUPERPOWER WHERE SUPERPOWER.POWER_NAME = 'CRYOKINESIS';,SELECT ID FROM SUPERPOWER WHERE POWER_NAME = 'CRYOKINESIS',
1,804,True,,0.021025,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO WHERE SUPERHERO.ID = 294;,SELECT SUPERHERO_NAME FROM SUPERHERO WHERE ID = 294,
1,805,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE ALIGNMENT (
	ID VARCHAR(20),
	ALIGNMENT VARCHAR(20)
);
INSERT INTO ALIGNMENT VALUES ('2147483648', '2147483648');
CREATE TABLE ATTRIBUTE (
	ID VARCHAR(20),
	ATTRIBUTE_NAME VARCHAR(20)
);
INSERT INTO ATTRIBUTE VALUES ('2147483648', '2147483648');
CREATE TABLE COLOUR (
	ID VARCHAR(20),
	COLOUR VARCHAR(20)
);
INSERT INTO COLOUR VALUES ('2147483648', '2147483648');
CREATE TABLE GENDER (
	ID VARCHAR(20),
	GENDER VARCHAR(20)
);
INSERT INTO GENDER VALUES ('2147483648', '2147483648');
CREATE TABLE PUBLISHER (
	ID VARCHAR(20),
	PUBLISHER_NAME VARCHAR(20)
);
INSERT INTO PUBLISHER VALUES ('2147483648', '2147483648');
CREATE TABLE RACE (
	ID VARCHAR(20),
	RACE VARCHAR(20)
);
INSERT INTO RACE VALUES ('2147483648', '2147483648');
CREATE TABLE SUPERHERO (
	ID VARCHAR(20),
	SUPERHERO_NAME VARCHAR(20),
	FULL_NAME VARCHAR(20),
	GENDER_ID VARCHAR(20),
	EYE_COLOUR_ID VARCHAR(20),
	HAIR_COLOUR_ID VARCHAR(20),
	SKIN_COLOUR_ID VARCHAR(20),
	RACE_ID VARCHAR(20),
	PUBLISHER_ID VARCHAR(20),
	ALIGNMENT_ID VARCHAR(20),
	HEIGHT_CM VARCHAR(20),
	WEIGHT_KG VARCHAR(20)
);
INSERT INTO SUPERHERO VALUES ('2147483648', NULL, NULL, '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', NULL, NULL);
CREATE TABLE HERO_ATTRIBUTE (
	HERO_ID VARCHAR(20),
	ATTRIBUTE_ID VARCHAR(20),
	ATTRIBUTE_VALUE VARCHAR(20)
);
INSERT INTO HERO_ATTRIBUTE VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE SUPERPOWER (
	ID VARCHAR(20),
	POWER_NAME VARCHAR(20)
);
INSERT INTO SUPERPOWER VALUES ('2147483648', '2147483648');
CREATE TABLE HERO_POWER (
	HERO_ID VARCHAR(20),
	POWER_ID VARCHAR(20)
);
INSERT INTO HERO_POWER VALUES ('2147483648', '2147483648');
-- ----------sql1------------
-- NULL
SELECT SUPERHERO.FULL_NAME FROM SUPERHERO WHERE SUPERHERO.WEIGHT_KG = 0 OR SUPERHERO.WEIGHT_KG IS NULL;
-- ----------sql2------------
SELECT DISTINCT FULL_NAME FROM SUPERHERO WHERE FULL_NAME IS NOT NULL AND (WEIGHT_KG IS NULL OR WEIGHT_KG = 0);
",0.060611,SELECT SUPERHERO.FULL_NAME FROM SUPERHERO WHERE SUPERHERO.WEIGHT_KG = 0 OR SUPERHERO.WEIGHT_KG IS NULL;,SELECT DISTINCT FULL_NAME FROM SUPERHERO WHERE FULL_NAME IS NOT NULL AND (WEIGHT_KG IS NULL OR WEIGHT_KG = 0),
1,806,True,,0.040851,SELECT COLOUR.COLOUR FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID WHERE SUPERHERO.FULL_NAME = 'KAREN BEECHER-DUNCAN';,SELECT T2.COLOUR FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.EYE_COLOUR_ID = T2.ID WHERE T1.FULL_NAME = 'KAREN BEECHER-DUNCAN',
1,807,True,,0.063927,SELECT SUPERPOWER.POWER_NAME FROM HERO_POWER INNER JOIN SUPERHERO ON HERO_POWER.HERO_ID = SUPERHERO.ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE SUPERHERO.FULL_NAME = 'HELEN PARR',SELECT T3.POWER_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID INNER JOIN SUPERPOWER AS T3 ON T2.POWER_ID = T3.ID WHERE T1.FULL_NAME = 'HELEN PARR',
1,808,True,,0.061465,SELECT RACE.RACE FROM SUPERHERO INNER JOIN RACE ON SUPERHERO.RACE_ID = RACE.ID WHERE SUPERHERO.WEIGHT_KG = 108 AND SUPERHERO.HEIGHT_CM = 188,SELECT DISTINCT T2.RACE FROM SUPERHERO AS T1 INNER JOIN RACE AS T2 ON T1.RACE_ID = T2.ID WHERE T1.WEIGHT_KG = 108 AND T1.HEIGHT_CM = 188,
1,809,True,,0.04095,SELECT PUBLISHER.PUBLISHER_NAME FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE SUPERHERO.ID = 38;,SELECT T2.PUBLISHER_NAME FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID WHERE T1.ID = 38,
1,810,True,,0.0611979999999999,SELECT RACE.RACE FROM RACE INNER JOIN SUPERHERO ON RACE.ID = SUPERHERO.RACE_ID INNER JOIN HERO_ATTRIBUTE ON SUPERHERO.ID = HERO_ATTRIBUTE.HERO_ID ORDER BY HERO_ATTRIBUTE.ATTRIBUTE_VALUE DESC LIMIT 1,SELECT T3.RACE FROM SUPERHERO AS T1 INNER JOIN HERO_ATTRIBUTE AS T2 ON T1.ID = T2.HERO_ID INNER JOIN RACE AS T3 ON T1.RACE_ID = T3.ID ORDER BY T2.ATTRIBUTE_VALUE DESC LIMIT 1,
1,811,True,,0.0850389999999999,"SELECT ALIGNMENT.ALIGNMENT, SUPERPOWER.POWER_NAME FROM SUPERHERO INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE SUPERHERO.SUPERHERO_NAME = 'ATOM IV';","SELECT T4.ALIGNMENT, T3.POWER_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID INNER JOIN SUPERPOWER AS T3 ON T3.ID = T2.POWER_ID INNER JOIN ALIGNMENT AS T4 ON T1.ALIGNMENT_ID = T4.ID WHERE T1.SUPERHERO_NAME = 'ATOM IV'",
1,812,True,,0.041627,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID WHERE COLOUR.COLOUR = 'BLUE' LIMIT 5,SELECT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.EYE_COLOUR_ID = T2.ID WHERE T2.COLOUR = 'BLUE' LIMIT 5,
1,813,True,,0.074275,SELECT AVG(HERO_ATTRIBUTE.ATTRIBUTE_VALUE) FROM HERO_ATTRIBUTE INNER JOIN SUPERHERO ON HERO_ATTRIBUTE.HERO_ID = SUPERHERO.ID INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID WHERE ALIGNMENT.ALIGNMENT = 'NEUTRAL';,SELECT AVG(T1.ATTRIBUTE_VALUE) FROM HERO_ATTRIBUTE AS T1 INNER JOIN SUPERHERO AS T2 ON T1.HERO_ID = T2.ID INNER JOIN ALIGNMENT AS T3 ON T2.ALIGNMENT_ID = T3.ID WHERE T3.ALIGNMENT = 'NEUTRAL',
1,814,True,,0.064035,SELECT COLOUR.COLOUR FROM HERO_ATTRIBUTE INNER JOIN SUPERHERO ON HERO_ATTRIBUTE.HERO_ID = SUPERHERO.ID INNER JOIN COLOUR ON SUPERHERO.SKIN_COLOUR_ID = COLOUR.ID WHERE HERO_ATTRIBUTE.ATTRIBUTE_VALUE = 100;,SELECT DISTINCT T2.COLOUR FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.SKIN_COLOUR_ID = T2.ID INNER JOIN HERO_ATTRIBUTE AS T3 ON T1.ID = T3.HERO_ID WHERE T3.ATTRIBUTE_VALUE = 100,
1,815,True,,0.088888,SELECT COUNT(*) FROM SUPERHERO INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID WHERE ALIGNMENT.ALIGNMENT = 'GOOD' AND GENDER.GENDER = 'FEMALE',SELECT COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN ALIGNMENT AS T2 ON T1.ALIGNMENT_ID = T2.ID INNER JOIN GENDER AS T3 ON T1.GENDER_ID = T3.ID WHERE T2.ALIGNMENT = 'GOOD' AND T3.GENDER = 'FEMALE',
1,816,True,,0.053929,SELECT SUPERHERO.SUPERHERO_NAME FROM HERO_ATTRIBUTE INNER JOIN SUPERHERO ON HERO_ATTRIBUTE.HERO_ID = SUPERHERO.ID WHERE HERO_ATTRIBUTE.ATTRIBUTE_VALUE BETWEEN 75 AND 80,SELECT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_ATTRIBUTE AS T2 ON T1.ID = T2.HERO_ID WHERE T2.ATTRIBUTE_VALUE BETWEEN 75 AND 80,
1,817,True,,0.1049829999999999,SELECT RACE.RACE FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.HAIR_COLOUR_ID = COLOUR.ID INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID INNER JOIN RACE ON SUPERHERO.RACE_ID = RACE.ID WHERE COLOUR.COLOUR = 'BLUE' AND GENDER.GENDER = 'MALE';,SELECT T3.RACE FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.HAIR_COLOUR_ID = T2.ID INNER JOIN RACE AS T3 ON T1.RACE_ID = T3.ID INNER JOIN GENDER AS T4 ON T1.GENDER_ID = T4.ID WHERE T2.COLOUR = 'BLUE' AND T4.GENDER = 'MALE',
1,818,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID WHERE GENDER.GENDER = 'FEMALE' AND ALIGNMENT.ALIGNMENT = 'BAD') AS REAL) * 100) / (SELECT COUNT(*) FROM SUPERHERO INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID WHERE ALIGNMENT.ALIGNMENT = 'BAD') FROM SUPERHERO LIMIT 1;,SELECT CAST(COUNT(CASE WHEN T3.GENDER = 'FEMALE' THEN T1.ID ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN ALIGNMENT AS T2 ON T1.ALIGNMENT_ID = T2.ID INNER JOIN GENDER AS T3 ON T1.GENDER_ID = T3.ID WHERE T2.ALIGNMENT = 'BAD',
2,818,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID WHERE GENDER.GENDER = 'FEMALE' AND ALIGNMENT.ALIGNMENT = 'BAD') AS REAL) * 100) / (SELECT COUNT(*) FROM SUPERHERO INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID WHERE ALIGNMENT.ALIGNMENT = 'BAD') FROM SUPERHERO LIMIT 1;,SELECT CAST(COUNT(CASE WHEN T3.GENDER = 'FEMALE' THEN T1.ID ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN ALIGNMENT AS T2 ON T1.ALIGNMENT_ID = T2.ID INNER JOIN GENDER AS T3 ON T1.GENDER_ID = T3.ID WHERE T2.ALIGNMENT = 'BAD',
3,818,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID WHERE GENDER.GENDER = 'FEMALE' AND ALIGNMENT.ALIGNMENT = 'BAD') AS REAL) * 100) / (SELECT COUNT(*) FROM SUPERHERO INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID WHERE ALIGNMENT.ALIGNMENT = 'BAD') FROM SUPERHERO LIMIT 1;,SELECT CAST(COUNT(CASE WHEN T3.GENDER = 'FEMALE' THEN T1.ID ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN ALIGNMENT AS T2 ON T1.ALIGNMENT_ID = T2.ID INNER JOIN GENDER AS T3 ON T1.GENDER_ID = T3.ID WHERE T2.ALIGNMENT = 'BAD',
1,819,True,,0.059893,SELECT (SUM(CASE WHEN SUPERHERO.EYE_COLOUR_ID = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN SUPERHERO.EYE_COLOUR_ID = 1 THEN 1 ELSE 0 END)) AS DIFFERENCE FROM SUPERHERO WHERE SUPERHERO.WEIGHT_KG = 0 OR SUPERHERO.WEIGHT_KG IS NULL,SELECT SUM(CASE WHEN T2.ID = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.ID = 1 THEN 1 ELSE 0 END) FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.EYE_COLOUR_ID = T2.ID WHERE T1.WEIGHT_KG = 0 OR T1.WEIGHT_KG IS NULL,
1,820,True,,0.083932,SELECT HERO_ATTRIBUTE.ATTRIBUTE_VALUE FROM HERO_ATTRIBUTE INNER JOIN SUPERHERO ON HERO_ATTRIBUTE.HERO_ID = SUPERHERO.ID INNER JOIN ATTRIBUTE ON HERO_ATTRIBUTE.ATTRIBUTE_ID = ATTRIBUTE.ID WHERE SUPERHERO.SUPERHERO_NAME = 'HULK' AND ATTRIBUTE.ATTRIBUTE_NAME = 'STRENGTH';,SELECT T2.ATTRIBUTE_VALUE FROM SUPERHERO AS T1 INNER JOIN HERO_ATTRIBUTE AS T2 ON T1.ID = T2.HERO_ID INNER JOIN ATTRIBUTE AS T3 ON T2.ATTRIBUTE_ID = T3.ID WHERE T1.SUPERHERO_NAME = 'HULK' AND T3.ATTRIBUTE_NAME = 'STRENGTH',
1,821,True,,0.064101,SELECT SUPERPOWER.POWER_NAME FROM SUPERHERO INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE SUPERHERO.SUPERHERO_NAME = 'AJAX';,SELECT T3.POWER_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID INNER JOIN SUPERPOWER AS T3 ON T2.POWER_ID = T3.ID WHERE T1.SUPERHERO_NAME = 'AJAX',
1,822,True,,0.088117,SELECT COUNT(*) FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.SKIN_COLOUR_ID = COLOUR.ID INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID WHERE COLOUR.COLOUR = 'GREEN' AND ALIGNMENT.ALIGNMENT = 'BAD',SELECT COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN ALIGNMENT AS T2 ON T1.ALIGNMENT_ID = T2.ID INNER JOIN COLOUR AS T3 ON T1.SKIN_COLOUR_ID = T3.ID WHERE T2.ALIGNMENT = 'BAD' AND T3.COLOUR = 'GREEN',
1,823,True,,0.088144,SELECT COUNT(*) FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE GENDER.GENDER = 'FEMALE' AND PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS',SELECT COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID INNER JOIN GENDER AS T3 ON T1.GENDER_ID = T3.ID WHERE T2.PUBLISHER_NAME = 'MARVEL COMICS' AND T3.GENDER = 'FEMALE',
1,824,True,,0.063192,SELECT SUPERHERO.SUPERHERO_NAME FROM HERO_POWER INNER JOIN SUPERHERO ON HERO_POWER.HERO_ID = SUPERHERO.ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE SUPERPOWER.POWER_NAME = 'WIND CONTROL' ORDER BY SUPERHERO.SUPERHERO_NAME ASC,SELECT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID INNER JOIN SUPERPOWER AS T3 ON T2.POWER_ID = T3.ID WHERE T3.POWER_NAME = 'WIND CONTROL' ORDER BY T1.SUPERHERO_NAME,
1,825,True,,0.0859279999999999,SELECT GENDER.GENDER FROM GENDER INNER JOIN SUPERHERO ON GENDER.ID = SUPERHERO.GENDER_ID INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE SUPERPOWER.POWER_NAME = 'PHOENIX FORCE';,SELECT T4.GENDER FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID INNER JOIN SUPERPOWER AS T3 ON T2.POWER_ID = T3.ID INNER JOIN GENDER AS T4 ON T1.GENDER_ID = T4.ID WHERE T3.POWER_NAME = 'PHOENIX FORCE',
1,826,True,,0.043348,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'DC COMICS' ORDER BY SUPERHERO.WEIGHT_KG DESC LIMIT 1,SELECT T1.SUPERHERO_NAME FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID WHERE T2.PUBLISHER_NAME = 'DC COMICS' ORDER BY T1.WEIGHT_KG DESC LIMIT 1,
1,827,True,,0.092469,SELECT AVG(SUPERHERO.HEIGHT_CM) FROM SUPERHERO INNER JOIN RACE ON SUPERHERO.RACE_ID = RACE.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE RACE.RACE <> 'HUMAN' AND PUBLISHER.PUBLISHER_NAME = 'DARK HORSE COMICS';,SELECT AVG(T1.HEIGHT_CM) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID INNER JOIN RACE AS T3 ON T1.RACE_ID = T3.ID WHERE T2.PUBLISHER_NAME = 'DARK HORSE COMICS' AND T3.RACE != 'HUMAN',
1,828,True,,0.06856,SELECT COUNT(*) FROM HERO_ATTRIBUTE INNER JOIN ATTRIBUTE ON HERO_ATTRIBUTE.ATTRIBUTE_ID = ATTRIBUTE.ID WHERE ATTRIBUTE.ATTRIBUTE_NAME = 'SPEED' AND HERO_ATTRIBUTE.ATTRIBUTE_VALUE = 100,SELECT COUNT(T3.SUPERHERO_NAME) FROM HERO_ATTRIBUTE AS T1 INNER JOIN ATTRIBUTE AS T2 ON T1.ATTRIBUTE_ID = T2.ID INNER JOIN SUPERHERO AS T3 ON T1.HERO_ID = T3.ID WHERE T2.ATTRIBUTE_NAME = 'SPEED' AND T1.ATTRIBUTE_VALUE = 100,
1,829,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT COUNT(*) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'DC COMICS') - (SELECT COUNT(*) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') AS DIFFERENCE,SELECT SUM(CASE WHEN T2.PUBLISHER_NAME = 'DC COMICS' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.PUBLISHER_NAME = 'MARVEL COMICS' THEN 1 ELSE 0 END) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID,
2,829,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT COUNT(*) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'DC COMICS') - (SELECT COUNT(*) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') AS DIFFERENCE,SELECT SUM(CASE WHEN T2.PUBLISHER_NAME = 'DC COMICS' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.PUBLISHER_NAME = 'MARVEL COMICS' THEN 1 ELSE 0 END) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID,
3,829,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT COUNT(*) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'DC COMICS') - (SELECT COUNT(*) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') AS DIFFERENCE,SELECT SUM(CASE WHEN T2.PUBLISHER_NAME = 'DC COMICS' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.PUBLISHER_NAME = 'MARVEL COMICS' THEN 1 ELSE 0 END) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID,
1,830,True,,0.066984,SELECT ATTRIBUTE.ATTRIBUTE_NAME FROM HERO_ATTRIBUTE INNER JOIN SUPERHERO ON HERO_ATTRIBUTE.HERO_ID = SUPERHERO.ID INNER JOIN ATTRIBUTE ON HERO_ATTRIBUTE.ATTRIBUTE_ID = ATTRIBUTE.ID WHERE SUPERHERO.SUPERHERO_NAME = 'BLACK PANTHER' ORDER BY HERO_ATTRIBUTE.ATTRIBUTE_VALUE ASC LIMIT 1,SELECT T3.ATTRIBUTE_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_ATTRIBUTE AS T2 ON T1.ID = T2.HERO_ID INNER JOIN ATTRIBUTE AS T3 ON T2.ATTRIBUTE_ID = T3.ID WHERE T1.SUPERHERO_NAME = 'BLACK PANTHER' ORDER BY T2.ATTRIBUTE_VALUE ASC LIMIT 1,
1,831,True,,0.041188,SELECT COLOUR.COLOUR FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID WHERE SUPERHERO.SUPERHERO_NAME = 'ABOMINATION';,SELECT T2.COLOUR FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.EYE_COLOUR_ID = T2.ID WHERE T1.SUPERHERO_NAME = 'ABOMINATION',
1,832,True,,0.017709,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO ORDER BY SUPERHERO.HEIGHT_CM DESC LIMIT 1,SELECT SUPERHERO_NAME FROM SUPERHERO ORDER BY HEIGHT_CM DESC LIMIT 1,
1,833,True,,0.022468,SELECT SUPERHERO.SUPERHERO_NAME FROM SUPERHERO WHERE SUPERHERO.FULL_NAME = 'CHARLES CHANDLER',SELECT SUPERHERO_NAME FROM SUPERHERO WHERE FULL_NAME = 'CHARLES CHANDLER',
1,834,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE GENDER.GENDER = 'FEMALE' AND PUBLISHER.PUBLISHER_NAME = 'GEORGE LUCAS') AS REAL) * 100) / (SELECT COUNT(*) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'GEORGE LUCAS') AS PERCENTAGE FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'GEORGE LUCAS' LIMIT 1;,SELECT CAST(COUNT(CASE WHEN T3.GENDER = 'FEMALE' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID INNER JOIN GENDER AS T3 ON T1.GENDER_ID = T3.ID WHERE T2.PUBLISHER_NAME = 'GEORGE LUCAS',
2,834,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE GENDER.GENDER = 'FEMALE' AND PUBLISHER.PUBLISHER_NAME = 'GEORGE LUCAS') AS REAL) * 100) / (SELECT COUNT(*) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'GEORGE LUCAS') AS PERCENTAGE FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'GEORGE LUCAS' LIMIT 1;,SELECT CAST(COUNT(CASE WHEN T3.GENDER = 'FEMALE' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID INNER JOIN GENDER AS T3 ON T1.GENDER_ID = T3.ID WHERE T2.PUBLISHER_NAME = 'GEORGE LUCAS',
3,834,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE GENDER.GENDER = 'FEMALE' AND PUBLISHER.PUBLISHER_NAME = 'GEORGE LUCAS') AS REAL) * 100) / (SELECT COUNT(*) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'GEORGE LUCAS') AS PERCENTAGE FROM SUPERHERO INNER JOIN GENDER ON SUPERHERO.GENDER_ID = GENDER.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'GEORGE LUCAS' LIMIT 1;,SELECT CAST(COUNT(CASE WHEN T3.GENDER = 'FEMALE' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID INNER JOIN GENDER AS T3 ON T1.GENDER_ID = T3.ID WHERE T2.PUBLISHER_NAME = 'GEORGE LUCAS',
1,835,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM SUPERHERO INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE ALIGNMENT.ALIGNMENT = 'GOOD' AND PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') AS REAL) * 100) / (SELECT COUNT(*) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') AS PERCENTAGE FROM SUPERHERO INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS' LIMIT 1;,SELECT CAST(COUNT(CASE WHEN T3.ALIGNMENT = 'GOOD' THEN T1.ID ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID INNER JOIN ALIGNMENT AS T3 ON T1.ALIGNMENT_ID = T3.ID WHERE T2.PUBLISHER_NAME = 'MARVEL COMICS',
2,835,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM SUPERHERO INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE ALIGNMENT.ALIGNMENT = 'GOOD' AND PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') AS REAL) * 100) / (SELECT COUNT(*) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') AS PERCENTAGE FROM SUPERHERO INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS' LIMIT 1;,SELECT CAST(COUNT(CASE WHEN T3.ALIGNMENT = 'GOOD' THEN T1.ID ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID INNER JOIN ALIGNMENT AS T3 ON T1.ALIGNMENT_ID = T3.ID WHERE T2.PUBLISHER_NAME = 'MARVEL COMICS',
3,835,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM SUPERHERO INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE ALIGNMENT.ALIGNMENT = 'GOOD' AND PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') AS REAL) * 100) / (SELECT COUNT(*) FROM SUPERHERO INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS') AS PERCENTAGE FROM SUPERHERO INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID INNER JOIN PUBLISHER ON SUPERHERO.PUBLISHER_ID = PUBLISHER.ID WHERE PUBLISHER.PUBLISHER_NAME = 'MARVEL COMICS' LIMIT 1;,SELECT CAST(COUNT(CASE WHEN T3.ALIGNMENT = 'GOOD' THEN T1.ID ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM SUPERHERO AS T1 INNER JOIN PUBLISHER AS T2 ON T1.PUBLISHER_ID = T2.ID INNER JOIN ALIGNMENT AS T3 ON T1.ALIGNMENT_ID = T3.ID WHERE T2.PUBLISHER_NAME = 'MARVEL COMICS',
1,836,ERROR,"NotImplementedError: {'like': ['FULL_NAME', {'literal': 'JOHN%'}]}",,SELECT COUNT(*) FROM SUPERHERO WHERE FULL_NAME LIKE 'JOHN%';,SELECT COUNT(ID) FROM SUPERHERO WHERE FULL_NAME LIKE 'JOHN%',
2,836,ERROR,"NotImplementedError: {'like': ['FULL_NAME', {'literal': 'JOHN%'}]}",,SELECT COUNT(*) FROM SUPERHERO WHERE FULL_NAME LIKE 'JOHN%';,SELECT COUNT(ID) FROM SUPERHERO WHERE FULL_NAME LIKE 'JOHN%',
3,836,ERROR,"NotImplementedError: {'like': ['FULL_NAME', {'literal': 'JOHN%'}]}",,SELECT COUNT(*) FROM SUPERHERO WHERE FULL_NAME LIKE 'JOHN%';,SELECT COUNT(ID) FROM SUPERHERO WHERE FULL_NAME LIKE 'JOHN%',
1,837,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute HERO_ID`,,SELECT HERO_ATTRIBUTE.HERO_ID FROM HERO_ATTRIBUTE ORDER BY HERO_ATTRIBUTE.ATTRIBUTE_VALUE ASC LIMIT 1,SELECT HERO_ID FROM HERO_ATTRIBUTE WHERE ATTRIBUTE_VALUE = ( SELECT MIN(ATTRIBUTE_VALUE) FROM HERO_ATTRIBUTE ),
2,837,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute HERO_ID`,,SELECT HERO_ATTRIBUTE.HERO_ID FROM HERO_ATTRIBUTE ORDER BY HERO_ATTRIBUTE.ATTRIBUTE_VALUE ASC LIMIT 1,SELECT HERO_ID FROM HERO_ATTRIBUTE WHERE ATTRIBUTE_VALUE = ( SELECT MIN(ATTRIBUTE_VALUE) FROM HERO_ATTRIBUTE ),
3,837,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute HERO_ID`,,SELECT HERO_ATTRIBUTE.HERO_ID FROM HERO_ATTRIBUTE ORDER BY HERO_ATTRIBUTE.ATTRIBUTE_VALUE ASC LIMIT 1,SELECT HERO_ID FROM HERO_ATTRIBUTE WHERE ATTRIBUTE_VALUE = ( SELECT MIN(ATTRIBUTE_VALUE) FROM HERO_ATTRIBUTE ),
1,838,True,,0.021362,SELECT SUPERHERO.FULL_NAME FROM SUPERHERO WHERE SUPERHERO.SUPERHERO_NAME = 'ALIEN',SELECT FULL_NAME FROM SUPERHERO WHERE SUPERHERO_NAME = 'ALIEN',
1,839,True,,0.058702,SELECT SUPERHERO.FULL_NAME FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID WHERE SUPERHERO.WEIGHT_KG < 100 AND COLOUR.COLOUR = 'BROWN',SELECT T1.FULL_NAME FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.EYE_COLOUR_ID = T2.ID WHERE T1.WEIGHT_KG < 100 AND T2.COLOUR = 'BROWN',
1,840,True,,0.042154,SELECT HERO_ATTRIBUTE.ATTRIBUTE_VALUE FROM HERO_ATTRIBUTE INNER JOIN SUPERHERO ON HERO_ATTRIBUTE.HERO_ID = SUPERHERO.ID WHERE SUPERHERO.SUPERHERO_NAME = 'AQUABABY',SELECT T2.ATTRIBUTE_VALUE FROM SUPERHERO AS T1 INNER JOIN HERO_ATTRIBUTE AS T2 ON T1.ID = T2.HERO_ID WHERE T1.SUPERHERO_NAME = 'AQUABABY',
1,841,True,,0.041364,"SELECT SUPERHERO.WEIGHT_KG, RACE.RACE FROM SUPERHERO INNER JOIN RACE ON SUPERHERO.RACE_ID = RACE.ID WHERE SUPERHERO.ID = 40","SELECT T1.WEIGHT_KG, T2.RACE FROM SUPERHERO AS T1 INNER JOIN RACE AS T2 ON T1.RACE_ID = T2.ID WHERE T1.ID = 40",
1,842,True,,0.0530389999999999,SELECT AVG(SUPERHERO.HEIGHT_CM) FROM SUPERHERO INNER JOIN ALIGNMENT ON SUPERHERO.ALIGNMENT_ID = ALIGNMENT.ID WHERE ALIGNMENT.ALIGNMENT = 'NEUTRAL',SELECT AVG(T1.HEIGHT_CM) FROM SUPERHERO AS T1 INNER JOIN ALIGNMENT AS T2 ON T1.ALIGNMENT_ID = T2.ID WHERE T2.ALIGNMENT = 'NEUTRAL',
1,843,True,,0.046963,SELECT SUPERHERO.ID FROM SUPERHERO INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE SUPERPOWER.POWER_NAME = 'INTELLIGENCE';,SELECT T1.HERO_ID FROM HERO_POWER AS T1 INNER JOIN SUPERPOWER AS T2 ON T1.POWER_ID = T2.ID WHERE T2.POWER_NAME = 'INTELLIGENCE',
1,844,True,,0.042277,SELECT COLOUR.COLOUR FROM SUPERHERO INNER JOIN COLOUR ON SUPERHERO.EYE_COLOUR_ID = COLOUR.ID WHERE SUPERHERO.SUPERHERO_NAME = 'BLACKWULF',SELECT T2.COLOUR FROM SUPERHERO AS T1 INNER JOIN COLOUR AS T2 ON T1.EYE_COLOUR_ID = T2.ID WHERE T1.SUPERHERO_NAME = 'BLACKWULF',
1,845,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SUPERPOWER__POWER_NAME`,,SELECT SUPERPOWER.POWER_NAME FROM SUPERHERO INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE SUPERHERO.HEIGHT_CM > (SELECT AVG(SUPERHERO.HEIGHT_CM) * 0.8 FROM SUPERHERO),SELECT T3.POWER_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID INNER JOIN SUPERPOWER AS T3 ON T2.POWER_ID = T3.ID WHERE T1.HEIGHT_CM * 100 > ( SELECT AVG(HEIGHT_CM) FROM SUPERHERO ) * 80,
2,845,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SUPERPOWER__POWER_NAME`,,SELECT SUPERPOWER.POWER_NAME FROM SUPERHERO INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE SUPERHERO.HEIGHT_CM > (SELECT AVG(SUPERHERO.HEIGHT_CM) * 0.8 FROM SUPERHERO),SELECT T3.POWER_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID INNER JOIN SUPERPOWER AS T3 ON T2.POWER_ID = T3.ID WHERE T1.HEIGHT_CM * 100 > ( SELECT AVG(HEIGHT_CM) FROM SUPERHERO ) * 80,
3,845,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute SUPERPOWER__POWER_NAME`,,SELECT SUPERPOWER.POWER_NAME FROM SUPERHERO INNER JOIN HERO_POWER ON SUPERHERO.ID = HERO_POWER.HERO_ID INNER JOIN SUPERPOWER ON HERO_POWER.POWER_ID = SUPERPOWER.ID WHERE SUPERHERO.HEIGHT_CM > (SELECT AVG(SUPERHERO.HEIGHT_CM) * 0.8 FROM SUPERHERO),SELECT T3.POWER_NAME FROM SUPERHERO AS T1 INNER JOIN HERO_POWER AS T2 ON T1.ID = T2.HERO_ID INNER JOIN SUPERPOWER AS T3 ON T2.POWER_ID = T3.ID WHERE T1.HEIGHT_CM * 100 > ( SELECT AVG(HEIGHT_CM) FROM SUPERHERO ) * 80,
1,846,True,,0.063345,SELECT DRIVERS.DRIVERREF FROM QUALIFYING INNER JOIN DRIVERS ON QUALIFYING.DRIVERID = DRIVERS.DRIVERID WHERE QUALIFYING.RACEID = 20 ORDER BY QUALIFYING.Q1 DESC LIMIT 5,SELECT T2.DRIVERREF FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.RACEID = 20 ORDER BY T1.Q1 DESC LIMIT 5,
1,847,True,,0.071134,SELECT DRIVERS.SURNAME FROM QUALIFYING INNER JOIN DRIVERS ON QUALIFYING.DRIVERID = DRIVERS.DRIVERID WHERE QUALIFYING.RACEID = 19 ORDER BY QUALIFYING.Q2 ASC LIMIT 1;,SELECT T2.SURNAME FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.RACEID = 19 ORDER BY T1.Q2 ASC LIMIT 1,
1,848,True,,0.066935,SELECT RACES.YEAR FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CIRCUITS.LOCATION = 'SHANGHAI';,SELECT T2.YEAR FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T1.LOCATION = 'SHANGHAI',
1,849,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', 'CIRCUIT DE BARCELONA-CATALUNYA', '2147483648', '2147483648', 9, 10, 11, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 0, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 8, 2, '2147483648', '1970-01-01', '2147483648', '2147483649');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (0, 5, 6, 4, 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', '2147483648', 7);
-- ----------sql1------------
-- 2147483649
SELECT RACES.URL FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CIRCUITS.NAME = 'CIRCUIT DE BARCELONA-CATALUNYA';
-- ----------sql2------------
-- 2147483648
SELECT DISTINCT T1.URL FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T1.NAME = 'CIRCUIT DE BARCELONA-CATALUNYA';
",0.070099,SELECT RACES.URL FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CIRCUITS.NAME = 'CIRCUIT DE BARCELONA-CATALUNYA';,SELECT DISTINCT T1.URL FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T1.NAME = 'CIRCUIT DE BARCELONA-CATALUNYA',
1,850,True,,0.070015,SELECT RACES.NAME FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CIRCUITS.COUNTRY = 'GERMANY';,SELECT DISTINCT T2.NAME FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T1.COUNTRY = 'GERMANY',
1,851,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute RACES__CONSTRUCTORID`,,SELECT CIRCUITS.NAME FROM CONSTRUCTORS INNER JOIN RACES ON CONSTRUCTORS.CONSTRUCTORID = RACES.CONSTRUCTORID INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CONSTRUCTORS.NAME = 'RENAULT';,SELECT DISTINCT T1.POSITION FROM CONSTRUCTORSTANDINGS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T2.CONSTRUCTORID = T1.CONSTRUCTORID WHERE T2.NAME = 'RENAULT',
2,851,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute RACES__CONSTRUCTORID`,,SELECT CIRCUITS.NAME FROM CONSTRUCTORS INNER JOIN RACES ON CONSTRUCTORS.CONSTRUCTORID = RACES.CONSTRUCTORID INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CONSTRUCTORS.NAME = 'RENAULT';,SELECT DISTINCT T1.POSITION FROM CONSTRUCTORSTANDINGS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T2.CONSTRUCTORID = T1.CONSTRUCTORID WHERE T2.NAME = 'RENAULT',
3,851,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute RACES__CONSTRUCTORID`,,SELECT CIRCUITS.NAME FROM CONSTRUCTORS INNER JOIN RACES ON CONSTRUCTORS.CONSTRUCTORID = RACES.CONSTRUCTORID INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CONSTRUCTORS.NAME = 'RENAULT';,SELECT DISTINCT T1.POSITION FROM CONSTRUCTORSTANDINGS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T2.CONSTRUCTORID = T1.CONSTRUCTORID WHERE T2.NAME = 'RENAULT',
1,852,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', 'EUROPE', '2147483648', 8, 9, 10, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (3, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (5, '2147483648', 0, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (2010, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (4, 2010, 7, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 4, 3, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 4, 3, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 4, 5, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (4, 5, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (4, 5, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 4, 5, 3, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (6, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (0, 4, 5, 3, 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', '2147483648', 6);
-- ----------sql1------------
-- 0
SELECT COUNT(*) FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE RACES.YEAR = 2010 AND CIRCUITS.LOCATION NOT IN ('ASIA', 'EUROPE');
-- ----------sql2------------
-- 1
SELECT COUNT(T3.RACEID) FROM CIRCUITS AS T1 INNER JOIN RACES AS T3 ON T3.CIRCUITID = T1.CIRCUITID WHERE T1.COUNTRY NOT IN ( 'BAHRAIN', 'CHINA', 'SINGAPORE', 'JAPAN', 'KOREA', 'TURKEY', 'UAE', 'MALAYSIA', 'SPAIN', 'MONACO', 'AZERBAIJAN', 'AUSTRIA', 'BELGIUM', 'FRANCE', 'GERMANY', 'HUNGARY', 'ITALY', 'UK' ) AND T3.YEAR = 2010;
",0.662691,"SELECT COUNT(*) FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE RACES.YEAR = 2010 AND CIRCUITS.LOCATION NOT IN ('ASIA', 'EUROPE')","SELECT COUNT(T3.RACEID) FROM CIRCUITS AS T1 INNER JOIN RACES AS T3 ON T3.CIRCUITID = T1.CIRCUITID WHERE T1.COUNTRY NOT IN ( 'BAHRAIN', 'CHINA', 'SINGAPORE', 'JAPAN', 'KOREA', 'TURKEY', 'UAE', 'MALAYSIA', 'SPAIN', 'MONACO', 'AZERBAIJAN', 'AUSTRIA', 'BELGIUM', 'FRANCE', 'GERMANY', 'HUNGARY', 'ITALY', 'UK' ) AND T3.YEAR = 2010",
1,853,True,,0.069177,SELECT RACES.NAME FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CIRCUITS.COUNTRY = 'SPAIN';,SELECT DISTINCT T2.NAME FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T1.COUNTRY = 'SPAIN',
1,854,True,,0.0711489999999999,"SELECT CIRCUITS.LAT, CIRCUITS.LNG FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE RACES.NAME = 'AUSTRALIAN GRAND PRIX'","SELECT DISTINCT T1.LAT, T1.LNG FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T2.NAME = 'AUSTRALIAN GRAND PRIX'",
1,855,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', 'SEPANG INTERNATIONAL CIRCUIT', '2147483648', '2147483648', 9, 10, 11, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 0, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 8, 2, '2147483648', '1970-01-01', '2147483648', '2147483649');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (0, 5, 6, 4, 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', '2147483648', 7);
-- ----------sql1------------
-- 2147483649
SELECT RACES.URL FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CIRCUITS.NAME = 'SEPANG INTERNATIONAL CIRCUIT';
-- ----------sql2------------
-- 2147483648
SELECT DISTINCT T1.URL FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T1.NAME = 'SEPANG INTERNATIONAL CIRCUIT';
",0.070047,SELECT RACES.URL FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CIRCUITS.NAME = 'SEPANG INTERNATIONAL CIRCUIT';,SELECT DISTINCT T1.URL FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T1.NAME = 'SEPANG INTERNATIONAL CIRCUIT',
1,856,True,,0.070047,SELECT RACES.TIME FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CIRCUITS.NAME = 'SEPANG INTERNATIONAL CIRCUIT';,SELECT DISTINCT T2.TIME FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T1.NAME = 'SEPANG INTERNATIONAL CIRCUIT',
1,857,True,,0.070198,"SELECT CIRCUITS.LAT, CIRCUITS.LNG FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE RACES.NAME = 'ABU DHABI GRAND PRIX';","SELECT DISTINCT T1.LAT, T1.LNG FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T2.NAME = 'ABU DHABI GRAND PRIX'",
1,858,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CONSTRUCTORS__COUNTRY`,,SELECT CONSTRUCTORS.COUNTRY FROM CONSTRUCTORRESULTS INNER JOIN CONSTRUCTORS ON CONSTRUCTORRESULTS.CONSTRUCTORID = CONSTRUCTORS.CONSTRUCTORID WHERE CONSTRUCTORRESULTS.RACEID = 24 AND CONSTRUCTORRESULTS.POINTS = 1,SELECT T2.NATIONALITY FROM CONSTRUCTORRESULTS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T2.CONSTRUCTORID = T1.CONSTRUCTORID WHERE T1.RACEID = 24 AND T1.POINTS = 1,
2,858,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CONSTRUCTORS__COUNTRY`,,SELECT CONSTRUCTORS.COUNTRY FROM CONSTRUCTORRESULTS INNER JOIN CONSTRUCTORS ON CONSTRUCTORRESULTS.CONSTRUCTORID = CONSTRUCTORS.CONSTRUCTORID WHERE CONSTRUCTORRESULTS.RACEID = 24 AND CONSTRUCTORRESULTS.POINTS = 1,SELECT T2.NATIONALITY FROM CONSTRUCTORRESULTS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T2.CONSTRUCTORID = T1.CONSTRUCTORID WHERE T1.RACEID = 24 AND T1.POINTS = 1,
3,858,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CONSTRUCTORS__COUNTRY`,,SELECT CONSTRUCTORS.COUNTRY FROM CONSTRUCTORRESULTS INNER JOIN CONSTRUCTORS ON CONSTRUCTORRESULTS.CONSTRUCTORID = CONSTRUCTORS.CONSTRUCTORID WHERE CONSTRUCTORRESULTS.RACEID = 24 AND CONSTRUCTORRESULTS.POINTS = 1,SELECT T2.NATIONALITY FROM CONSTRUCTORRESULTS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T2.CONSTRUCTORID = T1.CONSTRUCTORID WHERE T1.RACEID = 24 AND T1.POINTS = 1,
1,859,True,,0.0985269999999999,SELECT QUALIFYING.Q1 FROM DRIVERS INNER JOIN QUALIFYING ON DRIVERS.DRIVERID = QUALIFYING.DRIVERID WHERE DRIVERS.SURNAME = 'SENNA' AND DRIVERS.FORENAME = 'BRUNO' AND QUALIFYING.RACEID = 354,SELECT T1.Q1 FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.RACEID = 354 AND T2.FORENAME = 'BRUNO' AND T2.SURNAME = 'SENNA',
1,860,ERROR,"NotImplementedError: {'like': ['T1__Q2', {'literal': '1:40%'}]}",,SELECT DRIVERS.NATIONALITY FROM QUALIFYING INNER JOIN DRIVERS ON QUALIFYING.DRIVERID = DRIVERS.DRIVERID WHERE QUALIFYING.Q2 = '0:01:40' AND QUALIFYING.RACEID = 355,SELECT DISTINCT T2.NATIONALITY FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.RACEID = 355 AND T1.Q2 LIKE '1:40%',
2,860,ERROR,"NotImplementedError: {'like': ['T1__Q2', {'literal': '1:40%'}]}",,SELECT DRIVERS.NATIONALITY FROM QUALIFYING INNER JOIN DRIVERS ON QUALIFYING.DRIVERID = DRIVERS.DRIVERID WHERE QUALIFYING.Q2 = '0:01:40' AND QUALIFYING.RACEID = 355,SELECT DISTINCT T2.NATIONALITY FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.RACEID = 355 AND T1.Q2 LIKE '1:40%',
3,860,ERROR,"NotImplementedError: {'like': ['T1__Q2', {'literal': '1:40%'}]}",,SELECT DRIVERS.NATIONALITY FROM QUALIFYING INNER JOIN DRIVERS ON QUALIFYING.DRIVERID = DRIVERS.DRIVERID WHERE QUALIFYING.Q2 = '0:01:40' AND QUALIFYING.RACEID = 355,SELECT DISTINCT T2.NATIONALITY FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.RACEID = 355 AND T1.Q2 LIKE '1:40%',
1,861,ERROR,"NotImplementedError: {'like': ['T1__Q3', {'literal': '1:54%'}]}",,SELECT QUALIFYING.NUMBER FROM QUALIFYING WHERE QUALIFYING.RACEID = 903 AND QUALIFYING.Q3 = '0:01:54',SELECT T2.NUMBER FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.RACEID = 903 AND T1.Q3 LIKE '1:54%',
2,861,ERROR,"NotImplementedError: {'like': ['T1__Q3', {'literal': '1:54%'}]}",,SELECT QUALIFYING.NUMBER FROM QUALIFYING WHERE QUALIFYING.RACEID = 903 AND QUALIFYING.Q3 = '0:01:54',SELECT T2.NUMBER FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.RACEID = 903 AND T1.Q3 LIKE '1:54%',
3,861,ERROR,"NotImplementedError: {'like': ['T1__Q3', {'literal': '1:54%'}]}",,SELECT QUALIFYING.NUMBER FROM QUALIFYING WHERE QUALIFYING.RACEID = 903 AND QUALIFYING.Q3 = '0:01:54',SELECT T2.NUMBER FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.RACEID = 903 AND T1.Q3 LIKE '1:54%',
1,862,True,,0.120997,SELECT COUNT(*) FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID WHERE RACES.NAME = 'BAHRAIN GRAND PRIX' AND RACES.YEAR = 2007 AND RESULTS.TIME IS NULL,SELECT COUNT(T3.DRIVERID) FROM RACES AS T1 INNER JOIN RESULTS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T1.YEAR = 2007 AND T1.NAME = 'BAHRAIN GRAND PRIX' AND T2.TIME IS NULL,
1,863,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (5, '2147483648', 0, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (901, 3, 7, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 901, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 901, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 901, 5, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (901, 5, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (901, 5, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 901, 5, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (6, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (0, 901, 5, 4, 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', '2147483648', 6);
-- ----------sql1------------
-- 3
SELECT SEASONS.YEAR FROM RACES INNER JOIN SEASONS ON RACES.YEAR = SEASONS.YEAR WHERE RACES.RACEID = 901;
-- ----------sql2------------
-- 2147483648
SELECT T2.URL FROM RACES AS T1 INNER JOIN SEASONS AS T2 ON T2.YEAR = T1.YEAR WHERE T1.RACEID = 901;
",0.06207,SELECT SEASONS.YEAR FROM RACES INNER JOIN SEASONS ON RACES.YEAR = SEASONS.YEAR WHERE RACES.RACEID = 901,SELECT T2.URL FROM RACES AS T1 INNER JOIN SEASONS AS T2 ON T2.YEAR = T1.YEAR WHERE T1.RACEID = 901,
1,864,True,,0.096191,SELECT COUNT(RESULTS.DRIVERID) FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID WHERE RACES.DATE = '2015/11/29' AND RESULTS.TIME IS NOT NULL,SELECT COUNT(T2.DRIVERID) FROM RACES AS T1 INNER JOIN RESULTS AS T2 ON T2.RACEID = T1.RACEID WHERE T1.DATE = '2015-11-29' AND T2.TIME IS NOT NULL,
1,865,False,,,SELECT DRIVERS.DRIVERREF FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE RESULTS.RACEID = 592 AND RESULTS.TIME IS NOT NULL ORDER BY DRIVERS.DOB LIMIT 1,"SELECT T1.FORENAME, T1.SURNAME FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T2.RACEID = 592 AND T2.TIME IS NOT NULL AND T1.DOB IS NOT NULL ORDER BY T1.DOB ASC LIMIT 1",
1,866,ERROR,"NotImplementedError: {'like': ['LAPTIMES__TIME', {'literal': '0:01:27%'}]}",,SELECT DRIVERS.URL FROM LAPTIMES INNER JOIN DRIVERS ON LAPTIMES.DRIVERID = DRIVERS.DRIVERID WHERE LAPTIMES.TIME LIKE '0:01:27%' AND LAPTIMES.RACEID = 161,"SELECT DISTINCT T2.FORENAME, T2.SURNAME, T2.URL FROM LAPTIMES AS T1 INNER JOIN DRIVERS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.RACEID = 161 AND T1.TIME LIKE '1:27%'",
2,866,ERROR,"NotImplementedError: {'like': ['LAPTIMES__TIME', {'literal': '0:01:27%'}]}",,SELECT DRIVERS.URL FROM LAPTIMES INNER JOIN DRIVERS ON LAPTIMES.DRIVERID = DRIVERS.DRIVERID WHERE LAPTIMES.TIME LIKE '0:01:27%' AND LAPTIMES.RACEID = 161,"SELECT DISTINCT T2.FORENAME, T2.SURNAME, T2.URL FROM LAPTIMES AS T1 INNER JOIN DRIVERS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.RACEID = 161 AND T1.TIME LIKE '1:27%'",
3,866,ERROR,"NotImplementedError: {'like': ['LAPTIMES__TIME', {'literal': '0:01:27%'}]}",,SELECT DRIVERS.URL FROM LAPTIMES INNER JOIN DRIVERS ON LAPTIMES.DRIVERID = DRIVERS.DRIVERID WHERE LAPTIMES.TIME LIKE '0:01:27%' AND LAPTIMES.RACEID = 161,"SELECT DISTINCT T2.FORENAME, T2.SURNAME, T2.URL FROM LAPTIMES AS T1 INNER JOIN DRIVERS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.RACEID = 161 AND T1.TIME LIKE '1:27%'",
1,867,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (5, '2147483648', 17, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (933, 3, 0, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 933, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 933, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 933, 5, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (933, 5, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (933, 5, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 933, 5, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (6, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (7, 933, 5, 4, 8, 9, 10, '2147483648', 11, 12, 13, '2147483648', 14, 15, 16, NULL, '2147483648', 6);
-- ----------sql1------------
-- 2147483648
SELECT DRIVERS.NATIONALITY FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE RESULTS.RACEID = 933 ORDER BY RESULTS.FASTESTLAPSPEED DESC LIMIT 1;
-- ----------sql2------------
SELECT T1.NATIONALITY FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T2.RACEID = 933 AND T2.FASTESTLAPTIME IS NOT NULL ORDER BY T2.FASTESTLAPSPEED DESC LIMIT 1;
",0.087149,SELECT DRIVERS.NATIONALITY FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE RESULTS.RACEID = 933 ORDER BY RESULTS.FASTESTLAPSPEED DESC LIMIT 1,SELECT T1.NATIONALITY FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T2.RACEID = 933 AND T2.FASTESTLAPTIME IS NOT NULL ORDER BY T2.FASTESTLAPSPEED DESC LIMIT 1,
1,868,True,,0.07141,"SELECT CIRCUITS.LAT, CIRCUITS.LNG FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE RACES.NAME = 'MALAYSIAN GRAND PRIX'","SELECT DISTINCT T1.LAT, T1.LNG FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T2.NAME = 'MALAYSIAN GRAND PRIX'",
1,869,True,,0.06256,SELECT CONSTRUCTORS.URL FROM CONSTRUCTORRESULTS INNER JOIN CONSTRUCTORS ON CONSTRUCTORRESULTS.CONSTRUCTORID = CONSTRUCTORS.CONSTRUCTORID WHERE CONSTRUCTORRESULTS.RACEID = 9 ORDER BY CONSTRUCTORRESULTS.POINTS DESC LIMIT 1,SELECT T2.URL FROM CONSTRUCTORRESULTS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T2.CONSTRUCTORID = T1.CONSTRUCTORID WHERE T1.RACEID = 9 ORDER BY T1.POINTS DESC LIMIT 1,
1,870,True,,0.100944,SELECT QUALIFYING.Q1 FROM DRIVERS INNER JOIN QUALIFYING ON DRIVERS.DRIVERID = QUALIFYING.DRIVERID WHERE DRIVERS.SURNAME = 'DI GRASSI' AND DRIVERS.FORENAME = 'LUCAS' AND QUALIFYING.RACEID = 345,SELECT T1.Q1 FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.RACEID = 345 AND T2.FORENAME = 'LUCAS' AND T2.SURNAME = 'DI GRASSI',
1,871,ERROR,"NotImplementedError: {'like': ['T1__Q2', {'literal': '1:15%'}]}",,SELECT DRIVERS.NATIONALITY FROM QUALIFYING INNER JOIN DRIVERS ON QUALIFYING.DRIVERID = DRIVERS.DRIVERID WHERE QUALIFYING.Q2 = '0:01:15' AND QUALIFYING.RACEID = 347,SELECT DISTINCT T2.NATIONALITY FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.RACEID = 347 AND T1.Q2 LIKE '1:15%',
2,871,ERROR,"NotImplementedError: {'like': ['T1__Q2', {'literal': '1:15%'}]}",,SELECT DRIVERS.NATIONALITY FROM QUALIFYING INNER JOIN DRIVERS ON QUALIFYING.DRIVERID = DRIVERS.DRIVERID WHERE QUALIFYING.Q2 = '0:01:15' AND QUALIFYING.RACEID = 347,SELECT DISTINCT T2.NATIONALITY FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.RACEID = 347 AND T1.Q2 LIKE '1:15%',
3,871,ERROR,"NotImplementedError: {'like': ['T1__Q2', {'literal': '1:15%'}]}",,SELECT DRIVERS.NATIONALITY FROM QUALIFYING INNER JOIN DRIVERS ON QUALIFYING.DRIVERID = DRIVERS.DRIVERID WHERE QUALIFYING.Q2 = '0:01:15' AND QUALIFYING.RACEID = 347,SELECT DISTINCT T2.NATIONALITY FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.RACEID = 347 AND T1.Q2 LIKE '1:15%',
1,872,ERROR,"NotImplementedError: {'like': ['T1__Q3', {'literal': '1:33%'}]}",,SELECT DRIVERS.CODE FROM QUALIFYING INNER JOIN DRIVERS ON QUALIFYING.DRIVERID = DRIVERS.DRIVERID WHERE QUALIFYING.RACEID = 45 AND QUALIFYING.Q3 = '0:01:33',SELECT T2.CODE FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.RACEID = 45 AND T1.Q3 LIKE '1:33%',
2,872,ERROR,"NotImplementedError: {'like': ['T1__Q3', {'literal': '1:33%'}]}",,SELECT DRIVERS.CODE FROM QUALIFYING INNER JOIN DRIVERS ON QUALIFYING.DRIVERID = DRIVERS.DRIVERID WHERE QUALIFYING.RACEID = 45 AND QUALIFYING.Q3 = '0:01:33',SELECT T2.CODE FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.RACEID = 45 AND T1.Q3 LIKE '1:33%',
3,872,ERROR,"NotImplementedError: {'like': ['T1__Q3', {'literal': '1:33%'}]}",,SELECT DRIVERS.CODE FROM QUALIFYING INNER JOIN DRIVERS ON QUALIFYING.DRIVERID = DRIVERS.DRIVERID WHERE QUALIFYING.RACEID = 45 AND QUALIFYING.Q3 = '0:01:33',SELECT T2.CODE FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.RACEID = 45 AND T1.Q3 LIKE '1:33%',
1,873,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (5, '5897849979335637442', 7, '2147483648', 'BRUCE', 'MCLAREN', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (743, 3, 8, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 743, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 743, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 743, 5, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (743, 5, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (743, 5, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 743, 5, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (6, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (9, 743, 5, 4, 10, 11, 12, '2147483648', 13, 14, 15, '2147483648', 16, 17, 18, '2147483648', '2147483648', 6);
-- ----------sql1------------
SELECT RESULTS.TIME FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE RACES.RACEID = 743 AND DRIVERS.DRIVERREF = 'BRUCE MCLAREN';
-- ----------sql2------------
-- 2147483648
SELECT T2.TIME FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T2.RACEID = 743 AND T1.FORENAME = 'BRUCE' AND T1.SURNAME = 'MCLAREN';
",0.12085,SELECT RESULTS.TIME FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE RACES.RACEID = 743 AND DRIVERS.DRIVERREF = 'BRUCE MCLAREN';,SELECT T2.TIME FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T2.RACEID = 743 AND T1.FORENAME = 'BRUCE' AND T1.SURNAME = 'MCLAREN',
1,874,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (3, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 8, '2147483648', '2147483649', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (2006, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 2006, 9, 3, 'SAN MARINO GRAND PRIX', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (10, 5, 6, 4, 11, 12, 2, '2147483648', 13, 14, 15, '2147483648', 16, 17, 18, '2147483648', '2147483648', 7);
-- ----------sql1------------
-- 2147483648, 2147483649
SELECT DRIVERS.SURNAME, DRIVERS.FORENAME FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE RACES.NAME = 'SAN MARINO GRAND PRIX' AND RACES.YEAR = 2006 AND RESULTS.POSITION = 2;
-- ----------sql2------------
-- 2147483649, 2147483648
SELECT T3.FORENAME, T3.SURNAME FROM RACES AS T1 INNER JOIN RESULTS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T1.YEAR = 2006 AND T1.NAME = 'SAN MARINO GRAND PRIX' AND T2.POSITION = 2;
",0.148152,"SELECT DRIVERS.SURNAME, DRIVERS.FORENAME FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE RACES.NAME = 'SAN MARINO GRAND PRIX' AND RACES.YEAR = 2006 AND RESULTS.POSITION = 2","SELECT T3.FORENAME, T3.SURNAME FROM RACES AS T1 INNER JOIN RESULTS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T1.YEAR = 2006 AND T1.NAME = 'SAN MARINO GRAND PRIX' AND T2.POSITION = 2",
1,875,True,,0.062855,SELECT SEASONS.URL FROM SEASONS INNER JOIN RACES ON SEASONS.YEAR = RACES.YEAR WHERE RACES.RACEID = 901,SELECT T2.URL FROM RACES AS T1 INNER JOIN SEASONS AS T2 ON T2.YEAR = T1.YEAR WHERE T1.RACEID = 901,
1,876,True,,0.095083,SELECT COUNT(*) FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID WHERE RACES.DATE = '2015/11/29' AND RESULTS.TIME IS NULL,SELECT COUNT(T2.DRIVERID) FROM RACES AS T1 INNER JOIN RESULTS AS T2 ON T2.RACEID = T1.RACEID WHERE T1.DATE = '2015-11-29' AND T2.TIME IS NULL,
1,877,False,,,SELECT DRIVERS.DRIVERREF FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE RESULTS.RACEID = 872 AND RESULTS.TIME IS NOT NULL ORDER BY DRIVERS.DOB DESC LIMIT 1,"SELECT T1.FORENAME, T1.SURNAME FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T2.RACEID = 872 AND T2.TIME IS NOT NULL ORDER BY T1.DOB DESC LIMIT 1",
1,878,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (5, '2147483648', 10, '2147483648', '2147483648', '2147483649', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (348, 3, 0, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 348, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 348, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 348, 5, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (348, 5, 7, 8, '2147483648', 9);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (348, 5, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 348, 5, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (6, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (0, 348, 5, 4, 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', '2147483648', 6);
-- ----------sql1------------
-- 2147483649, 2147483648
SELECT DRIVERS.SURNAME, DRIVERS.FORENAME FROM LAPTIMES INNER JOIN DRIVERS ON LAPTIMES.DRIVERID = DRIVERS.DRIVERID WHERE LAPTIMES.RACEID = 348 ORDER BY LAPTIMES.TIME LIMIT 1;
-- ----------sql2------------
-- 2147483648, 2147483649
SELECT T2.FORENAME, T2.SURNAME FROM LAPTIMES AS T1 INNER JOIN DRIVERS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.RACEID = 348 ORDER BY T1.TIME ASC LIMIT 1;
",0.069783,"SELECT DRIVERS.SURNAME, DRIVERS.FORENAME FROM LAPTIMES INNER JOIN DRIVERS ON LAPTIMES.DRIVERID = DRIVERS.DRIVERID WHERE LAPTIMES.RACEID = 348 ORDER BY LAPTIMES.TIME LIMIT 1","SELECT T2.FORENAME, T2.SURNAME FROM LAPTIMES AS T1 INNER JOIN DRIVERS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.RACEID = 348 ORDER BY T1.TIME ASC LIMIT 1",
1,879,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute DRIVERS__NATIONALITY`,,SELECT DRIVERS.NATIONALITY FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE RESULTS.FASTESTLAPSPEED = (SELECT MAX(RESULTS.FASTESTLAPSPEED) FROM RESULTS);,SELECT T1.NATIONALITY FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T2.DRIVERID = T1.DRIVERID ORDER BY T2.FASTESTLAPSPEED DESC LIMIT 1,
2,879,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute DRIVERS__NATIONALITY`,,SELECT DRIVERS.NATIONALITY FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE RESULTS.FASTESTLAPSPEED = (SELECT MAX(RESULTS.FASTESTLAPSPEED) FROM RESULTS);,SELECT T1.NATIONALITY FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T2.DRIVERID = T1.DRIVERID ORDER BY T2.FASTESTLAPSPEED DESC LIMIT 1,
3,879,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute DRIVERS__NATIONALITY`,,SELECT DRIVERS.NATIONALITY FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE RESULTS.FASTESTLAPSPEED = (SELECT MAX(RESULTS.FASTESTLAPSPEED) FROM RESULTS);,SELECT T1.NATIONALITY FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T2.DRIVERID = T1.DRIVERID ORDER BY T2.FASTESTLAPSPEED DESC LIMIT 1,
1,880,ERROR,NotImplementedError: {'real': {}},,"SELECT CAST((TMP_RES1 - TMP_RES2) AS REAL) * 100 / TMP_RES1 AS PERCENTAGE FROM ( SELECT SUM(RESULTS.FASTESTLAPSPEED) AS TMP_RES1 FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.FORENAME = 'PAUL' AND DRIVERS.SURNAME = 'DI RESTA' AND RACES.RACEID = 853 ) TMP1, ( SELECT SUM(RESULTS.FASTESTLAPSPEED) AS TMP_RES2 FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.FORENAME = 'PAUL' AND DRIVERS.SURNAME = 'DI RESTA' AND RACES.RACEID = 854 ) TMP2","SELECT (SUM(IIF(T2.RACEID = 853, T2.FASTESTLAPSPEED, 0)) - SUM(IIF(T2.RACEID = 854, T2.FASTESTLAPSPEED, 0))) * 100 / SUM(IIF(T2.RACEID = 853, T2.FASTESTLAPSPEED, 0)) FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.FORENAME = 'PAUL' AND T1.SURNAME = 'DI RESTA'",
2,880,ERROR,NotImplementedError: {'real': {}},,"SELECT CAST((TMP_RES1 - TMP_RES2) AS REAL) * 100 / TMP_RES1 AS PERCENTAGE FROM ( SELECT SUM(RESULTS.FASTESTLAPSPEED) AS TMP_RES1 FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.FORENAME = 'PAUL' AND DRIVERS.SURNAME = 'DI RESTA' AND RACES.RACEID = 853 ) TMP1, ( SELECT SUM(RESULTS.FASTESTLAPSPEED) AS TMP_RES2 FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.FORENAME = 'PAUL' AND DRIVERS.SURNAME = 'DI RESTA' AND RACES.RACEID = 854 ) TMP2","SELECT (SUM(IIF(T2.RACEID = 853, T2.FASTESTLAPSPEED, 0)) - SUM(IIF(T2.RACEID = 854, T2.FASTESTLAPSPEED, 0))) * 100 / SUM(IIF(T2.RACEID = 853, T2.FASTESTLAPSPEED, 0)) FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.FORENAME = 'PAUL' AND T1.SURNAME = 'DI RESTA'",
3,880,ERROR,NotImplementedError: {'real': {}},,"SELECT CAST((TMP_RES1 - TMP_RES2) AS REAL) * 100 / TMP_RES1 AS PERCENTAGE FROM ( SELECT SUM(RESULTS.FASTESTLAPSPEED) AS TMP_RES1 FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.FORENAME = 'PAUL' AND DRIVERS.SURNAME = 'DI RESTA' AND RACES.RACEID = 853 ) TMP1, ( SELECT SUM(RESULTS.FASTESTLAPSPEED) AS TMP_RES2 FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.FORENAME = 'PAUL' AND DRIVERS.SURNAME = 'DI RESTA' AND RACES.RACEID = 854 ) TMP2","SELECT (SUM(IIF(T2.RACEID = 853, T2.FASTESTLAPSPEED, 0)) - SUM(IIF(T2.RACEID = 854, T2.FASTESTLAPSPEED, 0))) * 100 / SUM(IIF(T2.RACEID = 853, T2.FASTESTLAPSPEED, 0)) FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.FORENAME = 'PAUL' AND T1.SURNAME = 'DI RESTA'",
1,881,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(RESULTS.TIME) AS REAL) * 100 / COUNT(RESULTS.DRIVERID) AS PERCENTAGE FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID WHERE RACES.DATE = '1983-07-16' AND RESULTS.TIME IS NOT NULL,SELECT CAST(COUNT(CASE WHEN T2.TIME IS NOT NULL THEN T2.DRIVERID END) AS REAL) * 100 / COUNT(T2.DRIVERID) FROM RACES AS T1 INNER JOIN RESULTS AS T2 ON T2.RACEID = T1.RACEID WHERE T1.DATE = '1983-07-16',
2,881,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(RESULTS.TIME) AS REAL) * 100 / COUNT(RESULTS.DRIVERID) AS PERCENTAGE FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID WHERE RACES.DATE = '1983-07-16' AND RESULTS.TIME IS NOT NULL,SELECT CAST(COUNT(CASE WHEN T2.TIME IS NOT NULL THEN T2.DRIVERID END) AS REAL) * 100 / COUNT(T2.DRIVERID) FROM RACES AS T1 INNER JOIN RESULTS AS T2 ON T2.RACEID = T1.RACEID WHERE T1.DATE = '1983-07-16',
3,881,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(RESULTS.TIME) AS REAL) * 100 / COUNT(RESULTS.DRIVERID) AS PERCENTAGE FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID WHERE RACES.DATE = '1983-07-16' AND RESULTS.TIME IS NOT NULL,SELECT CAST(COUNT(CASE WHEN T2.TIME IS NOT NULL THEN T2.DRIVERID END) AS REAL) * 100 / COUNT(T2.DRIVERID) FROM RACES AS T1 INNER JOIN RESULTS AS T2 ON T2.RACEID = T1.RACEID WHERE T1.DATE = '1983-07-16',
1,882,True,,0.047464,SELECT RACES.YEAR FROM RACES WHERE RACES.NAME = 'SINGAPORE GRAND PRIX' ORDER BY RACES.YEAR ASC LIMIT 1,SELECT YEAR FROM RACES WHERE NAME = 'SINGAPORE GRAND PRIX' ORDER BY YEAR ASC LIMIT 1,
1,883,True,,0.047628,SELECT RACES.NAME FROM RACES WHERE RACES.YEAR = 2005 ORDER BY RACES.NAME DESC,SELECT NAME FROM RACES WHERE YEAR = 2005 ORDER BY NAME DESC,
1,884,ERROR,NotImplementedError: {'year': 'RACES__DATE'},,SELECT RACES.NAME FROM RACES WHERE YEAR(RACES.DATE) = (SELECT YEAR(MIN(DATE)) FROM RACES) AND MONTH(RACES.DATE) = (SELECT MONTH(MIN(DATE)) FROM RACES),"SELECT NAME FROM RACES WHERE STRFTIME('%Y', DATE) = ( SELECT STRFTIME('%Y', DATE) FROM RACES ORDER BY DATE ASC LIMIT 1 ) AND STRFTIME('%M', DATE) = ( SELECT STRFTIME('%M', DATE) FROM RACES ORDER BY DATE ASC LIMIT 1 )",
2,884,ERROR,NotImplementedError: {'year': 'RACES__DATE'},,SELECT RACES.NAME FROM RACES WHERE YEAR(RACES.DATE) = (SELECT YEAR(MIN(DATE)) FROM RACES) AND MONTH(RACES.DATE) = (SELECT MONTH(MIN(DATE)) FROM RACES),"SELECT NAME FROM RACES WHERE STRFTIME('%Y', DATE) = ( SELECT STRFTIME('%Y', DATE) FROM RACES ORDER BY DATE ASC LIMIT 1 ) AND STRFTIME('%M', DATE) = ( SELECT STRFTIME('%M', DATE) FROM RACES ORDER BY DATE ASC LIMIT 1 )",
3,884,ERROR,NotImplementedError: {'year': 'RACES__DATE'},,SELECT RACES.NAME FROM RACES WHERE YEAR(RACES.DATE) = (SELECT YEAR(MIN(DATE)) FROM RACES) AND MONTH(RACES.DATE) = (SELECT MONTH(MIN(DATE)) FROM RACES),"SELECT NAME FROM RACES WHERE STRFTIME('%Y', DATE) = ( SELECT STRFTIME('%Y', DATE) FROM RACES ORDER BY DATE ASC LIMIT 1 ) AND STRFTIME('%M', DATE) = ( SELECT STRFTIME('%M', DATE) FROM RACES ORDER BY DATE ASC LIMIT 1 )",
1,885,True,,0.048498,"SELECT RACES.NAME, RACES.DATE FROM RACES WHERE RACES.YEAR = 1999 ORDER BY RACES.ROUND DESC LIMIT 1","SELECT NAME, DATE FROM RACES WHERE YEAR = 1999 ORDER BY ROUND DESC LIMIT 1",
1,886,True,,0.0520879999999999,SELECT RACES.YEAR FROM RACES GROUP BY RACES.YEAR ORDER BY COUNT(*) DESC LIMIT 1,SELECT YEAR FROM RACES GROUP BY YEAR ORDER BY COUNT(ROUND) DESC LIMIT 1,
1,887,True,,0.160209,SELECT RACES.NAME FROM RACES WHERE RACES.YEAR = 2017 AND RACES.NAME NOT IN ( SELECT RACES.NAME FROM RACES WHERE RACES.YEAR = 2000),SELECT NAME FROM RACES WHERE YEAR = 2017 AND NAME NOT IN ( SELECT NAME FROM RACES WHERE YEAR = 2000 ),
1,888,False,,,"SELECT CIRCUITS.COUNTRY, CIRCUITS.NAME, CIRCUITS.LOCATION FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE RACES.NAME = 'EUROPEAN GRAND PRIX' ORDER BY RACES.YEAR LIMIT 1","SELECT T1.COUNTRY, T1.LOCATION FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T2.NAME = 'EUROPEAN GRAND PRIX' ORDER BY T2.YEAR ASC LIMIT 1",
1,889,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', 'BRANDS HATCH', '2147483648', '2147483648', 9, 10, 11, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 0, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 8, 2, 'BRITISH GRAND PRIX', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (0, 5, 6, 4, 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', '2147483648', 7);
-- ----------sql1------------
-- 3
SELECT RACES.YEAR FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CIRCUITS.NAME = 'BRANDS HATCH' AND RACES.NAME = 'BRITISH GRAND PRIX' ORDER BY RACES.YEAR DESC LIMIT 1;
-- ----------sql2------------
-- 1
SELECT T2.DATE FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T1.NAME = 'BRANDS HATCH' AND T2.NAME = 'BRITISH GRAND PRIX' ORDER BY T2.YEAR DESC LIMIT 1;
",0.091406,SELECT RACES.YEAR FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CIRCUITS.NAME = 'BRANDS HATCH' AND RACES.NAME = 'BRITISH GRAND PRIX' ORDER BY RACES.YEAR DESC LIMIT 1,SELECT T2.DATE FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T1.NAME = 'BRANDS HATCH' AND T2.NAME = 'BRITISH GRAND PRIX' ORDER BY T2.YEAR DESC LIMIT 1,
1,890,True,,0.093716,SELECT COUNT(RACES.YEAR) FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CIRCUITS.NAME = 'SILVERSTONE CIRCUIT' AND RACES.NAME = 'BRITISH GRAND PRIX',SELECT COUNT(T2.CIRCUITID) FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T1.NAME = 'SILVERSTONE CIRCUIT' AND T2.NAME = 'BRITISH GRAND PRIX',
1,891,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (3, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (5, '2147483648', 17, '2147483648', '2147483649', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (2010, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (4, 2010, 18, 2, 'SINGAPORE GRAND PRIX', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 4, 3, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 4, 3, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (19, 4, 5, 20, 21, '2147483648', 22);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (4, 5, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (4, 5, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 4, 5, 3, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (6, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (7, 4, 5, 3, 8, 9, 10, '2147483648', 11, 12, 13, '2147483648', 14, 15, 16, '2147483648', '2147483648', 6);
-- ----------sql1------------
-- 2147483648, 2147483649
SELECT DRIVERS.SURNAME, DRIVERS.FORENAME FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE RACES.YEAR = 2010 AND RACES.NAME = 'SINGAPORE GRAND PRIX' ORDER BY RESULTS.POSITIONORDER;
-- ----------sql2------------
-- 2147483649, 2147483648
SELECT T3.FORENAME, T3.SURNAME FROM RACES AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T1.NAME = 'SINGAPORE GRAND PRIX' AND T1.YEAR = 2010 ORDER BY T2.POSITION ASC;
",0.126703,"SELECT DRIVERS.SURNAME, DRIVERS.FORENAME FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE RACES.YEAR = 2010 AND RACES.NAME = 'SINGAPORE GRAND PRIX' ORDER BY RESULTS.POSITIONORDER","SELECT T3.FORENAME, T3.SURNAME FROM RACES AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T1.NAME = 'SINGAPORE GRAND PRIX' AND T1.YEAR = 2010 ORDER BY T2.POSITION ASC",
1,892,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 11, '2147483648', '2147483649', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 15, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (12, 5, 6, 1, 13, '2147483648', 14);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (0, 5, 6, 4, 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', '2147483648', 7);
-- ----------sql1------------
-- 2147483648, 2147483649, 1
SELECT DRIVERS.SURNAME, DRIVERS.FORENAME, MAX(DRIVERSTANDINGS.POINTS) FROM DRIVERS INNER JOIN DRIVERSTANDINGS ON DRIVERS.DRIVERID = DRIVERSTANDINGS.DRIVERID GROUP BY DRIVERS.SURNAME, DRIVERS.FORENAME ORDER BY MAX(DRIVERSTANDINGS.POINTS) DESC LIMIT 1;
-- ----------sql2------------
-- 2147483649, 2147483648, 1
SELECT T3.FORENAME, T3.SURNAME, T2.POINTS FROM RACES AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID ORDER BY T2.POINTS DESC LIMIT 1;
",0.0922669999999999,"SELECT DRIVERS.SURNAME, DRIVERS.FORENAME, MAX(DRIVERSTANDINGS.POINTS) FROM DRIVERS INNER JOIN DRIVERSTANDINGS ON DRIVERS.DRIVERID = DRIVERSTANDINGS.DRIVERID GROUP BY DRIVERS.SURNAME, DRIVERS.FORENAME ORDER BY MAX(DRIVERSTANDINGS.POINTS) DESC LIMIT 1","SELECT T3.FORENAME, T3.SURNAME, T2.POINTS FROM RACES AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID ORDER BY T2.POINTS DESC LIMIT 1",
1,893,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (3, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (5, '2147483648', 7, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (2017, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (4, 2017, 8, 2, 'CHINESE GRAND PRIX', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 4, 3, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 4, 3, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (19, 4, 5, 20, 21, '2147483648', 22);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (4, 5, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (4, 5, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 4, 5, 3, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (6, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (9, 4, 5, 3, 10, 11, 12, '2147483648', 13, 14, 15, '2147483648', 16, 17, 18, '2147483648', '2147483648', 6);
-- ----------sql1------------
-- 2147483648, 2147483648, 14
SELECT DRIVERS.SURNAME, DRIVERS.FORENAME, RESULTS.POINTS FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE RACES.YEAR = 2017 AND RACES.NAME = 'CHINESE GRAND PRIX' ORDER BY RESULTS.POINTS DESC LIMIT 3;
-- ----------sql2------------
-- 2147483648, 2147483648, 20
SELECT T3.FORENAME, T3.SURNAME, T2.POINTS FROM RACES AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T1.NAME = 'CHINESE GRAND PRIX' AND T1.YEAR = 2017 ORDER BY T2.POINTS DESC LIMIT 3;
",0.128277,"SELECT DRIVERS.SURNAME, DRIVERS.FORENAME, RESULTS.POINTS FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE RACES.YEAR = 2017 AND RACES.NAME = 'CHINESE GRAND PRIX' ORDER BY RESULTS.POINTS DESC LIMIT 3","SELECT T3.FORENAME, T3.SURNAME, T2.POINTS FROM RACES AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T1.NAME = 'CHINESE GRAND PRIX' AND T1.YEAR = 2017 ORDER BY T2.POINTS DESC LIMIT 3",
1,894,False,,,"SELECT DRIVERS.SURNAME, DRIVERS.FORENAME, RACES.NAME FROM LAPTIMES INNER JOIN DRIVERS ON LAPTIMES.DRIVERID = DRIVERS.DRIVERID INNER JOIN RACES ON LAPTIMES.RACEID = RACES.RACEID ORDER BY LAPTIMES.MILLISECONDS ASC LIMIT 1","SELECT T2.MILLISECONDS, T1.FORENAME, T1.SURNAME, T3.NAME FROM DRIVERS AS T1 INNER JOIN LAPTIMES AS T2 ON T1.DRIVERID = T2.DRIVERID INNER JOIN RACES AS T3 ON T2.RACEID = T3.RACEID ORDER BY T2.MILLISECONDS ASC LIMIT 1",
1,895,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (3, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (5, '2147483648', 12, '2147483648', 'LEWIS', 'HAMILTON', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (2009, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (4, 2009, 7, 2, 'MALAYSIAN GRAND PRIX', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 4, 3, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 4, 3, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 4, 5, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (4, 5, 13, 14, '2147483648', 2147483649);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (4, 5, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 4, 5, 3, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (6, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (0, 4, 5, 3, 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', '2147483648', 6);
-- ----------sql1------------
-- 2147483648
SELECT AVG(LAPTIMES.TIME) FROM DRIVERS INNER JOIN LAPTIMES ON DRIVERS.DRIVERID = LAPTIMES.DRIVERID INNER JOIN RACES ON LAPTIMES.RACEID = RACES.RACEID WHERE DRIVERS.FORENAME = 'LEWIS' AND DRIVERS.SURNAME = 'HAMILTON' AND RACES.NAME = 'MALAYSIAN GRAND PRIX' AND RACES.YEAR = 2009;
-- ----------sql2------------
-- 2147483649
SELECT AVG(T2.MILLISECONDS) FROM RACES AS T1 INNER JOIN LAPTIMES AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T3.FORENAME = 'LEWIS' AND T3.SURNAME = 'HAMILTON' AND T1.YEAR = 2009 AND T1.NAME = 'MALAYSIAN GRAND PRIX';
",0.144839,SELECT AVG(LAPTIMES.TIME) FROM DRIVERS INNER JOIN LAPTIMES ON DRIVERS.DRIVERID = LAPTIMES.DRIVERID INNER JOIN RACES ON LAPTIMES.RACEID = RACES.RACEID WHERE DRIVERS.FORENAME = 'LEWIS' AND DRIVERS.SURNAME = 'HAMILTON' AND RACES.NAME = 'MALAYSIAN GRAND PRIX' AND RACES.YEAR = 2009,SELECT AVG(T2.MILLISECONDS) FROM RACES AS T1 INNER JOIN LAPTIMES AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T3.FORENAME = 'LEWIS' AND T3.SURNAME = 'HAMILTON' AND T1.YEAR = 2009 AND T1.NAME = 'MALAYSIAN GRAND PRIX',
1,896,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM DRIVERS INNER JOIN RACES ON DRIVERS.DRIVERID = RACES.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND RACES.YEAR >= 2010) FROM DRIVERS INNER JOIN RACES ON DRIVERS.DRIVERID = RACES.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND RACES.YEAR >= 2010 AND RACES.POSITION > 1`,,SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM DRIVERS INNER JOIN RACES ON DRIVERS.DRIVERID = RACES.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND RACES.YEAR >= 2010) FROM DRIVERS INNER JOIN RACES ON DRIVERS.DRIVERID = RACES.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND RACES.YEAR >= 2010 AND RACES.POSITION > 1,SELECT CAST(COUNT(CASE WHEN T2.POSITION <> 1 THEN T2.POSITION END) AS REAL) * 100 / COUNT(T2.DRIVERSTANDINGSID) FROM RACES AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T3.SURNAME = 'HAMILTON' AND T1.YEAR >= 2010,
2,896,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM DRIVERS INNER JOIN RACES ON DRIVERS.DRIVERID = RACES.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND RACES.YEAR >= 2010) FROM DRIVERS INNER JOIN RACES ON DRIVERS.DRIVERID = RACES.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND RACES.YEAR >= 2010 AND RACES.POSITION > 1`,,SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM DRIVERS INNER JOIN RACES ON DRIVERS.DRIVERID = RACES.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND RACES.YEAR >= 2010) FROM DRIVERS INNER JOIN RACES ON DRIVERS.DRIVERID = RACES.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND RACES.YEAR >= 2010 AND RACES.POSITION > 1,SELECT CAST(COUNT(CASE WHEN T2.POSITION <> 1 THEN T2.POSITION END) AS REAL) * 100 / COUNT(T2.DRIVERSTANDINGSID) FROM RACES AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T3.SURNAME = 'HAMILTON' AND T1.YEAR >= 2010,
3,896,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM DRIVERS INNER JOIN RACES ON DRIVERS.DRIVERID = RACES.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND RACES.YEAR >= 2010) FROM DRIVERS INNER JOIN RACES ON DRIVERS.DRIVERID = RACES.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND RACES.YEAR >= 2010 AND RACES.POSITION > 1`,,SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM DRIVERS INNER JOIN RACES ON DRIVERS.DRIVERID = RACES.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND RACES.YEAR >= 2010) FROM DRIVERS INNER JOIN RACES ON DRIVERS.DRIVERID = RACES.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND RACES.YEAR >= 2010 AND RACES.POSITION > 1,SELECT CAST(COUNT(CASE WHEN T2.POSITION <> 1 THEN T2.POSITION END) AS REAL) * 100 / COUNT(T2.DRIVERSTANDINGSID) FROM RACES AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T3.SURNAME = 'HAMILTON' AND T1.YEAR >= 2010,
1,897,ERROR,AttributeError: 'GroupbyContext' object has no attribute 'groupby_ctx',,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME, DRIVERS.NATIONALITY, MAX(DRIVERSTANDINGS.POINTS) FROM DRIVERS INNER JOIN DRIVERSTANDINGS ON DRIVERS.DRIVERID = DRIVERSTANDINGS.DRIVERID GROUP BY DRIVERS.DRIVERID HAVING COUNT(DRIVERSTANDINGS.WINS) = (SELECT MAX(COUNT(WINS)) FROM DRIVERSTANDINGS) ORDER BY MAX(DRIVERSTANDINGS.POINTS) DESC LIMIT 1","SELECT T1.FORENAME, T1.SURNAME, T1.NATIONALITY, MAX(T2.POINTS) FROM DRIVERS AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T2.WINS >= 1 GROUP BY T1.FORENAME, T1.SURNAME, T1.NATIONALITY ORDER BY COUNT(T2.WINS) DESC LIMIT 1",
2,897,ERROR,AttributeError: 'GroupbyContext' object has no attribute 'groupby_ctx',,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME, DRIVERS.NATIONALITY, MAX(DRIVERSTANDINGS.POINTS) FROM DRIVERS INNER JOIN DRIVERSTANDINGS ON DRIVERS.DRIVERID = DRIVERSTANDINGS.DRIVERID GROUP BY DRIVERS.DRIVERID HAVING COUNT(DRIVERSTANDINGS.WINS) = (SELECT MAX(COUNT(WINS)) FROM DRIVERSTANDINGS) ORDER BY MAX(DRIVERSTANDINGS.POINTS) DESC LIMIT 1","SELECT T1.FORENAME, T1.SURNAME, T1.NATIONALITY, MAX(T2.POINTS) FROM DRIVERS AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T2.WINS >= 1 GROUP BY T1.FORENAME, T1.SURNAME, T1.NATIONALITY ORDER BY COUNT(T2.WINS) DESC LIMIT 1",
3,897,ERROR,AttributeError: 'GroupbyContext' object has no attribute 'groupby_ctx',,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME, DRIVERS.NATIONALITY, MAX(DRIVERSTANDINGS.POINTS) FROM DRIVERS INNER JOIN DRIVERSTANDINGS ON DRIVERS.DRIVERID = DRIVERSTANDINGS.DRIVERID GROUP BY DRIVERS.DRIVERID HAVING COUNT(DRIVERSTANDINGS.WINS) = (SELECT MAX(COUNT(WINS)) FROM DRIVERSTANDINGS) ORDER BY MAX(DRIVERSTANDINGS.POINTS) DESC LIMIT 1","SELECT T1.FORENAME, T1.SURNAME, T1.NATIONALITY, MAX(T2.POINTS) FROM DRIVERS AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T2.WINS >= 1 GROUP BY T1.FORENAME, T1.SURNAME, T1.NATIONALITY ORDER BY COUNT(T2.WINS) DESC LIMIT 1",
1,898,ERROR,NotImplementedError: {'year': 'CURRENT_TIMESTAMP'},,"SELECT DRIVERS.SURNAME, DRIVERS.FORENAME, YEAR(CURRENT_TIMESTAMP) - YEAR(DRIVERS.DOB) AS AGE FROM DRIVERS WHERE DRIVERS.NATIONALITY = 'JAPANESE' ORDER BY DRIVERS.DOB DESC LIMIT 1","SELECT STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', DOB), FORENAME , SURNAME FROM DRIVERS WHERE NATIONALITY = 'JAPANESE' ORDER BY DOB DESC LIMIT 1",
2,898,ERROR,NotImplementedError: {'year': 'CURRENT_TIMESTAMP'},,"SELECT DRIVERS.SURNAME, DRIVERS.FORENAME, YEAR(CURRENT_TIMESTAMP) - YEAR(DRIVERS.DOB) AS AGE FROM DRIVERS WHERE DRIVERS.NATIONALITY = 'JAPANESE' ORDER BY DRIVERS.DOB DESC LIMIT 1","SELECT STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', DOB), FORENAME , SURNAME FROM DRIVERS WHERE NATIONALITY = 'JAPANESE' ORDER BY DOB DESC LIMIT 1",
3,898,ERROR,NotImplementedError: {'year': 'CURRENT_TIMESTAMP'},,"SELECT DRIVERS.SURNAME, DRIVERS.FORENAME, YEAR(CURRENT_TIMESTAMP) - YEAR(DRIVERS.DOB) AS AGE FROM DRIVERS WHERE DRIVERS.NATIONALITY = 'JAPANESE' ORDER BY DRIVERS.DOB DESC LIMIT 1","SELECT STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', DOB), FORENAME , SURNAME FROM DRIVERS WHERE NATIONALITY = 'JAPANESE' ORDER BY DOB DESC LIMIT 1",
1,899,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T2__DATE']}",,"SELECT CIRCUITS.LOCATION, CIRCUITS.CIRCUITID, CIRCUITS.COUNTRY, CIRCUITS.CIRCUITREF, CIRCUITS.NAME FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE RACES.YEAR BETWEEN 1990 AND 2000 GROUP BY CIRCUITS.CIRCUITID HAVING COUNT(RACES.RACEID) = 4","SELECT DISTINCT T1.NAME FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE STRFTIME('%Y', T2.DATE) BETWEEN '1990' AND '2000' GROUP BY T1.NAME HAVING COUNT(T2.RACEID) = 4",
2,899,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T2__DATE']}",,"SELECT CIRCUITS.LOCATION, CIRCUITS.CIRCUITID, CIRCUITS.COUNTRY, CIRCUITS.CIRCUITREF, CIRCUITS.NAME FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE RACES.YEAR BETWEEN 1990 AND 2000 GROUP BY CIRCUITS.CIRCUITID HAVING COUNT(RACES.RACEID) = 4","SELECT DISTINCT T1.NAME FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE STRFTIME('%Y', T2.DATE) BETWEEN '1990' AND '2000' GROUP BY T1.NAME HAVING COUNT(T2.RACEID) = 4",
3,899,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T2__DATE']}",,"SELECT CIRCUITS.LOCATION, CIRCUITS.CIRCUITID, CIRCUITS.COUNTRY, CIRCUITS.CIRCUITREF, CIRCUITS.NAME FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE RACES.YEAR BETWEEN 1990 AND 2000 GROUP BY CIRCUITS.CIRCUITID HAVING COUNT(RACES.RACEID) = 4","SELECT DISTINCT T1.NAME FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE STRFTIME('%Y', T2.DATE) BETWEEN '1990' AND '2000' GROUP BY T1.NAME HAVING COUNT(T2.RACEID) = 4",
1,900,True,,0.089637,"SELECT CIRCUITS.NAME, CIRCUITS.LOCATION, RACES.NAME FROM CIRCUITS INNER JOIN RACES ON CIRCUITS.CIRCUITID = RACES.CIRCUITID WHERE CIRCUITS.COUNTRY = 'USA' AND RACES.YEAR = 2006","SELECT T1.NAME, T1.LOCATION, T2.NAME FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T1.COUNTRY = 'USA' AND T2.YEAR = 2006",
1,901,ERROR,NotImplementedError: {'month': 'RACES__DATE'},,"SELECT RACES.NAME, CIRCUITS.NAME, CIRCUITS.LOCATION FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE MONTH(RACES.DATE) = 9 AND YEAR(RACES.DATE) = 2005","SELECT DISTINCT T2.NAME, T1.NAME, T1.LOCATION FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T2.YEAR = 2005 AND STRFTIME('%M', T2.DATE) = '09'",
2,901,ERROR,NotImplementedError: {'month': 'RACES__DATE'},,"SELECT RACES.NAME, CIRCUITS.NAME, CIRCUITS.LOCATION FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE MONTH(RACES.DATE) = 9 AND YEAR(RACES.DATE) = 2005","SELECT DISTINCT T2.NAME, T1.NAME, T1.LOCATION FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T2.YEAR = 2005 AND STRFTIME('%M', T2.DATE) = '09'",
3,901,ERROR,NotImplementedError: {'month': 'RACES__DATE'},,"SELECT RACES.NAME, CIRCUITS.NAME, CIRCUITS.LOCATION FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE MONTH(RACES.DATE) = 9 AND YEAR(RACES.DATE) = 2005","SELECT DISTINCT T2.NAME, T1.NAME, T1.LOCATION FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T2.YEAR = 2005 AND STRFTIME('%M', T2.DATE) = '09'",
1,902,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 17, '2147483648', 'ALEX', 'YOONG', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 18, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (19, 5, 6, 21, 0, '2147483648', 22);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (8, 5, 6, 4, 9, 10, 20, '2147483648', 11, 12, 13, '2147483648', 14, 15, 16, '2147483648', '2147483648', 7);
-- ----------sql1------------
SELECT RACES.NAME FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.FORENAME = 'ALEX' AND DRIVERS.SURNAME = 'YOONG' AND RESULTS.POSITION < 20;
-- ----------sql2------------
-- 2147483648
SELECT T1.NAME FROM RACES AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T3.FORENAME = 'ALEX' AND T3.SURNAME = 'YOONG' AND T2.POSITION < 20;
",0.131966,SELECT RACES.NAME FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.FORENAME = 'ALEX' AND DRIVERS.SURNAME = 'YOONG' AND RESULTS.POSITION < 20,SELECT T1.NAME FROM RACES AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T3.FORENAME = 'ALEX' AND T3.SURNAME = 'YOONG' AND T2.POSITION < 20,
1,903,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 8, 9, 10, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 11, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 16, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (12, 5, 6, 13, 14, '2147483648', 15);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (0, 5, 6, 4, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 7);
-- ----------sql1------------
-- 0
SELECT COUNT(*) FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE DRIVERS.SURNAME = 'SCHUMACHER' AND DRIVERS.FORENAME = 'MICHAEL' AND CIRCUITS.NAME = 'SEPANG INTERNATIONAL CIRCUIT' AND RESULTS.POINTS = (SELECT MAX(RESULTS.POINTS) FROM RESULTS);
-- ----------sql2------------
-- NULL
SELECT SUM(T2.WINS) FROM DRIVERS AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T2.DRIVERID = T1.DRIVERID INNER JOIN RACES AS T3 ON T3.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T4 ON T4.CIRCUITID = T3.CIRCUITID WHERE T1.FORENAME = 'MICHAEL' AND T1.SURNAME = 'SCHUMACHER' AND T4.NAME = 'SEPANG INTERNATIONAL CIRCUIT';
",0.176915,SELECT COUNT(*) FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE DRIVERS.SURNAME = 'SCHUMACHER' AND DRIVERS.FORENAME = 'MICHAEL' AND CIRCUITS.NAME = 'SEPANG INTERNATIONAL CIRCUIT' AND RESULTS.POINTS = (SELECT MAX(RESULTS.POINTS) FROM RESULTS),SELECT SUM(T2.WINS) FROM DRIVERS AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T2.DRIVERID = T1.DRIVERID INNER JOIN RACES AS T3 ON T3.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T4 ON T4.CIRCUITID = T3.CIRCUITID WHERE T1.FORENAME = 'MICHAEL' AND T1.SURNAME = 'SCHUMACHER' AND T4.NAME = 'SEPANG INTERNATIONAL CIRCUIT',
1,904,True,,0.126648,"SELECT RACES.NAME, RACES.YEAR FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.SURNAME = 'SCHUMACHER' AND DRIVERS.FORENAME = 'MICHAEL' ORDER BY RESULTS.FASTESTLAPTIME ASC LIMIT 1;","SELECT T1.NAME, T1.YEAR FROM RACES AS T1 INNER JOIN LAPTIMES AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T3.FORENAME = 'MICHAEL' AND T3.SURNAME = 'SCHUMACHER' ORDER BY T2.MILLISECONDS ASC LIMIT 1",
1,905,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (3, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (5, '1494737770280654836', 11, '2147483648', 'EDDIE', 'IRVINE', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (2000, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (4, 2000, 7, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 4, 3, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 4, 3, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (22, 4, 5, -11, 23, '2147483648', 24);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (4, 5, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (4, 5, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 4, 5, 3, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (6, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (12, 4, 5, 3, 13, 14, 15, '2147483648', 16, 17, 18, '2147483648', 19, 20, 21, '2147483648', '2147483648', 6);
-- ----------sql1------------
-- NULL
SELECT AVG(RESULTS.POINTS) FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.DRIVERREF = 'EDDIE IRVINE' AND RACES.YEAR = 2000;
-- ----------sql2------------
-- -11
SELECT AVG(T2.POINTS) FROM DRIVERS AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T2.DRIVERID = T1.DRIVERID INNER JOIN RACES AS T3 ON T3.RACEID = T2.RACEID WHERE T1.FORENAME = 'EDDIE' AND T1.SURNAME = 'IRVINE' AND T3.YEAR = 2000;
",0.1416649999999999,SELECT AVG(RESULTS.POINTS) FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.DRIVERREF = 'EDDIE IRVINE' AND RACES.YEAR = 2000,SELECT AVG(T2.POINTS) FROM DRIVERS AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T2.DRIVERID = T1.DRIVERID INNER JOIN RACES AS T3 ON T3.RACEID = T2.RACEID WHERE T1.FORENAME = 'EDDIE' AND T1.SURNAME = 'IRVINE' AND T3.YEAR = 2000,
1,906,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 9, '2147483648', 'LEWIS', 'HAMILTON', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 8, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (20, 5, 6, 21, 22, '2147483648', 23);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (10, 5, 6, 4, 11, 12, 13, '2147483648', 14, 15, 16, '2147483648', 17, 18, 19, '2147483648', '2147483648', 7);
-- ----------sql1------------
-- 2147483648, 15
SELECT RACES.NAME, RESULTS.POINTS FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS' ORDER BY RACES.YEAR ASC LIMIT 1;
-- ----------sql2------------
-- 2147483648, 21
SELECT T1.NAME, T2.POINTS FROM RACES AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T3.FORENAME = 'LEWIS' AND T3.SURNAME = 'HAMILTON' ORDER BY T1.YEAR ASC LIMIT 1;
",0.129165,"SELECT RACES.NAME, RESULTS.POINTS FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS' ORDER BY RACES.YEAR ASC LIMIT 1","SELECT T1.NAME, T2.POINTS FROM RACES AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T3.FORENAME = 'LEWIS' AND T3.SURNAME = 'HAMILTON' ORDER BY T1.YEAR ASC LIMIT 1",
1,907,True,,0.070628,"SELECT RACES.NAME, CIRCUITS.COUNTRY FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE RACES.YEAR = 2017 ORDER BY RACES.DATE","SELECT DISTINCT T2.NAME, T1.COUNTRY FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T2.YEAR = 2017 ORDER BY T2.DATE ASC",
1,908,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute RACES__LAPS`,,"SELECT RACES.NAME, RACES.YEAR, CIRCUITS.LOCATION FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID ORDER BY RACES.LAPS DESC LIMIT 1","SELECT T3.LAP, T2.NAME, T2.YEAR, T1.LOCATION FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T1.CIRCUITID = T2.CIRCUITID INNER JOIN LAPTIMES AS T3 ON T3.RACEID = T2.RACEID ORDER BY T3.LAP DESC LIMIT 1",
2,908,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute RACES__LAPS`,,"SELECT RACES.NAME, RACES.YEAR, CIRCUITS.LOCATION FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID ORDER BY RACES.LAPS DESC LIMIT 1","SELECT T3.LAP, T2.NAME, T2.YEAR, T1.LOCATION FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T1.CIRCUITID = T2.CIRCUITID INNER JOIN LAPTIMES AS T3 ON T3.RACEID = T2.RACEID ORDER BY T3.LAP DESC LIMIT 1",
3,908,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute RACES__LAPS`,,"SELECT RACES.NAME, RACES.YEAR, CIRCUITS.LOCATION FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID ORDER BY RACES.LAPS DESC LIMIT 1","SELECT T3.LAP, T2.NAME, T2.YEAR, T1.LOCATION FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T1.CIRCUITID = T2.CIRCUITID INNER JOIN LAPTIMES AS T3 ON T3.RACEID = T2.RACEID ORDER BY T3.LAP DESC LIMIT 1",
1,909,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute RACES__COUNTRY`,,SELECT CAST(COUNT(*) FILTER (WHERE RACES.COUNTRY = 'GERMANY') AS REAL) * 100 / COUNT(*) FROM RACES WHERE RACES.NAME = 'EUROPEAN GRAND PRIX',SELECT CAST(COUNT(CASE WHEN T1.COUNTRY = 'GERMANY' THEN T2.CIRCUITID END) AS REAL) * 100 / COUNT(T2.CIRCUITID) FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T2.NAME = 'EUROPEAN GRAND PRIX',
2,909,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute RACES__COUNTRY`,,SELECT CAST(COUNT(*) FILTER (WHERE RACES.COUNTRY = 'GERMANY') AS REAL) * 100 / COUNT(*) FROM RACES WHERE RACES.NAME = 'EUROPEAN GRAND PRIX',SELECT CAST(COUNT(CASE WHEN T1.COUNTRY = 'GERMANY' THEN T2.CIRCUITID END) AS REAL) * 100 / COUNT(T2.CIRCUITID) FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T2.NAME = 'EUROPEAN GRAND PRIX',
3,909,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute RACES__COUNTRY`,,SELECT CAST(COUNT(*) FILTER (WHERE RACES.COUNTRY = 'GERMANY') AS REAL) * 100 / COUNT(*) FROM RACES WHERE RACES.NAME = 'EUROPEAN GRAND PRIX',SELECT CAST(COUNT(CASE WHEN T1.COUNTRY = 'GERMANY' THEN T2.CIRCUITID END) AS REAL) * 100 / COUNT(T2.CIRCUITID) FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T2.NAME = 'EUROPEAN GRAND PRIX',
1,910,True,,0.048193,"SELECT CIRCUITS.LAT, CIRCUITS.LNG FROM CIRCUITS WHERE CIRCUITS.NAME = 'SILVERSTONE CIRCUIT'","SELECT LAT, LNG FROM CIRCUITS WHERE NAME = 'SILVERSTONE CIRCUIT'",
1,911,True,,0.223934,"SELECT NAME FROM CIRCUITS WHERE NAME IN ('SILVERSTONE CIRCUIT', 'HOCKENHEIMRING', 'HUNGARORING') ORDER BY LAT DESC LIMIT 1","SELECT NAME FROM CIRCUITS WHERE NAME IN ('SILVERSTONE CIRCUIT', 'HOCKENHEIMRING', 'HUNGARORING') ORDER BY LAT DESC LIMIT 1",
1,912,True,,0.047046,SELECT CIRCUITS.CIRCUITREF FROM CIRCUITS WHERE CIRCUITS.NAME = 'MARINA BAY STREET CIRCUIT',SELECT CIRCUITREF FROM CIRCUITS WHERE NAME = 'MARINA BAY STREET CIRCUIT',
1,913,True,,0.042141,SELECT CIRCUITS.COUNTRY FROM CIRCUITS ORDER BY CIRCUITS.ALT DESC LIMIT 1,SELECT COUNTRY FROM CIRCUITS ORDER BY ALT DESC LIMIT 1,
1,914,True,,0.050697,SELECT COUNT(*) FROM DRIVERS WHERE CODE IS NULL,SELECT COUNT(DRIVERID) - COUNT(CASE WHEN CODE IS NOT NULL THEN CODE END) FROM DRIVERS,
1,915,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, NULL, NULL, NULL, NULL, NULL, NULL, '2147483648', NULL);
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 0, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (0, 5, 6, 4, 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', '2147483648', 7);
-- ----------sql1------------
-- 2147483648
SELECT DRIVERS.NATIONALITY FROM DRIVERS ORDER BY DRIVERS.DOB ASC LIMIT 1;
-- ----------sql2------------
SELECT NATIONALITY FROM DRIVERS WHERE DOB IS NOT NULL ORDER BY DOB ASC LIMIT 1;
",0.046534,SELECT DRIVERS.NATIONALITY FROM DRIVERS ORDER BY DRIVERS.DOB ASC LIMIT 1,SELECT NATIONALITY FROM DRIVERS WHERE DOB IS NOT NULL ORDER BY DOB ASC LIMIT 1,
1,916,True,,0.04712,SELECT DRIVERS.SURNAME FROM DRIVERS WHERE DRIVERS.NATIONALITY = 'ITALIAN',SELECT SURNAME FROM DRIVERS WHERE NATIONALITY = 'ITALIAN',
1,917,True,,0.0660399999999999,SELECT DRIVERS.URL FROM DRIVERS WHERE DRIVERS.SURNAME = 'DAVIDSON' AND DRIVERS.FORENAME = 'ANTHONY',SELECT URL FROM DRIVERS WHERE FORENAME = 'ANTHONY' AND SURNAME = 'DAVIDSON',
1,918,True,,0.066637,SELECT DRIVERS.DRIVERREF FROM DRIVERS WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS',SELECT DRIVERREF FROM DRIVERS WHERE FORENAME = 'LEWIS' AND SURNAME = 'HAMILTON',
1,919,True,,0.0871219999999999,SELECT CIRCUITS.NAME FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE RACES.NAME = 'SPANISH GRAND PRIX' AND RACES.YEAR = 2009,SELECT T1.NAME FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T2.YEAR = 2009 AND T2.NAME = 'SPANISH GRAND PRIX',
1,920,True,,0.070286,SELECT RACES.YEAR FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CIRCUITS.NAME = 'SILVERSTONE CIRCUIT',SELECT DISTINCT T2.YEAR FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T1.NAME = 'SILVERSTONE CIRCUIT',
1,921,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', 'SILVERSTONE CIRCUIT', '2147483648', '2147483648', 9, 10, 11, '2147483649');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 0, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 8, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (0, 5, 6, 4, 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', '2147483648', 7);
-- ----------sql1------------
-- 2147483648
SELECT RACES.URL FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CIRCUITS.NAME = 'SILVERSTONE CIRCUIT';
-- ----------sql2------------
-- 2147483649
SELECT DISTINCT T1.URL FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T1.NAME = 'SILVERSTONE CIRCUIT';
",0.069734,SELECT RACES.URL FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CIRCUITS.NAME = 'SILVERSTONE CIRCUIT',SELECT DISTINCT T1.URL FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T1.NAME = 'SILVERSTONE CIRCUIT',
1,922,False,,,SELECT RACES.TIME FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CIRCUITS.NAME = 'ABU DHABI CIRCUIT' AND RACES.YEAR = 2010,"SELECT T2.DATE, T2.TIME FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T2.YEAR = 2010 AND T2.NAME = 'ABU DHABI GRAND PRIX'",
1,923,True,,0.072858,SELECT COUNT(*) FROM CIRCUITS INNER JOIN RACES ON CIRCUITS.CIRCUITID = RACES.CIRCUITID WHERE CIRCUITS.COUNTRY = 'ITALY';,SELECT COUNT(T2.CIRCUITID) FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T1.COUNTRY = 'ITALY',
1,924,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', 'CIRCUIT DE BARCELONA-CATALUNYA', '2147483648', '2147483648', 9, 10, 11, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 0, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 8, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (0, 5, 6, 4, 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', '2147483648', 7);
-- ----------sql1------------
SELECT RACES.DATE FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CIRCUITS.NAME = 'BARCELONA-CATALUNYA';
-- ----------sql2------------
-- 1
SELECT T2.DATE FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T1.NAME = 'CIRCUIT DE BARCELONA-CATALUNYA';
",0.070259,SELECT RACES.DATE FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CIRCUITS.NAME = 'BARCELONA-CATALUNYA';,SELECT T2.DATE FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T1.NAME = 'CIRCUIT DE BARCELONA-CATALUNYA',
1,925,True,,0.094389,SELECT CIRCUITS.URL FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE RACES.NAME = 'SPANISH GRAND PRIX' AND RACES.YEAR = 2009,SELECT T1.URL FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T2.CIRCUITID = T1.CIRCUITID WHERE T2.YEAR = 2009 AND T2.NAME = 'SPANISH GRAND PRIX',
1,926,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 8, '2147483648', '2212690509355339574', '9069662395750148685', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 0, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (9, 5, 6, 4, 10, 11, 12, '2147483648', 13, 14, 15, '2147483648', 16, 17, 18, '2147483648', '2147483648', 7);
-- ----------sql1------------
-- NULL
SELECT MIN(RESULTS.FASTESTLAPTIME) FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS';
-- ----------sql2------------
SELECT T2.FASTESTLAPTIME FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.FORENAME = 'LEWIS' AND T1.SURNAME = 'HAMILTON' AND T2.FASTESTLAPTIME IS NOT NULL ORDER BY T2.FASTESTLAPTIME ASC LIMIT 1;
",0.111026,SELECT MIN(RESULTS.FASTESTLAPTIME) FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS',SELECT T2.FASTESTLAPTIME FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T1.FORENAME = 'LEWIS' AND T1.SURNAME = 'HAMILTON' AND T2.FASTESTLAPTIME IS NOT NULL ORDER BY T2.FASTESTLAPTIME ASC LIMIT 1,
1,927,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 18, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 0, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (8, 5, 6, 4, 9, 10, 11, '2147483648', 12, 13, 14, '2147483648', 15, 16, 17, NULL, '2147483648', 7);
-- ----------sql1------------
-- 2147483648, 2147483648
SELECT DRIVERS.FORENAME, DRIVERS.SURNAME FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID ORDER BY RESULTS.FASTESTLAPSPEED DESC LIMIT 1;
-- ----------sql2------------
SELECT T1.FORENAME, T1.SURNAME FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T2.FASTESTLAPTIME IS NOT NULL ORDER BY T2.FASTESTLAPSPEED DESC LIMIT 1;
",0.080218,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID ORDER BY RESULTS.FASTESTLAPSPEED DESC LIMIT 1","SELECT T1.FORENAME, T1.SURNAME FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T2.DRIVERID = T1.DRIVERID WHERE T2.FASTESTLAPTIME IS NOT NULL ORDER BY T2.FASTESTLAPSPEED DESC LIMIT 1",
1,928,False,,,SELECT DRIVERS.DRIVERREF FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE RACES.NAME = 'CANADIAN GRAND PRIX' AND RACES.YEAR = 2007 AND RESULTS.POSITIONORDER = 1,"SELECT T3.FORENAME, T3.SURNAME, T3.DRIVERREF FROM RACES AS T1 INNER JOIN RESULTS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T1.NAME = 'CANADIAN GRAND PRIX' AND T2.RANK = 1 AND T1.YEAR = 2007",
1,929,False,,,"SELECT RACES.NAME, RACES.YEAR, RACES.ROUND, RACES.DATE FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE DRIVERS.DRIVERREF = 'LEWIS HAMILTON'",SELECT T1.NAME FROM RACES AS T1 INNER JOIN RESULTS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T3.FORENAME = 'LEWIS' AND T3.SURNAME = 'HAMILTON',
1,930,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 19, '2147483648', 'LEWIS', 'HAMILTON', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 20, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (9, 5, 6, 4, 10, 11, 12, '2147483648', 13, 14, 15, '2147483648', 16, 17, 18, '2147483648', '2147483648', 7);
-- ----------sql1------------
-- 2147483648
SELECT RACES.NAME FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS' ORDER BY RESULTS.RANK ASC LIMIT 1;
-- ----------sql2------------
SELECT NAME FROM RACES WHERE RACEID IN ( SELECT RACEID FROM RESULTS WHERE RANK = 1 AND DRIVERID = ( SELECT DRIVERID FROM DRIVERS WHERE FORENAME = 'LEWIS' AND SURNAME = 'HAMILTON' ) );
",0.129352,SELECT RACES.NAME FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS' ORDER BY RESULTS.RANK ASC LIMIT 1;,SELECT NAME FROM RACES WHERE RACEID IN ( SELECT RACEID FROM RESULTS WHERE RANK = 1 AND DRIVERID = ( SELECT DRIVERID FROM DRIVERS WHERE FORENAME = 'LEWIS' AND SURNAME = 'HAMILTON' ) ),
1,931,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (3, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (5, '2147483648', 0, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (2009, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (4, 2009, 7, 2, 'SPANISH GRAND PRIX', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 4, 3, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 4, 3, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 4, 5, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (4, 5, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (4, 5, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 4, 5, 3, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (6, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (8, 4, 5, 3, 9, 10, 11, '2147483648', 12, 13, 14, '2147483648', 15, 16, 17, '2147483648', NULL, 6);
-- ----------sql1------------
-- NULL
SELECT MAX(RESULTS.FASTESTLAPSPEED) FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID WHERE RACES.YEAR = 2009 AND RACES.NAME = 'SPANISH GRAND PRIX';
-- ----------sql2------------
SELECT T2.FASTESTLAPSPEED FROM RACES AS T1 INNER JOIN RESULTS AS T2 ON T2.RACEID = T1.RACEID WHERE T1.NAME = 'SPANISH GRAND PRIX' AND T1.YEAR = 2009 AND T2.FASTESTLAPSPEED IS NOT NULL ORDER BY T2.FASTESTLAPSPEED DESC LIMIT 1;
",0.106894,SELECT MAX(RESULTS.FASTESTLAPSPEED) FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID WHERE RACES.YEAR = 2009 AND RACES.NAME = 'SPANISH GRAND PRIX',SELECT T2.FASTESTLAPSPEED FROM RACES AS T1 INNER JOIN RESULTS AS T2 ON T2.RACEID = T1.RACEID WHERE T1.NAME = 'SPANISH GRAND PRIX' AND T1.YEAR = 2009 AND T2.FASTESTLAPSPEED IS NOT NULL ORDER BY T2.FASTESTLAPSPEED DESC LIMIT 1,
1,932,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute RACES__DRIVERID`,,SELECT RACES.YEAR FROM DRIVERS INNER JOIN RACES ON DRIVERS.DRIVERID = RACES.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS',SELECT DISTINCT T1.YEAR FROM RACES AS T1 INNER JOIN RESULTS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T3.FORENAME = 'LEWIS' AND T3.SURNAME = 'HAMILTON',
2,932,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute RACES__DRIVERID`,,SELECT RACES.YEAR FROM DRIVERS INNER JOIN RACES ON DRIVERS.DRIVERID = RACES.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS',SELECT DISTINCT T1.YEAR FROM RACES AS T1 INNER JOIN RESULTS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T3.FORENAME = 'LEWIS' AND T3.SURNAME = 'HAMILTON',
3,932,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute RACES__DRIVERID`,,SELECT RACES.YEAR FROM DRIVERS INNER JOIN RACES ON DRIVERS.DRIVERID = RACES.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS',SELECT DISTINCT T1.YEAR FROM RACES AS T1 INNER JOIN RESULTS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T3.FORENAME = 'LEWIS' AND T3.SURNAME = 'HAMILTON',
1,933,True,,0.1577619999999999,SELECT RESULTS.POSITIONORDER FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.FORENAME = 'LEWIS' AND DRIVERS.SURNAME = 'HAMILTON' AND RACES.NAME = 'CHINESE GRAND PRIX' AND RACES.YEAR = 2008,SELECT T2.POSITIONORDER FROM RACES AS T1 INNER JOIN RESULTS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T3.FORENAME = 'LEWIS' AND T3.SURNAME = 'HAMILTON' AND T1.NAME = 'CHINESE GRAND PRIX' AND T1.YEAR = 2008,
1,934,True,,0.147631,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE RACES.YEAR = 1989 AND RACES.NAME = 'AUSTRALIAN GRAND PRIX' AND RESULTS.GRID = 4","SELECT T3.FORENAME, T3.SURNAME FROM RACES AS T1 INNER JOIN RESULTS AS T2 ON T2.RACEID = T1.RACEID INNER JOIN DRIVERS AS T3 ON T3.DRIVERID = T2.DRIVERID WHERE T2.GRID = 4 AND T1.NAME = 'AUSTRALIAN GRAND PRIX' AND T1.YEAR = 1989",
1,935,True,,0.106838,SELECT COUNT(*) FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID WHERE RACES.YEAR = 2008 AND RACES.NAME = 'AUSTRALIAN GRAND PRIX' AND RESULTS.TIME IS NOT NULL,SELECT COUNT(T2.DRIVERID) FROM RACES AS T1 INNER JOIN RESULTS AS T2 ON T2.RACEID = T1.RACEID WHERE T1.NAME = 'AUSTRALIAN GRAND PRIX' AND T1.YEAR = 2008 AND T2.TIME IS NOT NULL,
1,936,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (3, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (5, '2147483648', 8, '2147483648', 'LEWIS', 'HAMILTON', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (2008, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (4, 2008, 7, 2, 'AUSTRALIAN GRAND PRIX', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 4, 3, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 4, 3, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 4, 5, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (4, 5, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (4, 5, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 4, 5, 3, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (6, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (9, 4, 5, 3, 10, 11, 12, '2147483648', 13, 14, 15, '2147483648', 16, 17, 18, '2147483648', '2147483648', 6);
-- ----------sql1------------
-- 2147483648
SELECT RESULTS.FASTESTLAPTIME FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS' AND RACES.NAME = 'AUSTRALIAN GRAND PRIX' AND RACES.YEAR = 2008;
-- ----------sql2------------
-- 17
SELECT T1.FASTESTLAP FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN DRIVERS AS T3 ON T1.DRIVERID = T3.DRIVERID WHERE T2.NAME = 'AUSTRALIAN GRAND PRIX' AND T2.YEAR = 2008 AND T3.FORENAME = 'LEWIS' AND T3.SURNAME = 'HAMILTON';
",0.160105,SELECT RESULTS.FASTESTLAPTIME FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS' AND RACES.NAME = 'AUSTRALIAN GRAND PRIX' AND RACES.YEAR = 2008,SELECT T1.FASTESTLAP FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN DRIVERS AS T3 ON T1.DRIVERID = T3.DRIVERID WHERE T2.NAME = 'AUSTRALIAN GRAND PRIX' AND T2.YEAR = 2008 AND T3.FORENAME = 'LEWIS' AND T3.SURNAME = 'HAMILTON',
1,937,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (3, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 0, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (2008, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 2008, 8, 3, 'CHINESE GRAND PRIX', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (9, 5, 6, 4, 10, 11, 12, '2147483648', 13, 14, 15, '2147483648', 16, 17, 2, '2147483648', '2147483648', 7);
-- ----------sql1------------
SELECT RESULTS.TIME FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID WHERE RACES.YEAR = 2008 AND RACES.NAME = 'CHINESE GRAND PRIX' AND RESULTS.POSITIONORDER = 2;
-- ----------sql2------------
-- 2147483648
SELECT T1.TIME FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T1.RANK = 2 AND T2.NAME = 'CHINESE GRAND PRIX' AND T2.YEAR = 2008;
",0.110209,SELECT RESULTS.TIME FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID WHERE RACES.YEAR = 2008 AND RACES.NAME = 'CHINESE GRAND PRIX' AND RESULTS.POSITIONORDER = 2,SELECT T1.TIME FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T1.RANK = 2 AND T2.NAME = 'CHINESE GRAND PRIX' AND T2.YEAR = 2008,
1,938,ERROR,"NotImplementedError: {'like': ['T2__TIME', {'literal': '_:%:__.___'}]}",,"SELECT DRIVERS.SURNAME, DRIVERS.FORENAME, DRIVERS.URL FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE RACES.YEAR = 2008 AND RACES.NAME = 'AUSTRALIAN GRAND PRIX' AND RESULTS.POSITIONORDER = 1","SELECT T1.FORENAME, T1.SURNAME, T1.URL FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T1.DRIVERID = T2.DRIVERID INNER JOIN RACES AS T3 ON T3.RACEID = T2.RACEID WHERE T3.NAME = 'AUSTRALIAN GRAND PRIX' AND T2.TIME LIKE '_:%:__.___' AND T3.YEAR = 2008",
2,938,ERROR,"NotImplementedError: {'like': ['T2__TIME', {'literal': '_:%:__.___'}]}",,"SELECT DRIVERS.SURNAME, DRIVERS.FORENAME, DRIVERS.URL FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE RACES.YEAR = 2008 AND RACES.NAME = 'AUSTRALIAN GRAND PRIX' AND RESULTS.POSITIONORDER = 1","SELECT T1.FORENAME, T1.SURNAME, T1.URL FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T1.DRIVERID = T2.DRIVERID INNER JOIN RACES AS T3 ON T3.RACEID = T2.RACEID WHERE T3.NAME = 'AUSTRALIAN GRAND PRIX' AND T2.TIME LIKE '_:%:__.___' AND T3.YEAR = 2008",
3,938,ERROR,"NotImplementedError: {'like': ['T2__TIME', {'literal': '_:%:__.___'}]}",,"SELECT DRIVERS.SURNAME, DRIVERS.FORENAME, DRIVERS.URL FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE RACES.YEAR = 2008 AND RACES.NAME = 'AUSTRALIAN GRAND PRIX' AND RESULTS.POSITIONORDER = 1","SELECT T1.FORENAME, T1.SURNAME, T1.URL FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T1.DRIVERID = T2.DRIVERID INNER JOIN RACES AS T3 ON T3.RACEID = T2.RACEID WHERE T3.NAME = 'AUSTRALIAN GRAND PRIX' AND T2.TIME LIKE '_:%:__.___' AND T3.YEAR = 2008",
1,939,True,,0.152814,SELECT COUNT(DISTINCT DRIVERS.DRIVERID) FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE RACES.YEAR = 2008 AND RACES.NAME = 'AUSTRALIAN GRAND PRIX' AND DRIVERS.NATIONALITY = 'BRITISH',SELECT COUNT(*) FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T1.DRIVERID = T2.DRIVERID INNER JOIN RACES AS T3 ON T3.RACEID = T2.RACEID WHERE T3.NAME = 'AUSTRALIAN GRAND PRIX' AND T1.NATIONALITY = 'BRITISH' AND T3.YEAR = 2008,
1,940,True,,0.123392,SELECT COUNT(DISTINCT RESULTS.DRIVERID) FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID WHERE RACES.YEAR = 2008 AND RACES.NAME = 'CHINESE GRAND PRIX' AND RESULTS.TIME IS NOT NULL,SELECT COUNT(*) FROM ( SELECT T1.DRIVERID FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T2.NAME = 'CHINESE GRAND PRIX' AND T2.YEAR = 2008 AND T1.TIME IS NOT NULL GROUP BY T1.DRIVERID HAVING COUNT(T2.RACEID) > 0 ),
1,941,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, 'LEWIS HAMILTON', 18, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 0, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (9, 5, 6, 4, 10, 11, 12, '2147483648', 13, 8, 14, '2147483648', 15, 16, 17, '2147483648', '2147483648', 7);
-- ----------sql1------------
-- 8
SELECT SUM(RESULTS.POINTS) FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE DRIVERS.DRIVERREF = 'LEWIS HAMILTON';
-- ----------sql2------------
-- NULL
SELECT SUM(T2.POINTS) FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T1.FORENAME = 'LEWIS' AND T1.SURNAME = 'HAMILTON';
",0.099263,SELECT SUM(RESULTS.POINTS) FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE DRIVERS.DRIVERREF = 'LEWIS HAMILTON',SELECT SUM(T2.POINTS) FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T1.FORENAME = 'LEWIS' AND T1.SURNAME = 'HAMILTON',
1,942,ERROR,"NotImplementedError: {'substr': ['T2__FASTESTLAPTIME', 1, {'sub': [{'instr': ['T2__FASTESTLAPTIME', {'literal': ':'}]}, 1]}]}",,SELECT AVG(RESULTS.FASTESTLAPTIME) FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS',"SELECT AVG(CAST(SUBSTR(T2.FASTESTLAPTIME, 1, INSTR(T2.FASTESTLAPTIME, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(T2.FASTESTLAPTIME, INSTR(T2.FASTESTLAPTIME, ':') + 1) AS REAL)) FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T1.SURNAME = 'HAMILTON' AND T1.FORENAME = 'LEWIS'",
2,942,ERROR,"NotImplementedError: {'substr': ['T2__FASTESTLAPTIME', 1, {'sub': [{'instr': ['T2__FASTESTLAPTIME', {'literal': ':'}]}, 1]}]}",,SELECT AVG(RESULTS.FASTESTLAPTIME) FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS',"SELECT AVG(CAST(SUBSTR(T2.FASTESTLAPTIME, 1, INSTR(T2.FASTESTLAPTIME, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(T2.FASTESTLAPTIME, INSTR(T2.FASTESTLAPTIME, ':') + 1) AS REAL)) FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T1.SURNAME = 'HAMILTON' AND T1.FORENAME = 'LEWIS'",
3,942,ERROR,"NotImplementedError: {'substr': ['T2__FASTESTLAPTIME', 1, {'sub': [{'instr': ['T2__FASTESTLAPTIME', {'literal': ':'}]}, 1]}]}",,SELECT AVG(RESULTS.FASTESTLAPTIME) FROM RESULTS INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS',"SELECT AVG(CAST(SUBSTR(T2.FASTESTLAPTIME, 1, INSTR(T2.FASTESTLAPTIME, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(T2.FASTESTLAPTIME, INSTR(T2.FASTESTLAPTIME, ':') + 1) AS REAL)) FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T1.SURNAME = 'HAMILTON' AND T1.FORENAME = 'LEWIS'",
1,943,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(DF2.RACEID) AS REAL) * 100 / COUNT(DF1.RACEID) FROM (SELECT * FROM RACES WHERE YEAR = 2008 AND NAME = 'AUSTRALIAN GRAND PRIX') AS DF1 LEFT JOIN (SELECT * FROM RESULTS WHERE TIME IS NOT NULL) AS DF2 ON DF1.RACEID = DF2.RACEID,"SELECT CAST(SUM(IIF(T1.TIME IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.RESULTID) FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T2.NAME = 'AUSTRALIAN GRAND PRIX' AND T2.YEAR = 2008",
2,943,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(DF2.RACEID) AS REAL) * 100 / COUNT(DF1.RACEID) FROM (SELECT * FROM RACES WHERE YEAR = 2008 AND NAME = 'AUSTRALIAN GRAND PRIX') AS DF1 LEFT JOIN (SELECT * FROM RESULTS WHERE TIME IS NOT NULL) AS DF2 ON DF1.RACEID = DF2.RACEID,"SELECT CAST(SUM(IIF(T1.TIME IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.RESULTID) FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T2.NAME = 'AUSTRALIAN GRAND PRIX' AND T2.YEAR = 2008",
3,943,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(DF2.RACEID) AS REAL) * 100 / COUNT(DF1.RACEID) FROM (SELECT * FROM RACES WHERE YEAR = 2008 AND NAME = 'AUSTRALIAN GRAND PRIX') AS DF1 LEFT JOIN (SELECT * FROM RESULTS WHERE TIME IS NOT NULL) AS DF2 ON DF1.RACEID = DF2.RACEID,"SELECT CAST(SUM(IIF(T1.TIME IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.RESULTID) FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T2.NAME = 'AUSTRALIAN GRAND PRIX' AND T2.YEAR = 2008",
1,944,ERROR,NotImplementedError: {'real': {}},,"SELECT CAST((DF3.TIME - DF2.TIME) AS REAL) * 100 / DF3.TIME AS FASTER_PERCENTAGE FROM (SELECT RESULTS.TIME FROM RESULTS INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE RACES.YEAR = 2008 AND RACES.NAME = 'AUSTRALIAN GRAND PRIX' AND RESULTS.POSITION = 1) AS DF2, (SELECT RESULTS.TIME FROM RESULTS INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE RACES.YEAR = 2008 AND RACES.NAME = 'AUSTRALIAN GRAND PRIX' ORDER BY RESULTS.POSITIONORDER DESC LIMIT 1) AS DF3","WITH TIME_IN_SECONDS AS ( SELECT T1.POSITIONORDER, CASE WHEN T1.POSITIONORDER = 1 THEN (CAST(SUBSTR(T1.TIME, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.TIME, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.TIME, 6) AS REAL) ELSE CAST(SUBSTR(T1.TIME, 2) AS REAL) END AS TIME_SECONDS FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T2.NAME = 'AUSTRALIAN GRAND PRIX' AND T1.TIME IS NOT NULL AND T2.YEAR = 2008 ), CHAMPION_TIME AS ( SELECT TIME_SECONDS FROM TIME_IN_SECONDS WHERE POSITIONORDER = 1), LAST_DRIVER_INCREMENTAL AS ( SELECT TIME_SECONDS FROM TIME_IN_SECONDS WHERE POSITIONORDER = (SELECT MAX(POSITIONORDER) FROM TIME_IN_SECONDS) ) SELECT (CAST((SELECT TIME_SECONDS FROM LAST_DRIVER_INCREMENTAL) AS REAL) * 100) / (SELECT TIME_SECONDS + (SELECT TIME_SECONDS FROM LAST_DRIVER_INCREMENTAL) FROM CHAMPION_TIME)",
2,944,ERROR,NotImplementedError: {'real': {}},,"SELECT CAST((DF3.TIME - DF2.TIME) AS REAL) * 100 / DF3.TIME AS FASTER_PERCENTAGE FROM (SELECT RESULTS.TIME FROM RESULTS INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE RACES.YEAR = 2008 AND RACES.NAME = 'AUSTRALIAN GRAND PRIX' AND RESULTS.POSITION = 1) AS DF2, (SELECT RESULTS.TIME FROM RESULTS INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE RACES.YEAR = 2008 AND RACES.NAME = 'AUSTRALIAN GRAND PRIX' ORDER BY RESULTS.POSITIONORDER DESC LIMIT 1) AS DF3","WITH TIME_IN_SECONDS AS ( SELECT T1.POSITIONORDER, CASE WHEN T1.POSITIONORDER = 1 THEN (CAST(SUBSTR(T1.TIME, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.TIME, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.TIME, 6) AS REAL) ELSE CAST(SUBSTR(T1.TIME, 2) AS REAL) END AS TIME_SECONDS FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T2.NAME = 'AUSTRALIAN GRAND PRIX' AND T1.TIME IS NOT NULL AND T2.YEAR = 2008 ), CHAMPION_TIME AS ( SELECT TIME_SECONDS FROM TIME_IN_SECONDS WHERE POSITIONORDER = 1), LAST_DRIVER_INCREMENTAL AS ( SELECT TIME_SECONDS FROM TIME_IN_SECONDS WHERE POSITIONORDER = (SELECT MAX(POSITIONORDER) FROM TIME_IN_SECONDS) ) SELECT (CAST((SELECT TIME_SECONDS FROM LAST_DRIVER_INCREMENTAL) AS REAL) * 100) / (SELECT TIME_SECONDS + (SELECT TIME_SECONDS FROM LAST_DRIVER_INCREMENTAL) FROM CHAMPION_TIME)",
3,944,ERROR,NotImplementedError: {'real': {}},,"SELECT CAST((DF3.TIME - DF2.TIME) AS REAL) * 100 / DF3.TIME AS FASTER_PERCENTAGE FROM (SELECT RESULTS.TIME FROM RESULTS INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE RACES.YEAR = 2008 AND RACES.NAME = 'AUSTRALIAN GRAND PRIX' AND RESULTS.POSITION = 1) AS DF2, (SELECT RESULTS.TIME FROM RESULTS INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE RACES.YEAR = 2008 AND RACES.NAME = 'AUSTRALIAN GRAND PRIX' ORDER BY RESULTS.POSITIONORDER DESC LIMIT 1) AS DF3","WITH TIME_IN_SECONDS AS ( SELECT T1.POSITIONORDER, CASE WHEN T1.POSITIONORDER = 1 THEN (CAST(SUBSTR(T1.TIME, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.TIME, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.TIME, 6) AS REAL) ELSE CAST(SUBSTR(T1.TIME, 2) AS REAL) END AS TIME_SECONDS FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T2.NAME = 'AUSTRALIAN GRAND PRIX' AND T1.TIME IS NOT NULL AND T2.YEAR = 2008 ), CHAMPION_TIME AS ( SELECT TIME_SECONDS FROM TIME_IN_SECONDS WHERE POSITIONORDER = 1), LAST_DRIVER_INCREMENTAL AS ( SELECT TIME_SECONDS FROM TIME_IN_SECONDS WHERE POSITIONORDER = (SELECT MAX(POSITIONORDER) FROM TIME_IN_SECONDS) ) SELECT (CAST((SELECT TIME_SECONDS FROM LAST_DRIVER_INCREMENTAL) AS REAL) * 100) / (SELECT TIME_SECONDS + (SELECT TIME_SECONDS FROM LAST_DRIVER_INCREMENTAL) FROM CHAMPION_TIME)",
1,945,True,,0.072341,SELECT COUNT(*) FROM CIRCUITS WHERE COUNTRY = 'AUSTRALIA' AND LOCATION = 'ADELAIDE',SELECT COUNT(CIRCUITID) FROM CIRCUITS WHERE LOCATION = 'ADELAIDE' AND COUNTRY = 'AUSTRALIA',
1,946,True,,0.046973,"SELECT CIRCUITS.LAT, CIRCUITS.LNG FROM CIRCUITS WHERE CIRCUITS.COUNTRY = 'USA'","SELECT LAT, LNG FROM CIRCUITS WHERE COUNTRY = 'USA'",
1,947,ERROR,"NotImplementedError: {'extract': ['year', 'DOB']}",,SELECT COUNT(*) FROM DRIVERS WHERE NATIONALITY = 'BRITISH' AND EXTRACT(YEAR FROM DOB) > 1980,"SELECT COUNT(DRIVERID) FROM DRIVERS WHERE NATIONALITY = 'BRITISH' AND STRFTIME('%Y', DOB) > '1980'",
2,947,ERROR,"NotImplementedError: {'extract': ['year', 'DOB']}",,SELECT COUNT(*) FROM DRIVERS WHERE NATIONALITY = 'BRITISH' AND EXTRACT(YEAR FROM DOB) > 1980,"SELECT COUNT(DRIVERID) FROM DRIVERS WHERE NATIONALITY = 'BRITISH' AND STRFTIME('%Y', DOB) > '1980'",
3,947,ERROR,"NotImplementedError: {'extract': ['year', 'DOB']}",,SELECT COUNT(*) FROM DRIVERS WHERE NATIONALITY = 'BRITISH' AND EXTRACT(YEAR FROM DOB) > 1980,"SELECT COUNT(DRIVERID) FROM DRIVERS WHERE NATIONALITY = 'BRITISH' AND STRFTIME('%Y', DOB) > '1980'",
1,948,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CONSTRUCTORS__POINTS`,,SELECT MAX(CONSTRUCTORS.POINTS) FROM CONSTRUCTORS WHERE CONSTRUCTORS.NATIONALITY = 'BRITISH',SELECT MAX(T1.POINTS) FROM CONSTRUCTORSTANDINGS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T1.CONSTRUCTORID = T2.CONSTRUCTORID WHERE T2.NATIONALITY = 'BRITISH',
2,948,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CONSTRUCTORS__POINTS`,,SELECT MAX(CONSTRUCTORS.POINTS) FROM CONSTRUCTORS WHERE CONSTRUCTORS.NATIONALITY = 'BRITISH',SELECT MAX(T1.POINTS) FROM CONSTRUCTORSTANDINGS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T1.CONSTRUCTORID = T2.CONSTRUCTORID WHERE T2.NATIONALITY = 'BRITISH',
3,948,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CONSTRUCTORS__POINTS`,,SELECT MAX(CONSTRUCTORS.POINTS) FROM CONSTRUCTORS WHERE CONSTRUCTORS.NATIONALITY = 'BRITISH',SELECT MAX(T1.POINTS) FROM CONSTRUCTORSTANDINGS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T1.CONSTRUCTORID = T2.CONSTRUCTORID WHERE T2.NATIONALITY = 'BRITISH',
1,949,True,,0.0612599999999999,SELECT CONSTRUCTORS.NAME FROM CONSTRUCTORS INNER JOIN CONSTRUCTORSTANDINGS ON CONSTRUCTORS.CONSTRUCTORID = CONSTRUCTORSTANDINGS.CONSTRUCTORID ORDER BY CONSTRUCTORSTANDINGS.POINTS DESC LIMIT 1,SELECT T2.NAME FROM CONSTRUCTORSTANDINGS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T1.CONSTRUCTORID = T2.CONSTRUCTORID ORDER BY T1.POINTS DESC LIMIT 1,
1,950,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (5, '2147483648', 0, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (291, 3, 0, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (7, 291, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (8, 291, 4, 9, 10, '2147483648', 11);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 291, 5, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (291, 5, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (291, 5, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 291, 5, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (6, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (0, 291, 5, 4, 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', '2147483648', 6);
-- ----------sql1------------
-- 2147483648
SELECT CONSTRUCTORS.NAME FROM CONSTRUCTORRESULTS INNER JOIN CONSTRUCTORS ON CONSTRUCTORRESULTS.CONSTRUCTORID = CONSTRUCTORS.CONSTRUCTORID WHERE CONSTRUCTORRESULTS.RACEID = 291 AND CONSTRUCTORRESULTS.POINTS = 0;
-- ----------sql2------------
SELECT T2.NAME FROM CONSTRUCTORSTANDINGS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T1.CONSTRUCTORID = T2.CONSTRUCTORID WHERE T1.POINTS = 0 AND T1.RACEID = 291;
",0.082206,SELECT CONSTRUCTORS.NAME FROM CONSTRUCTORRESULTS INNER JOIN CONSTRUCTORS ON CONSTRUCTORRESULTS.CONSTRUCTORID = CONSTRUCTORS.CONSTRUCTORID WHERE CONSTRUCTORRESULTS.RACEID = 291 AND CONSTRUCTORRESULTS.POINTS = 0,SELECT T2.NAME FROM CONSTRUCTORSTANDINGS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T1.CONSTRUCTORID = T2.CONSTRUCTORID WHERE T1.POINTS = 0 AND T1.RACEID = 291,
1,951,ERROR,IndexError: list index out of range,,SELECT COUNT(DISTINCT CONSTRUCTORS.CONSTRUCTORID) FROM CONSTRUCTORS INNER JOIN CONSTRUCTORRESULTS ON CONSTRUCTORS.CONSTRUCTORID = CONSTRUCTORRESULTS.CONSTRUCTORID WHERE CONSTRUCTORS.NATIONALITY = 'JAPANESE' AND CONSTRUCTORRESULTS.POINTS = 0 GROUP BY CONSTRUCTORS.CONSTRUCTORID HAVING COUNT(RACES.RACEID) = 2,SELECT COUNT(T1.RACEID) FROM CONSTRUCTORSTANDINGS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T1.CONSTRUCTORID = T2.CONSTRUCTORID WHERE T1.POINTS = 0 AND T2.NATIONALITY = 'JAPANESE' GROUP BY T1.CONSTRUCTORID HAVING COUNT(RACEID) = 2,
2,951,ERROR,IndexError: list index out of range,,SELECT COUNT(DISTINCT CONSTRUCTORS.CONSTRUCTORID) FROM CONSTRUCTORS INNER JOIN CONSTRUCTORRESULTS ON CONSTRUCTORS.CONSTRUCTORID = CONSTRUCTORRESULTS.CONSTRUCTORID WHERE CONSTRUCTORS.NATIONALITY = 'JAPANESE' AND CONSTRUCTORRESULTS.POINTS = 0 GROUP BY CONSTRUCTORS.CONSTRUCTORID HAVING COUNT(RACES.RACEID) = 2,SELECT COUNT(T1.RACEID) FROM CONSTRUCTORSTANDINGS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T1.CONSTRUCTORID = T2.CONSTRUCTORID WHERE T1.POINTS = 0 AND T2.NATIONALITY = 'JAPANESE' GROUP BY T1.CONSTRUCTORID HAVING COUNT(RACEID) = 2,
3,951,ERROR,IndexError: list index out of range,,SELECT COUNT(DISTINCT CONSTRUCTORS.CONSTRUCTORID) FROM CONSTRUCTORS INNER JOIN CONSTRUCTORRESULTS ON CONSTRUCTORS.CONSTRUCTORID = CONSTRUCTORRESULTS.CONSTRUCTORID WHERE CONSTRUCTORS.NATIONALITY = 'JAPANESE' AND CONSTRUCTORRESULTS.POINTS = 0 GROUP BY CONSTRUCTORS.CONSTRUCTORID HAVING COUNT(RACES.RACEID) = 2,SELECT COUNT(T1.RACEID) FROM CONSTRUCTORSTANDINGS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T1.CONSTRUCTORID = T2.CONSTRUCTORID WHERE T1.POINTS = 0 AND T2.NATIONALITY = 'JAPANESE' GROUP BY T1.CONSTRUCTORID HAVING COUNT(RACEID) = 2,
1,952,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 0, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 0, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (8, 5, 4, 9, 10, '2147483648', 11);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (12, 5, 6, 4, 13, 14, 15, '2147483648', 16, 17, 18, '2147483648', 19, 20, 1, '2147483648', '2147483648', 7);
-- ----------sql1------------
SELECT CONSTRUCTORS.NAME FROM CONSTRUCTORS INNER JOIN CONSTRUCTORSTANDINGS ON CONSTRUCTORS.CONSTRUCTORID = CONSTRUCTORSTANDINGS.CONSTRUCTORID WHERE CONSTRUCTORSTANDINGS.POSITION = 1;
-- ----------sql2------------
-- 2147483648
SELECT DISTINCT T2.NAME FROM RESULTS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T1.CONSTRUCTORID = T2.CONSTRUCTORID WHERE T1.RANK = 1;
",0.070769,SELECT CONSTRUCTORS.NAME FROM CONSTRUCTORS INNER JOIN CONSTRUCTORSTANDINGS ON CONSTRUCTORS.CONSTRUCTORID = CONSTRUCTORSTANDINGS.CONSTRUCTORID WHERE CONSTRUCTORSTANDINGS.POSITION = 1,SELECT DISTINCT T2.NAME FROM RESULTS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T1.CONSTRUCTORID = T2.CONSTRUCTORID WHERE T1.RANK = 1,
1,953,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LAPTIMES__CONSTRUCTORID`,,SELECT COUNT(DISTINCT CONSTRUCTORS.CONSTRUCTORID) FROM CONSTRUCTORS INNER JOIN LAPTIMES ON CONSTRUCTORS.CONSTRUCTORID = LAPTIMES.CONSTRUCTORID WHERE CONSTRUCTORS.NATIONALITY = 'FRENCH' AND LAPTIMES.LAP > 50,SELECT COUNT(DISTINCT T2.CONSTRUCTORID) FROM RESULTS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T1.CONSTRUCTORID = T2.CONSTRUCTORID WHERE T1.LAPS > 50 AND T2.NATIONALITY = 'FRENCH',
2,953,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LAPTIMES__CONSTRUCTORID`,,SELECT COUNT(DISTINCT CONSTRUCTORS.CONSTRUCTORID) FROM CONSTRUCTORS INNER JOIN LAPTIMES ON CONSTRUCTORS.CONSTRUCTORID = LAPTIMES.CONSTRUCTORID WHERE CONSTRUCTORS.NATIONALITY = 'FRENCH' AND LAPTIMES.LAP > 50,SELECT COUNT(DISTINCT T2.CONSTRUCTORID) FROM RESULTS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T1.CONSTRUCTORID = T2.CONSTRUCTORID WHERE T1.LAPS > 50 AND T2.NATIONALITY = 'FRENCH',
3,953,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LAPTIMES__CONSTRUCTORID`,,SELECT COUNT(DISTINCT CONSTRUCTORS.CONSTRUCTORID) FROM CONSTRUCTORS INNER JOIN LAPTIMES ON CONSTRUCTORS.CONSTRUCTORID = LAPTIMES.CONSTRUCTORID WHERE CONSTRUCTORS.NATIONALITY = 'FRENCH' AND LAPTIMES.LAP > 50,SELECT COUNT(DISTINCT T2.CONSTRUCTORID) FROM RESULTS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T1.CONSTRUCTORID = T2.CONSTRUCTORID WHERE T1.LAPS > 50 AND T2.NATIONALITY = 'FRENCH',
1,954,ERROR,NotImplementedError: {'real': {}},,"SELECT CAST(COUNT(DF2.DRIVERID) AS REAL) * 100 / COUNT(DF1.DRIVERID) AS PERCENTAGE FROM (SELECT DRIVERS.DRIVERID FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.NATIONALITY = 'JAPANESE' AND RACES.YEAR BETWEEN 2007 AND 2009) AS DF1, (SELECT DRIVERS.DRIVERID FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.NATIONALITY = 'JAPANESE' AND RACES.YEAR BETWEEN 2007 AND 2009 AND RESULTS.TIME IS NOT NULL) AS DF2","SELECT CAST(SUM(IIF(T1.TIME IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.RACEID) FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN DRIVERS AS T3 ON T1.DRIVERID = T3.DRIVERID WHERE T3.NATIONALITY = 'JAPANESE' AND T2.YEAR BETWEEN 2007 AND 2009",
2,954,ERROR,NotImplementedError: {'real': {}},,"SELECT CAST(COUNT(DF2.DRIVERID) AS REAL) * 100 / COUNT(DF1.DRIVERID) AS PERCENTAGE FROM (SELECT DRIVERS.DRIVERID FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.NATIONALITY = 'JAPANESE' AND RACES.YEAR BETWEEN 2007 AND 2009) AS DF1, (SELECT DRIVERS.DRIVERID FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.NATIONALITY = 'JAPANESE' AND RACES.YEAR BETWEEN 2007 AND 2009 AND RESULTS.TIME IS NOT NULL) AS DF2","SELECT CAST(SUM(IIF(T1.TIME IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.RACEID) FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN DRIVERS AS T3 ON T1.DRIVERID = T3.DRIVERID WHERE T3.NATIONALITY = 'JAPANESE' AND T2.YEAR BETWEEN 2007 AND 2009",
3,954,ERROR,NotImplementedError: {'real': {}},,"SELECT CAST(COUNT(DF2.DRIVERID) AS REAL) * 100 / COUNT(DF1.DRIVERID) AS PERCENTAGE FROM (SELECT DRIVERS.DRIVERID FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.NATIONALITY = 'JAPANESE' AND RACES.YEAR BETWEEN 2007 AND 2009) AS DF1, (SELECT DRIVERS.DRIVERID FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.NATIONALITY = 'JAPANESE' AND RACES.YEAR BETWEEN 2007 AND 2009 AND RESULTS.TIME IS NOT NULL) AS DF2","SELECT CAST(SUM(IIF(T1.TIME IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.RACEID) FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN DRIVERS AS T3 ON T1.DRIVERID = T3.DRIVERID WHERE T3.NATIONALITY = 'JAPANESE' AND T2.YEAR BETWEEN 2007 AND 2009",
1,955,ERROR,"NotImplementedError: {'substr': ['T1__TIME', 1, 1]}",,"SELECT RACES.YEAR, AVG(RESULTS.MILLISECONDS/1000) FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID WHERE RACES.YEAR < 1975 AND RESULTS.POSITION = 1 AND RESULTS.TIME IS NOT NULL GROUP BY RACES.YEAR","WITH TIME_IN_SECONDS AS ( SELECT T2.YEAR, T2.RACEID, T1.POSITIONORDER, CASE WHEN T1.POSITIONORDER = 1 THEN (CAST(SUBSTR(T1.TIME, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.TIME, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.TIME, 6,2) AS REAL )   + CAST(SUBSTR(T1.TIME, 9) AS REAL)/1000 ELSE 0 END AS TIME_SECONDS FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T1.TIME IS NOT NULL ), CHAMPION_TIME AS ( SELECT YEAR, RACEID, TIME_SECONDS FROM TIME_IN_SECONDS WHERE POSITIONORDER = 1 ) SELECT YEAR, AVG(TIME_SECONDS) FROM CHAMPION_TIME WHERE YEAR < 1975 GROUP BY YEAR HAVING AVG(TIME_SECONDS) IS NOT NULL",
2,955,ERROR,"NotImplementedError: {'substr': ['T1__TIME', 1, 1]}",,"SELECT RACES.YEAR, AVG(RESULTS.MILLISECONDS/1000) FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID WHERE RACES.YEAR < 1975 AND RESULTS.POSITION = 1 AND RESULTS.TIME IS NOT NULL GROUP BY RACES.YEAR","WITH TIME_IN_SECONDS AS ( SELECT T2.YEAR, T2.RACEID, T1.POSITIONORDER, CASE WHEN T1.POSITIONORDER = 1 THEN (CAST(SUBSTR(T1.TIME, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.TIME, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.TIME, 6,2) AS REAL )   + CAST(SUBSTR(T1.TIME, 9) AS REAL)/1000 ELSE 0 END AS TIME_SECONDS FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T1.TIME IS NOT NULL ), CHAMPION_TIME AS ( SELECT YEAR, RACEID, TIME_SECONDS FROM TIME_IN_SECONDS WHERE POSITIONORDER = 1 ) SELECT YEAR, AVG(TIME_SECONDS) FROM CHAMPION_TIME WHERE YEAR < 1975 GROUP BY YEAR HAVING AVG(TIME_SECONDS) IS NOT NULL",
3,955,ERROR,"NotImplementedError: {'substr': ['T1__TIME', 1, 1]}",,"SELECT RACES.YEAR, AVG(RESULTS.MILLISECONDS/1000) FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID WHERE RACES.YEAR < 1975 AND RESULTS.POSITION = 1 AND RESULTS.TIME IS NOT NULL GROUP BY RACES.YEAR","WITH TIME_IN_SECONDS AS ( SELECT T2.YEAR, T2.RACEID, T1.POSITIONORDER, CASE WHEN T1.POSITIONORDER = 1 THEN (CAST(SUBSTR(T1.TIME, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.TIME, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.TIME, 6,2) AS REAL )   + CAST(SUBSTR(T1.TIME, 9) AS REAL)/1000 ELSE 0 END AS TIME_SECONDS FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T1.TIME IS NOT NULL ), CHAMPION_TIME AS ( SELECT YEAR, RACEID, TIME_SECONDS FROM TIME_IN_SECONDS WHERE POSITIONORDER = 1 ) SELECT YEAR, AVG(TIME_SECONDS) FROM CHAMPION_TIME WHERE YEAR < 1975 GROUP BY YEAR HAVING AVG(TIME_SECONDS) IS NOT NULL",
1,956,ERROR,NotImplementedError: {'year': 'DRIVERS__DOB'},,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME FROM DRIVERS INNER JOIN DRIVERSTANDINGS ON DRIVERS.DRIVERID = DRIVERSTANDINGS.DRIVERID WHERE YEAR(DRIVERS.DOB) > 1975 AND DRIVERSTANDINGS.POSITION = 2","SELECT T2.FORENAME, T2.SURNAME FROM RESULTS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE STRFTIME('%Y', T2.DOB) > '1975' AND T1.RANK = 2",
2,956,ERROR,NotImplementedError: {'year': 'DRIVERS__DOB'},,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME FROM DRIVERS INNER JOIN DRIVERSTANDINGS ON DRIVERS.DRIVERID = DRIVERSTANDINGS.DRIVERID WHERE YEAR(DRIVERS.DOB) > 1975 AND DRIVERSTANDINGS.POSITION = 2","SELECT T2.FORENAME, T2.SURNAME FROM RESULTS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE STRFTIME('%Y', T2.DOB) > '1975' AND T1.RANK = 2",
3,956,ERROR,NotImplementedError: {'year': 'DRIVERS__DOB'},,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME FROM DRIVERS INNER JOIN DRIVERSTANDINGS ON DRIVERS.DRIVERID = DRIVERSTANDINGS.DRIVERID WHERE YEAR(DRIVERS.DOB) > 1975 AND DRIVERSTANDINGS.POSITION = 2","SELECT T2.FORENAME, T2.SURNAME FROM RESULTS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE STRFTIME('%Y', T2.DOB) > '1975' AND T1.RANK = 2",
1,957,True,,0.09677,SELECT COUNT(*) FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID WHERE DRIVERS.NATIONALITY = 'ITALIAN' AND RESULTS.TIME IS NULL,SELECT COUNT(T1.DRIVERID) FROM RESULTS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T2.NATIONALITY = 'ITALIAN' AND T1.TIME IS NULL,
1,958,False,,,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID ORDER BY RESULTS.FASTESTLAPTIME LIMIT 1","SELECT T2.FORENAME, T2.SURNAME, T1.FASTESTLAPTIME FROM RESULTS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T1.FASTESTLAPTIME IS NOT NULL ORDER BY T1.FASTESTLAPTIME ASC LIMIT 1",
1,959,ERROR,"NotImplementedError: {'like': ['RESULTS__TIME', {'literal': '%:%'}]}",,SELECT MAX(RESULTS.FASTESTLAP) FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID WHERE RACES.YEAR = 2009 AND RESULTS.TIME LIKE '%:%';,SELECT T1.FASTESTLAP FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T2.YEAR = 2009 AND T1.TIME LIKE '_:%:__.___',
2,959,ERROR,"NotImplementedError: {'like': ['RESULTS__TIME', {'literal': '%:%'}]}",,SELECT MAX(RESULTS.FASTESTLAP) FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID WHERE RACES.YEAR = 2009 AND RESULTS.TIME LIKE '%:%';,SELECT T1.FASTESTLAP FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T2.YEAR = 2009 AND T1.TIME LIKE '_:%:__.___',
3,959,ERROR,"NotImplementedError: {'like': ['RESULTS__TIME', {'literal': '%:%'}]}",,SELECT MAX(RESULTS.FASTESTLAP) FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID WHERE RACES.YEAR = 2009 AND RESULTS.TIME LIKE '%:%';,SELECT T1.FASTESTLAP FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T2.YEAR = 2009 AND T1.TIME LIKE '_:%:__.___',
1,960,True,,0.1075849999999999,SELECT AVG(RESULTS.FASTESTLAPSPEED) FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID WHERE RACES.NAME = 'SPANISH GRAND PRIX' AND RACES.YEAR = 2009,SELECT AVG(T1.FASTESTLAPSPEED) FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T2.YEAR = 2009 AND T2.NAME = 'SPANISH GRAND PRIX',
1,961,True,,0.078026,"SELECT RACES.NAME, RACES.YEAR FROM RESULTS INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE RESULTS.MILLISECONDS IS NOT NULL ORDER BY RESULTS.MILLISECONDS ASC LIMIT 1;","SELECT T1.NAME, T1.YEAR FROM RACES AS T1 INNER JOIN RESULTS AS T2 ON T1.RACEID = T2.RACEID WHERE T2.MILLISECONDS IS NOT NULL ORDER BY T2.MILLISECONDS LIMIT 1",
1,962,ERROR,NotImplementedError: {'year': 'DRIVERS__DOB'},,"SELECT CAST(COUNT(DF2.DRIVERID) AS REAL) * 100 / COUNT(DF1.DRIVERID) FROM (SELECT DRIVERID FROM RESULTS INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE RACES.YEAR BETWEEN 2000 AND 2005) AS DF1, (SELECT DRIVERS.DRIVERID FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE YEAR(DRIVERS.DOB) < 1985 AND RESULTS.LAPS > 50) AS DF2","SELECT CAST(SUM(IIF(STRFTIME('%Y', T3.DOB) < '1985' AND T1.LAPS > 50, 1, 0)) AS REAL) * 100 / COUNT(*) FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN DRIVERS AS T3 ON T1.DRIVERID = T3.DRIVERID WHERE T2.YEAR BETWEEN 2000 AND 2005",
2,962,ERROR,NotImplementedError: {'year': 'DRIVERS__DOB'},,"SELECT CAST(COUNT(DF2.DRIVERID) AS REAL) * 100 / COUNT(DF1.DRIVERID) FROM (SELECT DRIVERID FROM RESULTS INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE RACES.YEAR BETWEEN 2000 AND 2005) AS DF1, (SELECT DRIVERS.DRIVERID FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE YEAR(DRIVERS.DOB) < 1985 AND RESULTS.LAPS > 50) AS DF2","SELECT CAST(SUM(IIF(STRFTIME('%Y', T3.DOB) < '1985' AND T1.LAPS > 50, 1, 0)) AS REAL) * 100 / COUNT(*) FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN DRIVERS AS T3 ON T1.DRIVERID = T3.DRIVERID WHERE T2.YEAR BETWEEN 2000 AND 2005",
3,962,ERROR,NotImplementedError: {'year': 'DRIVERS__DOB'},,"SELECT CAST(COUNT(DF2.DRIVERID) AS REAL) * 100 / COUNT(DF1.DRIVERID) FROM (SELECT DRIVERID FROM RESULTS INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE RACES.YEAR BETWEEN 2000 AND 2005) AS DF1, (SELECT DRIVERS.DRIVERID FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE YEAR(DRIVERS.DOB) < 1985 AND RESULTS.LAPS > 50) AS DF2","SELECT CAST(SUM(IIF(STRFTIME('%Y', T3.DOB) < '1985' AND T1.LAPS > 50, 1, 0)) AS REAL) * 100 / COUNT(*) FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN DRIVERS AS T3 ON T1.DRIVERID = T3.DRIVERID WHERE T2.YEAR BETWEEN 2000 AND 2005",
1,963,ERROR,"NotImplementedError: {'substr': ['T2__TIME', 1, 2]}",,SELECT COUNT(DISTINCT DRIVERS.DRIVERID) FROM DRIVERS INNER JOIN LAPTIMES ON DRIVERS.DRIVERID = LAPTIMES.DRIVERID WHERE DRIVERS.NATIONALITY = 'FRENCH' AND LAPTIMES.MILLISECONDS < 120000,"SELECT COUNT(T1.DRIVERID) FROM DRIVERS AS T1 INNER JOIN LAPTIMES AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T1.NATIONALITY = 'FRENCH' AND (CAST(SUBSTR(T2.TIME, 1, 2) AS INTEGER) * 60 + CAST(SUBSTR(T2.TIME, 4, 2) AS INTEGER) + CAST(SUBSTR(T2.TIME, 7, 2) AS REAL) / 1000) < 120",
2,963,ERROR,"NotImplementedError: {'substr': ['T2__TIME', 1, 2]}",,SELECT COUNT(DISTINCT DRIVERS.DRIVERID) FROM DRIVERS INNER JOIN LAPTIMES ON DRIVERS.DRIVERID = LAPTIMES.DRIVERID WHERE DRIVERS.NATIONALITY = 'FRENCH' AND LAPTIMES.MILLISECONDS < 120000,"SELECT COUNT(T1.DRIVERID) FROM DRIVERS AS T1 INNER JOIN LAPTIMES AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T1.NATIONALITY = 'FRENCH' AND (CAST(SUBSTR(T2.TIME, 1, 2) AS INTEGER) * 60 + CAST(SUBSTR(T2.TIME, 4, 2) AS INTEGER) + CAST(SUBSTR(T2.TIME, 7, 2) AS REAL) / 1000) < 120",
3,963,ERROR,"NotImplementedError: {'substr': ['T2__TIME', 1, 2]}",,SELECT COUNT(DISTINCT DRIVERS.DRIVERID) FROM DRIVERS INNER JOIN LAPTIMES ON DRIVERS.DRIVERID = LAPTIMES.DRIVERID WHERE DRIVERS.NATIONALITY = 'FRENCH' AND LAPTIMES.MILLISECONDS < 120000,"SELECT COUNT(T1.DRIVERID) FROM DRIVERS AS T1 INNER JOIN LAPTIMES AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T1.NATIONALITY = 'FRENCH' AND (CAST(SUBSTR(T2.TIME, 1, 2) AS INTEGER) * 60 + CAST(SUBSTR(T2.TIME, 4, 2) AS INTEGER) + CAST(SUBSTR(T2.TIME, 7, 2) AS REAL) / 1000) < 120",
1,964,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 0, '2147483648', '2147483648', '2147483648', '1970-01-01', 'AMERICA', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 0, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (0, 5, 6, 4, 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', '2147483648', 7);
-- ----------sql1------------
-- 2147483648
SELECT DRIVERS.CODE FROM DRIVERS WHERE DRIVERS.NATIONALITY = 'AMERICA';
-- ----------sql2------------
SELECT CODE FROM DRIVERS WHERE NATIONALITY = 'AMERICAN';
",0.046764,SELECT DRIVERS.CODE FROM DRIVERS WHERE DRIVERS.NATIONALITY = 'AMERICA',SELECT CODE FROM DRIVERS WHERE NATIONALITY = 'AMERICAN',
1,965,True,,0.046882,SELECT RACES.RACEID FROM RACES WHERE RACES.YEAR = 2009,SELECT RACEID FROM RACES WHERE YEAR = 2009,
1,966,True,,0.0512489999999999,SELECT COUNT(RESULTS.DRIVERID) FROM RESULTS WHERE RESULTS.RACEID = 18,SELECT COUNT(DRIVERID) FROM DRIVERSTANDINGS WHERE RACEID = 18,
1,967,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT DRIVERS.CODE FROM DRIVERS ORDER BY DRIVERS.DOB DESC LIMIT 3 UNION SELECT COUNT(*) FROM DRIVERS WHERE DRIVERS.NATIONALITY = 'DUTCH'`,,SELECT DRIVERS.CODE FROM DRIVERS ORDER BY DRIVERS.DOB DESC LIMIT 3 UNION SELECT COUNT(*) FROM DRIVERS WHERE DRIVERS.NATIONALITY = 'DUTCH',SELECT COUNT(*) FROM ( SELECT T1.NATIONALITY FROM DRIVERS AS T1 ORDER BY JULIANDAY(T1.DOB) DESC LIMIT 3) AS T3 WHERE T3.NATIONALITY = 'DUTCH',
2,967,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT DRIVERS.CODE FROM DRIVERS ORDER BY DRIVERS.DOB DESC LIMIT 3 UNION SELECT COUNT(*) FROM DRIVERS WHERE DRIVERS.NATIONALITY = 'DUTCH'`,,SELECT DRIVERS.CODE FROM DRIVERS ORDER BY DRIVERS.DOB DESC LIMIT 3 UNION SELECT COUNT(*) FROM DRIVERS WHERE DRIVERS.NATIONALITY = 'DUTCH',SELECT COUNT(*) FROM ( SELECT T1.NATIONALITY FROM DRIVERS AS T1 ORDER BY JULIANDAY(T1.DOB) DESC LIMIT 3) AS T3 WHERE T3.NATIONALITY = 'DUTCH',
3,967,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT DRIVERS.CODE FROM DRIVERS ORDER BY DRIVERS.DOB DESC LIMIT 3 UNION SELECT COUNT(*) FROM DRIVERS WHERE DRIVERS.NATIONALITY = 'DUTCH'`,,SELECT DRIVERS.CODE FROM DRIVERS ORDER BY DRIVERS.DOB DESC LIMIT 3 UNION SELECT COUNT(*) FROM DRIVERS WHERE DRIVERS.NATIONALITY = 'DUTCH',SELECT COUNT(*) FROM ( SELECT T1.NATIONALITY FROM DRIVERS AS T1 ORDER BY JULIANDAY(T1.DOB) DESC LIMIT 3) AS T3 WHERE T3.NATIONALITY = 'DUTCH',
1,968,True,,0.065576,SELECT DRIVERS.DRIVERREF FROM DRIVERS WHERE DRIVERS.SURNAME = 'KUBICA' AND DRIVERS.FORENAME = 'ROBERT';,SELECT DRIVERREF FROM DRIVERS WHERE FORENAME = 'ROBERT' AND SURNAME = 'KUBICA',
1,969,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'DOB']}",,"SELECT COUNT(*) FROM DRIVERS WHERE NATIONALITY = 'BRITISH' AND STRFTIME('%Y', DOB) = '1980';","SELECT COUNT(DRIVERID) FROM DRIVERS WHERE NATIONALITY = 'BRITISH' AND STRFTIME('%Y', DOB) = '1980'",
2,969,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'DOB']}",,"SELECT COUNT(*) FROM DRIVERS WHERE NATIONALITY = 'BRITISH' AND STRFTIME('%Y', DOB) = '1980';","SELECT COUNT(DRIVERID) FROM DRIVERS WHERE NATIONALITY = 'BRITISH' AND STRFTIME('%Y', DOB) = '1980'",
3,969,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'DOB']}",,"SELECT COUNT(*) FROM DRIVERS WHERE NATIONALITY = 'BRITISH' AND STRFTIME('%Y', DOB) = '1980';","SELECT COUNT(DRIVERID) FROM DRIVERS WHERE NATIONALITY = 'BRITISH' AND STRFTIME('%Y', DOB) = '1980'",
1,970,ERROR,NotImplementedError: {'year': 'DRIVERS__DOB'},,SELECT DRIVERS.DRIVERREF FROM DRIVERS INNER JOIN LAPTIMES ON DRIVERS.DRIVERID = LAPTIMES.DRIVERID WHERE DRIVERS.NATIONALITY = 'GERMAN' AND YEAR(DRIVERS.DOB) BETWEEN 1980 AND 1990 ORDER BY LAPTIMES.TIME ASC LIMIT 3,"SELECT T2.DRIVERID FROM PITSTOPS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T2.NATIONALITY = 'GERMAN' AND STRFTIME('%Y', T2.DOB) BETWEEN '1980' AND '1990' ORDER BY T1.TIME LIMIT 3",
2,970,ERROR,NotImplementedError: {'year': 'DRIVERS__DOB'},,SELECT DRIVERS.DRIVERREF FROM DRIVERS INNER JOIN LAPTIMES ON DRIVERS.DRIVERID = LAPTIMES.DRIVERID WHERE DRIVERS.NATIONALITY = 'GERMAN' AND YEAR(DRIVERS.DOB) BETWEEN 1980 AND 1990 ORDER BY LAPTIMES.TIME ASC LIMIT 3,"SELECT T2.DRIVERID FROM PITSTOPS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T2.NATIONALITY = 'GERMAN' AND STRFTIME('%Y', T2.DOB) BETWEEN '1980' AND '1990' ORDER BY T1.TIME LIMIT 3",
3,970,ERROR,NotImplementedError: {'year': 'DRIVERS__DOB'},,SELECT DRIVERS.DRIVERREF FROM DRIVERS INNER JOIN LAPTIMES ON DRIVERS.DRIVERID = LAPTIMES.DRIVERID WHERE DRIVERS.NATIONALITY = 'GERMAN' AND YEAR(DRIVERS.DOB) BETWEEN 1980 AND 1990 ORDER BY LAPTIMES.TIME ASC LIMIT 3,"SELECT T2.DRIVERID FROM PITSTOPS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T2.NATIONALITY = 'GERMAN' AND STRFTIME('%Y', T2.DOB) BETWEEN '1980' AND '1990' ORDER BY T1.TIME LIMIT 3",
1,971,ERROR,NotImplementedError: {'julianday': 'DOB'},,SELECT DRIVERS.DRIVERREF FROM DRIVERS WHERE DRIVERS.NATIONALITY = 'GERMAN' ORDER BY DRIVERS.DOB ASC LIMIT 1,SELECT DRIVERREF FROM DRIVERS WHERE NATIONALITY = 'GERMAN' ORDER BY JULIANDAY(DOB) ASC LIMIT 1,
2,971,ERROR,NotImplementedError: {'julianday': 'DOB'},,SELECT DRIVERS.DRIVERREF FROM DRIVERS WHERE DRIVERS.NATIONALITY = 'GERMAN' ORDER BY DRIVERS.DOB ASC LIMIT 1,SELECT DRIVERREF FROM DRIVERS WHERE NATIONALITY = 'GERMAN' ORDER BY JULIANDAY(DOB) ASC LIMIT 1,
3,971,ERROR,NotImplementedError: {'julianday': 'DOB'},,SELECT DRIVERS.DRIVERREF FROM DRIVERS WHERE DRIVERS.NATIONALITY = 'GERMAN' ORDER BY DRIVERS.DOB ASC LIMIT 1,SELECT DRIVERREF FROM DRIVERS WHERE NATIONALITY = 'GERMAN' ORDER BY JULIANDAY(DOB) ASC LIMIT 1,
1,972,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'DRIVERS__DOB']}",,"SELECT DRIVERS.DRIVERID, DRIVERS.CODE FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID WHERE STRFTIME('%Y', DRIVERS.DOB) = '1971' AND RESULTS.FASTESTLAPTIME = (SELECT MAX(RESULTS.FASTESTLAPTIME) FROM RESULTS)","SELECT T2.DRIVERID, T2.CODE FROM RESULTS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE STRFTIME('%Y', T2.DOB) = '1971' AND T1.FASTESTLAPTIME IS NOT NULL",
2,972,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'DRIVERS__DOB']}",,"SELECT DRIVERS.DRIVERID, DRIVERS.CODE FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID WHERE STRFTIME('%Y', DRIVERS.DOB) = '1971' AND RESULTS.FASTESTLAPTIME = (SELECT MAX(RESULTS.FASTESTLAPTIME) FROM RESULTS)","SELECT T2.DRIVERID, T2.CODE FROM RESULTS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE STRFTIME('%Y', T2.DOB) = '1971' AND T1.FASTESTLAPTIME IS NOT NULL",
3,972,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'DRIVERS__DOB']}",,"SELECT DRIVERS.DRIVERID, DRIVERS.CODE FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID WHERE STRFTIME('%Y', DRIVERS.DOB) = '1971' AND RESULTS.FASTESTLAPTIME = (SELECT MAX(RESULTS.FASTESTLAPTIME) FROM RESULTS)","SELECT T2.DRIVERID, T2.CODE FROM RESULTS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE STRFTIME('%Y', T2.DOB) = '1971' AND T1.FASTESTLAPTIME IS NOT NULL",
1,973,ERROR,NotImplementedError: {'year': 'DRIVERS__DOB'},,SELECT DRIVERS.DRIVERREF FROM DRIVERS INNER JOIN LAPTIMES ON DRIVERS.DRIVERID = LAPTIMES.DRIVERID WHERE DRIVERS.NATIONALITY = 'SPANISH' AND YEAR(DRIVERS.DOB) < 1982 ORDER BY MAX(LAPTIMES.TIME) DESC LIMIT 10,"SELECT T2.DRIVERID FROM PITSTOPS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T2.NATIONALITY = 'SPANISH' AND STRFTIME('%Y', T2.DOB) < '1982' ORDER BY T1.TIME DESC LIMIT 10",
2,973,ERROR,NotImplementedError: {'year': 'DRIVERS__DOB'},,SELECT DRIVERS.DRIVERREF FROM DRIVERS INNER JOIN LAPTIMES ON DRIVERS.DRIVERID = LAPTIMES.DRIVERID WHERE DRIVERS.NATIONALITY = 'SPANISH' AND YEAR(DRIVERS.DOB) < 1982 ORDER BY MAX(LAPTIMES.TIME) DESC LIMIT 10,"SELECT T2.DRIVERID FROM PITSTOPS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T2.NATIONALITY = 'SPANISH' AND STRFTIME('%Y', T2.DOB) < '1982' ORDER BY T1.TIME DESC LIMIT 10",
3,973,ERROR,NotImplementedError: {'year': 'DRIVERS__DOB'},,SELECT DRIVERS.DRIVERREF FROM DRIVERS INNER JOIN LAPTIMES ON DRIVERS.DRIVERID = LAPTIMES.DRIVERID WHERE DRIVERS.NATIONALITY = 'SPANISH' AND YEAR(DRIVERS.DOB) < 1982 ORDER BY MAX(LAPTIMES.TIME) DESC LIMIT 10,"SELECT T2.DRIVERID FROM PITSTOPS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T2.NATIONALITY = 'SPANISH' AND STRFTIME('%Y', T2.DOB) < '1982' ORDER BY T1.TIME DESC LIMIT 10",
1,974,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 0, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 18, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (8, 5, 6, 4, 9, 10, 11, '2147483648', 12, 13, 14, '2147483648', 15, 16, 17, NULL, '2147483648', 7);
-- ----------sql1------------
-- 3
SELECT RACES.YEAR FROM RESULTS INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID ORDER BY RESULTS.FASTESTLAPTIME ASC LIMIT 1;
-- ----------sql2------------
SELECT T2.YEAR FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T1.FASTESTLAPTIME IS NOT NULL;
",0.076228,SELECT RACES.YEAR FROM RESULTS INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID ORDER BY RESULTS.FASTESTLAPTIME ASC LIMIT 1,SELECT T2.YEAR FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T1.FASTESTLAPTIME IS NOT NULL,
1,975,True,,0.0538089999999999,SELECT RACES.YEAR FROM RACES ORDER BY RACES.TIME DESC LIMIT 1,SELECT T2.YEAR FROM LAPTIMES AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID ORDER BY T1.TIME DESC LIMIT 1,
1,976,True,,0.047306,SELECT LAPTIMES.DRIVERID FROM LAPTIMES WHERE LAPTIMES.LAP = 1 ORDER BY LAPTIMES.TIME ASC LIMIT 5,SELECT DRIVERID FROM LAPTIMES WHERE LAP = 1 ORDER BY TIME LIMIT 5,
1,977,ERROR,"NotImplementedError: {'iif': [{'exists': 'TIME'}, 1, 0]}",,SELECT COUNT(*) FROM RESULTS INNER JOIN STATUS ON RESULTS.STATUSID = STATUS.STATUSID WHERE RESULTS.RACEID > 50 AND RESULTS.RACEID < 100 AND RESULTS.TIME IS NOT NULL AND STATUS.STATUSID = 2,"SELECT SUM(IIF(TIME IS NOT NULL, 1, 0)) FROM RESULTS WHERE STATUSID = 2 AND RACEID < 100 AND RACEID > 50",
2,977,ERROR,"NotImplementedError: {'iif': [{'exists': 'TIME'}, 1, 0]}",,SELECT COUNT(*) FROM RESULTS INNER JOIN STATUS ON RESULTS.STATUSID = STATUS.STATUSID WHERE RESULTS.RACEID > 50 AND RESULTS.RACEID < 100 AND RESULTS.TIME IS NOT NULL AND STATUS.STATUSID = 2,"SELECT SUM(IIF(TIME IS NOT NULL, 1, 0)) FROM RESULTS WHERE STATUSID = 2 AND RACEID < 100 AND RACEID > 50",
3,977,ERROR,"NotImplementedError: {'iif': [{'exists': 'TIME'}, 1, 0]}",,SELECT COUNT(*) FROM RESULTS INNER JOIN STATUS ON RESULTS.STATUSID = STATUS.STATUSID WHERE RESULTS.RACEID > 50 AND RESULTS.RACEID < 100 AND RESULTS.TIME IS NOT NULL AND STATUS.STATUSID = 2,"SELECT SUM(IIF(TIME IS NOT NULL, 1, 0)) FROM RESULTS WHERE STATUSID = 2 AND RACEID < 100 AND RACEID > 50",
1,978,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', 'AUSTRIA', 8, 9, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 0, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 0, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (0, 5, 6, 4, 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', '2147483648', 7);
-- ----------sql1------------
-- 2147483648, 9, 8
SELECT CIRCUITS.LOCATION, CIRCUITS.LNG, CIRCUITS.LAT FROM CIRCUITS WHERE CIRCUITS.COUNTRY = 'AUSTRIA';
-- ----------sql2------------
-- 2147483648, 8, 9
SELECT DISTINCT LOCATION, LAT, LNG FROM CIRCUITS WHERE COUNTRY = 'AUSTRIA';
",0.048997,"SELECT CIRCUITS.LOCATION, CIRCUITS.LNG, CIRCUITS.LAT FROM CIRCUITS WHERE CIRCUITS.COUNTRY = 'AUSTRIA'","SELECT DISTINCT LOCATION, LAT, LNG FROM CIRCUITS WHERE COUNTRY = 'AUSTRIA'",
1,979,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 0, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 0, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (8, 5, 6, 4, 9, 10, 11, '2147483648', 12, 13, 14, NULL, 15, 16, 17, '2147483648', '2147483648', 7);
-- ----------sql1------------
SELECT RESULTS.RACEID FROM RESULTS WHERE RESULTS.TIME IS NOT NULL GROUP BY RESULTS.RACEID ORDER BY COUNT(*) DESC LIMIT 1;
-- ----------sql2------------
-- 5
SELECT RACEID FROM RESULTS GROUP BY RACEID ORDER BY COUNT(TIME IS NOT NULL) DESC LIMIT 1;
",0.0672519999999999,SELECT RESULTS.RACEID FROM RESULTS WHERE RESULTS.TIME IS NOT NULL GROUP BY RESULTS.RACEID ORDER BY COUNT(*) DESC LIMIT 1,SELECT RACEID FROM RESULTS GROUP BY RACEID ORDER BY COUNT(TIME IS NOT NULL) DESC LIMIT 1,
1,980,True,,0.08235,"SELECT DRIVERS.DRIVERREF, DRIVERS.NATIONALITY, DRIVERS.DOB FROM QUALIFYING INNER JOIN DRIVERS ON QUALIFYING.DRIVERID = DRIVERS.DRIVERID WHERE QUALIFYING.RACEID = 23 AND QUALIFYING.Q2 IS NOT NULL","SELECT T2.DRIVERREF, T2.NATIONALITY, T2.DOB FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T1.RACEID = 23 AND T1.Q2 IS NOT NULL",
1,981,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute RACES__YEAR`,,"SELECT RACES.YEAR, RACES.NAME, RACES.DATE, RACES.TIME FROM RACES INNER JOIN QUALIFYING ON RACES.RACEID = QUALIFYING.RACEID INNER JOIN DRIVERS ON QUALIFYING.DRIVERID = DRIVERS.DRIVERID WHERE DRIVERS.DRIVERID = ( SELECT DRIVERID FROM ( SELECT DRIVERS.DRIVERID, MIN(RACES.DATE) AS FIRST_RACE FROM RACES INNER JOIN QUALIFYING ON RACES.RACEID = QUALIFYING.RACEID INNER JOIN DRIVERS ON QUALIFYING.DRIVERID = DRIVERS.DRIVERID GROUP BY DRIVERS.DRIVERID ORDER BY DRIVERS.DOB DESC LIMIT 1 ) ) ORDER BY RACES.DATE LIMIT 1","SELECT T3.YEAR, T3.NAME, T3.DATE, T3.TIME FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID INNER JOIN RACES AS T3 ON T1.RACEID = T3.RACEID WHERE T1.DRIVERID = ( SELECT DRIVERID FROM DRIVERS ORDER BY DOB DESC LIMIT 1 ) ORDER BY T3.DATE ASC LIMIT 1",
2,981,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute RACES__YEAR`,,"SELECT RACES.YEAR, RACES.NAME, RACES.DATE, RACES.TIME FROM RACES INNER JOIN QUALIFYING ON RACES.RACEID = QUALIFYING.RACEID INNER JOIN DRIVERS ON QUALIFYING.DRIVERID = DRIVERS.DRIVERID WHERE DRIVERS.DRIVERID = ( SELECT DRIVERID FROM ( SELECT DRIVERS.DRIVERID, MIN(RACES.DATE) AS FIRST_RACE FROM RACES INNER JOIN QUALIFYING ON RACES.RACEID = QUALIFYING.RACEID INNER JOIN DRIVERS ON QUALIFYING.DRIVERID = DRIVERS.DRIVERID GROUP BY DRIVERS.DRIVERID ORDER BY DRIVERS.DOB DESC LIMIT 1 ) ) ORDER BY RACES.DATE LIMIT 1","SELECT T3.YEAR, T3.NAME, T3.DATE, T3.TIME FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID INNER JOIN RACES AS T3 ON T1.RACEID = T3.RACEID WHERE T1.DRIVERID = ( SELECT DRIVERID FROM DRIVERS ORDER BY DOB DESC LIMIT 1 ) ORDER BY T3.DATE ASC LIMIT 1",
3,981,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute RACES__YEAR`,,"SELECT RACES.YEAR, RACES.NAME, RACES.DATE, RACES.TIME FROM RACES INNER JOIN QUALIFYING ON RACES.RACEID = QUALIFYING.RACEID INNER JOIN DRIVERS ON QUALIFYING.DRIVERID = DRIVERS.DRIVERID WHERE DRIVERS.DRIVERID = ( SELECT DRIVERID FROM ( SELECT DRIVERS.DRIVERID, MIN(RACES.DATE) AS FIRST_RACE FROM RACES INNER JOIN QUALIFYING ON RACES.RACEID = QUALIFYING.RACEID INNER JOIN DRIVERS ON QUALIFYING.DRIVERID = DRIVERS.DRIVERID GROUP BY DRIVERS.DRIVERID ORDER BY DRIVERS.DOB DESC LIMIT 1 ) ) ORDER BY RACES.DATE LIMIT 1","SELECT T3.YEAR, T3.NAME, T3.DATE, T3.TIME FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID INNER JOIN RACES AS T3 ON T1.RACEID = T3.RACEID WHERE T1.DRIVERID = ( SELECT DRIVERID FROM DRIVERS ORDER BY DOB DESC LIMIT 1 ) ORDER BY T3.DATE ASC LIMIT 1",
1,982,True,,0.1343909999999999,SELECT COUNT(DISTINCT DRIVERS.DRIVERID) FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN STATUS ON RESULTS.STATUSID = STATUS.STATUSID WHERE DRIVERS.NATIONALITY = 'AMERICAN' AND STATUS.STATUS = 'PUNCTURE';,SELECT COUNT(T1.DRIVERID) FROM DRIVERS AS T1 INNER JOIN RESULTS AS T2 ON T1.DRIVERID = T2.DRIVERID INNER JOIN STATUS AS T3 ON T2.STATUSID = T3.STATUSID WHERE T3.STATUS = 'PUNCTURE' AND T1.NATIONALITY = 'AMERICAN',
1,983,False,,,"SELECT CONSTRUCTORS.NAME, CONSTRUCTORS.URL FROM CONSTRUCTORS INNER JOIN CONSTRUCTORSTANDINGS ON CONSTRUCTORS.CONSTRUCTORID = CONSTRUCTORSTANDINGS.CONSTRUCTORID WHERE CONSTRUCTORS.NATIONALITY = 'ITALIAN' ORDER BY CONSTRUCTORSTANDINGS.POINTS DESC LIMIT 1",SELECT T1.URL FROM CONSTRUCTORS AS T1 INNER JOIN CONSTRUCTORSTANDINGS AS T2 ON T1.CONSTRUCTORID = T2.CONSTRUCTORID WHERE T1.NATIONALITY = 'ITALIAN' ORDER BY T2.POINTS DESC LIMIT 1,
1,984,True,,0.067047,SELECT CONSTRUCTORS.URL FROM CONSTRUCTORS INNER JOIN CONSTRUCTORSTANDINGS ON CONSTRUCTORS.CONSTRUCTORID = CONSTRUCTORSTANDINGS.CONSTRUCTORID GROUP BY CONSTRUCTORS.CONSTRUCTORID ORDER BY SUM(CONSTRUCTORSTANDINGS.WINS) DESC LIMIT 1;,SELECT T1.URL FROM CONSTRUCTORS AS T1 INNER JOIN CONSTRUCTORSTANDINGS AS T2 ON T1.CONSTRUCTORID = T2.CONSTRUCTORID ORDER BY T2.WINS DESC LIMIT 1,
1,985,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (5, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (7, '2147483648', 9, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (4, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (6, 4, 10, 2, 'FRENCH GRAND PRIX', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 6, 5, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 6, 5, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 6, 7, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (6, 7, 3, 11, '2147483648', 12);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (6, 7, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 6, 7, 5, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (8, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (0, 6, 7, 5, 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', '2147483648', 8);
-- ----------sql1------------
-- 2147483648
SELECT DRIVERS.DRIVERREF FROM RACES INNER JOIN LAPTIMES ON RACES.RACEID = LAPTIMES.RACEID INNER JOIN DRIVERS ON LAPTIMES.DRIVERID = DRIVERS.DRIVERID WHERE RACES.NAME = 'FRENCH GRAND PRIX' AND LAPTIMES.LAP = 3 ORDER BY LAPTIMES.TIME DESC LIMIT 1;
-- ----------sql2------------
-- 7
SELECT T1.DRIVERID FROM LAPTIMES AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T2.NAME = 'FRENCH GRAND PRIX' AND T1.LAP = 3 ORDER BY T1.TIME DESC LIMIT 1;
",0.100263,SELECT DRIVERS.DRIVERREF FROM RACES INNER JOIN LAPTIMES ON RACES.RACEID = LAPTIMES.RACEID INNER JOIN DRIVERS ON LAPTIMES.DRIVERID = DRIVERS.DRIVERID WHERE RACES.NAME = 'FRENCH GRAND PRIX' AND LAPTIMES.LAP = 3 ORDER BY LAPTIMES.TIME DESC LIMIT 1,SELECT T1.DRIVERID FROM LAPTIMES AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T2.NAME = 'FRENCH GRAND PRIX' AND T1.LAP = 3 ORDER BY T1.TIME DESC LIMIT 1,
1,986,False,,,"SELECT RACES.NAME, RESULTS.MILLISECONDS FROM RESULTS INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID ORDER BY RESULTS.MILLISECONDS ASC LIMIT 1",SELECT T1.MILLISECONDS FROM LAPTIMES AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T1.LAP = 1 ORDER BY T1.TIME LIMIT 1,
1,987,True,,0.113505,SELECT AVG(RESULTS.FASTESTLAPTIME) FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID WHERE RACES.NAME = 'UNITED STATES GRAND PRIX' AND RACES.YEAR = 2006 AND RESULTS.RANK < 11,SELECT AVG(T1.FASTESTLAPTIME) FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T1.RANK < 11 AND T2.YEAR = 2006 AND T2.NAME = 'UNITED STATES GRAND PRIX',
1,988,ERROR,NotImplementedError: {'year': 'DRIVERS__DOB'},,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME FROM DRIVERS INNER JOIN PITSTOPS ON DRIVERS.DRIVERID = PITSTOPS.DRIVERID WHERE DRIVERS.NATIONALITY = 'GERMAN' AND YEAR(DRIVERS.DOB) > 1980 AND YEAR(DRIVERS.DOB) < 1985 GROUP BY DRIVERS.DRIVERID HAVING AVG(PITSTOPS.DURATION) = (SELECT MIN(AVG_DURATION) FROM (SELECT AVG(PITSTOPS.DURATION) AS AVG_DURATION FROM DRIVERS INNER JOIN PITSTOPS ON DRIVERS.DRIVERID = PITSTOPS.DRIVERID WHERE DRIVERS.NATIONALITY = 'GERMAN' AND YEAR(DRIVERS.DOB) > 1980 AND YEAR(DRIVERS.DOB) < 1985 GROUP BY DRIVERS.DRIVERID)) LIMIT 3","SELECT T2.FORENAME, T2.SURNAME FROM PITSTOPS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T2.NATIONALITY = 'GERMAN' AND STRFTIME('%Y', T2.DOB) BETWEEN '1980' AND '1985' GROUP BY T2.FORENAME, T2.SURNAME ORDER BY AVG(T1.DURATION) LIMIT 3",
2,988,ERROR,NotImplementedError: {'year': 'DRIVERS__DOB'},,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME FROM DRIVERS INNER JOIN PITSTOPS ON DRIVERS.DRIVERID = PITSTOPS.DRIVERID WHERE DRIVERS.NATIONALITY = 'GERMAN' AND YEAR(DRIVERS.DOB) > 1980 AND YEAR(DRIVERS.DOB) < 1985 GROUP BY DRIVERS.DRIVERID HAVING AVG(PITSTOPS.DURATION) = (SELECT MIN(AVG_DURATION) FROM (SELECT AVG(PITSTOPS.DURATION) AS AVG_DURATION FROM DRIVERS INNER JOIN PITSTOPS ON DRIVERS.DRIVERID = PITSTOPS.DRIVERID WHERE DRIVERS.NATIONALITY = 'GERMAN' AND YEAR(DRIVERS.DOB) > 1980 AND YEAR(DRIVERS.DOB) < 1985 GROUP BY DRIVERS.DRIVERID)) LIMIT 3","SELECT T2.FORENAME, T2.SURNAME FROM PITSTOPS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T2.NATIONALITY = 'GERMAN' AND STRFTIME('%Y', T2.DOB) BETWEEN '1980' AND '1985' GROUP BY T2.FORENAME, T2.SURNAME ORDER BY AVG(T1.DURATION) LIMIT 3",
3,988,ERROR,NotImplementedError: {'year': 'DRIVERS__DOB'},,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME FROM DRIVERS INNER JOIN PITSTOPS ON DRIVERS.DRIVERID = PITSTOPS.DRIVERID WHERE DRIVERS.NATIONALITY = 'GERMAN' AND YEAR(DRIVERS.DOB) > 1980 AND YEAR(DRIVERS.DOB) < 1985 GROUP BY DRIVERS.DRIVERID HAVING AVG(PITSTOPS.DURATION) = (SELECT MIN(AVG_DURATION) FROM (SELECT AVG(PITSTOPS.DURATION) AS AVG_DURATION FROM DRIVERS INNER JOIN PITSTOPS ON DRIVERS.DRIVERID = PITSTOPS.DRIVERID WHERE DRIVERS.NATIONALITY = 'GERMAN' AND YEAR(DRIVERS.DOB) > 1980 AND YEAR(DRIVERS.DOB) < 1985 GROUP BY DRIVERS.DRIVERID)) LIMIT 3","SELECT T2.FORENAME, T2.SURNAME FROM PITSTOPS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T2.NATIONALITY = 'GERMAN' AND STRFTIME('%Y', T2.DOB) BETWEEN '1980' AND '1985' GROUP BY T2.FORENAME, T2.SURNAME ORDER BY AVG(T1.DURATION) LIMIT 3",
1,989,ERROR,"NotImplementedError: {'like': ['T1__TIME', {'literal': '_:%:__.___'}]}",,"SELECT DRIVERS.SURNAME, DRIVERS.FORENAME, RESULTS.TIME FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE RACES.NAME = 'CANADIAN GRAND PRIX' AND RACES.YEAR = 2008 AND RESULTS.POSITIONORDER = 1",SELECT T1.TIME FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T2.NAME = 'CANADIAN GRAND PRIX' AND T2.YEAR = 2008 AND T1.TIME LIKE '_:%:__.___',
2,989,ERROR,"NotImplementedError: {'like': ['T1__TIME', {'literal': '_:%:__.___'}]}",,"SELECT DRIVERS.SURNAME, DRIVERS.FORENAME, RESULTS.TIME FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE RACES.NAME = 'CANADIAN GRAND PRIX' AND RACES.YEAR = 2008 AND RESULTS.POSITIONORDER = 1",SELECT T1.TIME FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T2.NAME = 'CANADIAN GRAND PRIX' AND T2.YEAR = 2008 AND T1.TIME LIKE '_:%:__.___',
3,989,ERROR,"NotImplementedError: {'like': ['T1__TIME', {'literal': '_:%:__.___'}]}",,"SELECT DRIVERS.SURNAME, DRIVERS.FORENAME, RESULTS.TIME FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE RACES.NAME = 'CANADIAN GRAND PRIX' AND RACES.YEAR = 2008 AND RESULTS.POSITIONORDER = 1",SELECT T1.TIME FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T2.NAME = 'CANADIAN GRAND PRIX' AND T2.YEAR = 2008 AND T1.TIME LIKE '_:%:__.___',
1,990,ERROR,"NotImplementedError: {'like': ['T1__TIME', {'literal': '_:%:__.___'}]}",,"SELECT CONSTRUCTORS.CONSTRUCTORREF, CONSTRUCTORS.URL FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID INNER JOIN CONSTRUCTORS ON RESULTS.CONSTRUCTORID = CONSTRUCTORS.CONSTRUCTORID WHERE RACES.YEAR = 2009 AND RACES.NAME = 'SINGAPORE GRAND PRIX' ORDER BY RESULTS.TIME LIMIT 1","SELECT T3.CONSTRUCTORREF, T3.URL FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN CONSTRUCTORS AS T3 ON T1.CONSTRUCTORID = T3.CONSTRUCTORID WHERE T2.NAME = 'SINGAPORE GRAND PRIX' AND T2.YEAR = 2009 AND T1.TIME LIKE '_:%:__.___'",
2,990,ERROR,"NotImplementedError: {'like': ['T1__TIME', {'literal': '_:%:__.___'}]}",,"SELECT CONSTRUCTORS.CONSTRUCTORREF, CONSTRUCTORS.URL FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID INNER JOIN CONSTRUCTORS ON RESULTS.CONSTRUCTORID = CONSTRUCTORS.CONSTRUCTORID WHERE RACES.YEAR = 2009 AND RACES.NAME = 'SINGAPORE GRAND PRIX' ORDER BY RESULTS.TIME LIMIT 1","SELECT T3.CONSTRUCTORREF, T3.URL FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN CONSTRUCTORS AS T3 ON T1.CONSTRUCTORID = T3.CONSTRUCTORID WHERE T2.NAME = 'SINGAPORE GRAND PRIX' AND T2.YEAR = 2009 AND T1.TIME LIKE '_:%:__.___'",
3,990,ERROR,"NotImplementedError: {'like': ['T1__TIME', {'literal': '_:%:__.___'}]}",,"SELECT CONSTRUCTORS.CONSTRUCTORREF, CONSTRUCTORS.URL FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID INNER JOIN CONSTRUCTORS ON RESULTS.CONSTRUCTORID = CONSTRUCTORS.CONSTRUCTORID WHERE RACES.YEAR = 2009 AND RACES.NAME = 'SINGAPORE GRAND PRIX' ORDER BY RESULTS.TIME LIMIT 1","SELECT T3.CONSTRUCTORREF, T3.URL FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN CONSTRUCTORS AS T3 ON T1.CONSTRUCTORID = T3.CONSTRUCTORID WHERE T2.NAME = 'SINGAPORE GRAND PRIX' AND T2.YEAR = 2009 AND T1.TIME LIKE '_:%:__.___'",
1,991,ERROR,NotImplementedError: {'year': 'DRIVERS__DOB'},,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME, DRIVERS.DOB FROM DRIVERS WHERE DRIVERS.NATIONALITY = 'AUSTRIAN' AND YEAR(DRIVERS.DOB) BETWEEN 1981 AND 1991","SELECT FORENAME, SURNAME, DOB FROM DRIVERS WHERE NATIONALITY = 'AUSTRIAN' AND STRFTIME('%Y', DOB) BETWEEN '1981' AND '1991'",
2,991,ERROR,NotImplementedError: {'year': 'DRIVERS__DOB'},,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME, DRIVERS.DOB FROM DRIVERS WHERE DRIVERS.NATIONALITY = 'AUSTRIAN' AND YEAR(DRIVERS.DOB) BETWEEN 1981 AND 1991","SELECT FORENAME, SURNAME, DOB FROM DRIVERS WHERE NATIONALITY = 'AUSTRIAN' AND STRFTIME('%Y', DOB) BETWEEN '1981' AND '1991'",
3,991,ERROR,NotImplementedError: {'year': 'DRIVERS__DOB'},,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME, DRIVERS.DOB FROM DRIVERS WHERE DRIVERS.NATIONALITY = 'AUSTRIAN' AND YEAR(DRIVERS.DOB) BETWEEN 1981 AND 1991","SELECT FORENAME, SURNAME, DOB FROM DRIVERS WHERE NATIONALITY = 'AUSTRIAN' AND STRFTIME('%Y', DOB) BETWEEN '1981' AND '1991'",
1,992,ERROR,NotImplementedError: {'year': 'DRIVERS__DOB'},,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME, DRIVERS.URL, DRIVERS.DOB FROM DRIVERS WHERE DRIVERS.NATIONALITY = 'GERMAN' AND YEAR(DRIVERS.DOB) BETWEEN 1971 AND 1985 ORDER BY DRIVERS.DOB DESC","SELECT FORENAME, SURNAME, URL, DOB FROM DRIVERS WHERE NATIONALITY = 'GERMAN' AND STRFTIME('%Y', DOB) BETWEEN '1971' AND '1985' ORDER BY DOB DESC",
2,992,ERROR,NotImplementedError: {'year': 'DRIVERS__DOB'},,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME, DRIVERS.URL, DRIVERS.DOB FROM DRIVERS WHERE DRIVERS.NATIONALITY = 'GERMAN' AND YEAR(DRIVERS.DOB) BETWEEN 1971 AND 1985 ORDER BY DRIVERS.DOB DESC","SELECT FORENAME, SURNAME, URL, DOB FROM DRIVERS WHERE NATIONALITY = 'GERMAN' AND STRFTIME('%Y', DOB) BETWEEN '1971' AND '1985' ORDER BY DOB DESC",
3,992,ERROR,NotImplementedError: {'year': 'DRIVERS__DOB'},,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME, DRIVERS.URL, DRIVERS.DOB FROM DRIVERS WHERE DRIVERS.NATIONALITY = 'GERMAN' AND YEAR(DRIVERS.DOB) BETWEEN 1971 AND 1985 ORDER BY DRIVERS.DOB DESC","SELECT FORENAME, SURNAME, URL, DOB FROM DRIVERS WHERE NATIONALITY = 'GERMAN' AND STRFTIME('%Y', DOB) BETWEEN '1971' AND '1985' ORDER BY DOB DESC",
1,993,False,,,"SELECT CIRCUITS.LOCATION, CIRCUITS.COUNTRY, CIRCUITS.LAT, CIRCUITS.LNG FROM CIRCUITS WHERE CIRCUITS.NAME = 'HUNGARORING'","SELECT COUNTRY, LAT, LNG FROM CIRCUITS WHERE NAME = 'HUNGARORING'",
1,994,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (3, '2147483648', '2147483648', '2147483649', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (5, '2147483648', 0, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (1980, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (4, 1980, 19, 2, 'MONACO GRAND PRIX', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (18, 4, 3, 7, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 4, 3, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 4, 5, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (4, 5, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (4, 5, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 4, 5, 3, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (6, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (8, 4, 5, 3, 9, 10, 11, '2147483648', 12, 13, 14, '2147483648', 15, 16, 17, '2147483648', '2147483648', 6);
-- ----------sql1------------
-- 2147483648, 2147483649, 13
SELECT CONSTRUCTORS.NAME, CONSTRUCTORS.NATIONALITY, SUM(RESULTS.POINTS) AS TOTAL_POINTS FROM RESULTS INNER JOIN CONSTRUCTORS ON RESULTS.CONSTRUCTORID = CONSTRUCTORS.CONSTRUCTORID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE RACES.NAME = 'MONACO GRAND PRIX' AND RACES.YEAR BETWEEN 1980 AND 2010 GROUP BY CONSTRUCTORS.CONSTRUCTORID ORDER BY TOTAL_POINTS DESC LIMIT 1;
-- ----------sql2------------
-- 7, 2147483648, 2147483649
SELECT SUM(T1.POINTS), T2.NAME, T2.NATIONALITY FROM CONSTRUCTORRESULTS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T1.CONSTRUCTORID = T2.CONSTRUCTORID INNER JOIN RACES AS T3 ON T3.RACEID = T1.RACEID WHERE T3.NAME = 'MONACO GRAND PRIX' AND T3.YEAR BETWEEN 1980 AND 2010 GROUP BY T2.NAME ORDER BY SUM(T1.POINTS) DESC LIMIT 1;
",0.235576,"SELECT CONSTRUCTORS.NAME, CONSTRUCTORS.NATIONALITY, SUM(RESULTS.POINTS) AS TOTAL_POINTS FROM RESULTS INNER JOIN CONSTRUCTORS ON RESULTS.CONSTRUCTORID = CONSTRUCTORS.CONSTRUCTORID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE RACES.NAME = 'MONACO GRAND PRIX' AND RACES.YEAR BETWEEN 1980 AND 2010 GROUP BY CONSTRUCTORS.CONSTRUCTORID ORDER BY TOTAL_POINTS DESC LIMIT 1","SELECT SUM(T1.POINTS), T2.NAME, T2.NATIONALITY FROM CONSTRUCTORRESULTS AS T1 INNER JOIN CONSTRUCTORS AS T2 ON T1.CONSTRUCTORID = T2.CONSTRUCTORID INNER JOIN RACES AS T3 ON T3.RACEID = T1.RACEID WHERE T3.NAME = 'MONACO GRAND PRIX' AND T3.YEAR BETWEEN 1980 AND 2010 GROUP BY T2.NAME ORDER BY SUM(T1.POINTS) DESC LIMIT 1",
1,995,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 13, '2147483648', 'LEWIS', 'HAMILTON', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 8, 2, 'TURKISH GRAND PRIX', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (23, 5, 6, 0, 24, '2147483648', 25);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (14, 5, 6, 4, 15, 16, 17, '2147483648', 18, -1, 19, '2147483648', 20, 21, 22, '2147483648', '2147483648', 7);
-- ----------sql1------------
-- -1
SELECT AVG(RESULTS.POINTS) FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS' AND RACES.NAME = 'TURKISH GRAND PRIX';
-- ----------sql2------------
-- 0
SELECT AVG(T2.POINTS) FROM DRIVERS AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T1.DRIVERID = T2.DRIVERID INNER JOIN RACES AS T3 ON T3.RACEID = T2.RACEID WHERE T1.FORENAME = 'LEWIS' AND T1.SURNAME = 'HAMILTON' AND T3.NAME = 'TURKISH GRAND PRIX';
",0.145622,SELECT AVG(RESULTS.POINTS) FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS' AND RACES.NAME = 'TURKISH GRAND PRIX',SELECT AVG(T2.POINTS) FROM DRIVERS AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T1.DRIVERID = T2.DRIVERID INNER JOIN RACES AS T3 ON T3.RACEID = T2.RACEID WHERE T1.FORENAME = 'LEWIS' AND T1.SURNAME = 'HAMILTON' AND T3.NAME = 'TURKISH GRAND PRIX',
1,996,ERROR,NotImplementedError: {'year': 'DATE'},,SELECT AVG(YEARLY_RACE_COUNT) FROM ( SELECT COUNT(*) AS YEARLY_RACE_COUNT FROM RACES WHERE DATE BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY YEAR(DATE) ) AS SUBQUERY,SELECT CAST(SUM(CASE WHEN YEAR BETWEEN 2000 AND 2010 THEN 1 ELSE 0 END) AS REAL) / 10 FROM RACES WHERE DATE BETWEEN '2000-01-01' AND '2010-12-31',
2,996,ERROR,NotImplementedError: {'year': 'DATE'},,SELECT AVG(YEARLY_RACE_COUNT) FROM ( SELECT COUNT(*) AS YEARLY_RACE_COUNT FROM RACES WHERE DATE BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY YEAR(DATE) ) AS SUBQUERY,SELECT CAST(SUM(CASE WHEN YEAR BETWEEN 2000 AND 2010 THEN 1 ELSE 0 END) AS REAL) / 10 FROM RACES WHERE DATE BETWEEN '2000-01-01' AND '2010-12-31',
3,996,ERROR,NotImplementedError: {'year': 'DATE'},,SELECT AVG(YEARLY_RACE_COUNT) FROM ( SELECT COUNT(*) AS YEARLY_RACE_COUNT FROM RACES WHERE DATE BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY YEAR(DATE) ) AS SUBQUERY,SELECT CAST(SUM(CASE WHEN YEAR BETWEEN 2000 AND 2010 THEN 1 ELSE 0 END) AS REAL) / 10 FROM RACES WHERE DATE BETWEEN '2000-01-01' AND '2010-12-31',
1,997,True,,0.052901,SELECT DRIVERS.NATIONALITY FROM DRIVERS GROUP BY DRIVERS.NATIONALITY ORDER BY COUNT(*) DESC LIMIT 1,SELECT NATIONALITY FROM DRIVERS GROUP BY NATIONALITY ORDER BY COUNT(DRIVERID) DESC LIMIT 1,
1,998,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 0, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 0, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 91, 8, '2147483648', NULL);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (0, 5, 6, 4, 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', '2147483648', 7);
-- ----------sql1------------
SELECT WINS FROM DRIVERSTANDINGS WHERE POSITION = 91;
-- ----------sql2------------
-- NULL
SELECT SUM(CASE WHEN POINTS = 91 THEN WINS ELSE 0 END) FROM DRIVERSTANDINGS;
",0.055156,SELECT WINS FROM DRIVERSTANDINGS WHERE POSITION = 91,SELECT SUM(CASE WHEN POINTS = 91 THEN WINS ELSE 0 END) FROM DRIVERSTANDINGS,
1,999,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 0, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 8, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (9, 5, 6, 4, 10, 11, 12, '2147483648', 13, 14, 15, '2147483648', 16, 17, 18, NULL, '2147483648', 7);
-- ----------sql1------------
-- 2147483648
SELECT RACES.NAME FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID ORDER BY RESULTS.FASTESTLAPSPEED DESC LIMIT 1;
-- ----------sql2------------
SELECT T1.NAME FROM RACES AS T1 INNER JOIN RESULTS AS T2 ON T1.RACEID = T2.RACEID WHERE T2.FASTESTLAPTIME IS NOT NULL ORDER BY T2.FASTESTLAPTIME ASC LIMIT 1;
",0.0846499999999999,SELECT RACES.NAME FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID ORDER BY RESULTS.FASTESTLAPSPEED DESC LIMIT 1,SELECT T1.NAME FROM RACES AS T1 INNER JOIN RESULTS AS T2 ON T1.RACEID = T2.RACEID WHERE T2.FASTESTLAPTIME IS NOT NULL ORDER BY T2.FASTESTLAPTIME ASC LIMIT 1,
1,1000,False,,,"SELECT CIRCUITS.LOCATION, CIRCUITS.COUNTRY FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID ORDER BY RACES.DATE DESC LIMIT 1",SELECT T1.LOCATION FROM CIRCUITS AS T1 INNER JOIN RACES AS T2 ON T1.CIRCUITID = T2.CIRCUITID ORDER BY T2.DATE DESC LIMIT 1,
1,1001,ERROR,"NotImplementedError: {'substr': ['Q3', 1, {'sub': [{'instr': ['Q3', {'literal': ':'}]}, 1]}]}",,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME FROM QUALIFYING INNER JOIN DRIVERS ON QUALIFYING.DRIVERID = DRIVERS.DRIVERID INNER JOIN RACES ON QUALIFYING.RACEID = RACES.RACEID INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CIRCUITS.NAME = 'MARINA BAY STREET CIRCUIT' AND RACES.YEAR = 2008 ORDER BY QUALIFYING.Q3 LIMIT 1","SELECT T2.FORENAME, T2.SURNAME FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID INNER JOIN RACES AS T3 ON T1.RACEID = T3.RACEID WHERE Q3 IS NOT NULL AND T3.YEAR = 2008 AND T3.CIRCUITID IN ( SELECT CIRCUITID FROM CIRCUITS WHERE NAME = 'MARINA BAY STREET CIRCUIT' ) ORDER BY CAST(SUBSTR(Q3, 1, INSTR(Q3, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(Q3, INSTR(Q3, ':') + 1, INSTR(Q3, '.') - INSTR(Q3, ':') - 1) AS REAL) + CAST(SUBSTR(Q3, INSTR(Q3, '.') + 1) AS REAL) / 1000 ASC LIMIT 1",
2,1001,ERROR,"NotImplementedError: {'substr': ['Q3', 1, {'sub': [{'instr': ['Q3', {'literal': ':'}]}, 1]}]}",,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME FROM QUALIFYING INNER JOIN DRIVERS ON QUALIFYING.DRIVERID = DRIVERS.DRIVERID INNER JOIN RACES ON QUALIFYING.RACEID = RACES.RACEID INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CIRCUITS.NAME = 'MARINA BAY STREET CIRCUIT' AND RACES.YEAR = 2008 ORDER BY QUALIFYING.Q3 LIMIT 1","SELECT T2.FORENAME, T2.SURNAME FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID INNER JOIN RACES AS T3 ON T1.RACEID = T3.RACEID WHERE Q3 IS NOT NULL AND T3.YEAR = 2008 AND T3.CIRCUITID IN ( SELECT CIRCUITID FROM CIRCUITS WHERE NAME = 'MARINA BAY STREET CIRCUIT' ) ORDER BY CAST(SUBSTR(Q3, 1, INSTR(Q3, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(Q3, INSTR(Q3, ':') + 1, INSTR(Q3, '.') - INSTR(Q3, ':') - 1) AS REAL) + CAST(SUBSTR(Q3, INSTR(Q3, '.') + 1) AS REAL) / 1000 ASC LIMIT 1",
3,1001,ERROR,"NotImplementedError: {'substr': ['Q3', 1, {'sub': [{'instr': ['Q3', {'literal': ':'}]}, 1]}]}",,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME FROM QUALIFYING INNER JOIN DRIVERS ON QUALIFYING.DRIVERID = DRIVERS.DRIVERID INNER JOIN RACES ON QUALIFYING.RACEID = RACES.RACEID INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE CIRCUITS.NAME = 'MARINA BAY STREET CIRCUIT' AND RACES.YEAR = 2008 ORDER BY QUALIFYING.Q3 LIMIT 1","SELECT T2.FORENAME, T2.SURNAME FROM QUALIFYING AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID INNER JOIN RACES AS T3 ON T1.RACEID = T3.RACEID WHERE Q3 IS NOT NULL AND T3.YEAR = 2008 AND T3.CIRCUITID IN ( SELECT CIRCUITID FROM CIRCUITS WHERE NAME = 'MARINA BAY STREET CIRCUIT' ) ORDER BY CAST(SUBSTR(Q3, 1, INSTR(Q3, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(Q3, INSTR(Q3, ':') + 1, INSTR(Q3, '.') - INSTR(Q3, ':') - 1) AS REAL) + CAST(SUBSTR(Q3, INSTR(Q3, '.') + 1) AS REAL) / 1000 ASC LIMIT 1",
1,1002,ERROR,NotImplementedError: {'julianday': 'T1__DOB'},,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME, DRIVERS.NATIONALITY, RACES.NAME FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID ORDER BY DRIVERS.DOB DESC LIMIT 1","SELECT T1.FORENAME, T1.SURNAME, T1.NATIONALITY, T3.NAME FROM DRIVERS AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T1.DRIVERID = T2.DRIVERID INNER JOIN RACES AS T3 ON T2.RACEID = T3.RACEID ORDER BY JULIANDAY(T1.DOB) DESC LIMIT 1",
2,1002,ERROR,NotImplementedError: {'julianday': 'T1__DOB'},,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME, DRIVERS.NATIONALITY, RACES.NAME FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID ORDER BY DRIVERS.DOB DESC LIMIT 1","SELECT T1.FORENAME, T1.SURNAME, T1.NATIONALITY, T3.NAME FROM DRIVERS AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T1.DRIVERID = T2.DRIVERID INNER JOIN RACES AS T3 ON T2.RACEID = T3.RACEID ORDER BY JULIANDAY(T1.DOB) DESC LIMIT 1",
3,1002,ERROR,NotImplementedError: {'julianday': 'T1__DOB'},,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME, DRIVERS.NATIONALITY, RACES.NAME FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID ORDER BY DRIVERS.DOB DESC LIMIT 1","SELECT T1.FORENAME, T1.SURNAME, T1.NATIONALITY, T3.NAME FROM DRIVERS AS T1 INNER JOIN DRIVERSTANDINGS AS T2 ON T1.DRIVERID = T2.DRIVERID INNER JOIN RACES AS T3 ON T2.RACEID = T3.RACEID ORDER BY JULIANDAY(T1.DOB) DESC LIMIT 1",
1,1003,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute DRIVERS__DRIVERID`,,SELECT COUNT(*) AS COUNT FROM ( SELECT DRIVERS.DRIVERID FROM RESULTS INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID INNER JOIN STATUS ON RESULTS.STATUSID = STATUS.STATUSID WHERE RACES.NAME = 'CANADIAN GRAND PRIX' AND STATUS.STATUSID = 3 GROUP BY DRIVERS.DRIVERID ORDER BY COUNT(*) DESC LIMIT 1 ) AS DF,SELECT COUNT(T1.DRIVERID) FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN STATUS AS T3 ON T1.STATUSID = T3.STATUSID WHERE T3.STATUSID = 3 AND T2.NAME = 'CANADIAN GRAND PRIX' GROUP BY T1.DRIVERID ORDER BY COUNT(T1.DRIVERID) DESC LIMIT 1,
2,1003,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute DRIVERS__DRIVERID`,,SELECT COUNT(*) AS COUNT FROM ( SELECT DRIVERS.DRIVERID FROM RESULTS INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID INNER JOIN STATUS ON RESULTS.STATUSID = STATUS.STATUSID WHERE RACES.NAME = 'CANADIAN GRAND PRIX' AND STATUS.STATUSID = 3 GROUP BY DRIVERS.DRIVERID ORDER BY COUNT(*) DESC LIMIT 1 ) AS DF,SELECT COUNT(T1.DRIVERID) FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN STATUS AS T3 ON T1.STATUSID = T3.STATUSID WHERE T3.STATUSID = 3 AND T2.NAME = 'CANADIAN GRAND PRIX' GROUP BY T1.DRIVERID ORDER BY COUNT(T1.DRIVERID) DESC LIMIT 1,
3,1003,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute DRIVERS__DRIVERID`,,SELECT COUNT(*) AS COUNT FROM ( SELECT DRIVERS.DRIVERID FROM RESULTS INNER JOIN RACES ON RESULTS.RACEID = RACES.RACEID INNER JOIN STATUS ON RESULTS.STATUSID = STATUS.STATUSID WHERE RACES.NAME = 'CANADIAN GRAND PRIX' AND STATUS.STATUSID = 3 GROUP BY DRIVERS.DRIVERID ORDER BY COUNT(*) DESC LIMIT 1 ) AS DF,SELECT COUNT(T1.DRIVERID) FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN STATUS AS T3 ON T1.STATUSID = T3.STATUSID WHERE T3.STATUSID = 3 AND T2.NAME = 'CANADIAN GRAND PRIX' GROUP BY T1.DRIVERID ORDER BY COUNT(T1.DRIVERID) DESC LIMIT 1,
1,1004,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute DRIVERS__FORENAME`,,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME, COUNT(*) FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID WHERE DRIVERS.DRIVERID = ( SELECT DRIVERID FROM DRIVERS ORDER BY DOB ASC LIMIT 1 ) GROUP BY DRIVERS.FORENAME, DRIVERS.SURNAME","SELECT SUM(T1.WINS),T2.FORENAME, T2.SURNAME FROM DRIVERSTANDINGS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID ORDER BY T2.DOB ASC LIMIT 1",
2,1004,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute DRIVERS__FORENAME`,,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME, COUNT(*) FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID WHERE DRIVERS.DRIVERID = ( SELECT DRIVERID FROM DRIVERS ORDER BY DOB ASC LIMIT 1 ) GROUP BY DRIVERS.FORENAME, DRIVERS.SURNAME","SELECT SUM(T1.WINS),T2.FORENAME, T2.SURNAME FROM DRIVERSTANDINGS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID ORDER BY T2.DOB ASC LIMIT 1",
3,1004,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute DRIVERS__FORENAME`,,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME, COUNT(*) FROM DRIVERS INNER JOIN RESULTS ON DRIVERS.DRIVERID = RESULTS.DRIVERID WHERE DRIVERS.DRIVERID = ( SELECT DRIVERID FROM DRIVERS ORDER BY DOB ASC LIMIT 1 ) GROUP BY DRIVERS.FORENAME, DRIVERS.SURNAME","SELECT SUM(T1.WINS),T2.FORENAME, T2.SURNAME FROM DRIVERSTANDINGS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID ORDER BY T2.DOB ASC LIMIT 1",
1,1005,True,,0.043079,SELECT PITSTOPS.DURATION FROM PITSTOPS ORDER BY PITSTOPS.DURATION DESC LIMIT 1,SELECT DURATION FROM PITSTOPS ORDER BY DURATION DESC LIMIT 1,
1,1006,ERROR,"NotImplementedError: {'instr': ['TIME', {'literal': ':'}]}",,SELECT LAPTIMES.TIME FROM LAPTIMES ORDER BY LAPTIMES.TIME ASC LIMIT 1,"SELECT TIME FROM LAPTIMES ORDER BY (CASE WHEN INSTR(TIME, ':') <> INSTR(SUBSTR(TIME, INSTR(TIME, ':') + 1), ':') + INSTR(TIME, ':') THEN CAST(SUBSTR(TIME, 1, INSTR(TIME, ':') - 1) AS REAL) * 3600 ELSE 0 END) + (CAST(SUBSTR(TIME, INSTR(TIME, ':') - 2 * (INSTR(TIME, ':') = INSTR(SUBSTR(TIME, INSTR(TIME, ':') + 1), ':') + INSTR(TIME, ':')), INSTR(TIME, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(TIME, INSTR(TIME, ':') + 1, INSTR(TIME, '.') - INSTR(TIME, ':') - 1) AS REAL)) + (CAST(SUBSTR(TIME, INSTR(TIME, '.') + 1) AS REAL) / 1000) ASC LIMIT 1",
2,1006,ERROR,"NotImplementedError: {'instr': ['TIME', {'literal': ':'}]}",,SELECT LAPTIMES.TIME FROM LAPTIMES ORDER BY LAPTIMES.TIME ASC LIMIT 1,"SELECT TIME FROM LAPTIMES ORDER BY (CASE WHEN INSTR(TIME, ':') <> INSTR(SUBSTR(TIME, INSTR(TIME, ':') + 1), ':') + INSTR(TIME, ':') THEN CAST(SUBSTR(TIME, 1, INSTR(TIME, ':') - 1) AS REAL) * 3600 ELSE 0 END) + (CAST(SUBSTR(TIME, INSTR(TIME, ':') - 2 * (INSTR(TIME, ':') = INSTR(SUBSTR(TIME, INSTR(TIME, ':') + 1), ':') + INSTR(TIME, ':')), INSTR(TIME, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(TIME, INSTR(TIME, ':') + 1, INSTR(TIME, '.') - INSTR(TIME, ':') - 1) AS REAL)) + (CAST(SUBSTR(TIME, INSTR(TIME, '.') + 1) AS REAL) / 1000) ASC LIMIT 1",
3,1006,ERROR,"NotImplementedError: {'instr': ['TIME', {'literal': ':'}]}",,SELECT LAPTIMES.TIME FROM LAPTIMES ORDER BY LAPTIMES.TIME ASC LIMIT 1,"SELECT TIME FROM LAPTIMES ORDER BY (CASE WHEN INSTR(TIME, ':') <> INSTR(SUBSTR(TIME, INSTR(TIME, ':') + 1), ':') + INSTR(TIME, ':') THEN CAST(SUBSTR(TIME, 1, INSTR(TIME, ':') - 1) AS REAL) * 3600 ELSE 0 END) + (CAST(SUBSTR(TIME, INSTR(TIME, ':') - 2 * (INSTR(TIME, ':') = INSTR(SUBSTR(TIME, INSTR(TIME, ':') + 1), ':') + INSTR(TIME, ':')), INSTR(TIME, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(TIME, INSTR(TIME, ':') + 1, INSTR(TIME, '.') - INSTR(TIME, ':') - 1) AS REAL)) + (CAST(SUBSTR(TIME, INSTR(TIME, '.') + 1) AS REAL) / 1000) ASC LIMIT 1",
1,1007,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 8, '2147483648', 'LEWIS', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 0, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 9, 10, '2147483648', '2147483648', 11);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (0, 5, 6, 4, 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', '2147483648', 7);
-- ----------sql1------------
-- NULL
SELECT MAX(PITSTOPS.DURATION) FROM DRIVERS INNER JOIN PITSTOPS ON DRIVERS.DRIVERID = PITSTOPS.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS';
-- ----------sql2------------
SELECT T1.DURATION FROM PITSTOPS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T2.FORENAME = 'LEWIS' AND T2.SURNAME = 'HAMILTON' ORDER BY T1.DURATION DESC LIMIT 1;
",0.092132,SELECT MAX(PITSTOPS.DURATION) FROM DRIVERS INNER JOIN PITSTOPS ON DRIVERS.DRIVERID = PITSTOPS.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS';,SELECT T1.DURATION FROM PITSTOPS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T2.FORENAME = 'LEWIS' AND T2.SURNAME = 'HAMILTON' ORDER BY T1.DURATION DESC LIMIT 1,
1,1008,True,,0.134904,SELECT PITSTOPS.LAP FROM DRIVERS INNER JOIN PITSTOPS ON DRIVERS.DRIVERID = PITSTOPS.DRIVERID INNER JOIN RACES ON PITSTOPS.RACEID = RACES.RACEID WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS' AND RACES.NAME = 'AUSTRALIAN GRAND PRIX' AND RACES.YEAR = 2011,SELECT T1.LAP FROM PITSTOPS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID INNER JOIN RACES AS T3 ON T1.RACEID = T3.RACEID WHERE T2.FORENAME = 'LEWIS' AND T2.SURNAME = 'HAMILTON' AND T3.YEAR = 2011 AND T3.NAME = 'AUSTRALIAN GRAND PRIX',
1,1009,False,,,"SELECT DRIVERS.DRIVERID, PITSTOPS.DURATION FROM RACES INNER JOIN PITSTOPS ON RACES.RACEID = PITSTOPS.RACEID INNER JOIN DRIVERS ON PITSTOPS.DRIVERID = DRIVERS.DRIVERID WHERE RACES.NAME = 'AUSTRALIAN GRAND PRIX' AND RACES.YEAR = 2011",SELECT T1.DURATION FROM PITSTOPS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID WHERE T2.YEAR = 2011 AND T2.NAME = 'AUSTRALIAN GRAND PRIX',
1,1010,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 8, '2147483648', '2212690509355339574', 'HAMILTON', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 0, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 9, 10, '2147483648', 11);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (0, 5, 6, 4, 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', '2147483648', 7);
-- ----------sql1------------
-- NULL
SELECT MIN(LAPTIMES.TIME) FROM DRIVERS INNER JOIN LAPTIMES ON DRIVERS.DRIVERID = LAPTIMES.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS';
-- ----------sql2------------
SELECT T1.TIME FROM LAPTIMES AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T2.FORENAME = 'LEWIS' AND T2.SURNAME = 'HAMILTON';
",0.093001,SELECT MIN(LAPTIMES.TIME) FROM DRIVERS INNER JOIN LAPTIMES ON DRIVERS.DRIVERID = LAPTIMES.DRIVERID WHERE DRIVERS.SURNAME = 'HAMILTON' AND DRIVERS.FORENAME = 'LEWIS',SELECT T1.TIME FROM LAPTIMES AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T2.FORENAME = 'LEWIS' AND T2.SURNAME = 'HAMILTON',
1,1011,ERROR,"NotImplementedError: {'substr': ['TIME', 1, {'sub': [{'instr': ['TIME', {'literal': ':'}]}, 1]}]}",,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME FROM LAPTIMES INNER JOIN DRIVERS ON LAPTIMES.DRIVERID = DRIVERS.DRIVERID ORDER BY LAPTIMES.TIME ASC LIMIT 20","WITH LAP_TIMES_IN_SECONDS AS (SELECT DRIVERID, (CASE WHEN SUBSTR(TIME, 1, INSTR(TIME, ':') - 1) <> '' THEN CAST(SUBSTR(TIME, 1, INSTR(TIME, ':') - 1) AS REAL) * 60 ELSE 0 END + CASE WHEN SUBSTR(TIME, INSTR(TIME, ':') + 1, INSTR(TIME, '.') - INSTR(TIME, ':') - 1) <> '' THEN CAST(SUBSTR(TIME, INSTR(TIME, ':') + 1, INSTR(TIME, '.') - INSTR(TIME, ':') - 1) AS REAL) ELSE 0 END + CASE WHEN SUBSTR(TIME, INSTR(TIME, '.') + 1) <> '' THEN CAST(SUBSTR(TIME, INSTR(TIME, '.') + 1) AS REAL) / 1000 ELSE 0 END) AS TIME_IN_SECONDS FROM LAPTIMES) SELECT T2.FORENAME, T2.SURNAME, T1.DRIVERID FROM (SELECT DRIVERID, MIN(TIME_IN_SECONDS) AS MIN_TIME_IN_SECONDS FROM LAP_TIMES_IN_SECONDS GROUP BY DRIVERID) AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID ORDER BY T1.MIN_TIME_IN_SECONDS ASC LIMIT 20",
2,1011,ERROR,"NotImplementedError: {'substr': ['TIME', 1, {'sub': [{'instr': ['TIME', {'literal': ':'}]}, 1]}]}",,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME FROM LAPTIMES INNER JOIN DRIVERS ON LAPTIMES.DRIVERID = DRIVERS.DRIVERID ORDER BY LAPTIMES.TIME ASC LIMIT 20","WITH LAP_TIMES_IN_SECONDS AS (SELECT DRIVERID, (CASE WHEN SUBSTR(TIME, 1, INSTR(TIME, ':') - 1) <> '' THEN CAST(SUBSTR(TIME, 1, INSTR(TIME, ':') - 1) AS REAL) * 60 ELSE 0 END + CASE WHEN SUBSTR(TIME, INSTR(TIME, ':') + 1, INSTR(TIME, '.') - INSTR(TIME, ':') - 1) <> '' THEN CAST(SUBSTR(TIME, INSTR(TIME, ':') + 1, INSTR(TIME, '.') - INSTR(TIME, ':') - 1) AS REAL) ELSE 0 END + CASE WHEN SUBSTR(TIME, INSTR(TIME, '.') + 1) <> '' THEN CAST(SUBSTR(TIME, INSTR(TIME, '.') + 1) AS REAL) / 1000 ELSE 0 END) AS TIME_IN_SECONDS FROM LAPTIMES) SELECT T2.FORENAME, T2.SURNAME, T1.DRIVERID FROM (SELECT DRIVERID, MIN(TIME_IN_SECONDS) AS MIN_TIME_IN_SECONDS FROM LAP_TIMES_IN_SECONDS GROUP BY DRIVERID) AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID ORDER BY T1.MIN_TIME_IN_SECONDS ASC LIMIT 20",
3,1011,ERROR,"NotImplementedError: {'substr': ['TIME', 1, {'sub': [{'instr': ['TIME', {'literal': ':'}]}, 1]}]}",,"SELECT DRIVERS.FORENAME, DRIVERS.SURNAME FROM LAPTIMES INNER JOIN DRIVERS ON LAPTIMES.DRIVERID = DRIVERS.DRIVERID ORDER BY LAPTIMES.TIME ASC LIMIT 20","WITH LAP_TIMES_IN_SECONDS AS (SELECT DRIVERID, (CASE WHEN SUBSTR(TIME, 1, INSTR(TIME, ':') - 1) <> '' THEN CAST(SUBSTR(TIME, 1, INSTR(TIME, ':') - 1) AS REAL) * 60 ELSE 0 END + CASE WHEN SUBSTR(TIME, INSTR(TIME, ':') + 1, INSTR(TIME, '.') - INSTR(TIME, ':') - 1) <> '' THEN CAST(SUBSTR(TIME, INSTR(TIME, ':') + 1, INSTR(TIME, '.') - INSTR(TIME, ':') - 1) AS REAL) ELSE 0 END + CASE WHEN SUBSTR(TIME, INSTR(TIME, '.') + 1) <> '' THEN CAST(SUBSTR(TIME, INSTR(TIME, '.') + 1) AS REAL) / 1000 ELSE 0 END) AS TIME_IN_SECONDS FROM LAPTIMES) SELECT T2.FORENAME, T2.SURNAME, T1.DRIVERID FROM (SELECT DRIVERID, MIN(TIME_IN_SECONDS) AS MIN_TIME_IN_SECONDS FROM LAP_TIMES_IN_SECONDS GROUP BY DRIVERID) AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID ORDER BY T1.MIN_TIME_IN_SECONDS ASC LIMIT 20",
1,1012,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, 'LEWIS HAMILTON', 8, '2147483648', 'LEWIS', 'HAMILTON', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 9, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 20, 21, '2147483648', 22);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (10, 5, 6, 4, 11, 12, 13, '2147483648', 14, 15, 16, '2147483648', 17, 18, 19, '2147483648', '2147483648', 7);
-- ----------sql1------------
-- 2
SELECT RACES.CIRCUITID FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE DRIVERS.DRIVERREF = 'LEWIS HAMILTON' ORDER BY RESULTS.FASTESTLAP ASC LIMIT 1;
-- ----------sql2------------
-- 21
SELECT T1.POSITION FROM LAPTIMES AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T2.FORENAME = 'LEWIS' AND T2.SURNAME = 'HAMILTON' ORDER BY T1.TIME ASC LIMIT 1;
",0.104408,SELECT RACES.CIRCUITID FROM RACES INNER JOIN RESULTS ON RACES.RACEID = RESULTS.RACEID INNER JOIN DRIVERS ON RESULTS.DRIVERID = DRIVERS.DRIVERID WHERE DRIVERS.DRIVERREF = 'LEWIS HAMILTON' ORDER BY RESULTS.FASTESTLAP ASC LIMIT 1;,SELECT T1.POSITION FROM LAPTIMES AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T2.FORENAME = 'LEWIS' AND T2.SURNAME = 'HAMILTON' ORDER BY T1.TIME ASC LIMIT 1,
1,1013,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', 'AUSTRIAN GRAND PRIX CIRCUIT', '2147483648', '2147483648', 10, 9, 8, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, '2147483648', 0, '2147483648', '2147483648', '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 11, 2, 'AUSTRIAN GRAND PRIX', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 12, 13, '2147483648', 14);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 0, 0, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (0, 5, 6, 4, 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', 0, 0, 0, '2147483649', '2147483648', 7);
-- ----------sql1------------
-- 2147483648
SELECT LAPTIMES.TIME FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID INNER JOIN LAPTIMES ON RACES.RACEID = LAPTIMES.RACEID WHERE CIRCUITS.NAME = 'AUSTRIAN GRAND PRIX CIRCUIT' ORDER BY LAPTIMES.TIME ASC LIMIT 1;
-- ----------sql2------------
-- 2147483649
WITH FASTEST_LAP_TIMES AS ( SELECT T1.RACEID, T1.FASTESTLAPTIME FROM RESULTS AS T1 WHERE T1.FASTESTLAPTIME IS NOT NULL) SELECT MIN(FASTEST_LAP_TIMES.FASTESTLAPTIME) AS LAP_RECORD FROM FASTEST_LAP_TIMES INNER JOIN RACES AS T2 ON FASTEST_LAP_TIMES.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID WHERE T2.NAME = 'AUSTRIAN GRAND PRIX';
",0.217942,SELECT LAPTIMES.TIME FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID INNER JOIN LAPTIMES ON RACES.RACEID = LAPTIMES.RACEID WHERE CIRCUITS.NAME = 'AUSTRIAN GRAND PRIX CIRCUIT' ORDER BY LAPTIMES.TIME ASC LIMIT 1;,"WITH FASTEST_LAP_TIMES AS ( SELECT T1.RACEID, T1.FASTESTLAPTIME FROM RESULTS AS T1 WHERE T1.FASTESTLAPTIME IS NOT NULL) SELECT MIN(FASTEST_LAP_TIMES.FASTESTLAPTIME) AS LAP_RECORD FROM FASTEST_LAP_TIMES INNER JOIN RACES AS T2 ON FASTEST_LAP_TIMES.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID WHERE T2.NAME = 'AUSTRIAN GRAND PRIX'",
1,1014,ERROR,"NotImplementedError: {'substr': ['T1__FASTESTLAPTIME', 1, {'sub': [{'instr': ['T1__FASTESTLAPTIME', {'literal': ':'}]}, 1]}]}",,"SELECT LAPTIMES.LAP, LAPTIMES.TIME FROM CIRCUITS INNER JOIN RACES ON CIRCUITS.CIRCUITID = RACES.CIRCUITID INNER JOIN LAPTIMES ON RACES.RACEID = LAPTIMES.RACEID WHERE CIRCUITS.COUNTRY = 'ITALY' ORDER BY LAPTIMES.TIME ASC","WITH FASTEST_LAP_TIMES AS (SELECT T1.RACEID, T1.FASTESTLAPTIME, (CAST(SUBSTR(T1.FASTESTLAPTIME, 1, INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, ':') + 1, INSTR(T1.FASTESTLAPTIME, '.') - INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, '.') + 1) AS REAL) / 1000) AS TIME_IN_SECONDS FROM RESULTS AS T1 WHERE T1.FASTESTLAPTIME IS NOT NULL ) SELECT T1.FASTESTLAPTIME AS LAP_RECORD FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID INNER JOIN (SELECT MIN(FASTEST_LAP_TIMES.TIME_IN_SECONDS) AS MIN_TIME_IN_SECONDS FROM FASTEST_LAP_TIMES INNER JOIN RACES AS T2 ON FASTEST_LAP_TIMES.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID WHERE T3.COUNTRY = 'ITALY' ) AS T4 ON (CAST(SUBSTR(T1.FASTESTLAPTIME, 1, INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, ':') + 1, INSTR(T1.FASTESTLAPTIME, '.') - INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, '.') + 1) AS REAL) / 1000) = T4.MIN_TIME_IN_SECONDS LIMIT 1",
2,1014,ERROR,"NotImplementedError: {'substr': ['T1__FASTESTLAPTIME', 1, {'sub': [{'instr': ['T1__FASTESTLAPTIME', {'literal': ':'}]}, 1]}]}",,"SELECT LAPTIMES.LAP, LAPTIMES.TIME FROM CIRCUITS INNER JOIN RACES ON CIRCUITS.CIRCUITID = RACES.CIRCUITID INNER JOIN LAPTIMES ON RACES.RACEID = LAPTIMES.RACEID WHERE CIRCUITS.COUNTRY = 'ITALY' ORDER BY LAPTIMES.TIME ASC","WITH FASTEST_LAP_TIMES AS (SELECT T1.RACEID, T1.FASTESTLAPTIME, (CAST(SUBSTR(T1.FASTESTLAPTIME, 1, INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, ':') + 1, INSTR(T1.FASTESTLAPTIME, '.') - INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, '.') + 1) AS REAL) / 1000) AS TIME_IN_SECONDS FROM RESULTS AS T1 WHERE T1.FASTESTLAPTIME IS NOT NULL ) SELECT T1.FASTESTLAPTIME AS LAP_RECORD FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID INNER JOIN (SELECT MIN(FASTEST_LAP_TIMES.TIME_IN_SECONDS) AS MIN_TIME_IN_SECONDS FROM FASTEST_LAP_TIMES INNER JOIN RACES AS T2 ON FASTEST_LAP_TIMES.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID WHERE T3.COUNTRY = 'ITALY' ) AS T4 ON (CAST(SUBSTR(T1.FASTESTLAPTIME, 1, INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, ':') + 1, INSTR(T1.FASTESTLAPTIME, '.') - INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, '.') + 1) AS REAL) / 1000) = T4.MIN_TIME_IN_SECONDS LIMIT 1",
3,1014,ERROR,"NotImplementedError: {'substr': ['T1__FASTESTLAPTIME', 1, {'sub': [{'instr': ['T1__FASTESTLAPTIME', {'literal': ':'}]}, 1]}]}",,"SELECT LAPTIMES.LAP, LAPTIMES.TIME FROM CIRCUITS INNER JOIN RACES ON CIRCUITS.CIRCUITID = RACES.CIRCUITID INNER JOIN LAPTIMES ON RACES.RACEID = LAPTIMES.RACEID WHERE CIRCUITS.COUNTRY = 'ITALY' ORDER BY LAPTIMES.TIME ASC","WITH FASTEST_LAP_TIMES AS (SELECT T1.RACEID, T1.FASTESTLAPTIME, (CAST(SUBSTR(T1.FASTESTLAPTIME, 1, INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, ':') + 1, INSTR(T1.FASTESTLAPTIME, '.') - INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, '.') + 1) AS REAL) / 1000) AS TIME_IN_SECONDS FROM RESULTS AS T1 WHERE T1.FASTESTLAPTIME IS NOT NULL ) SELECT T1.FASTESTLAPTIME AS LAP_RECORD FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID INNER JOIN (SELECT MIN(FASTEST_LAP_TIMES.TIME_IN_SECONDS) AS MIN_TIME_IN_SECONDS FROM FASTEST_LAP_TIMES INNER JOIN RACES AS T2 ON FASTEST_LAP_TIMES.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID WHERE T3.COUNTRY = 'ITALY' ) AS T4 ON (CAST(SUBSTR(T1.FASTESTLAPTIME, 1, INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, ':') + 1, INSTR(T1.FASTESTLAPTIME, '.') - INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, '.') + 1) AS REAL) / 1000) = T4.MIN_TIME_IN_SECONDS LIMIT 1",
1,1015,ERROR,"NotImplementedError: {'substr': ['T1__FASTESTLAPTIME', 1, {'sub': [{'instr': ['T1__FASTESTLAPTIME', {'literal': ':'}]}, 1]}]}",,SELECT RACES.NAME FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID INNER JOIN LAPTIMES ON RACES.RACEID = LAPTIMES.RACEID WHERE CIRCUITS.NAME = 'AUSTRIAN GRAND PRIX CIRCUIT' ORDER BY LAPTIMES.TIME ASC LIMIT 1,"WITH FASTEST_LAP_TIMES AS ( SELECT T1.RACEID, T1.FASTESTLAPTIME, (CAST(SUBSTR(T1.FASTESTLAPTIME, 1, INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, ':') + 1, INSTR(T1.FASTESTLAPTIME, '.') - INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, '.') + 1) AS REAL) / 1000) AS TIME_IN_SECONDS FROM RESULTS AS T1 WHERE T1.FASTESTLAPTIME IS NOT NULL ) SELECT T2.NAME FROM RACES AS T2 INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID INNER JOIN RESULTS AS T1 ON T2.RACEID = T1.RACEID INNER JOIN ( SELECT MIN(FASTEST_LAP_TIMES.TIME_IN_SECONDS) AS MIN_TIME_IN_SECONDS FROM FASTEST_LAP_TIMES INNER JOIN RACES AS T2 ON FASTEST_LAP_TIMES.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID WHERE T2.NAME = 'AUSTRIAN GRAND PRIX') AS T4 ON (CAST(SUBSTR(T1.FASTESTLAPTIME, 1, INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, ':') + 1, INSTR(T1.FASTESTLAPTIME, '.') - INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, '.') + 1) AS REAL) / 1000) = T4.MIN_TIME_IN_SECONDS WHERE T2.NAME = 'AUSTRIAN GRAND PRIX'",
2,1015,ERROR,"NotImplementedError: {'substr': ['T1__FASTESTLAPTIME', 1, {'sub': [{'instr': ['T1__FASTESTLAPTIME', {'literal': ':'}]}, 1]}]}",,SELECT RACES.NAME FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID INNER JOIN LAPTIMES ON RACES.RACEID = LAPTIMES.RACEID WHERE CIRCUITS.NAME = 'AUSTRIAN GRAND PRIX CIRCUIT' ORDER BY LAPTIMES.TIME ASC LIMIT 1,"WITH FASTEST_LAP_TIMES AS ( SELECT T1.RACEID, T1.FASTESTLAPTIME, (CAST(SUBSTR(T1.FASTESTLAPTIME, 1, INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, ':') + 1, INSTR(T1.FASTESTLAPTIME, '.') - INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, '.') + 1) AS REAL) / 1000) AS TIME_IN_SECONDS FROM RESULTS AS T1 WHERE T1.FASTESTLAPTIME IS NOT NULL ) SELECT T2.NAME FROM RACES AS T2 INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID INNER JOIN RESULTS AS T1 ON T2.RACEID = T1.RACEID INNER JOIN ( SELECT MIN(FASTEST_LAP_TIMES.TIME_IN_SECONDS) AS MIN_TIME_IN_SECONDS FROM FASTEST_LAP_TIMES INNER JOIN RACES AS T2 ON FASTEST_LAP_TIMES.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID WHERE T2.NAME = 'AUSTRIAN GRAND PRIX') AS T4 ON (CAST(SUBSTR(T1.FASTESTLAPTIME, 1, INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, ':') + 1, INSTR(T1.FASTESTLAPTIME, '.') - INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, '.') + 1) AS REAL) / 1000) = T4.MIN_TIME_IN_SECONDS WHERE T2.NAME = 'AUSTRIAN GRAND PRIX'",
3,1015,ERROR,"NotImplementedError: {'substr': ['T1__FASTESTLAPTIME', 1, {'sub': [{'instr': ['T1__FASTESTLAPTIME', {'literal': ':'}]}, 1]}]}",,SELECT RACES.NAME FROM RACES INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID INNER JOIN LAPTIMES ON RACES.RACEID = LAPTIMES.RACEID WHERE CIRCUITS.NAME = 'AUSTRIAN GRAND PRIX CIRCUIT' ORDER BY LAPTIMES.TIME ASC LIMIT 1,"WITH FASTEST_LAP_TIMES AS ( SELECT T1.RACEID, T1.FASTESTLAPTIME, (CAST(SUBSTR(T1.FASTESTLAPTIME, 1, INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, ':') + 1, INSTR(T1.FASTESTLAPTIME, '.') - INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, '.') + 1) AS REAL) / 1000) AS TIME_IN_SECONDS FROM RESULTS AS T1 WHERE T1.FASTESTLAPTIME IS NOT NULL ) SELECT T2.NAME FROM RACES AS T2 INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID INNER JOIN RESULTS AS T1 ON T2.RACEID = T1.RACEID INNER JOIN ( SELECT MIN(FASTEST_LAP_TIMES.TIME_IN_SECONDS) AS MIN_TIME_IN_SECONDS FROM FASTEST_LAP_TIMES INNER JOIN RACES AS T2 ON FASTEST_LAP_TIMES.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID WHERE T2.NAME = 'AUSTRIAN GRAND PRIX') AS T4 ON (CAST(SUBSTR(T1.FASTESTLAPTIME, 1, INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, ':') + 1, INSTR(T1.FASTESTLAPTIME, '.') - INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, '.') + 1) AS REAL) / 1000) = T4.MIN_TIME_IN_SECONDS WHERE T2.NAME = 'AUSTRIAN GRAND PRIX'",
1,1016,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PITSTOPS__DURATION`,,SELECT PITSTOPS.DURATION FROM CIRCUITS INNER JOIN RACES ON CIRCUITS.CIRCUITID = RACES.CIRCUITID INNER JOIN LAPTIMES ON RACES.RACEID = LAPTIMES.RACEID INNER JOIN PITSTOPS ON RACES.RACEID = PITSTOPS.RACEID AND LAPTIMES.DRIVERID = PITSTOPS.DRIVERID WHERE CIRCUITS.NAME = 'AUSTRIAN GRAND PRIX CIRCUIT' AND LAPTIMES.TIME = (SELECT MIN(LAPTIMES.TIME) FROM LAPTIMES),"WITH FASTEST_LAP_TIMES AS ( SELECT T1.RACEID, T1.DRIVERID, T1.FASTESTLAPTIME, (CAST(SUBSTR(T1.FASTESTLAPTIME, 1, INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, ':') + 1, INSTR(T1.FASTESTLAPTIME, '.') - INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, '.') + 1) AS REAL) / 1000) AS TIME_IN_SECONDS FROM RESULTS AS T1 WHERE T1.FASTESTLAPTIME IS NOT NULL), LAP_RECORD_RACE AS ( SELECT T1.RACEID, T1.DRIVERID FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID INNER JOIN ( SELECT MIN(FASTEST_LAP_TIMES.TIME_IN_SECONDS) AS MIN_TIME_IN_SECONDS FROM FASTEST_LAP_TIMES INNER JOIN RACES AS T2 ON FASTEST_LAP_TIMES.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID WHERE T2.NAME = 'AUSTRIAN GRAND PRIX') AS T4 ON (CAST(SUBSTR(T1.FASTESTLAPTIME, 1, INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, ':') + 1, INSTR(T1.FASTESTLAPTIME, '.') - INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, '.') + 1) AS REAL) / 1000) = T4.MIN_TIME_IN_SECONDS WHERE T2.NAME = 'AUSTRIAN GRAND PRIX') SELECT T4.DURATION FROM LAP_RECORD_RACE INNER JOIN PITSTOPS AS T4 ON LAP_RECORD_RACE.RACEID = T4.RACEID AND LAP_RECORD_RACE.DRIVERID = T4.DRIVERID",
2,1016,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PITSTOPS__DURATION`,,SELECT PITSTOPS.DURATION FROM CIRCUITS INNER JOIN RACES ON CIRCUITS.CIRCUITID = RACES.CIRCUITID INNER JOIN LAPTIMES ON RACES.RACEID = LAPTIMES.RACEID INNER JOIN PITSTOPS ON RACES.RACEID = PITSTOPS.RACEID AND LAPTIMES.DRIVERID = PITSTOPS.DRIVERID WHERE CIRCUITS.NAME = 'AUSTRIAN GRAND PRIX CIRCUIT' AND LAPTIMES.TIME = (SELECT MIN(LAPTIMES.TIME) FROM LAPTIMES),"WITH FASTEST_LAP_TIMES AS ( SELECT T1.RACEID, T1.DRIVERID, T1.FASTESTLAPTIME, (CAST(SUBSTR(T1.FASTESTLAPTIME, 1, INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, ':') + 1, INSTR(T1.FASTESTLAPTIME, '.') - INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, '.') + 1) AS REAL) / 1000) AS TIME_IN_SECONDS FROM RESULTS AS T1 WHERE T1.FASTESTLAPTIME IS NOT NULL), LAP_RECORD_RACE AS ( SELECT T1.RACEID, T1.DRIVERID FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID INNER JOIN ( SELECT MIN(FASTEST_LAP_TIMES.TIME_IN_SECONDS) AS MIN_TIME_IN_SECONDS FROM FASTEST_LAP_TIMES INNER JOIN RACES AS T2 ON FASTEST_LAP_TIMES.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID WHERE T2.NAME = 'AUSTRIAN GRAND PRIX') AS T4 ON (CAST(SUBSTR(T1.FASTESTLAPTIME, 1, INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, ':') + 1, INSTR(T1.FASTESTLAPTIME, '.') - INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, '.') + 1) AS REAL) / 1000) = T4.MIN_TIME_IN_SECONDS WHERE T2.NAME = 'AUSTRIAN GRAND PRIX') SELECT T4.DURATION FROM LAP_RECORD_RACE INNER JOIN PITSTOPS AS T4 ON LAP_RECORD_RACE.RACEID = T4.RACEID AND LAP_RECORD_RACE.DRIVERID = T4.DRIVERID",
3,1016,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PITSTOPS__DURATION`,,SELECT PITSTOPS.DURATION FROM CIRCUITS INNER JOIN RACES ON CIRCUITS.CIRCUITID = RACES.CIRCUITID INNER JOIN LAPTIMES ON RACES.RACEID = LAPTIMES.RACEID INNER JOIN PITSTOPS ON RACES.RACEID = PITSTOPS.RACEID AND LAPTIMES.DRIVERID = PITSTOPS.DRIVERID WHERE CIRCUITS.NAME = 'AUSTRIAN GRAND PRIX CIRCUIT' AND LAPTIMES.TIME = (SELECT MIN(LAPTIMES.TIME) FROM LAPTIMES),"WITH FASTEST_LAP_TIMES AS ( SELECT T1.RACEID, T1.DRIVERID, T1.FASTESTLAPTIME, (CAST(SUBSTR(T1.FASTESTLAPTIME, 1, INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, ':') + 1, INSTR(T1.FASTESTLAPTIME, '.') - INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, '.') + 1) AS REAL) / 1000) AS TIME_IN_SECONDS FROM RESULTS AS T1 WHERE T1.FASTESTLAPTIME IS NOT NULL), LAP_RECORD_RACE AS ( SELECT T1.RACEID, T1.DRIVERID FROM RESULTS AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID INNER JOIN ( SELECT MIN(FASTEST_LAP_TIMES.TIME_IN_SECONDS) AS MIN_TIME_IN_SECONDS FROM FASTEST_LAP_TIMES INNER JOIN RACES AS T2 ON FASTEST_LAP_TIMES.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID WHERE T2.NAME = 'AUSTRIAN GRAND PRIX') AS T4 ON (CAST(SUBSTR(T1.FASTESTLAPTIME, 1, INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, ':') + 1, INSTR(T1.FASTESTLAPTIME, '.') - INSTR(T1.FASTESTLAPTIME, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FASTESTLAPTIME, INSTR(T1.FASTESTLAPTIME, '.') + 1) AS REAL) / 1000) = T4.MIN_TIME_IN_SECONDS WHERE T2.NAME = 'AUSTRIAN GRAND PRIX') SELECT T4.DURATION FROM LAP_RECORD_RACE INNER JOIN PITSTOPS AS T4 ON LAP_RECORD_RACE.RACEID = T4.RACEID AND LAP_RECORD_RACE.DRIVERID = T4.DRIVERID",
1,1017,True,,0.0959319999999999,"SELECT CIRCUITS.LAT, CIRCUITS.LNG FROM LAPTIMES INNER JOIN RACES ON LAPTIMES.RACEID = RACES.RACEID INNER JOIN CIRCUITS ON RACES.CIRCUITID = CIRCUITS.CIRCUITID WHERE LAPTIMES.TIME = '1:29.488';","SELECT T3.LAT, T3.LNG FROM LAPTIMES AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID WHERE T1.TIME = '1:29.488'",
1,1018,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CIRCUITS (
	CIRCUITID INTEGER,
	CIRCUITREF VARCHAR(20),
	NAME VARCHAR(20),
	LOCATION VARCHAR(20),
	COUNTRY VARCHAR(20),
	LAT INTEGER,
	LNG INTEGER,
	ALT INTEGER,
	URL VARCHAR(20)
);
INSERT INTO CIRCUITS VALUES (2, '2147483648', '2147483648', '2147483648', '2147483648', 0, 0, 0, '2147483648');
CREATE TABLE CONSTRUCTORS (
	CONSTRUCTORID INTEGER,
	CONSTRUCTORREF VARCHAR(20),
	NAME VARCHAR(20),
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO CONSTRUCTORS VALUES (4, '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE DRIVERS (
	DRIVERID INTEGER,
	DRIVERREF VARCHAR(20),
	NUMBER INTEGER,
	CODE VARCHAR(20),
	FORENAME VARCHAR(20),
	SURNAME VARCHAR(20),
	DOB DATE,
	NATIONALITY VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO DRIVERS VALUES (6, 'LEWIS HAMILTON', 11, '2147483648', '2212690509355339574', '9069662395750148685', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE SEASONS (
	YEAR INTEGER,
	URL VARCHAR(20)
);
INSERT INTO SEASONS VALUES (3, '2147483648');
CREATE TABLE RACES (
	RACEID INTEGER,
	YEAR INTEGER,
	ROUND INTEGER,
	CIRCUITID INTEGER,
	NAME VARCHAR(20),
	DATE DATE,
	TIME VARCHAR(20),
	URL VARCHAR(20)
);
INSERT INTO RACES VALUES (5, 3, 0, 2, '2147483648', '1970-01-01', '2147483648', '2147483648');
CREATE TABLE CONSTRUCTORRESULTS (
	CONSTRUCTORRESULTSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO CONSTRUCTORRESULTS VALUES (0, 5, 4, 0, '2147483648');
CREATE TABLE CONSTRUCTORSTANDINGS (
	CONSTRUCTORSTANDINGSID INTEGER,
	RACEID INTEGER,
	CONSTRUCTORID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO CONSTRUCTORSTANDINGS VALUES (0, 5, 4, 0, 0, '2147483648', 0);
CREATE TABLE DRIVERSTANDINGS (
	DRIVERSTANDINGSID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	POINTS INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	WINS INTEGER
);
INSERT INTO DRIVERSTANDINGS VALUES (0, 5, 6, 0, 0, '2147483648', 0);
CREATE TABLE LAPTIMES (
	RACEID INTEGER,
	DRIVERID INTEGER,
	LAP INTEGER,
	POSITION INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO LAPTIMES VALUES (5, 6, 0, 0, '2147483648', 0);
CREATE TABLE PITSTOPS (
	RACEID INTEGER,
	DRIVERID INTEGER,
	STOP INTEGER,
	LAP INTEGER,
	TIME VARCHAR(20),
	DURATION VARCHAR(20),
	MILLISECONDS INTEGER
);
INSERT INTO PITSTOPS VALUES (5, 6, 12, 13, '2147483648', '2147483648', 0);
CREATE TABLE QUALIFYING (
	QUALIFYID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	POSITION INTEGER,
	Q1 VARCHAR(20),
	Q2 VARCHAR(20),
	Q3 VARCHAR(20)
);
INSERT INTO QUALIFYING VALUES (0, 5, 6, 4, 0, 0, '2147483648', '2147483648', '2147483648');
CREATE TABLE STATUS (
	STATUSID INTEGER,
	STATUS VARCHAR(20)
);
INSERT INTO STATUS VALUES (7, '2147483648');
CREATE TABLE RESULTS (
	RESULTID INTEGER,
	RACEID INTEGER,
	DRIVERID INTEGER,
	CONSTRUCTORID INTEGER,
	NUMBER INTEGER,
	GRID INTEGER,
	POSITION INTEGER,
	POSITIONTEXT VARCHAR(20),
	POSITIONORDER INTEGER,
	POINTS INTEGER,
	LAPS INTEGER,
	TIME VARCHAR(20),
	MILLISECONDS INTEGER,
	FASTESTLAP INTEGER,
	RANK INTEGER,
	FASTESTLAPTIME VARCHAR(20),
	FASTESTLAPSPEED VARCHAR(20),
	STATUSID INTEGER
);
INSERT INTO RESULTS VALUES (0, 5, 6, 4, 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', 0, 0, 0, '2147483648', '2147483648', 7);
-- ----------sql1------------
-- 0
SELECT AVG(PITSTOPS.MILLISECONDS) FROM DRIVERS INNER JOIN PITSTOPS ON DRIVERS.DRIVERID = PITSTOPS.DRIVERID WHERE DRIVERS.DRIVERREF = 'LEWIS HAMILTON';
-- ----------sql2------------
-- NULL
SELECT AVG(MILLISECONDS) FROM PITSTOPS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T2.FORENAME = 'LEWIS' AND T2.SURNAME = 'HAMILTON';
",0.090893,SELECT AVG(PITSTOPS.MILLISECONDS) FROM DRIVERS INNER JOIN PITSTOPS ON DRIVERS.DRIVERID = PITSTOPS.DRIVERID WHERE DRIVERS.DRIVERREF = 'LEWIS HAMILTON',SELECT AVG(MILLISECONDS) FROM PITSTOPS AS T1 INNER JOIN DRIVERS AS T2 ON T1.DRIVERID = T2.DRIVERID WHERE T2.FORENAME = 'LEWIS' AND T2.SURNAME = 'HAMILTON',
1,1019,ERROR,NotImplementedError: {'real': {}},,SELECT AVG(LAPTIMES.MILLISECONDS) FROM CIRCUITS INNER JOIN RACES ON CIRCUITS.CIRCUITID = RACES.CIRCUITID INNER JOIN LAPTIMES ON RACES.RACEID = LAPTIMES.RACEID WHERE CIRCUITS.COUNTRY = 'ITALY',SELECT CAST(SUM(T1.MILLISECONDS) AS REAL) / COUNT(T1.LAP) FROM LAPTIMES AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID WHERE T3.COUNTRY = 'ITALY',
2,1019,ERROR,NotImplementedError: {'real': {}},,SELECT AVG(LAPTIMES.MILLISECONDS) FROM CIRCUITS INNER JOIN RACES ON CIRCUITS.CIRCUITID = RACES.CIRCUITID INNER JOIN LAPTIMES ON RACES.RACEID = LAPTIMES.RACEID WHERE CIRCUITS.COUNTRY = 'ITALY',SELECT CAST(SUM(T1.MILLISECONDS) AS REAL) / COUNT(T1.LAP) FROM LAPTIMES AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID WHERE T3.COUNTRY = 'ITALY',
3,1019,ERROR,NotImplementedError: {'real': {}},,SELECT AVG(LAPTIMES.MILLISECONDS) FROM CIRCUITS INNER JOIN RACES ON CIRCUITS.CIRCUITID = RACES.CIRCUITID INNER JOIN LAPTIMES ON RACES.RACEID = LAPTIMES.RACEID WHERE CIRCUITS.COUNTRY = 'ITALY',SELECT CAST(SUM(T1.MILLISECONDS) AS REAL) / COUNT(T1.LAP) FROM LAPTIMES AS T1 INNER JOIN RACES AS T2 ON T1.RACEID = T2.RACEID INNER JOIN CIRCUITS AS T3 ON T2.CIRCUITID = T3.CIRCUITID WHERE T3.COUNTRY = 'ITALY',
1,1020,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__OVERALL_RATING`,,SELECT PLAYER.PLAYER_API_ID FROM PLAYER ORDER BY PLAYER.OVERALL_RATING DESC LIMIT 1,SELECT PLAYER_API_ID FROM PLAYER_ATTRIBUTES ORDER BY OVERALL_RATING DESC LIMIT 1,
2,1020,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__OVERALL_RATING`,,SELECT PLAYER.PLAYER_API_ID FROM PLAYER ORDER BY PLAYER.OVERALL_RATING DESC LIMIT 1,SELECT PLAYER_API_ID FROM PLAYER_ATTRIBUTES ORDER BY OVERALL_RATING DESC LIMIT 1,
3,1020,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__OVERALL_RATING`,,SELECT PLAYER.PLAYER_API_ID FROM PLAYER ORDER BY PLAYER.OVERALL_RATING DESC LIMIT 1,SELECT PLAYER_API_ID FROM PLAYER_ATTRIBUTES ORDER BY OVERALL_RATING DESC LIMIT 1,
1,1021,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,"SELECT PLAYER.HEIGHT, PLAYER.NAME FROM PLAYER ORDER BY PLAYER.HEIGHT DESC LIMIT 1;",SELECT PLAYER_NAME FROM PLAYER ORDER BY HEIGHT DESC LIMIT 1,
2,1021,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,"SELECT PLAYER.HEIGHT, PLAYER.NAME FROM PLAYER ORDER BY PLAYER.HEIGHT DESC LIMIT 1;",SELECT PLAYER_NAME FROM PLAYER ORDER BY HEIGHT DESC LIMIT 1,
3,1021,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,"SELECT PLAYER.HEIGHT, PLAYER.NAME FROM PLAYER ORDER BY PLAYER.HEIGHT DESC LIMIT 1;",SELECT PLAYER_NAME FROM PLAYER ORDER BY HEIGHT DESC LIMIT 1,
1,1022,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__PREFERRED_FOOT`,,SELECT PLAYER.PREFERRED_FOOT FROM PLAYER ORDER BY PLAYER.POTENTIAL ASC LIMIT 1,SELECT PREFERRED_FOOT FROM PLAYER_ATTRIBUTES WHERE POTENTIAL IS NOT NULL ORDER BY POTENTIAL ASC LIMIT 1,
2,1022,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__PREFERRED_FOOT`,,SELECT PLAYER.PREFERRED_FOOT FROM PLAYER ORDER BY PLAYER.POTENTIAL ASC LIMIT 1,SELECT PREFERRED_FOOT FROM PLAYER_ATTRIBUTES WHERE POTENTIAL IS NOT NULL ORDER BY POTENTIAL ASC LIMIT 1,
3,1022,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__PREFERRED_FOOT`,,SELECT PLAYER.PREFERRED_FOOT FROM PLAYER ORDER BY PLAYER.POTENTIAL ASC LIMIT 1,SELECT PREFERRED_FOOT FROM PLAYER_ATTRIBUTES WHERE POTENTIAL IS NOT NULL ORDER BY POTENTIAL ASC LIMIT 1,
1,1023,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute OVERALL_RATING`,,SELECT COUNT(*) FROM PLAYER WHERE OVERALL_RATING >= 60 AND OVERALL_RATING < 65 AND DEFENSIVE_WORK_RATE = 'LOW';,SELECT COUNT(ID) FROM PLAYER_ATTRIBUTES WHERE OVERALL_RATING BETWEEN 60 AND 65 AND DEFENSIVE_WORK_RATE = 'LOW',
2,1023,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute OVERALL_RATING`,,SELECT COUNT(*) FROM PLAYER WHERE OVERALL_RATING >= 60 AND OVERALL_RATING < 65 AND DEFENSIVE_WORK_RATE = 'LOW';,SELECT COUNT(ID) FROM PLAYER_ATTRIBUTES WHERE OVERALL_RATING BETWEEN 60 AND 65 AND DEFENSIVE_WORK_RATE = 'LOW',
3,1023,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute OVERALL_RATING`,,SELECT COUNT(*) FROM PLAYER WHERE OVERALL_RATING >= 60 AND OVERALL_RATING < 65 AND DEFENSIVE_WORK_RATE = 'LOW';,SELECT COUNT(ID) FROM PLAYER_ATTRIBUTES WHERE OVERALL_RATING BETWEEN 60 AND 65 AND DEFENSIVE_WORK_RATE = 'LOW',
1,1024,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__PLAYER_ID`,,SELECT PLAYER.PLAYER_ID FROM PLAYER ORDER BY PLAYER.CROSSING DESC LIMIT 5,SELECT ID FROM PLAYER_ATTRIBUTES ORDER BY CROSSING DESC LIMIT 5,
2,1024,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__PLAYER_ID`,,SELECT PLAYER.PLAYER_ID FROM PLAYER ORDER BY PLAYER.CROSSING DESC LIMIT 5,SELECT ID FROM PLAYER_ATTRIBUTES ORDER BY CROSSING DESC LIMIT 5,
3,1024,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__PLAYER_ID`,,SELECT PLAYER.PLAYER_ID FROM PLAYER ORDER BY PLAYER.CROSSING DESC LIMIT 5,SELECT ID FROM PLAYER_ATTRIBUTES ORDER BY CROSSING DESC LIMIT 5,
1,1025,True,,0.072511,SELECT LEAGUE.NAME FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE MATCH.SEASON = '2015/2016' GROUP BY LEAGUE.NAME ORDER BY SUM(MATCH.HOME_TEAM_GOAL + MATCH.AWAY_TEAM_GOAL) DESC LIMIT 1,SELECT T2.NAME FROM MATCH AS T1 INNER JOIN LEAGUE AS T2 ON T1.LEAGUE_ID = T2.ID WHERE T1.SEASON = '2015/2016' GROUP BY T2.NAME ORDER BY SUM(T1.HOME_TEAM_GOAL + T1.AWAY_TEAM_GOAL) DESC LIMIT 1,
1,1026,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE PLAYER_ATTRIBUTES (
	ID VARCHAR(20),
	PLAYER_FIFA_API_ID VARCHAR(20),
	PLAYER_API_ID VARCHAR(20),
	DATE VARCHAR(20),
	OVERALL_RATING VARCHAR(20),
	POTENTIAL VARCHAR(20),
	PREFERRED_FOOT VARCHAR(20),
	ATTACKING_WORK_RATE VARCHAR(20),
	DEFENSIVE_WORK_RATE VARCHAR(20),
	CROSSING VARCHAR(20),
	FINISHING VARCHAR(20),
	HEADING_ACCURACY VARCHAR(20),
	SHORT_PASSING VARCHAR(20),
	VOLLEYS VARCHAR(20),
	DRIBBLING VARCHAR(20),
	CURVE VARCHAR(20),
	FREE_KICK_ACCURACY VARCHAR(20),
	LONG_PASSING VARCHAR(20),
	BALL_CONTROL VARCHAR(20),
	ACCELERATION VARCHAR(20),
	SPRINT_SPEED VARCHAR(20),
	AGILITY VARCHAR(20),
	REACTIONS VARCHAR(20),
	BALANCE VARCHAR(20),
	SHOT_POWER VARCHAR(20),
	JUMPING VARCHAR(20),
	STAMINA VARCHAR(20),
	STRENGTH VARCHAR(20),
	LONG_SHOTS VARCHAR(20),
	AGGRESSION VARCHAR(20),
	INTERCEPTIONS VARCHAR(20),
	POSITIONING VARCHAR(20),
	VISION VARCHAR(20),
	PENALTIES VARCHAR(20),
	MARKING VARCHAR(20),
	STANDING_TACKLE VARCHAR(20),
	SLIDING_TACKLE VARCHAR(20),
	GK_DIVING VARCHAR(20),
	GK_HANDLING VARCHAR(20),
	GK_KICKING VARCHAR(20),
	GK_POSITIONING VARCHAR(20),
	GK_REFLEXES VARCHAR(20)
);
INSERT INTO PLAYER_ATTRIBUTES VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE PLAYER (
	ID VARCHAR(20),
	PLAYER_API_ID VARCHAR(20),
	PLAYER_NAME VARCHAR(20),
	PLAYER_FIFA_API_ID VARCHAR(20),
	BIRTHDAY VARCHAR(20),
	HEIGHT VARCHAR(20),
	WEIGHT VARCHAR(20)
);
INSERT INTO PLAYER VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE LEAGUE (
	ID VARCHAR(20),
	COUNTRY_ID VARCHAR(20),
	NAME VARCHAR(20)
);
INSERT INTO LEAGUE VALUES ('2147483648', '2147483648', '2147483648');
CREATE TABLE COUNTRY (
	ID VARCHAR(20),
	NAME VARCHAR(20)
);
INSERT INTO COUNTRY VALUES ('2147483648', '2147483648');
CREATE TABLE TEAM (
	ID VARCHAR(20),
	TEAM_API_ID VARCHAR(20),
	TEAM_FIFA_API_ID VARCHAR(20),
	TEAM_LONG_NAME VARCHAR(20),
	TEAM_SHORT_NAME VARCHAR(20)
);
INSERT INTO TEAM VALUES ('2147483648', '2147483649', '2147483648', '2147483648', '2147483648');
CREATE TABLE TEAM_ATTRIBUTES (
	ID VARCHAR(20),
	TEAM_FIFA_API_ID VARCHAR(20),
	TEAM_API_ID VARCHAR(20),
	DATE VARCHAR(20),
	BUILDUPPLAYSPEED VARCHAR(20),
	BUILDUPPLAYSPEEDCLASS VARCHAR(20),
	BUILDUPPLAYDRIBBLING VARCHAR(20),
	BUILDUPPLAYDRIBBLINGCLASS VARCHAR(20),
	BUILDUPPLAYPASSING VARCHAR(20),
	BUILDUPPLAYPASSINGCLASS VARCHAR(20),
	BUILDUPPLAYPOSITIONINGCLASS VARCHAR(20),
	CHANCECREATIONPASSING VARCHAR(20),
	CHANCECREATIONPASSINGCLASS VARCHAR(20),
	CHANCECREATIONCROSSING VARCHAR(20),
	CHANCECREATIONCROSSINGCLASS VARCHAR(20),
	CHANCECREATIONSHOOTING VARCHAR(20),
	CHANCECREATIONSHOOTINGCLASS VARCHAR(20),
	CHANCECREATIONPOSITIONINGCLASS VARCHAR(20),
	DEFENCEPRESSURE VARCHAR(20),
	DEFENCEPRESSURECLASS VARCHAR(20),
	DEFENCEAGGRESSION VARCHAR(20),
	DEFENCEAGGRESSIONCLASS VARCHAR(20),
	DEFENCETEAMWIDTH VARCHAR(20),
	DEFENCETEAMWIDTHCLASS VARCHAR(20),
	DEFENCEDEFENDERLINECLASS VARCHAR(20)
);
INSERT INTO TEAM_ATTRIBUTES VALUES ('2147483648', '2147483648', '2147483649', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MATCH (
	ID VARCHAR(20),
	COUNTRY_ID VARCHAR(20),
	LEAGUE_ID VARCHAR(20),
	SEASON VARCHAR(20),
	STAGE VARCHAR(20),
	DATE VARCHAR(20),
	MATCH_API_ID VARCHAR(20),
	HOME_TEAM_API_ID VARCHAR(20),
	AWAY_TEAM_API_ID VARCHAR(20),
	HOME_TEAM_GOAL VARCHAR(20),
	AWAY_TEAM_GOAL VARCHAR(20)
);
INSERT INTO MATCH VALUES ('2147483648', '2147483648', '2147483648', '2015/2016', '2147483648', '2147483648', '2147483648', '2147483649', '2147483648', '2147483648', '2147483649');
-- ----------sql1------------
-- 2147483649
SELECT MATCH.HOME_TEAM_API_ID FROM MATCH WHERE MATCH.SEASON = '2015/2016' AND (MATCH.HOME_TEAM_GOAL - MATCH.AWAY_TEAM_GOAL) < 0 GROUP BY MATCH.HOME_TEAM_API_ID ORDER BY COUNT(MATCH.ID) ASC LIMIT 1;
-- ----------sql2------------
-- 2147483648
SELECT TEAMDETAILS.TEAM_LONG_NAME FROM MATCH AS MATCHDATA INNER JOIN TEAM AS TEAMDETAILS ON MATCHDATA.HOME_TEAM_API_ID = TEAMDETAILS.TEAM_API_ID WHERE MATCHDATA.SEASON = '2015/2016' AND MATCHDATA.HOME_TEAM_GOAL - MATCHDATA.AWAY_TEAM_GOAL < 0 GROUP BY MATCHDATA.HOME_TEAM_API_ID ORDER BY COUNT(*) ASC LIMIT 1;
",0.089603,SELECT MATCH.HOME_TEAM_API_ID FROM MATCH WHERE MATCH.SEASON = '2015/2016' AND (MATCH.HOME_TEAM_GOAL - MATCH.AWAY_TEAM_GOAL) < 0 GROUP BY MATCH.HOME_TEAM_API_ID ORDER BY COUNT(MATCH.ID) ASC LIMIT 1,SELECT TEAMDETAILS.TEAM_LONG_NAME FROM MATCH AS MATCHDATA INNER JOIN TEAM AS TEAMDETAILS ON MATCHDATA.HOME_TEAM_API_ID = TEAMDETAILS.TEAM_API_ID WHERE MATCHDATA.SEASON = '2015/2016' AND MATCHDATA.HOME_TEAM_GOAL - MATCHDATA.AWAY_TEAM_GOAL < 0 GROUP BY MATCHDATA.HOME_TEAM_API_ID ORDER BY COUNT(*) ASC LIMIT 1,
1,1027,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__PENALTIES`,,SELECT PLAYER.PLAYER_NAME FROM PLAYER ORDER BY PLAYER.PENALTIES DESC LIMIT 10;,SELECT T2.PLAYER_NAME FROM PLAYER_ATTRIBUTES AS T1 INNER JOIN PLAYER AS T2 ON T1.ID = T2.ID ORDER BY T1.PENALTIES DESC LIMIT 10,
2,1027,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__PENALTIES`,,SELECT PLAYER.PLAYER_NAME FROM PLAYER ORDER BY PLAYER.PENALTIES DESC LIMIT 10;,SELECT T2.PLAYER_NAME FROM PLAYER_ATTRIBUTES AS T1 INNER JOIN PLAYER AS T2 ON T1.ID = T2.ID ORDER BY T1.PENALTIES DESC LIMIT 10,
3,1027,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__PENALTIES`,,SELECT PLAYER.PLAYER_NAME FROM PLAYER ORDER BY PLAYER.PENALTIES DESC LIMIT 10;,SELECT T2.PLAYER_NAME FROM PLAYER_ATTRIBUTES AS T1 INNER JOIN PLAYER AS T2 ON T1.ID = T2.ID ORDER BY T1.PENALTIES DESC LIMIT 10,
1,1028,True,,0.132699,SELECT TEAM.TEAM_LONG_NAME FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID INNER JOIN TEAM ON MATCH.AWAY_TEAM_API_ID = TEAM.TEAM_API_ID WHERE LEAGUE.NAME = 'SCOTLAND PREMIER LEAGUE' AND MATCH.SEASON = '2009/2010' AND MATCH.AWAY_TEAM_GOAL > MATCH.HOME_TEAM_GOAL GROUP BY TEAM.TEAM_LONG_NAME ORDER BY COUNT(*) DESC LIMIT 1,SELECT TEAMINFO.TEAM_LONG_NAME FROM LEAGUE AS LEAGUEDATA INNER JOIN MATCH AS MATCHDATA ON LEAGUEDATA.ID = MATCHDATA.LEAGUE_ID INNER JOIN TEAM AS TEAMINFO ON MATCHDATA.AWAY_TEAM_API_ID = TEAMINFO.TEAM_API_ID WHERE LEAGUEDATA.NAME = 'SCOTLAND PREMIER LEAGUE' AND MATCHDATA.SEASON = '2009/2010' AND MATCHDATA.AWAY_TEAM_GOAL - MATCHDATA.HOME_TEAM_GOAL > 0 GROUP BY MATCHDATA.AWAY_TEAM_API_ID ORDER BY COUNT(*) DESC LIMIT 1,
1,1029,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__BUILDUPPLAYSPEED`,,SELECT TEAM.BUILDUPPLAYSPEED FROM TEAM ORDER BY TEAM.BUILDUPPLAYSPEED DESC LIMIT 4,SELECT T1.BUILDUPPLAYSPEED FROM TEAM_ATTRIBUTES AS T1 INNER JOIN TEAM AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID ORDER BY T1.BUILDUPPLAYSPEED ASC LIMIT 4,
2,1029,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__BUILDUPPLAYSPEED`,,SELECT TEAM.BUILDUPPLAYSPEED FROM TEAM ORDER BY TEAM.BUILDUPPLAYSPEED DESC LIMIT 4,SELECT T1.BUILDUPPLAYSPEED FROM TEAM_ATTRIBUTES AS T1 INNER JOIN TEAM AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID ORDER BY T1.BUILDUPPLAYSPEED ASC LIMIT 4,
3,1029,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__BUILDUPPLAYSPEED`,,SELECT TEAM.BUILDUPPLAYSPEED FROM TEAM ORDER BY TEAM.BUILDUPPLAYSPEED DESC LIMIT 4,SELECT T1.BUILDUPPLAYSPEED FROM TEAM_ATTRIBUTES AS T1 INNER JOIN TEAM AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID ORDER BY T1.BUILDUPPLAYSPEED ASC LIMIT 4,
1,1030,ERROR,AttributeError: 'FProjectionTable' object has no attribute 'set_attributes',,SELECT LEAGUE.NAME FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE MATCH.SEASON = '2015/2016' GROUP BY LEAGUE.NAME HAVING SUM(CASE WHEN MATCH.HOME_TEAM_GOAL = MATCH.AWAY_TEAM_GOAL THEN 1 ELSE 0 END) = (SELECT MAX(SUM_DRAWS) FROM (SELECT SUM(CASE WHEN HOME_TEAM_GOAL = AWAY_TEAM_GOAL THEN 1 ELSE 0 END) AS SUM_DRAWS FROM MATCH WHERE SEASON = '2015/2016' GROUP BY LEAGUE_ID)),SELECT T2.NAME FROM MATCH AS T1 INNER JOIN LEAGUE AS T2 ON T1.LEAGUE_ID = T2.ID WHERE T1.SEASON = '2015/2016' AND T1.HOME_TEAM_GOAL = T1.AWAY_TEAM_GOAL GROUP BY T2.NAME ORDER BY COUNT(T1.ID) DESC LIMIT 1,
2,1030,ERROR,AttributeError: 'FProjectionTable' object has no attribute 'set_attributes',,SELECT LEAGUE.NAME FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE MATCH.SEASON = '2015/2016' GROUP BY LEAGUE.NAME HAVING SUM(CASE WHEN MATCH.HOME_TEAM_GOAL = MATCH.AWAY_TEAM_GOAL THEN 1 ELSE 0 END) = (SELECT MAX(SUM_DRAWS) FROM (SELECT SUM(CASE WHEN HOME_TEAM_GOAL = AWAY_TEAM_GOAL THEN 1 ELSE 0 END) AS SUM_DRAWS FROM MATCH WHERE SEASON = '2015/2016' GROUP BY LEAGUE_ID)),SELECT T2.NAME FROM MATCH AS T1 INNER JOIN LEAGUE AS T2 ON T1.LEAGUE_ID = T2.ID WHERE T1.SEASON = '2015/2016' AND T1.HOME_TEAM_GOAL = T1.AWAY_TEAM_GOAL GROUP BY T2.NAME ORDER BY COUNT(T1.ID) DESC LIMIT 1,
3,1030,ERROR,AttributeError: 'FProjectionTable' object has no attribute 'set_attributes',,SELECT LEAGUE.NAME FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE MATCH.SEASON = '2015/2016' GROUP BY LEAGUE.NAME HAVING SUM(CASE WHEN MATCH.HOME_TEAM_GOAL = MATCH.AWAY_TEAM_GOAL THEN 1 ELSE 0 END) = (SELECT MAX(SUM_DRAWS) FROM (SELECT SUM(CASE WHEN HOME_TEAM_GOAL = AWAY_TEAM_GOAL THEN 1 ELSE 0 END) AS SUM_DRAWS FROM MATCH WHERE SEASON = '2015/2016' GROUP BY LEAGUE_ID)),SELECT T2.NAME FROM MATCH AS T1 INNER JOIN LEAGUE AS T2 ON T1.LEAGUE_ID = T2.ID WHERE T1.SEASON = '2015/2016' AND T1.HOME_TEAM_GOAL = T1.AWAY_TEAM_GOAL GROUP BY T2.NAME ORDER BY COUNT(T1.ID) DESC LIMIT 1,
1,1031,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__SPRINT_SPEED`,,SELECT (DATETIME() - PLAYER.BIRTHDAY) AS PLAYERS_AGE_AT_PRESENT FROM PLAYER WHERE PLAYER.SPRINT_SPEED >= 97 AND YEAR(PLAYER.DATE) >= 2013 AND YEAR(PLAYER.DATE) <= 2015,"SELECT DISTINCT DATETIME() - T2.BIRTHDAY AGE FROM PLAYER_ATTRIBUTES AS T1 INNER JOIN PLAYER AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE STRFTIME('%Y',T1.`DATE`) >= '2013' AND STRFTIME('%Y',T1.`DATE`) <= '2015' AND T1.SPRINT_SPEED >= 97",
2,1031,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__SPRINT_SPEED`,,SELECT (DATETIME() - PLAYER.BIRTHDAY) AS PLAYERS_AGE_AT_PRESENT FROM PLAYER WHERE PLAYER.SPRINT_SPEED >= 97 AND YEAR(PLAYER.DATE) >= 2013 AND YEAR(PLAYER.DATE) <= 2015,"SELECT DISTINCT DATETIME() - T2.BIRTHDAY AGE FROM PLAYER_ATTRIBUTES AS T1 INNER JOIN PLAYER AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE STRFTIME('%Y',T1.`DATE`) >= '2013' AND STRFTIME('%Y',T1.`DATE`) <= '2015' AND T1.SPRINT_SPEED >= 97",
3,1031,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__SPRINT_SPEED`,,SELECT (DATETIME() - PLAYER.BIRTHDAY) AS PLAYERS_AGE_AT_PRESENT FROM PLAYER WHERE PLAYER.SPRINT_SPEED >= 97 AND YEAR(PLAYER.DATE) >= 2013 AND YEAR(PLAYER.DATE) <= 2015,"SELECT DISTINCT DATETIME() - T2.BIRTHDAY AGE FROM PLAYER_ATTRIBUTES AS T1 INNER JOIN PLAYER AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE STRFTIME('%Y',T1.`DATE`) >= '2013' AND STRFTIME('%Y',T1.`DATE`) <= '2015' AND T1.SPRINT_SPEED >= 97",
1,1032,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LEAGUE__LEAGUE_NAME`,,"SELECT LEAGUE.LEAGUE_NAME, COUNT(LEAGUE.LEAGUE_ID) AS MATCHES_PLAYED FROM LEAGUE INNER JOIN MATCH ON LEAGUE.ID = MATCH.LEAGUE_ID GROUP BY LEAGUE.LEAGUE_ID ORDER BY MATCHES_PLAYED DESC LIMIT 1;","SELECT T2.NAME, T1.MAX_COUNT FROM LEAGUE AS T2 JOIN (SELECT LEAGUE_ID, MAX(CNT) AS MAX_COUNT FROM (SELECT LEAGUE_ID, COUNT(ID) AS CNT FROM MATCH GROUP BY LEAGUE_ID) AS SUBQUERY) AS T1 ON T1.LEAGUE_ID = T2.ID",
2,1032,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LEAGUE__LEAGUE_NAME`,,"SELECT LEAGUE.LEAGUE_NAME, COUNT(LEAGUE.LEAGUE_ID) AS MATCHES_PLAYED FROM LEAGUE INNER JOIN MATCH ON LEAGUE.ID = MATCH.LEAGUE_ID GROUP BY LEAGUE.LEAGUE_ID ORDER BY MATCHES_PLAYED DESC LIMIT 1;","SELECT T2.NAME, T1.MAX_COUNT FROM LEAGUE AS T2 JOIN (SELECT LEAGUE_ID, MAX(CNT) AS MAX_COUNT FROM (SELECT LEAGUE_ID, COUNT(ID) AS CNT FROM MATCH GROUP BY LEAGUE_ID) AS SUBQUERY) AS T1 ON T1.LEAGUE_ID = T2.ID",
3,1032,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LEAGUE__LEAGUE_NAME`,,"SELECT LEAGUE.LEAGUE_NAME, COUNT(LEAGUE.LEAGUE_ID) AS MATCHES_PLAYED FROM LEAGUE INNER JOIN MATCH ON LEAGUE.ID = MATCH.LEAGUE_ID GROUP BY LEAGUE.LEAGUE_ID ORDER BY MATCHES_PLAYED DESC LIMIT 1;","SELECT T2.NAME, T1.MAX_COUNT FROM LEAGUE AS T2 JOIN (SELECT LEAGUE_ID, MAX(CNT) AS MAX_COUNT FROM (SELECT LEAGUE_ID, COUNT(ID) AS CNT FROM MATCH GROUP BY LEAGUE_ID) AS SUBQUERY) AS T1 ON T1.LEAGUE_ID = T2.ID",
1,1033,ERROR,"NotImplementedError: {'substr': ['BIRTHDAY', 1, 4]}",,SELECT AVG(PLAYER.HEIGHT) FROM PLAYER WHERE PLAYER.BIRTHDAY >= '1990-01-01 00:00:00' AND PLAYER.BIRTHDAY < '1996-01-01 00:00:00';,"SELECT SUM(HEIGHT) / COUNT(ID) FROM PLAYER WHERE SUBSTR(BIRTHDAY, 1, 4) BETWEEN '1990' AND '1995'",
2,1033,ERROR,"NotImplementedError: {'substr': ['BIRTHDAY', 1, 4]}",,SELECT AVG(PLAYER.HEIGHT) FROM PLAYER WHERE PLAYER.BIRTHDAY >= '1990-01-01 00:00:00' AND PLAYER.BIRTHDAY < '1996-01-01 00:00:00';,"SELECT SUM(HEIGHT) / COUNT(ID) FROM PLAYER WHERE SUBSTR(BIRTHDAY, 1, 4) BETWEEN '1990' AND '1995'",
3,1033,ERROR,"NotImplementedError: {'substr': ['BIRTHDAY', 1, 4]}",,SELECT AVG(PLAYER.HEIGHT) FROM PLAYER WHERE PLAYER.BIRTHDAY >= '1990-01-01 00:00:00' AND PLAYER.BIRTHDAY < '1996-01-01 00:00:00';,"SELECT SUM(HEIGHT) / COUNT(ID) FROM PLAYER WHERE SUBSTR(BIRTHDAY, 1, 4) BETWEEN '1990' AND '1995'",
1,1034,ERROR,"NotImplementedError: {'substr': ['DATE', 1, 4]}",,"SELECT PLAYER_API_ID FROM PLAYER_ATTRIBUTES WHERE SUBSTR(DATE,1,4) = '2010' ORDER BY OVERALL_RATING DESC LIMIT 1","SELECT PLAYER_API_ID FROM PLAYER_ATTRIBUTES WHERE SUBSTR(`DATE`, 1, 4) = '2010' ORDER BY OVERALL_RATING DESC LIMIT 1",
2,1034,ERROR,"NotImplementedError: {'substr': ['DATE', 1, 4]}",,"SELECT PLAYER_API_ID FROM PLAYER_ATTRIBUTES WHERE SUBSTR(DATE,1,4) = '2010' ORDER BY OVERALL_RATING DESC LIMIT 1","SELECT PLAYER_API_ID FROM PLAYER_ATTRIBUTES WHERE SUBSTR(`DATE`, 1, 4) = '2010' ORDER BY OVERALL_RATING DESC LIMIT 1",
3,1034,ERROR,"NotImplementedError: {'substr': ['DATE', 1, 4]}",,"SELECT PLAYER_API_ID FROM PLAYER_ATTRIBUTES WHERE SUBSTR(DATE,1,4) = '2010' ORDER BY OVERALL_RATING DESC LIMIT 1","SELECT PLAYER_API_ID FROM PLAYER_ATTRIBUTES WHERE SUBSTR(`DATE`, 1, 4) = '2010' ORDER BY OVERALL_RATING DESC LIMIT 1",
1,1035,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BUILDUPPLAYSPEED`,,SELECT TEAM_FIFA_API_ID FROM TEAM WHERE BUILDUPPLAYSPEED > 50 AND BUILDUPPLAYSPEED < 60,SELECT DISTINCT TEAM_FIFA_API_ID FROM TEAM_ATTRIBUTES WHERE BUILDUPPLAYSPEED > 50 AND BUILDUPPLAYSPEED < 60,
2,1035,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BUILDUPPLAYSPEED`,,SELECT TEAM_FIFA_API_ID FROM TEAM WHERE BUILDUPPLAYSPEED > 50 AND BUILDUPPLAYSPEED < 60,SELECT DISTINCT TEAM_FIFA_API_ID FROM TEAM_ATTRIBUTES WHERE BUILDUPPLAYSPEED > 50 AND BUILDUPPLAYSPEED < 60,
3,1035,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BUILDUPPLAYSPEED`,,SELECT TEAM_FIFA_API_ID FROM TEAM WHERE BUILDUPPLAYSPEED > 50 AND BUILDUPPLAYSPEED < 60,SELECT DISTINCT TEAM_FIFA_API_ID FROM TEAM_ATTRIBUTES WHERE BUILDUPPLAYSPEED > 50 AND BUILDUPPLAYSPEED < 60,
1,1036,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'DATE']}",,"SELECT TEAM_LONG_NAME FROM TEAM INNER JOIN TEAM_ATTRIBUTES ON TEAM.TEAM_API_ID = TEAM_ATTRIBUTES.TEAM_API_ID WHERE STRFTIME('%Y', DATE) = '2012' AND BUILDUPPLAYPASSING > (SELECT AVG(BUILDUPPLAYPASSING) FROM TEAM_ATTRIBUTES WHERE BUILDUPPLAYPASSING IS NOT NULL AND STRFTIME('%Y', DATE) = '2012')","SELECT DISTINCT T4.TEAM_LONG_NAME FROM TEAM_ATTRIBUTES AS T3 INNER JOIN TEAM AS T4 ON T3.TEAM_API_ID = T4.TEAM_API_ID WHERE SUBSTR(T3.`DATE`, 1, 4) = '2012' AND T3.BUILDUPPLAYPASSING > ( SELECT CAST(SUM(T2.BUILDUPPLAYPASSING) AS REAL) / COUNT(T1.ID) FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE STRFTIME('%Y',T2.`DATE`) = '2012')",
2,1036,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'DATE']}",,"SELECT TEAM_LONG_NAME FROM TEAM INNER JOIN TEAM_ATTRIBUTES ON TEAM.TEAM_API_ID = TEAM_ATTRIBUTES.TEAM_API_ID WHERE STRFTIME('%Y', DATE) = '2012' AND BUILDUPPLAYPASSING > (SELECT AVG(BUILDUPPLAYPASSING) FROM TEAM_ATTRIBUTES WHERE BUILDUPPLAYPASSING IS NOT NULL AND STRFTIME('%Y', DATE) = '2012')","SELECT DISTINCT T4.TEAM_LONG_NAME FROM TEAM_ATTRIBUTES AS T3 INNER JOIN TEAM AS T4 ON T3.TEAM_API_ID = T4.TEAM_API_ID WHERE SUBSTR(T3.`DATE`, 1, 4) = '2012' AND T3.BUILDUPPLAYPASSING > ( SELECT CAST(SUM(T2.BUILDUPPLAYPASSING) AS REAL) / COUNT(T1.ID) FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE STRFTIME('%Y',T2.`DATE`) = '2012')",
3,1036,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'DATE']}",,"SELECT TEAM_LONG_NAME FROM TEAM INNER JOIN TEAM_ATTRIBUTES ON TEAM.TEAM_API_ID = TEAM_ATTRIBUTES.TEAM_API_ID WHERE STRFTIME('%Y', DATE) = '2012' AND BUILDUPPLAYPASSING > (SELECT AVG(BUILDUPPLAYPASSING) FROM TEAM_ATTRIBUTES WHERE BUILDUPPLAYPASSING IS NOT NULL AND STRFTIME('%Y', DATE) = '2012')","SELECT DISTINCT T4.TEAM_LONG_NAME FROM TEAM_ATTRIBUTES AS T3 INNER JOIN TEAM AS T4 ON T3.TEAM_API_ID = T4.TEAM_API_ID WHERE SUBSTR(T3.`DATE`, 1, 4) = '2012' AND T3.BUILDUPPLAYPASSING > ( SELECT CAST(SUM(T2.BUILDUPPLAYPASSING) AS REAL) / COUNT(T1.ID) FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE STRFTIME('%Y',T2.`DATE`) = '2012')",
1,1037,ERROR,"NotImplementedError: {'extract': ['year', 'BIRTHDAY']}",,SELECT CAST(COUNT(*) FILTER (WHERE PREFERRED_FOOT = 'LEFT') AS REAL) * 100 / COUNT(*) FROM PLAYER WHERE EXTRACT(YEAR FROM BIRTHDAY) BETWEEN 1987 AND 1992;,"SELECT CAST(COUNT(CASE WHEN T2.PREFERRED_FOOT = 'LEFT' THEN T1.ID ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) PERCENT FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE SUBSTR(T1.BIRTHDAY, 1, 4) BETWEEN '1987' AND '1992'",
2,1037,ERROR,"NotImplementedError: {'extract': ['year', 'BIRTHDAY']}",,SELECT CAST(COUNT(*) FILTER (WHERE PREFERRED_FOOT = 'LEFT') AS REAL) * 100 / COUNT(*) FROM PLAYER WHERE EXTRACT(YEAR FROM BIRTHDAY) BETWEEN 1987 AND 1992;,"SELECT CAST(COUNT(CASE WHEN T2.PREFERRED_FOOT = 'LEFT' THEN T1.ID ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) PERCENT FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE SUBSTR(T1.BIRTHDAY, 1, 4) BETWEEN '1987' AND '1992'",
3,1037,ERROR,"NotImplementedError: {'extract': ['year', 'BIRTHDAY']}",,SELECT CAST(COUNT(*) FILTER (WHERE PREFERRED_FOOT = 'LEFT') AS REAL) * 100 / COUNT(*) FROM PLAYER WHERE EXTRACT(YEAR FROM BIRTHDAY) BETWEEN 1987 AND 1992;,"SELECT CAST(COUNT(CASE WHEN T2.PREFERRED_FOOT = 'LEFT' THEN T1.ID ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) PERCENT FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE SUBSTR(T1.BIRTHDAY, 1, 4) BETWEEN '1987' AND '1992'",
1,1038,False,,,SELECT LEAGUE.NAME FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID GROUP BY LEAGUE.NAME ORDER BY SUM(HOME_TEAM_GOAL + AWAY_TEAM_GOAL) ASC LIMIT 5,"SELECT T1.NAME, SUM(T2.HOME_TEAM_GOAL) + SUM(T2.AWAY_TEAM_GOAL) FROM LEAGUE AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.LEAGUE_ID GROUP BY T1.NAME ORDER BY SUM(T2.HOME_TEAM_GOAL) + SUM(T2.AWAY_TEAM_GOAL) ASC LIMIT 5",
1,1039,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__LONG_SHOTS`,,SELECT AVG(PLAYER.LONG_SHOTS) FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'AHMED SAMIR FARAG',SELECT CAST(SUM(T2.LONG_SHOTS) AS REAL) / COUNT(T2.`DATE`) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'AHMED SAMIR FARAG',
2,1039,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__LONG_SHOTS`,,SELECT AVG(PLAYER.LONG_SHOTS) FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'AHMED SAMIR FARAG',SELECT CAST(SUM(T2.LONG_SHOTS) AS REAL) / COUNT(T2.`DATE`) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'AHMED SAMIR FARAG',
3,1039,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__LONG_SHOTS`,,SELECT AVG(PLAYER.LONG_SHOTS) FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'AHMED SAMIR FARAG',SELECT CAST(SUM(T2.LONG_SHOTS) AS REAL) / COUNT(T2.`DATE`) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'AHMED SAMIR FARAG',
1,1040,ERROR,IndexError: list index out of range,,SELECT PLAYER.PLAYER_NAME FROM PLAYER WHERE PLAYER.HEIGHT > 180 GROUP BY PLAYER.PLAYER_NAME ORDER BY AVG(PLAYER.HEADING_ACCURACY) DESC LIMIT 10,SELECT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.HEIGHT > 180 GROUP BY T1.ID ORDER BY CAST(SUM(T2.HEADING_ACCURACY) AS REAL) / COUNT(T2.`PLAYER_FIFA_API_ID`) DESC LIMIT 10,
2,1040,ERROR,IndexError: list index out of range,,SELECT PLAYER.PLAYER_NAME FROM PLAYER WHERE PLAYER.HEIGHT > 180 GROUP BY PLAYER.PLAYER_NAME ORDER BY AVG(PLAYER.HEADING_ACCURACY) DESC LIMIT 10,SELECT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.HEIGHT > 180 GROUP BY T1.ID ORDER BY CAST(SUM(T2.HEADING_ACCURACY) AS REAL) / COUNT(T2.`PLAYER_FIFA_API_ID`) DESC LIMIT 10,
3,1040,ERROR,IndexError: list index out of range,,SELECT PLAYER.PLAYER_NAME FROM PLAYER WHERE PLAYER.HEIGHT > 180 GROUP BY PLAYER.PLAYER_NAME ORDER BY AVG(PLAYER.HEADING_ACCURACY) DESC LIMIT 10,SELECT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.HEIGHT > 180 GROUP BY T1.ID ORDER BY CAST(SUM(T2.HEADING_ACCURACY) AS REAL) / COUNT(T2.`PLAYER_FIFA_API_ID`) DESC LIMIT 10,
1,1041,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__TEAM_LONG_NAME`,,SELECT TEAM.TEAM_LONG_NAME FROM TEAM INNER JOIN TEAM_ATTRIBUTES ON TEAM.TEAM_API_ID = TEAM_ATTRIBUTES.TEAM_API_ID WHERE TEAM_ATTRIBUTES.BUILDUPPLAYDRIBBLINGCLASS = 'NORMAL' AND TEAM_ATTRIBUTES.DATE >= '2014-01-01 00:00:00' AND TEAM_ATTRIBUTES.DATE <= '2014-12-31 23:59:59' AND TEAM_ATTRIBUTES.CHANCECREATIONPASSING < ( SELECT AVG(TEAM_ATTRIBUTES.CHANCECREATIONPASSING) FROM TEAM_ATTRIBUTES WHERE TEAM_ATTRIBUTES.BUILDUPPLAYDRIBBLINGCLASS = 'NORMAL' AND TEAM_ATTRIBUTES.DATE >= '2014-01-01 00:00:00' AND TEAM_ATTRIBUTES.DATE <= '2014-12-31 23:59:59' ) ORDER BY TEAM_ATTRIBUTES.CHANCECREATIONPASSING DESC,"SELECT T3.TEAM_LONG_NAME FROM TEAM AS T3 INNER JOIN TEAM_ATTRIBUTES AS T4 ON T3.TEAM_API_ID = T4.TEAM_API_ID WHERE T4.BUILDUPPLAYDRIBBLINGCLASS = 'NORMAL' AND T4.CHANCECREATIONPASSING < ( SELECT CAST(SUM(T2.CHANCECREATIONPASSING) AS REAL) / COUNT(T1.ID) FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T2.BUILDUPPLAYDRIBBLINGCLASS = 'NORMAL' AND SUBSTR(T2.`DATE`, 1, 4) = '2014') ORDER BY T4.CHANCECREATIONPASSING DESC",
2,1041,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__TEAM_LONG_NAME`,,SELECT TEAM.TEAM_LONG_NAME FROM TEAM INNER JOIN TEAM_ATTRIBUTES ON TEAM.TEAM_API_ID = TEAM_ATTRIBUTES.TEAM_API_ID WHERE TEAM_ATTRIBUTES.BUILDUPPLAYDRIBBLINGCLASS = 'NORMAL' AND TEAM_ATTRIBUTES.DATE >= '2014-01-01 00:00:00' AND TEAM_ATTRIBUTES.DATE <= '2014-12-31 23:59:59' AND TEAM_ATTRIBUTES.CHANCECREATIONPASSING < ( SELECT AVG(TEAM_ATTRIBUTES.CHANCECREATIONPASSING) FROM TEAM_ATTRIBUTES WHERE TEAM_ATTRIBUTES.BUILDUPPLAYDRIBBLINGCLASS = 'NORMAL' AND TEAM_ATTRIBUTES.DATE >= '2014-01-01 00:00:00' AND TEAM_ATTRIBUTES.DATE <= '2014-12-31 23:59:59' ) ORDER BY TEAM_ATTRIBUTES.CHANCECREATIONPASSING DESC,"SELECT T3.TEAM_LONG_NAME FROM TEAM AS T3 INNER JOIN TEAM_ATTRIBUTES AS T4 ON T3.TEAM_API_ID = T4.TEAM_API_ID WHERE T4.BUILDUPPLAYDRIBBLINGCLASS = 'NORMAL' AND T4.CHANCECREATIONPASSING < ( SELECT CAST(SUM(T2.CHANCECREATIONPASSING) AS REAL) / COUNT(T1.ID) FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T2.BUILDUPPLAYDRIBBLINGCLASS = 'NORMAL' AND SUBSTR(T2.`DATE`, 1, 4) = '2014') ORDER BY T4.CHANCECREATIONPASSING DESC",
3,1041,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__TEAM_LONG_NAME`,,SELECT TEAM.TEAM_LONG_NAME FROM TEAM INNER JOIN TEAM_ATTRIBUTES ON TEAM.TEAM_API_ID = TEAM_ATTRIBUTES.TEAM_API_ID WHERE TEAM_ATTRIBUTES.BUILDUPPLAYDRIBBLINGCLASS = 'NORMAL' AND TEAM_ATTRIBUTES.DATE >= '2014-01-01 00:00:00' AND TEAM_ATTRIBUTES.DATE <= '2014-12-31 23:59:59' AND TEAM_ATTRIBUTES.CHANCECREATIONPASSING < ( SELECT AVG(TEAM_ATTRIBUTES.CHANCECREATIONPASSING) FROM TEAM_ATTRIBUTES WHERE TEAM_ATTRIBUTES.BUILDUPPLAYDRIBBLINGCLASS = 'NORMAL' AND TEAM_ATTRIBUTES.DATE >= '2014-01-01 00:00:00' AND TEAM_ATTRIBUTES.DATE <= '2014-12-31 23:59:59' ) ORDER BY TEAM_ATTRIBUTES.CHANCECREATIONPASSING DESC,"SELECT T3.TEAM_LONG_NAME FROM TEAM AS T3 INNER JOIN TEAM_ATTRIBUTES AS T4 ON T3.TEAM_API_ID = T4.TEAM_API_ID WHERE T4.BUILDUPPLAYDRIBBLINGCLASS = 'NORMAL' AND T4.CHANCECREATIONPASSING < ( SELECT CAST(SUM(T2.CHANCECREATIONPASSING) AS REAL) / COUNT(T1.ID) FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T2.BUILDUPPLAYDRIBBLINGCLASS = 'NORMAL' AND SUBSTR(T2.`DATE`, 1, 4) = '2014') ORDER BY T4.CHANCECREATIONPASSING DESC",
1,1042,ERROR,NotImplementedError: {'real': {}},,SELECT LEAGUE.NAME FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE MATCH.SEASON = '2009/2010' GROUP BY LEAGUE.NAME HAVING AVG(MATCH.HOME_TEAM_GOAL) > AVG(MATCH.AWAY_TEAM_GOAL),SELECT T1.NAME FROM LEAGUE AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.LEAGUE_ID WHERE T2.SEASON = '2009/2010' GROUP BY T1.NAME HAVING (CAST(SUM(T2.HOME_TEAM_GOAL) AS REAL) / COUNT(DISTINCT T2.ID)) - (CAST(SUM(T2.AWAY_TEAM_GOAL) AS REAL) / COUNT(DISTINCT T2.ID)) > 0,
2,1042,ERROR,NotImplementedError: {'real': {}},,SELECT LEAGUE.NAME FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE MATCH.SEASON = '2009/2010' GROUP BY LEAGUE.NAME HAVING AVG(MATCH.HOME_TEAM_GOAL) > AVG(MATCH.AWAY_TEAM_GOAL),SELECT T1.NAME FROM LEAGUE AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.LEAGUE_ID WHERE T2.SEASON = '2009/2010' GROUP BY T1.NAME HAVING (CAST(SUM(T2.HOME_TEAM_GOAL) AS REAL) / COUNT(DISTINCT T2.ID)) - (CAST(SUM(T2.AWAY_TEAM_GOAL) AS REAL) / COUNT(DISTINCT T2.ID)) > 0,
3,1042,ERROR,NotImplementedError: {'real': {}},,SELECT LEAGUE.NAME FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE MATCH.SEASON = '2009/2010' GROUP BY LEAGUE.NAME HAVING AVG(MATCH.HOME_TEAM_GOAL) > AVG(MATCH.AWAY_TEAM_GOAL),SELECT T1.NAME FROM LEAGUE AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.LEAGUE_ID WHERE T2.SEASON = '2009/2010' GROUP BY T1.NAME HAVING (CAST(SUM(T2.HOME_TEAM_GOAL) AS REAL) / COUNT(DISTINCT T2.ID)) - (CAST(SUM(T2.AWAY_TEAM_GOAL) AS REAL) / COUNT(DISTINCT T2.ID)) > 0,
1,1043,True,,0.040874,SELECT TEAM_SHORT_NAME FROM TEAM WHERE TEAM_LONG_NAME = 'QUEENS PARK RANGERS',SELECT TEAM_SHORT_NAME FROM TEAM WHERE TEAM_LONG_NAME = 'QUEENS PARK RANGERS',
1,1044,ERROR,"NotImplementedError: {'substr': ['PLAYER__BIRTHDAY', 1, 7]}",,"SELECT PLAYER.NAME FROM PLAYER WHERE SUBSTR(PLAYER.BIRTHDAY,1,7) = '1970-10';","SELECT PLAYER_NAME FROM PLAYER WHERE SUBSTR(BIRTHDAY, 1, 7) = '1970-10'",
2,1044,ERROR,"NotImplementedError: {'substr': ['PLAYER__BIRTHDAY', 1, 7]}",,"SELECT PLAYER.NAME FROM PLAYER WHERE SUBSTR(PLAYER.BIRTHDAY,1,7) = '1970-10';","SELECT PLAYER_NAME FROM PLAYER WHERE SUBSTR(BIRTHDAY, 1, 7) = '1970-10'",
3,1044,ERROR,"NotImplementedError: {'substr': ['PLAYER__BIRTHDAY', 1, 7]}",,"SELECT PLAYER.NAME FROM PLAYER WHERE SUBSTR(PLAYER.BIRTHDAY,1,7) = '1970-10';","SELECT PLAYER_NAME FROM PLAYER WHERE SUBSTR(BIRTHDAY, 1, 7) = '1970-10'",
1,1045,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `FOOTBALL_PLAYER`,,SELECT FOOTBALL_PLAYER.ATTACKING_WORK_RATE FROM FOOTBALL_PLAYER WHERE FOOTBALL_PLAYER.NAME = 'FRANCO ZENNARO';,SELECT DISTINCT T2.ATTACKING_WORK_RATE FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'FRANCO ZENNARO',
2,1045,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `FOOTBALL_PLAYER`,,SELECT FOOTBALL_PLAYER.ATTACKING_WORK_RATE FROM FOOTBALL_PLAYER WHERE FOOTBALL_PLAYER.NAME = 'FRANCO ZENNARO';,SELECT DISTINCT T2.ATTACKING_WORK_RATE FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'FRANCO ZENNARO',
3,1045,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `FOOTBALL_PLAYER`,,SELECT FOOTBALL_PLAYER.ATTACKING_WORK_RATE FROM FOOTBALL_PLAYER WHERE FOOTBALL_PLAYER.NAME = 'FRANCO ZENNARO';,SELECT DISTINCT T2.ATTACKING_WORK_RATE FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'FRANCO ZENNARO',
1,1046,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BUILDUPPLAYPOSITIONINGCLASS`,,SELECT BUILDUPPLAYPOSITIONINGCLASS FROM TEAM WHERE TEAM_LONG_NAME = 'ADO DEN HAAG',SELECT DISTINCT T2.BUILDUPPLAYPOSITIONINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_FIFA_API_ID = T2.TEAM_FIFA_API_ID WHERE T1.TEAM_LONG_NAME = 'ADO DEN HAAG',
2,1046,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BUILDUPPLAYPOSITIONINGCLASS`,,SELECT BUILDUPPLAYPOSITIONINGCLASS FROM TEAM WHERE TEAM_LONG_NAME = 'ADO DEN HAAG',SELECT DISTINCT T2.BUILDUPPLAYPOSITIONINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_FIFA_API_ID = T2.TEAM_FIFA_API_ID WHERE T1.TEAM_LONG_NAME = 'ADO DEN HAAG',
3,1046,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BUILDUPPLAYPOSITIONINGCLASS`,,SELECT BUILDUPPLAYPOSITIONINGCLASS FROM TEAM WHERE TEAM_LONG_NAME = 'ADO DEN HAAG',SELECT DISTINCT T2.BUILDUPPLAYPOSITIONINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_FIFA_API_ID = T2.TEAM_FIFA_API_ID WHERE T1.TEAM_LONG_NAME = 'ADO DEN HAAG',
1,1047,ERROR,"NotImplementedError: {'substr': ['T2__DATE', 1, 10]}",,SELECT PLAYER_ATTRIBUTES.HEADING_ACCURACY FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID WHERE PLAYER.PLAYER_NAME = 'FRANCOIS AFFOLTER' AND PLAYER_ATTRIBUTES.DATE = '2014-09-18 00:00:00';,"SELECT T2.HEADING_ACCURACY FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'FRANCOIS AFFOLTER' AND SUBSTR(T2.`DATE`, 1, 10) = '2014-09-18'",
2,1047,ERROR,"NotImplementedError: {'substr': ['T2__DATE', 1, 10]}",,SELECT PLAYER_ATTRIBUTES.HEADING_ACCURACY FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID WHERE PLAYER.PLAYER_NAME = 'FRANCOIS AFFOLTER' AND PLAYER_ATTRIBUTES.DATE = '2014-09-18 00:00:00';,"SELECT T2.HEADING_ACCURACY FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'FRANCOIS AFFOLTER' AND SUBSTR(T2.`DATE`, 1, 10) = '2014-09-18'",
3,1047,ERROR,"NotImplementedError: {'substr': ['T2__DATE', 1, 10]}",,SELECT PLAYER_ATTRIBUTES.HEADING_ACCURACY FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID WHERE PLAYER.PLAYER_NAME = 'FRANCOIS AFFOLTER' AND PLAYER_ATTRIBUTES.DATE = '2014-09-18 00:00:00';,"SELECT T2.HEADING_ACCURACY FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'FRANCOIS AFFOLTER' AND SUBSTR(T2.`DATE`, 1, 10) = '2014-09-18'",
1,1048,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'DATE']}",,"SELECT OVERALL_RATING FROM PLAYER_ATTRIBUTES WHERE STRFTIME('%Y', DATE) = '2011' AND PLAYER_NAME = 'GABRIEL TAMAS';","SELECT T2.OVERALL_RATING FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'GABRIEL TAMAS' AND STRFTIME('%Y', T2.DATE) = '2011'",
2,1048,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'DATE']}",,"SELECT OVERALL_RATING FROM PLAYER_ATTRIBUTES WHERE STRFTIME('%Y', DATE) = '2011' AND PLAYER_NAME = 'GABRIEL TAMAS';","SELECT T2.OVERALL_RATING FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'GABRIEL TAMAS' AND STRFTIME('%Y', T2.DATE) = '2011'",
3,1048,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'DATE']}",,"SELECT OVERALL_RATING FROM PLAYER_ATTRIBUTES WHERE STRFTIME('%Y', DATE) = '2011' AND PLAYER_NAME = 'GABRIEL TAMAS';","SELECT T2.OVERALL_RATING FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'GABRIEL TAMAS' AND STRFTIME('%Y', T2.DATE) = '2011'",
1,1049,True,,0.085093,SELECT COUNT(*) FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE LEAGUE.NAME = 'SCOTLAND PREMIER LEAGUE' AND MATCH.SEASON = '2015/2016';,SELECT COUNT(T2.ID) FROM LEAGUE AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.LEAGUE_ID WHERE T2.SEASON = '2015/2016' AND T1.NAME = 'SCOTLAND PREMIER LEAGUE',
1,1050,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__PREFERRED_FOOT`,,SELECT PLAYER.PREFERRED_FOOT FROM PLAYER ORDER BY PLAYER.BIRTHDAY DESC LIMIT 1,SELECT T2.PREFERRED_FOOT FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID ORDER BY T1.BIRTHDAY DESC LIMIT 1,
2,1050,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__PREFERRED_FOOT`,,SELECT PLAYER.PREFERRED_FOOT FROM PLAYER ORDER BY PLAYER.BIRTHDAY DESC LIMIT 1,SELECT T2.PREFERRED_FOOT FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID ORDER BY T1.BIRTHDAY DESC LIMIT 1,
3,1050,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__PREFERRED_FOOT`,,SELECT PLAYER.PREFERRED_FOOT FROM PLAYER ORDER BY PLAYER.BIRTHDAY DESC LIMIT 1,SELECT T2.PREFERRED_FOOT FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID ORDER BY T1.BIRTHDAY DESC LIMIT 1,
1,1051,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `FOOTBALL_PLAYER`,,SELECT FOOTBALL_PLAYER.NAME FROM FOOTBALL_PLAYER ORDER BY FOOTBALL_PLAYER.POTENTIAL DESC LIMIT 1,SELECT DISTINCT(T1.PLAYER_NAME) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.POTENTIAL = (SELECT MAX(POTENTIAL) FROM PLAYER_ATTRIBUTES) ,
2,1051,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `FOOTBALL_PLAYER`,,SELECT FOOTBALL_PLAYER.NAME FROM FOOTBALL_PLAYER ORDER BY FOOTBALL_PLAYER.POTENTIAL DESC LIMIT 1,SELECT DISTINCT(T1.PLAYER_NAME) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.POTENTIAL = (SELECT MAX(POTENTIAL) FROM PLAYER_ATTRIBUTES) ,
3,1051,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `FOOTBALL_PLAYER`,,SELECT FOOTBALL_PLAYER.NAME FROM FOOTBALL_PLAYER ORDER BY FOOTBALL_PLAYER.POTENTIAL DESC LIMIT 1,SELECT DISTINCT(T1.PLAYER_NAME) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.POTENTIAL = (SELECT MAX(POTENTIAL) FROM PLAYER_ATTRIBUTES) ,
1,1052,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PREFERRED_FOOT`,,SELECT COUNT(*) FROM PLAYER WHERE WEIGHT < 130 AND PREFERRED_FOOT = 'LEFT';,SELECT COUNT(DISTINCT T1.ID) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.WEIGHT < 130 AND T2.PREFERRED_FOOT = 'LEFT',
2,1052,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PREFERRED_FOOT`,,SELECT COUNT(*) FROM PLAYER WHERE WEIGHT < 130 AND PREFERRED_FOOT = 'LEFT';,SELECT COUNT(DISTINCT T1.ID) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.WEIGHT < 130 AND T2.PREFERRED_FOOT = 'LEFT',
3,1052,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PREFERRED_FOOT`,,SELECT COUNT(*) FROM PLAYER WHERE WEIGHT < 130 AND PREFERRED_FOOT = 'LEFT';,SELECT COUNT(DISTINCT T1.ID) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.WEIGHT < 130 AND T2.PREFERRED_FOOT = 'LEFT',
1,1053,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__CHANCECREATIONPASSINGCLASS`,,SELECT TEAM.TEAM_SHORT_NAME FROM TEAM WHERE TEAM.CHANCECREATIONPASSINGCLASS = 'RISKY',SELECT DISTINCT T1.TEAM_SHORT_NAME FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T2.CHANCECREATIONPASSINGCLASS = 'RISKY',
2,1053,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__CHANCECREATIONPASSINGCLASS`,,SELECT TEAM.TEAM_SHORT_NAME FROM TEAM WHERE TEAM.CHANCECREATIONPASSINGCLASS = 'RISKY',SELECT DISTINCT T1.TEAM_SHORT_NAME FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T2.CHANCECREATIONPASSINGCLASS = 'RISKY',
3,1053,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__CHANCECREATIONPASSINGCLASS`,,SELECT TEAM.TEAM_SHORT_NAME FROM TEAM WHERE TEAM.CHANCECREATIONPASSINGCLASS = 'RISKY',SELECT DISTINCT T1.TEAM_SHORT_NAME FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T2.CHANCECREATIONPASSINGCLASS = 'RISKY',
1,1054,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `FOOTBALL_PLAYER`,,SELECT FOOTBALL_PLAYER.DEFENSIVE_WORK_RATE FROM FOOTBALL_PLAYER WHERE FOOTBALL_PLAYER.NAME = 'DAVID WILSON',SELECT DISTINCT T2.DEFENSIVE_WORK_RATE FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'DAVID WILSON',
2,1054,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `FOOTBALL_PLAYER`,,SELECT FOOTBALL_PLAYER.DEFENSIVE_WORK_RATE FROM FOOTBALL_PLAYER WHERE FOOTBALL_PLAYER.NAME = 'DAVID WILSON',SELECT DISTINCT T2.DEFENSIVE_WORK_RATE FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'DAVID WILSON',
3,1054,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `FOOTBALL_PLAYER`,,SELECT FOOTBALL_PLAYER.DEFENSIVE_WORK_RATE FROM FOOTBALL_PLAYER WHERE FOOTBALL_PLAYER.NAME = 'DAVID WILSON',SELECT DISTINCT T2.DEFENSIVE_WORK_RATE FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'DAVID WILSON',
1,1055,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `FOOTBALL_PLAYER`,,SELECT FOOTBALL_PLAYER.BIRTHDAY FROM FOOTBALL_PLAYER ORDER BY FOOTBALL_PLAYER.OVERALL_RATING DESC LIMIT 1,SELECT T1.BIRTHDAY FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID ORDER BY T2.OVERALL_RATING DESC LIMIT 1,
2,1055,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `FOOTBALL_PLAYER`,,SELECT FOOTBALL_PLAYER.BIRTHDAY FROM FOOTBALL_PLAYER ORDER BY FOOTBALL_PLAYER.OVERALL_RATING DESC LIMIT 1,SELECT T1.BIRTHDAY FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID ORDER BY T2.OVERALL_RATING DESC LIMIT 1,
3,1055,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `FOOTBALL_PLAYER`,,SELECT FOOTBALL_PLAYER.BIRTHDAY FROM FOOTBALL_PLAYER ORDER BY FOOTBALL_PLAYER.OVERALL_RATING DESC LIMIT 1,SELECT T1.BIRTHDAY FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID ORDER BY T2.OVERALL_RATING DESC LIMIT 1,
1,1056,True,,0.055765,SELECT LEAGUE.NAME FROM COUNTRY INNER JOIN LEAGUE ON COUNTRY.ID = LEAGUE.COUNTRY_ID WHERE COUNTRY.NAME = 'NETHERLANDS';,SELECT T2.NAME FROM COUNTRY AS T1 INNER JOIN LEAGUE AS T2 ON T1.ID = T2.COUNTRY_ID WHERE T1.NAME = 'NETHERLANDS',
1,1057,ERROR,NotImplementedError: {'real': {}},,SELECT AVG(MATCH.HOME_TEAM_GOAL) FROM MATCH INNER JOIN COUNTRY ON MATCH.COUNTRY_ID = COUNTRY.ID WHERE COUNTRY.NAME = 'POLAND' AND MATCH.SEASON = '2010/2011';,SELECT CAST(SUM(T2.HOME_TEAM_GOAL) AS REAL) / COUNT(T2.ID) FROM COUNTRY AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.COUNTRY_ID WHERE T1.NAME = 'POLAND' AND T2.SEASON = '2010/2011',
2,1057,ERROR,NotImplementedError: {'real': {}},,SELECT AVG(MATCH.HOME_TEAM_GOAL) FROM MATCH INNER JOIN COUNTRY ON MATCH.COUNTRY_ID = COUNTRY.ID WHERE COUNTRY.NAME = 'POLAND' AND MATCH.SEASON = '2010/2011';,SELECT CAST(SUM(T2.HOME_TEAM_GOAL) AS REAL) / COUNT(T2.ID) FROM COUNTRY AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.COUNTRY_ID WHERE T1.NAME = 'POLAND' AND T2.SEASON = '2010/2011',
3,1057,ERROR,NotImplementedError: {'real': {}},,SELECT AVG(MATCH.HOME_TEAM_GOAL) FROM MATCH INNER JOIN COUNTRY ON MATCH.COUNTRY_ID = COUNTRY.ID WHERE COUNTRY.NAME = 'POLAND' AND MATCH.SEASON = '2010/2011';,SELECT CAST(SUM(T2.HOME_TEAM_GOAL) AS REAL) / COUNT(T2.ID) FROM COUNTRY AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.COUNTRY_ID WHERE T1.NAME = 'POLAND' AND T2.SEASON = '2010/2011',
1,1058,ERROR,IndexError: list index out of range,,SELECT PLAYER_API_ID FROM PLAYER WHERE HEIGHT IN ( SELECT MAX(HEIGHT) FROM PLAYER UNION SELECT MIN(HEIGHT) FROM PLAYER ) GROUP BY PLAYER_API_ID ORDER BY AVG(FINISHING) DESC LIMIT 1,"SELECT A FROM ( SELECT AVG(FINISHING) RESULT, 'MAX' A FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.HEIGHT = ( SELECT MAX(HEIGHT) FROM PLAYER ) UNION SELECT AVG(FINISHING) RESULT, 'MIN' A FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.HEIGHT = ( SELECT MIN(HEIGHT) FROM PLAYER ) ) ORDER BY RESULT DESC LIMIT 1",
2,1058,ERROR,IndexError: list index out of range,,SELECT PLAYER_API_ID FROM PLAYER WHERE HEIGHT IN ( SELECT MAX(HEIGHT) FROM PLAYER UNION SELECT MIN(HEIGHT) FROM PLAYER ) GROUP BY PLAYER_API_ID ORDER BY AVG(FINISHING) DESC LIMIT 1,"SELECT A FROM ( SELECT AVG(FINISHING) RESULT, 'MAX' A FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.HEIGHT = ( SELECT MAX(HEIGHT) FROM PLAYER ) UNION SELECT AVG(FINISHING) RESULT, 'MIN' A FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.HEIGHT = ( SELECT MIN(HEIGHT) FROM PLAYER ) ) ORDER BY RESULT DESC LIMIT 1",
3,1058,ERROR,IndexError: list index out of range,,SELECT PLAYER_API_ID FROM PLAYER WHERE HEIGHT IN ( SELECT MAX(HEIGHT) FROM PLAYER UNION SELECT MIN(HEIGHT) FROM PLAYER ) GROUP BY PLAYER_API_ID ORDER BY AVG(FINISHING) DESC LIMIT 1,"SELECT A FROM ( SELECT AVG(FINISHING) RESULT, 'MAX' A FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.HEIGHT = ( SELECT MAX(HEIGHT) FROM PLAYER ) UNION SELECT AVG(FINISHING) RESULT, 'MIN' A FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.HEIGHT = ( SELECT MIN(HEIGHT) FROM PLAYER ) ) ORDER BY RESULT DESC LIMIT 1",
1,1059,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT PLAYER.NAME FROM PLAYER WHERE PLAYER.HEIGHT > 180,SELECT PLAYER_NAME FROM PLAYER WHERE HEIGHT > 180,
2,1059,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT PLAYER.NAME FROM PLAYER WHERE PLAYER.HEIGHT > 180,SELECT PLAYER_NAME FROM PLAYER WHERE HEIGHT > 180,
3,1059,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT PLAYER.NAME FROM PLAYER WHERE PLAYER.HEIGHT > 180,SELECT PLAYER_NAME FROM PLAYER WHERE HEIGHT > 180,
1,1060,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'BIRTHDAY']}",,"SELECT COUNT(*) FROM PLAYER WHERE STRFTIME('%Y', BIRTHDAY) > '1990';","SELECT COUNT(ID) FROM PLAYER WHERE STRFTIME('%Y', BIRTHDAY) > '1990'",
2,1060,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'BIRTHDAY']}",,"SELECT COUNT(*) FROM PLAYER WHERE STRFTIME('%Y', BIRTHDAY) > '1990';","SELECT COUNT(ID) FROM PLAYER WHERE STRFTIME('%Y', BIRTHDAY) > '1990'",
3,1060,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'BIRTHDAY']}",,"SELECT COUNT(*) FROM PLAYER WHERE STRFTIME('%Y', BIRTHDAY) > '1990';","SELECT COUNT(ID) FROM PLAYER WHERE STRFTIME('%Y', BIRTHDAY) > '1990'",
1,1061,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `PLAYERS`,,SELECT COUNT(*) FROM PLAYERS WHERE FIRST_NAME = 'ADAM' AND WEIGHT > 170;,SELECT COUNT(ID) FROM PLAYER WHERE WEIGHT > 170 AND PLAYER_NAME LIKE 'ADAM%',
2,1061,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `PLAYERS`,,SELECT COUNT(*) FROM PLAYERS WHERE FIRST_NAME = 'ADAM' AND WEIGHT > 170;,SELECT COUNT(ID) FROM PLAYER WHERE WEIGHT > 170 AND PLAYER_NAME LIKE 'ADAM%',
3,1061,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `PLAYERS`,,SELECT COUNT(*) FROM PLAYERS WHERE FIRST_NAME = 'ADAM' AND WEIGHT > 170;,SELECT COUNT(ID) FROM PLAYER WHERE WEIGHT > 170 AND PLAYER_NAME LIKE 'ADAM%',
1,1062,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'PLAYER_ATTRIBUTES__DATE']}",,"SELECT PLAYER.NAME FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID WHERE PLAYER_ATTRIBUTES.OVERALL_RATING > 80 AND STRFTIME('%Y', PLAYER_ATTRIBUTES.DATE) BETWEEN '2008' AND '2010';","SELECT DISTINCT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.OVERALL_RATING > 80 AND SUBSTR(T2.`DATE`, 1, 4) BETWEEN '2008' AND '2010'",
2,1062,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'PLAYER_ATTRIBUTES__DATE']}",,"SELECT PLAYER.NAME FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID WHERE PLAYER_ATTRIBUTES.OVERALL_RATING > 80 AND STRFTIME('%Y', PLAYER_ATTRIBUTES.DATE) BETWEEN '2008' AND '2010';","SELECT DISTINCT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.OVERALL_RATING > 80 AND SUBSTR(T2.`DATE`, 1, 4) BETWEEN '2008' AND '2010'",
3,1062,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'PLAYER_ATTRIBUTES__DATE']}",,"SELECT PLAYER.NAME FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID WHERE PLAYER_ATTRIBUTES.OVERALL_RATING > 80 AND STRFTIME('%Y', PLAYER_ATTRIBUTES.DATE) BETWEEN '2008' AND '2010';","SELECT DISTINCT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.OVERALL_RATING > 80 AND SUBSTR(T2.`DATE`, 1, 4) BETWEEN '2008' AND '2010'",
1,1063,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute POTENTIAL`,,SELECT POTENTIAL FROM PLAYER WHERE PLAYER_NAME = 'AARON DORAN',SELECT T2.POTENTIAL FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'AARON DORAN',
2,1063,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute POTENTIAL`,,SELECT POTENTIAL FROM PLAYER WHERE PLAYER_NAME = 'AARON DORAN',SELECT T2.POTENTIAL FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'AARON DORAN',
3,1063,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute POTENTIAL`,,SELECT POTENTIAL FROM PLAYER WHERE PLAYER_NAME = 'AARON DORAN',SELECT T2.POTENTIAL FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'AARON DORAN',
1,1064,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `PLAYERS`,,SELECT PLAYER_NAME FROM PLAYERS WHERE PREFERRED_FOOT = 'LEFT';,"SELECT DISTINCT T1.ID, T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.PREFERRED_FOOT = 'LEFT'",
2,1064,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `PLAYERS`,,SELECT PLAYER_NAME FROM PLAYERS WHERE PREFERRED_FOOT = 'LEFT';,"SELECT DISTINCT T1.ID, T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.PREFERRED_FOOT = 'LEFT'",
3,1064,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `PLAYERS`,,SELECT PLAYER_NAME FROM PLAYERS WHERE PREFERRED_FOOT = 'LEFT';,"SELECT DISTINCT T1.ID, T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.PREFERRED_FOOT = 'LEFT'",
1,1065,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__BUILDUPPLAYSPEEDCLASS`,,SELECT TEAM.TEAM_LONG_NAME FROM TEAM WHERE TEAM.BUILDUPPLAYSPEEDCLASS = 'FAST',SELECT DISTINCT T1.TEAM_LONG_NAME FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T2.BUILDUPPLAYSPEEDCLASS = 'FAST',
2,1065,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__BUILDUPPLAYSPEEDCLASS`,,SELECT TEAM.TEAM_LONG_NAME FROM TEAM WHERE TEAM.BUILDUPPLAYSPEEDCLASS = 'FAST',SELECT DISTINCT T1.TEAM_LONG_NAME FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T2.BUILDUPPLAYSPEEDCLASS = 'FAST',
3,1065,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__BUILDUPPLAYSPEEDCLASS`,,SELECT TEAM.TEAM_LONG_NAME FROM TEAM WHERE TEAM.BUILDUPPLAYSPEEDCLASS = 'FAST',SELECT DISTINCT T1.TEAM_LONG_NAME FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T2.BUILDUPPLAYSPEEDCLASS = 'FAST',
1,1066,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__BUILDUPPLAYPASSINGCLASS`,,SELECT TEAM.BUILDUPPLAYPASSINGCLASS FROM TEAM WHERE TEAM.TEAM_SHORT_NAME = 'CLB',SELECT DISTINCT T2.BUILDUPPLAYPASSINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_SHORT_NAME = 'CLB',
2,1066,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__BUILDUPPLAYPASSINGCLASS`,,SELECT TEAM.BUILDUPPLAYPASSINGCLASS FROM TEAM WHERE TEAM.TEAM_SHORT_NAME = 'CLB',SELECT DISTINCT T2.BUILDUPPLAYPASSINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_SHORT_NAME = 'CLB',
3,1066,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__BUILDUPPLAYPASSINGCLASS`,,SELECT TEAM.BUILDUPPLAYPASSINGCLASS FROM TEAM WHERE TEAM.TEAM_SHORT_NAME = 'CLB',SELECT DISTINCT T2.BUILDUPPLAYPASSINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_SHORT_NAME = 'CLB',
1,1067,True,,0.072947,SELECT TEAM.TEAM_SHORT_NAME FROM TEAM INNER JOIN TEAM_ATTRIBUTES ON TEAM.TEAM_API_ID = TEAM_ATTRIBUTES.TEAM_API_ID WHERE TEAM_ATTRIBUTES.BUILDUPPLAYPASSING > 70,SELECT DISTINCT T1.TEAM_SHORT_NAME FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T2.BUILDUPPLAYPASSING > 70,
1,1068,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'DATE']}",,"SELECT AVG(T2.OVERALL_RATING) FROM PLAYER WHERE STRFTIME('%Y', DATE) BETWEEN '2010' AND '2015' AND PLAYER.HEIGHT > 170","SELECT CAST(SUM(T2.OVERALL_RATING) AS REAL) / COUNT(T2.ID) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.HEIGHT > 170 AND STRFTIME('%Y',T2.`DATE`) >= '2010' AND STRFTIME('%Y',T2.`DATE`) <= '2015'",
2,1068,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'DATE']}",,"SELECT AVG(T2.OVERALL_RATING) FROM PLAYER WHERE STRFTIME('%Y', DATE) BETWEEN '2010' AND '2015' AND PLAYER.HEIGHT > 170","SELECT CAST(SUM(T2.OVERALL_RATING) AS REAL) / COUNT(T2.ID) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.HEIGHT > 170 AND STRFTIME('%Y',T2.`DATE`) >= '2010' AND STRFTIME('%Y',T2.`DATE`) <= '2015'",
3,1068,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'DATE']}",,"SELECT AVG(T2.OVERALL_RATING) FROM PLAYER WHERE STRFTIME('%Y', DATE) BETWEEN '2010' AND '2015' AND PLAYER.HEIGHT > 170","SELECT CAST(SUM(T2.OVERALL_RATING) AS REAL) / COUNT(T2.ID) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.HEIGHT > 170 AND STRFTIME('%Y',T2.`DATE`) >= '2010' AND STRFTIME('%Y',T2.`DATE`) <= '2015'",
1,1069,True,,0.036841,SELECT PLAYER.PLAYER_NAME FROM PLAYER ORDER BY PLAYER.HEIGHT ASC LIMIT 1;,SELECT PLAYER_NAME FROM PLAYER ORDER BY HEIGHT ASC LIMIT 1,
1,1070,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE PLAYER_ATTRIBUTES (
	ID VARCHAR(20),
	PLAYER_FIFA_API_ID VARCHAR(20),
	PLAYER_API_ID VARCHAR(20),
	DATE VARCHAR(20),
	OVERALL_RATING VARCHAR(20),
	POTENTIAL VARCHAR(20),
	PREFERRED_FOOT VARCHAR(20),
	ATTACKING_WORK_RATE VARCHAR(20),
	DEFENSIVE_WORK_RATE VARCHAR(20),
	CROSSING VARCHAR(20),
	FINISHING VARCHAR(20),
	HEADING_ACCURACY VARCHAR(20),
	SHORT_PASSING VARCHAR(20),
	VOLLEYS VARCHAR(20),
	DRIBBLING VARCHAR(20),
	CURVE VARCHAR(20),
	FREE_KICK_ACCURACY VARCHAR(20),
	LONG_PASSING VARCHAR(20),
	BALL_CONTROL VARCHAR(20),
	ACCELERATION VARCHAR(20),
	SPRINT_SPEED VARCHAR(20),
	AGILITY VARCHAR(20),
	REACTIONS VARCHAR(20),
	BALANCE VARCHAR(20),
	SHOT_POWER VARCHAR(20),
	JUMPING VARCHAR(20),
	STAMINA VARCHAR(20),
	STRENGTH VARCHAR(20),
	LONG_SHOTS VARCHAR(20),
	AGGRESSION VARCHAR(20),
	INTERCEPTIONS VARCHAR(20),
	POSITIONING VARCHAR(20),
	VISION VARCHAR(20),
	PENALTIES VARCHAR(20),
	MARKING VARCHAR(20),
	STANDING_TACKLE VARCHAR(20),
	SLIDING_TACKLE VARCHAR(20),
	GK_DIVING VARCHAR(20),
	GK_HANDLING VARCHAR(20),
	GK_KICKING VARCHAR(20),
	GK_POSITIONING VARCHAR(20),
	GK_REFLEXES VARCHAR(20)
);
INSERT INTO PLAYER_ATTRIBUTES VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE PLAYER (
	ID VARCHAR(20),
	PLAYER_API_ID VARCHAR(20),
	PLAYER_NAME VARCHAR(20),
	PLAYER_FIFA_API_ID VARCHAR(20),
	BIRTHDAY VARCHAR(20),
	HEIGHT VARCHAR(20),
	WEIGHT VARCHAR(20)
);
INSERT INTO PLAYER VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE LEAGUE (
	ID VARCHAR(20),
	COUNTRY_ID VARCHAR(20),
	NAME VARCHAR(20)
);
INSERT INTO LEAGUE VALUES ('2147483648', '2147483649', 'ITALY SERIE A');
CREATE TABLE COUNTRY (
	ID VARCHAR(20),
	NAME VARCHAR(20)
);
INSERT INTO COUNTRY VALUES ('2147483649', '2147483648');
CREATE TABLE TEAM (
	ID VARCHAR(20),
	TEAM_API_ID VARCHAR(20),
	TEAM_FIFA_API_ID VARCHAR(20),
	TEAM_LONG_NAME VARCHAR(20),
	TEAM_SHORT_NAME VARCHAR(20)
);
INSERT INTO TEAM VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE TEAM_ATTRIBUTES (
	ID VARCHAR(20),
	TEAM_FIFA_API_ID VARCHAR(20),
	TEAM_API_ID VARCHAR(20),
	DATE VARCHAR(20),
	BUILDUPPLAYSPEED VARCHAR(20),
	BUILDUPPLAYSPEEDCLASS VARCHAR(20),
	BUILDUPPLAYDRIBBLING VARCHAR(20),
	BUILDUPPLAYDRIBBLINGCLASS VARCHAR(20),
	BUILDUPPLAYPASSING VARCHAR(20),
	BUILDUPPLAYPASSINGCLASS VARCHAR(20),
	BUILDUPPLAYPOSITIONINGCLASS VARCHAR(20),
	CHANCECREATIONPASSING VARCHAR(20),
	CHANCECREATIONPASSINGCLASS VARCHAR(20),
	CHANCECREATIONCROSSING VARCHAR(20),
	CHANCECREATIONCROSSINGCLASS VARCHAR(20),
	CHANCECREATIONSHOOTING VARCHAR(20),
	CHANCECREATIONSHOOTINGCLASS VARCHAR(20),
	CHANCECREATIONPOSITIONINGCLASS VARCHAR(20),
	DEFENCEPRESSURE VARCHAR(20),
	DEFENCEPRESSURECLASS VARCHAR(20),
	DEFENCEAGGRESSION VARCHAR(20),
	DEFENCEAGGRESSIONCLASS VARCHAR(20),
	DEFENCETEAMWIDTH VARCHAR(20),
	DEFENCETEAMWIDTHCLASS VARCHAR(20),
	DEFENCEDEFENDERLINECLASS VARCHAR(20)
);
INSERT INTO TEAM_ATTRIBUTES VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MATCH (
	ID VARCHAR(20),
	COUNTRY_ID VARCHAR(20),
	LEAGUE_ID VARCHAR(20),
	SEASON VARCHAR(20),
	STAGE VARCHAR(20),
	DATE VARCHAR(20),
	MATCH_API_ID VARCHAR(20),
	HOME_TEAM_API_ID VARCHAR(20),
	AWAY_TEAM_API_ID VARCHAR(20),
	HOME_TEAM_GOAL VARCHAR(20),
	AWAY_TEAM_GOAL VARCHAR(20)
);
INSERT INTO MATCH VALUES ('2147483648', '2147483649', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
-- 2147483649
SELECT LEAGUE.COUNTRY_ID FROM LEAGUE WHERE LEAGUE.NAME = 'ITALY SERIE A';
-- ----------sql2------------
-- 2147483648
SELECT T1.NAME FROM COUNTRY AS T1 INNER JOIN LEAGUE AS T2 ON T1.ID = T2.COUNTRY_ID WHERE T2.NAME = 'ITALY SERIE A';
",0.048638,SELECT LEAGUE.COUNTRY_ID FROM LEAGUE WHERE LEAGUE.NAME = 'ITALY SERIE A';,SELECT T1.NAME FROM COUNTRY AS T1 INNER JOIN LEAGUE AS T2 ON T1.ID = T2.COUNTRY_ID WHERE T2.NAME = 'ITALY SERIE A',
1,1071,True,,0.105976,SELECT TEAM.TEAM_SHORT_NAME FROM TEAM INNER JOIN TEAM_ATTRIBUTES ON TEAM.TEAM_API_ID = TEAM_ATTRIBUTES.TEAM_API_ID WHERE TEAM_ATTRIBUTES.BUILDUPPLAYSPEED = 31 AND TEAM_ATTRIBUTES.BUILDUPPLAYDRIBBLING = 53 AND TEAM_ATTRIBUTES.BUILDUPPLAYPASSING = 32;,SELECT DISTINCT T1.TEAM_SHORT_NAME FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T2.BUILDUPPLAYSPEED = 31 AND T2.BUILDUPPLAYDRIBBLING = 53 AND T2.BUILDUPPLAYPASSING = 32,
1,1072,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT AVG(PLAYER.OVERALL_RATING) FROM PLAYER WHERE PLAYER.NAME = 'AARON DORAN';,SELECT CAST(SUM(T2.OVERALL_RATING) AS REAL) / COUNT(T2.ID) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'AARON DORAN',
2,1072,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT AVG(PLAYER.OVERALL_RATING) FROM PLAYER WHERE PLAYER.NAME = 'AARON DORAN';,SELECT CAST(SUM(T2.OVERALL_RATING) AS REAL) / COUNT(T2.ID) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'AARON DORAN',
3,1072,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT AVG(PLAYER.OVERALL_RATING) FROM PLAYER WHERE PLAYER.NAME = 'AARON DORAN';,SELECT CAST(SUM(T2.OVERALL_RATING) AS REAL) / COUNT(T2.ID) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'AARON DORAN',
1,1073,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y-%M'}, 'MATCH__DATE']}",,"SELECT COUNT(*) FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE LEAGUE.NAME = 'GERMANY 1. BUNDESLIGA' AND STRFTIME('%Y-%M', MATCH.DATE) BETWEEN '2008-08' AND '2008-10';","SELECT COUNT(T2.ID) FROM LEAGUE AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.LEAGUE_ID WHERE T1.NAME = 'GERMANY 1. BUNDESLIGA' AND SUBSTR(T2.`DATE`, 1, 7) BETWEEN '2008-08' AND '2008-10'",
2,1073,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y-%M'}, 'MATCH__DATE']}",,"SELECT COUNT(*) FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE LEAGUE.NAME = 'GERMANY 1. BUNDESLIGA' AND STRFTIME('%Y-%M', MATCH.DATE) BETWEEN '2008-08' AND '2008-10';","SELECT COUNT(T2.ID) FROM LEAGUE AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.LEAGUE_ID WHERE T1.NAME = 'GERMANY 1. BUNDESLIGA' AND SUBSTR(T2.`DATE`, 1, 7) BETWEEN '2008-08' AND '2008-10'",
3,1073,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y-%M'}, 'MATCH__DATE']}",,"SELECT COUNT(*) FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE LEAGUE.NAME = 'GERMANY 1. BUNDESLIGA' AND STRFTIME('%Y-%M', MATCH.DATE) BETWEEN '2008-08' AND '2008-10';","SELECT COUNT(T2.ID) FROM LEAGUE AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.LEAGUE_ID WHERE T1.NAME = 'GERMANY 1. BUNDESLIGA' AND SUBSTR(T2.`DATE`, 1, 7) BETWEEN '2008-08' AND '2008-10'",
1,1074,True,,0.063304,SELECT TEAM.TEAM_SHORT_NAME FROM MATCH INNER JOIN TEAM ON MATCH.HOME_TEAM_API_ID = TEAM.TEAM_API_ID WHERE MATCH.HOME_TEAM_GOAL = 10,SELECT T1.TEAM_SHORT_NAME FROM TEAM AS T1 INNER JOIN MATCH AS T2 ON T1.TEAM_API_ID = T2.HOME_TEAM_API_ID WHERE T2.HOME_TEAM_GOAL = 10,
1,1075,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `FOOTBALL_PLAYER`,,SELECT FOOTBALL_PLAYER.NAME FROM FOOTBALL_PLAYER WHERE FOOTBALL_PLAYER.POTENTIAL = 61 AND FOOTBALL_PLAYER.BALANCE = (SELECT MAX(BALANCE) FROM FOOTBALL_PLAYER WHERE POTENTIAL = 61);,SELECT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.POTENTIAL = '61' ORDER BY T2.BALANCE DESC LIMIT 1,
2,1075,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `FOOTBALL_PLAYER`,,SELECT FOOTBALL_PLAYER.NAME FROM FOOTBALL_PLAYER WHERE FOOTBALL_PLAYER.POTENTIAL = 61 AND FOOTBALL_PLAYER.BALANCE = (SELECT MAX(BALANCE) FROM FOOTBALL_PLAYER WHERE POTENTIAL = 61);,SELECT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.POTENTIAL = '61' ORDER BY T2.BALANCE DESC LIMIT 1,
3,1075,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `FOOTBALL_PLAYER`,,SELECT FOOTBALL_PLAYER.NAME FROM FOOTBALL_PLAYER WHERE FOOTBALL_PLAYER.POTENTIAL = 61 AND FOOTBALL_PLAYER.BALANCE = (SELECT MAX(BALANCE) FROM FOOTBALL_PLAYER WHERE POTENTIAL = 61);,SELECT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.POTENTIAL = '61' ORDER BY T2.BALANCE DESC LIMIT 1,
1,1076,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT AVG(BALL_CONTROL) FROM PLAYER WHERE PLAYER_NAME = 'ABDOU DIALLO') - (SELECT AVG(BALL_CONTROL) FROM PLAYER WHERE PLAYER_NAME = 'AARON APPINDANGOYE'),SELECT CAST(SUM(CASE WHEN T1.PLAYER_NAME = 'ABDOU DIALLO' THEN T2.BALL_CONTROL ELSE 0 END) AS REAL) / COUNT(CASE WHEN T1.PLAYER_NAME = 'ABDOU DIALLO' THEN T2.ID ELSE NULL END) - CAST(SUM(CASE WHEN T1.PLAYER_NAME = 'AARON APPINDANGOYE' THEN T2.BALL_CONTROL ELSE 0 END) AS REAL) / COUNT(CASE WHEN T1.PLAYER_NAME = 'AARON APPINDANGOYE' THEN T2.ID ELSE NULL END) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID,
2,1076,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT AVG(BALL_CONTROL) FROM PLAYER WHERE PLAYER_NAME = 'ABDOU DIALLO') - (SELECT AVG(BALL_CONTROL) FROM PLAYER WHERE PLAYER_NAME = 'AARON APPINDANGOYE'),SELECT CAST(SUM(CASE WHEN T1.PLAYER_NAME = 'ABDOU DIALLO' THEN T2.BALL_CONTROL ELSE 0 END) AS REAL) / COUNT(CASE WHEN T1.PLAYER_NAME = 'ABDOU DIALLO' THEN T2.ID ELSE NULL END) - CAST(SUM(CASE WHEN T1.PLAYER_NAME = 'AARON APPINDANGOYE' THEN T2.BALL_CONTROL ELSE 0 END) AS REAL) / COUNT(CASE WHEN T1.PLAYER_NAME = 'AARON APPINDANGOYE' THEN T2.ID ELSE NULL END) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID,
3,1076,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT AVG(BALL_CONTROL) FROM PLAYER WHERE PLAYER_NAME = 'ABDOU DIALLO') - (SELECT AVG(BALL_CONTROL) FROM PLAYER WHERE PLAYER_NAME = 'AARON APPINDANGOYE'),SELECT CAST(SUM(CASE WHEN T1.PLAYER_NAME = 'ABDOU DIALLO' THEN T2.BALL_CONTROL ELSE 0 END) AS REAL) / COUNT(CASE WHEN T1.PLAYER_NAME = 'ABDOU DIALLO' THEN T2.ID ELSE NULL END) - CAST(SUM(CASE WHEN T1.PLAYER_NAME = 'AARON APPINDANGOYE' THEN T2.BALL_CONTROL ELSE 0 END) AS REAL) / COUNT(CASE WHEN T1.PLAYER_NAME = 'AARON APPINDANGOYE' THEN T2.ID ELSE NULL END) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID,
1,1077,True,,0.040942,SELECT TEAM.TEAM_LONG_NAME FROM TEAM WHERE TEAM.TEAM_SHORT_NAME = 'GEN',SELECT TEAM_LONG_NAME FROM TEAM WHERE TEAM_SHORT_NAME = 'GEN',
1,1078,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT CASE WHEN (SELECT BIRTHDAY FROM PLAYER WHERE PLAYER_NAME = 'AARON LENNON') < (SELECT BIRTHDAY FROM PLAYER WHERE PLAYER_NAME = 'ABDELAZIZ BARRADA') THEN 'AARON LENNON' ELSE 'ABDELAZIZ BARRADA' END AS OLDER_PLAYER,"SELECT PLAYER_NAME FROM PLAYER WHERE PLAYER_NAME IN ('AARON LENNON', 'ABDELAZIZ BARRADA') ORDER BY BIRTHDAY ASC LIMIT 1",
2,1078,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT CASE WHEN (SELECT BIRTHDAY FROM PLAYER WHERE PLAYER_NAME = 'AARON LENNON') < (SELECT BIRTHDAY FROM PLAYER WHERE PLAYER_NAME = 'ABDELAZIZ BARRADA') THEN 'AARON LENNON' ELSE 'ABDELAZIZ BARRADA' END AS OLDER_PLAYER,"SELECT PLAYER_NAME FROM PLAYER WHERE PLAYER_NAME IN ('AARON LENNON', 'ABDELAZIZ BARRADA') ORDER BY BIRTHDAY ASC LIMIT 1",
3,1078,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT CASE WHEN (SELECT BIRTHDAY FROM PLAYER WHERE PLAYER_NAME = 'AARON LENNON') < (SELECT BIRTHDAY FROM PLAYER WHERE PLAYER_NAME = 'ABDELAZIZ BARRADA') THEN 'AARON LENNON' ELSE 'ABDELAZIZ BARRADA' END AS OLDER_PLAYER,"SELECT PLAYER_NAME FROM PLAYER WHERE PLAYER_NAME IN ('AARON LENNON', 'ABDELAZIZ BARRADA') ORDER BY BIRTHDAY ASC LIMIT 1",
1,1079,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT PLAYER.NAME FROM PLAYER ORDER BY PLAYER.HEIGHT DESC LIMIT 1;,SELECT PLAYER_NAME FROM PLAYER ORDER BY HEIGHT DESC LIMIT 1,
2,1079,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT PLAYER.NAME FROM PLAYER ORDER BY PLAYER.HEIGHT DESC LIMIT 1;,SELECT PLAYER_NAME FROM PLAYER ORDER BY HEIGHT DESC LIMIT 1,
3,1079,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT PLAYER.NAME FROM PLAYER ORDER BY PLAYER.HEIGHT DESC LIMIT 1;,SELECT PLAYER_NAME FROM PLAYER ORDER BY HEIGHT DESC LIMIT 1,
1,1080,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PREFERRED_FOOT`,,SELECT COUNT(*) FROM PLAYER WHERE PREFERRED_FOOT = 'LEFT' AND ATTACKING_WORK_RATE = 'LOW',SELECT COUNT(PLAYER_API_ID) FROM PLAYER_ATTRIBUTES WHERE PREFERRED_FOOT = 'LEFT' AND ATTACKING_WORK_RATE = 'LOW',
2,1080,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PREFERRED_FOOT`,,SELECT COUNT(*) FROM PLAYER WHERE PREFERRED_FOOT = 'LEFT' AND ATTACKING_WORK_RATE = 'LOW',SELECT COUNT(PLAYER_API_ID) FROM PLAYER_ATTRIBUTES WHERE PREFERRED_FOOT = 'LEFT' AND ATTACKING_WORK_RATE = 'LOW',
3,1080,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PREFERRED_FOOT`,,SELECT COUNT(*) FROM PLAYER WHERE PREFERRED_FOOT = 'LEFT' AND ATTACKING_WORK_RATE = 'LOW',SELECT COUNT(PLAYER_API_ID) FROM PLAYER_ATTRIBUTES WHERE PREFERRED_FOOT = 'LEFT' AND ATTACKING_WORK_RATE = 'LOW',
1,1081,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE PLAYER_ATTRIBUTES (
	ID VARCHAR(20),
	PLAYER_FIFA_API_ID VARCHAR(20),
	PLAYER_API_ID VARCHAR(20),
	DATE VARCHAR(20),
	OVERALL_RATING VARCHAR(20),
	POTENTIAL VARCHAR(20),
	PREFERRED_FOOT VARCHAR(20),
	ATTACKING_WORK_RATE VARCHAR(20),
	DEFENSIVE_WORK_RATE VARCHAR(20),
	CROSSING VARCHAR(20),
	FINISHING VARCHAR(20),
	HEADING_ACCURACY VARCHAR(20),
	SHORT_PASSING VARCHAR(20),
	VOLLEYS VARCHAR(20),
	DRIBBLING VARCHAR(20),
	CURVE VARCHAR(20),
	FREE_KICK_ACCURACY VARCHAR(20),
	LONG_PASSING VARCHAR(20),
	BALL_CONTROL VARCHAR(20),
	ACCELERATION VARCHAR(20),
	SPRINT_SPEED VARCHAR(20),
	AGILITY VARCHAR(20),
	REACTIONS VARCHAR(20),
	BALANCE VARCHAR(20),
	SHOT_POWER VARCHAR(20),
	JUMPING VARCHAR(20),
	STAMINA VARCHAR(20),
	STRENGTH VARCHAR(20),
	LONG_SHOTS VARCHAR(20),
	AGGRESSION VARCHAR(20),
	INTERCEPTIONS VARCHAR(20),
	POSITIONING VARCHAR(20),
	VISION VARCHAR(20),
	PENALTIES VARCHAR(20),
	MARKING VARCHAR(20),
	STANDING_TACKLE VARCHAR(20),
	SLIDING_TACKLE VARCHAR(20),
	GK_DIVING VARCHAR(20),
	GK_HANDLING VARCHAR(20),
	GK_KICKING VARCHAR(20),
	GK_POSITIONING VARCHAR(20),
	GK_REFLEXES VARCHAR(20)
);
INSERT INTO PLAYER_ATTRIBUTES VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE PLAYER (
	ID VARCHAR(20),
	PLAYER_API_ID VARCHAR(20),
	PLAYER_NAME VARCHAR(20),
	PLAYER_FIFA_API_ID VARCHAR(20),
	BIRTHDAY VARCHAR(20),
	HEIGHT VARCHAR(20),
	WEIGHT VARCHAR(20)
);
INSERT INTO PLAYER VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE LEAGUE (
	ID VARCHAR(20),
	COUNTRY_ID VARCHAR(20),
	NAME VARCHAR(20)
);
INSERT INTO LEAGUE VALUES ('2147483648', '2147483649', 'BELGIUM JUPILER LEAGUE');
CREATE TABLE COUNTRY (
	ID VARCHAR(20),
	NAME VARCHAR(20)
);
INSERT INTO COUNTRY VALUES ('2147483649', '2147483648');
CREATE TABLE TEAM (
	ID VARCHAR(20),
	TEAM_API_ID VARCHAR(20),
	TEAM_FIFA_API_ID VARCHAR(20),
	TEAM_LONG_NAME VARCHAR(20),
	TEAM_SHORT_NAME VARCHAR(20)
);
INSERT INTO TEAM VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE TEAM_ATTRIBUTES (
	ID VARCHAR(20),
	TEAM_FIFA_API_ID VARCHAR(20),
	TEAM_API_ID VARCHAR(20),
	DATE VARCHAR(20),
	BUILDUPPLAYSPEED VARCHAR(20),
	BUILDUPPLAYSPEEDCLASS VARCHAR(20),
	BUILDUPPLAYDRIBBLING VARCHAR(20),
	BUILDUPPLAYDRIBBLINGCLASS VARCHAR(20),
	BUILDUPPLAYPASSING VARCHAR(20),
	BUILDUPPLAYPASSINGCLASS VARCHAR(20),
	BUILDUPPLAYPOSITIONINGCLASS VARCHAR(20),
	CHANCECREATIONPASSING VARCHAR(20),
	CHANCECREATIONPASSINGCLASS VARCHAR(20),
	CHANCECREATIONCROSSING VARCHAR(20),
	CHANCECREATIONCROSSINGCLASS VARCHAR(20),
	CHANCECREATIONSHOOTING VARCHAR(20),
	CHANCECREATIONSHOOTINGCLASS VARCHAR(20),
	CHANCECREATIONPOSITIONINGCLASS VARCHAR(20),
	DEFENCEPRESSURE VARCHAR(20),
	DEFENCEPRESSURECLASS VARCHAR(20),
	DEFENCEAGGRESSION VARCHAR(20),
	DEFENCEAGGRESSIONCLASS VARCHAR(20),
	DEFENCETEAMWIDTH VARCHAR(20),
	DEFENCETEAMWIDTHCLASS VARCHAR(20),
	DEFENCEDEFENDERLINECLASS VARCHAR(20)
);
INSERT INTO TEAM_ATTRIBUTES VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MATCH (
	ID VARCHAR(20),
	COUNTRY_ID VARCHAR(20),
	LEAGUE_ID VARCHAR(20),
	SEASON VARCHAR(20),
	STAGE VARCHAR(20),
	DATE VARCHAR(20),
	MATCH_API_ID VARCHAR(20),
	HOME_TEAM_API_ID VARCHAR(20),
	AWAY_TEAM_API_ID VARCHAR(20),
	HOME_TEAM_GOAL VARCHAR(20),
	AWAY_TEAM_GOAL VARCHAR(20)
);
INSERT INTO MATCH VALUES ('2147483648', '2147483649', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
-- 2147483649
SELECT LEAGUE.COUNTRY_ID FROM LEAGUE WHERE LEAGUE.NAME = 'BELGIUM JUPILER LEAGUE';
-- ----------sql2------------
-- 2147483648
SELECT T1.NAME FROM COUNTRY AS T1 INNER JOIN LEAGUE AS T2 ON T1.ID = T2.COUNTRY_ID WHERE T2.NAME = 'BELGIUM JUPILER LEAGUE';
",0.0473569999999999,SELECT LEAGUE.COUNTRY_ID FROM LEAGUE WHERE LEAGUE.NAME = 'BELGIUM JUPILER LEAGUE';,SELECT T1.NAME FROM COUNTRY AS T1 INNER JOIN LEAGUE AS T2 ON T1.ID = T2.COUNTRY_ID WHERE T2.NAME = 'BELGIUM JUPILER LEAGUE',
1,1082,True,,0.053382,SELECT LEAGUE.NAME FROM LEAGUE INNER JOIN COUNTRY ON LEAGUE.COUNTRY_ID = COUNTRY.ID WHERE COUNTRY.NAME = 'GERMANY';,SELECT T2.NAME FROM COUNTRY AS T1 INNER JOIN LEAGUE AS T2 ON T1.ID = T2.COUNTRY_ID WHERE T1.NAME = 'GERMANY',
1,1083,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__OVERALL_RATING`,,SELECT PLAYER.PLAYER_NAME FROM PLAYER ORDER BY PLAYER.OVERALL_RATING DESC LIMIT 1,SELECT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID ORDER BY T2.OVERALL_RATING DESC LIMIT 1,
2,1083,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__OVERALL_RATING`,,SELECT PLAYER.PLAYER_NAME FROM PLAYER ORDER BY PLAYER.OVERALL_RATING DESC LIMIT 1,SELECT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID ORDER BY T2.OVERALL_RATING DESC LIMIT 1,
3,1083,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__OVERALL_RATING`,,SELECT PLAYER.PLAYER_NAME FROM PLAYER ORDER BY PLAYER.OVERALL_RATING DESC LIMIT 1,SELECT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID ORDER BY T2.OVERALL_RATING DESC LIMIT 1,
1,1084,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'PLAYER__BIRTHDAY']}",,"SELECT COUNT(DISTINCT PLAYER.PLAYER_ID) FROM PLAYER WHERE STRFTIME('%Y', PLAYER.BIRTHDAY) < '1986' AND PLAYER.DEFENSIVE_WORK_RATE = 'HIGH';","SELECT COUNT(DISTINCT T1.PLAYER_NAME) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE STRFTIME('%Y',T1.BIRTHDAY) < '1986' AND T2.DEFENSIVE_WORK_RATE = 'HIGH'",
2,1084,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'PLAYER__BIRTHDAY']}",,"SELECT COUNT(DISTINCT PLAYER.PLAYER_ID) FROM PLAYER WHERE STRFTIME('%Y', PLAYER.BIRTHDAY) < '1986' AND PLAYER.DEFENSIVE_WORK_RATE = 'HIGH';","SELECT COUNT(DISTINCT T1.PLAYER_NAME) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE STRFTIME('%Y',T1.BIRTHDAY) < '1986' AND T2.DEFENSIVE_WORK_RATE = 'HIGH'",
3,1084,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'PLAYER__BIRTHDAY']}",,"SELECT COUNT(DISTINCT PLAYER.PLAYER_ID) FROM PLAYER WHERE STRFTIME('%Y', PLAYER.BIRTHDAY) < '1986' AND PLAYER.DEFENSIVE_WORK_RATE = 'HIGH';","SELECT COUNT(DISTINCT T1.PLAYER_NAME) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE STRFTIME('%Y',T1.BIRTHDAY) < '1986' AND T2.DEFENSIVE_WORK_RATE = 'HIGH'",
1,1085,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,"SELECT PLAYER.NAME, MAX(PLAYER.CROSSING) AS MAX_CROSSING FROM PLAYER WHERE PLAYER.NAME IN ('ALEXIS', 'ARIEL BORYSIUK', 'AROUNA KONE') GROUP BY PLAYER.NAME ORDER BY MAX_CROSSING DESC LIMIT 1;","SELECT T1.PLAYER_NAME, T2.CROSSING FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME IN ('ALEXIS', 'ARIEL BORYSIUK', 'AROUNA KONE') ORDER BY T2.CROSSING DESC LIMIT 1",
2,1085,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,"SELECT PLAYER.NAME, MAX(PLAYER.CROSSING) AS MAX_CROSSING FROM PLAYER WHERE PLAYER.NAME IN ('ALEXIS', 'ARIEL BORYSIUK', 'AROUNA KONE') GROUP BY PLAYER.NAME ORDER BY MAX_CROSSING DESC LIMIT 1;","SELECT T1.PLAYER_NAME, T2.CROSSING FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME IN ('ALEXIS', 'ARIEL BORYSIUK', 'AROUNA KONE') ORDER BY T2.CROSSING DESC LIMIT 1",
3,1085,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,"SELECT PLAYER.NAME, MAX(PLAYER.CROSSING) AS MAX_CROSSING FROM PLAYER WHERE PLAYER.NAME IN ('ALEXIS', 'ARIEL BORYSIUK', 'AROUNA KONE') GROUP BY PLAYER.NAME ORDER BY MAX_CROSSING DESC LIMIT 1;","SELECT T1.PLAYER_NAME, T2.CROSSING FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME IN ('ALEXIS', 'ARIEL BORYSIUK', 'AROUNA KONE') ORDER BY T2.CROSSING DESC LIMIT 1",
1,1086,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT PLAYER.HEADING_ACCURACY FROM PLAYER WHERE PLAYER.NAME = 'ARIEL BORYSIUK';,SELECT T2.HEADING_ACCURACY FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'ARIEL BORYSIUK',
2,1086,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT PLAYER.HEADING_ACCURACY FROM PLAYER WHERE PLAYER.NAME = 'ARIEL BORYSIUK';,SELECT T2.HEADING_ACCURACY FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'ARIEL BORYSIUK',
3,1086,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT PLAYER.HEADING_ACCURACY FROM PLAYER WHERE PLAYER.NAME = 'ARIEL BORYSIUK';,SELECT T2.HEADING_ACCURACY FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'ARIEL BORYSIUK',
1,1087,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute VOLLEYS`,,SELECT COUNT(*) FROM PLAYER WHERE HEIGHT > 180 AND VOLLEYS > 70,SELECT COUNT(DISTINCT T1.ID) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.HEIGHT > 180 AND T2.VOLLEYS > 70,
2,1087,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute VOLLEYS`,,SELECT COUNT(*) FROM PLAYER WHERE HEIGHT > 180 AND VOLLEYS > 70,SELECT COUNT(DISTINCT T1.ID) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.HEIGHT > 180 AND T2.VOLLEYS > 70,
3,1087,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute VOLLEYS`,,SELECT COUNT(*) FROM PLAYER WHERE HEIGHT > 180 AND VOLLEYS > 70,SELECT COUNT(DISTINCT T1.ID) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.HEIGHT > 180 AND T2.VOLLEYS > 70,
1,1088,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `PLAYERS`,,SELECT PLAYERS.NAME FROM PLAYERS WHERE PLAYERS.VOLLEYS > 70 AND PLAYERS.DRIBBLING > 70,SELECT DISTINCT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.VOLLEYS > 70 AND T2.DRIBBLING > 70,
2,1088,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `PLAYERS`,,SELECT PLAYERS.NAME FROM PLAYERS WHERE PLAYERS.VOLLEYS > 70 AND PLAYERS.DRIBBLING > 70,SELECT DISTINCT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.VOLLEYS > 70 AND T2.DRIBBLING > 70,
3,1088,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `PLAYERS`,,SELECT PLAYERS.NAME FROM PLAYERS WHERE PLAYERS.VOLLEYS > 70 AND PLAYERS.DRIBBLING > 70,SELECT DISTINCT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.VOLLEYS > 70 AND T2.DRIBBLING > 70,
1,1089,True,,0.084917,SELECT COUNT(*) FROM MATCH INNER JOIN COUNTRY ON MATCH.COUNTRY_ID = COUNTRY.ID WHERE COUNTRY.NAME = 'BELGIUM' AND MATCH.SEASON = '2008/2009',SELECT COUNT(T2.ID) FROM COUNTRY AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.COUNTRY_ID WHERE T1.NAME = 'BELGIUM' AND T2.SEASON = '2008/2009',
1,1090,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__LONG_PASSING`,,SELECT PLAYER.LONG_PASSING FROM PLAYER ORDER BY PLAYER.BIRTHDAY ASC LIMIT 1,SELECT T2.LONG_PASSING FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID ORDER BY T1.BIRTHDAY ASC LIMIT 1,
2,1090,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__LONG_PASSING`,,SELECT PLAYER.LONG_PASSING FROM PLAYER ORDER BY PLAYER.BIRTHDAY ASC LIMIT 1,SELECT T2.LONG_PASSING FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID ORDER BY T1.BIRTHDAY ASC LIMIT 1,
3,1090,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__LONG_PASSING`,,SELECT PLAYER.LONG_PASSING FROM PLAYER ORDER BY PLAYER.BIRTHDAY ASC LIMIT 1,SELECT T2.LONG_PASSING FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID ORDER BY T1.BIRTHDAY ASC LIMIT 1,
1,1091,ERROR,"NotImplementedError: {'substr': ['MATCH__DATE', 1, 7]}",,"SELECT COUNT(*) FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE LEAGUE.NAME = 'BELGIUM JUPILER LEAGUE' AND SUBSTR(MATCH.DATE, 1, 7) = '2009-04'","SELECT COUNT(T2.ID) FROM LEAGUE AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.LEAGUE_ID WHERE T1.NAME = 'BELGIUM JUPILER LEAGUE' AND SUBSTR(T2.`DATE`, 1, 7) = '2009-04'",
2,1091,ERROR,"NotImplementedError: {'substr': ['MATCH__DATE', 1, 7]}",,"SELECT COUNT(*) FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE LEAGUE.NAME = 'BELGIUM JUPILER LEAGUE' AND SUBSTR(MATCH.DATE, 1, 7) = '2009-04'","SELECT COUNT(T2.ID) FROM LEAGUE AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.LEAGUE_ID WHERE T1.NAME = 'BELGIUM JUPILER LEAGUE' AND SUBSTR(T2.`DATE`, 1, 7) = '2009-04'",
3,1091,ERROR,"NotImplementedError: {'substr': ['MATCH__DATE', 1, 7]}",,"SELECT COUNT(*) FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE LEAGUE.NAME = 'BELGIUM JUPILER LEAGUE' AND SUBSTR(MATCH.DATE, 1, 7) = '2009-04'","SELECT COUNT(T2.ID) FROM LEAGUE AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.LEAGUE_ID WHERE T1.NAME = 'BELGIUM JUPILER LEAGUE' AND SUBSTR(T2.`DATE`, 1, 7) = '2009-04'",
1,1092,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LEAGUE__LEAGUE_NAME`,,SELECT LEAGUE.LEAGUE_NAME FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE MATCH.SEASON = '2008/2009' GROUP BY LEAGUE.LEAGUE_NAME ORDER BY COUNT(*) DESC LIMIT 1;,SELECT T1.NAME FROM LEAGUE AS T1 JOIN MATCH AS T2 ON T1.ID = T2.LEAGUE_ID WHERE T2.SEASON = '2008/2009' GROUP BY T1.NAME HAVING COUNT(T2.ID) = (SELECT MAX(MATCH_COUNT) FROM (SELECT COUNT(T2.ID) AS MATCH_COUNT FROM MATCH AS T2 WHERE T2.SEASON = '2008/2009' GROUP BY T2.LEAGUE_ID)),
2,1092,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LEAGUE__LEAGUE_NAME`,,SELECT LEAGUE.LEAGUE_NAME FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE MATCH.SEASON = '2008/2009' GROUP BY LEAGUE.LEAGUE_NAME ORDER BY COUNT(*) DESC LIMIT 1;,SELECT T1.NAME FROM LEAGUE AS T1 JOIN MATCH AS T2 ON T1.ID = T2.LEAGUE_ID WHERE T2.SEASON = '2008/2009' GROUP BY T1.NAME HAVING COUNT(T2.ID) = (SELECT MAX(MATCH_COUNT) FROM (SELECT COUNT(T2.ID) AS MATCH_COUNT FROM MATCH AS T2 WHERE T2.SEASON = '2008/2009' GROUP BY T2.LEAGUE_ID)),
3,1092,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LEAGUE__LEAGUE_NAME`,,SELECT LEAGUE.LEAGUE_NAME FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE MATCH.SEASON = '2008/2009' GROUP BY LEAGUE.LEAGUE_NAME ORDER BY COUNT(*) DESC LIMIT 1;,SELECT T1.NAME FROM LEAGUE AS T1 JOIN MATCH AS T2 ON T1.ID = T2.LEAGUE_ID WHERE T2.SEASON = '2008/2009' GROUP BY T1.NAME HAVING COUNT(T2.ID) = (SELECT MAX(MATCH_COUNT) FROM (SELECT COUNT(T2.ID) AS MATCH_COUNT FROM MATCH AS T2 WHERE T2.SEASON = '2008/2009' GROUP BY T2.LEAGUE_ID)),
1,1093,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'PLAYER__BIRTHDAY']}",,"SELECT AVG(PLAYER.OVERALL_RATING) FROM PLAYER WHERE STRFTIME('%Y', PLAYER.BIRTHDAY) < '1986'","SELECT SUM(T2.OVERALL_RATING) / COUNT(T1.ID) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE SUBSTR(T1.BIRTHDAY, 1, 4) < '1986'",
2,1093,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'PLAYER__BIRTHDAY']}",,"SELECT AVG(PLAYER.OVERALL_RATING) FROM PLAYER WHERE STRFTIME('%Y', PLAYER.BIRTHDAY) < '1986'","SELECT SUM(T2.OVERALL_RATING) / COUNT(T1.ID) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE SUBSTR(T1.BIRTHDAY, 1, 4) < '1986'",
3,1093,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'PLAYER__BIRTHDAY']}",,"SELECT AVG(PLAYER.OVERALL_RATING) FROM PLAYER WHERE STRFTIME('%Y', PLAYER.BIRTHDAY) < '1986'","SELECT SUM(T2.OVERALL_RATING) / COUNT(T1.ID) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE SUBSTR(T1.BIRTHDAY, 1, 4) < '1986'",
1,1094,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT SUM(OVERALL_RATING) FROM PLAYER WHERE PLAYER_NAME = 'ARIEL BORYSIUK') - (SELECT SUM(OVERALL_RATING) FROM PLAYER WHERE PLAYER_NAME = 'PAULIN PUEL') AS REAL) * 100) / (SELECT SUM(OVERALL_RATING) FROM PLAYER WHERE PLAYER_NAME = 'PAULIN PUEL') AS PERCENTAGE_DIFFERENCE,SELECT (SUM(CASE WHEN T1.PLAYER_NAME = 'ARIEL BORYSIUK' THEN T2.OVERALL_RATING ELSE 0 END) * 1.0 - SUM(CASE WHEN T1.PLAYER_NAME = 'PAULIN PUEL' THEN T2.OVERALL_RATING ELSE 0 END)) * 100 / SUM(CASE WHEN T1.PLAYER_NAME = 'PAULIN PUEL' THEN T2.OVERALL_RATING ELSE 0 END) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID,
2,1094,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT SUM(OVERALL_RATING) FROM PLAYER WHERE PLAYER_NAME = 'ARIEL BORYSIUK') - (SELECT SUM(OVERALL_RATING) FROM PLAYER WHERE PLAYER_NAME = 'PAULIN PUEL') AS REAL) * 100) / (SELECT SUM(OVERALL_RATING) FROM PLAYER WHERE PLAYER_NAME = 'PAULIN PUEL') AS PERCENTAGE_DIFFERENCE,SELECT (SUM(CASE WHEN T1.PLAYER_NAME = 'ARIEL BORYSIUK' THEN T2.OVERALL_RATING ELSE 0 END) * 1.0 - SUM(CASE WHEN T1.PLAYER_NAME = 'PAULIN PUEL' THEN T2.OVERALL_RATING ELSE 0 END)) * 100 / SUM(CASE WHEN T1.PLAYER_NAME = 'PAULIN PUEL' THEN T2.OVERALL_RATING ELSE 0 END) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID,
3,1094,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT SUM(OVERALL_RATING) FROM PLAYER WHERE PLAYER_NAME = 'ARIEL BORYSIUK') - (SELECT SUM(OVERALL_RATING) FROM PLAYER WHERE PLAYER_NAME = 'PAULIN PUEL') AS REAL) * 100) / (SELECT SUM(OVERALL_RATING) FROM PLAYER WHERE PLAYER_NAME = 'PAULIN PUEL') AS PERCENTAGE_DIFFERENCE,SELECT (SUM(CASE WHEN T1.PLAYER_NAME = 'ARIEL BORYSIUK' THEN T2.OVERALL_RATING ELSE 0 END) * 1.0 - SUM(CASE WHEN T1.PLAYER_NAME = 'PAULIN PUEL' THEN T2.OVERALL_RATING ELSE 0 END)) * 100 / SUM(CASE WHEN T1.PLAYER_NAME = 'PAULIN PUEL' THEN T2.OVERALL_RATING ELSE 0 END) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID,
1,1095,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__BUILDUPPLAYSPEED`,,SELECT AVG(TEAM.BUILDUPPLAYSPEED) FROM TEAM WHERE TEAM.TEAM_LONG_NAME = 'HEART OF MIDLOTHIAN',SELECT CAST(SUM(T2.BUILDUPPLAYSPEED) AS REAL) / COUNT(T2.ID) FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_LONG_NAME = 'HEART OF MIDLOTHIAN',
2,1095,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__BUILDUPPLAYSPEED`,,SELECT AVG(TEAM.BUILDUPPLAYSPEED) FROM TEAM WHERE TEAM.TEAM_LONG_NAME = 'HEART OF MIDLOTHIAN',SELECT CAST(SUM(T2.BUILDUPPLAYSPEED) AS REAL) / COUNT(T2.ID) FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_LONG_NAME = 'HEART OF MIDLOTHIAN',
3,1095,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__BUILDUPPLAYSPEED`,,SELECT AVG(TEAM.BUILDUPPLAYSPEED) FROM TEAM WHERE TEAM.TEAM_LONG_NAME = 'HEART OF MIDLOTHIAN',SELECT CAST(SUM(T2.BUILDUPPLAYSPEED) AS REAL) / COUNT(T2.ID) FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_LONG_NAME = 'HEART OF MIDLOTHIAN',
1,1096,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__OVERALL_RATING`,,SELECT AVG(T1.OVERALL_RATING) FROM PLAYER AS T1 WHERE T1.PLAYER_NAME = 'PIETRO MARINO';,SELECT CAST(SUM(T2.OVERALL_RATING) AS REAL) / COUNT(T2.ID) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'PIETRO MARINO',
2,1096,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__OVERALL_RATING`,,SELECT AVG(T1.OVERALL_RATING) FROM PLAYER AS T1 WHERE T1.PLAYER_NAME = 'PIETRO MARINO';,SELECT CAST(SUM(T2.OVERALL_RATING) AS REAL) / COUNT(T2.ID) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'PIETRO MARINO',
3,1096,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__OVERALL_RATING`,,SELECT AVG(T1.OVERALL_RATING) FROM PLAYER AS T1 WHERE T1.PLAYER_NAME = 'PIETRO MARINO';,SELECT CAST(SUM(T2.OVERALL_RATING) AS REAL) / COUNT(T2.ID) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'PIETRO MARINO',
1,1097,True,,0.099617,SELECT SUM(T1.CROSSING) FROM PLAYER AS T2 INNER JOIN PLAYER_ATTRIBUTES AS T1 ON T2.PLAYER_API_ID = T1.PLAYER_API_ID WHERE T2.PLAYER_NAME = 'AARON LENNOX',SELECT SUM(T2.CROSSING) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'AARON LENNOX',
1,1098,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CHANCECREATIONPASSING`,,"SELECT CHANCECREATIONPASSING, CHANCECREATIONPASSINGCLASS FROM TEAM WHERE TEAM_LONG_NAME = 'AJAX' ORDER BY CHANCECREATIONPASSING DESC LIMIT 1","SELECT T2.CHANCECREATIONPASSING, T2.CHANCECREATIONPASSINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_LONG_NAME = 'AJAX' ORDER BY T2.CHANCECREATIONPASSING DESC LIMIT 1",
2,1098,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CHANCECREATIONPASSING`,,"SELECT CHANCECREATIONPASSING, CHANCECREATIONPASSINGCLASS FROM TEAM WHERE TEAM_LONG_NAME = 'AJAX' ORDER BY CHANCECREATIONPASSING DESC LIMIT 1","SELECT T2.CHANCECREATIONPASSING, T2.CHANCECREATIONPASSINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_LONG_NAME = 'AJAX' ORDER BY T2.CHANCECREATIONPASSING DESC LIMIT 1",
3,1098,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute CHANCECREATIONPASSING`,,"SELECT CHANCECREATIONPASSING, CHANCECREATIONPASSINGCLASS FROM TEAM WHERE TEAM_LONG_NAME = 'AJAX' ORDER BY CHANCECREATIONPASSING DESC LIMIT 1","SELECT T2.CHANCECREATIONPASSING, T2.CHANCECREATIONPASSINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_LONG_NAME = 'AJAX' ORDER BY T2.CHANCECREATIONPASSING DESC LIMIT 1",
1,1099,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__PREFERRED_FOOT`,,SELECT PLAYER.PREFERRED_FOOT FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'ABDOU DIALLO',SELECT DISTINCT T2.PREFERRED_FOOT FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'ABDOU DIALLO',
2,1099,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__PREFERRED_FOOT`,,SELECT PLAYER.PREFERRED_FOOT FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'ABDOU DIALLO',SELECT DISTINCT T2.PREFERRED_FOOT FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'ABDOU DIALLO',
3,1099,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__PREFERRED_FOOT`,,SELECT PLAYER.PREFERRED_FOOT FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'ABDOU DIALLO',SELECT DISTINCT T2.PREFERRED_FOOT FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'ABDOU DIALLO',
1,1100,True,,0.103694,SELECT MAX(T1.OVERALL_RATING) FROM PLAYER_ATTRIBUTES AS T1 INNER JOIN PLAYER AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.PLAYER_NAME = 'DORLAN PABON',SELECT MAX(T2.OVERALL_RATING) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.PLAYER_NAME = 'DORLAN PABON',
1,1101,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute AWAY_TEAM_GOAL`,,SELECT AVG(AWAY_TEAM_GOAL) FROM MATCH INNER JOIN TEAM ON MATCH.AWAY_TEAM_API_ID = TEAM.TEAM_API_ID WHERE TEAM.TEAM_LONG_NAME = 'PARMA' AND MATCH.COUNTRY_ID = (SELECT ID FROM COUNTRY WHERE NAME = 'ITALY'),"SELECT CAST(SUM(T1.AWAY_TEAM_GOAL) AS REAL) / COUNT(T1.ID) FROM ""MATCH"" AS T1 INNER JOIN TEAM AS T2 ON T1.AWAY_TEAM_API_ID = T2.TEAM_API_ID INNER JOIN COUNTRY AS T3 ON T1.COUNTRY_ID = T3.ID WHERE T2.TEAM_LONG_NAME = 'PARMA' AND T3.NAME = 'ITALY'",
2,1101,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute AWAY_TEAM_GOAL`,,SELECT AVG(AWAY_TEAM_GOAL) FROM MATCH INNER JOIN TEAM ON MATCH.AWAY_TEAM_API_ID = TEAM.TEAM_API_ID WHERE TEAM.TEAM_LONG_NAME = 'PARMA' AND MATCH.COUNTRY_ID = (SELECT ID FROM COUNTRY WHERE NAME = 'ITALY'),"SELECT CAST(SUM(T1.AWAY_TEAM_GOAL) AS REAL) / COUNT(T1.ID) FROM ""MATCH"" AS T1 INNER JOIN TEAM AS T2 ON T1.AWAY_TEAM_API_ID = T2.TEAM_API_ID INNER JOIN COUNTRY AS T3 ON T1.COUNTRY_ID = T3.ID WHERE T2.TEAM_LONG_NAME = 'PARMA' AND T3.NAME = 'ITALY'",
3,1101,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute AWAY_TEAM_GOAL`,,SELECT AVG(AWAY_TEAM_GOAL) FROM MATCH INNER JOIN TEAM ON MATCH.AWAY_TEAM_API_ID = TEAM.TEAM_API_ID WHERE TEAM.TEAM_LONG_NAME = 'PARMA' AND MATCH.COUNTRY_ID = (SELECT ID FROM COUNTRY WHERE NAME = 'ITALY'),"SELECT CAST(SUM(T1.AWAY_TEAM_GOAL) AS REAL) / COUNT(T1.ID) FROM ""MATCH"" AS T1 INNER JOIN TEAM AS T2 ON T1.AWAY_TEAM_API_ID = T2.TEAM_API_ID INNER JOIN COUNTRY AS T3 ON T1.COUNTRY_ID = T3.ID WHERE T2.TEAM_LONG_NAME = 'PARMA' AND T3.NAME = 'ITALY'",
1,1102,ERROR,"NotImplementedError: {'like': ['PLAYER_ATTRIBUTES__DATE', {'literal': '2016-06-23%'}]}",,SELECT PLAYER.PLAYER_NAME FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID WHERE PLAYER_ATTRIBUTES.OVERALL_RATING = 77 AND PLAYER_ATTRIBUTES.DATE LIKE '2016-06-23%' ORDER BY PLAYER.BIRTHDAY LIMIT 1,"SELECT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE SUBSTR(T2.`DATE`, 1, 10) = '2016-06-23' AND T2.OVERALL_RATING = 77 ORDER BY T1.BIRTHDAY ASC LIMIT 1",
2,1102,ERROR,"NotImplementedError: {'like': ['PLAYER_ATTRIBUTES__DATE', {'literal': '2016-06-23%'}]}",,SELECT PLAYER.PLAYER_NAME FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID WHERE PLAYER_ATTRIBUTES.OVERALL_RATING = 77 AND PLAYER_ATTRIBUTES.DATE LIKE '2016-06-23%' ORDER BY PLAYER.BIRTHDAY LIMIT 1,"SELECT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE SUBSTR(T2.`DATE`, 1, 10) = '2016-06-23' AND T2.OVERALL_RATING = 77 ORDER BY T1.BIRTHDAY ASC LIMIT 1",
3,1102,ERROR,"NotImplementedError: {'like': ['PLAYER_ATTRIBUTES__DATE', {'literal': '2016-06-23%'}]}",,SELECT PLAYER.PLAYER_NAME FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID WHERE PLAYER_ATTRIBUTES.OVERALL_RATING = 77 AND PLAYER_ATTRIBUTES.DATE LIKE '2016-06-23%' ORDER BY PLAYER.BIRTHDAY LIMIT 1,"SELECT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE SUBSTR(T2.`DATE`, 1, 10) = '2016-06-23' AND T2.OVERALL_RATING = 77 ORDER BY T1.BIRTHDAY ASC LIMIT 1",
1,1103,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER_NAME`,,SELECT OVERALL_RATING FROM PLAYER_ATTRIBUTES WHERE PLAYER_NAME = 'AARON MOOY' AND DATE LIKE '2016-02-04%';,"SELECT T2.OVERALL_RATING FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE SUBSTR(T2.`DATE`, 1, 10) = '2016-02-04' AND T1.PLAYER_NAME = 'AARON MOOY'",
2,1103,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER_NAME`,,SELECT OVERALL_RATING FROM PLAYER_ATTRIBUTES WHERE PLAYER_NAME = 'AARON MOOY' AND DATE LIKE '2016-02-04%';,"SELECT T2.OVERALL_RATING FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE SUBSTR(T2.`DATE`, 1, 10) = '2016-02-04' AND T1.PLAYER_NAME = 'AARON MOOY'",
3,1103,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER_NAME`,,SELECT OVERALL_RATING FROM PLAYER_ATTRIBUTES WHERE PLAYER_NAME = 'AARON MOOY' AND DATE LIKE '2016-02-04%';,"SELECT T2.OVERALL_RATING FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE SUBSTR(T2.`DATE`, 1, 10) = '2016-02-04' AND T1.PLAYER_NAME = 'AARON MOOY'",
1,1104,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__DATE`,,SELECT PLAYER.POTENTIAL FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'FRANCESCO PARRAVICINI' AND PLAYER.DATE = '2010-08-30 00:00:00',"SELECT T2.POTENTIAL FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE SUBSTR(T2.`DATE`, 1, 10) = '2010-08-30' AND T1.PLAYER_NAME = 'FRANCESCO PARRAVICINI'",
2,1104,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__DATE`,,SELECT PLAYER.POTENTIAL FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'FRANCESCO PARRAVICINI' AND PLAYER.DATE = '2010-08-30 00:00:00',"SELECT T2.POTENTIAL FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE SUBSTR(T2.`DATE`, 1, 10) = '2010-08-30' AND T1.PLAYER_NAME = 'FRANCESCO PARRAVICINI'",
3,1104,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__DATE`,,SELECT PLAYER.POTENTIAL FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'FRANCESCO PARRAVICINI' AND PLAYER.DATE = '2010-08-30 00:00:00',"SELECT T2.POTENTIAL FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE SUBSTR(T2.`DATE`, 1, 10) = '2010-08-30' AND T1.PLAYER_NAME = 'FRANCESCO PARRAVICINI'",
1,1105,ERROR,"NotImplementedError: {'like': ['PLAYER_ATTRIBUTES__DATE', {'literal': '2015-05-01%'}]}",,SELECT PLAYER_ATTRIBUTES.ATTACKING_WORK_RATE FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID WHERE PLAYER.PLAYER_NAME = 'FRANCESCO MIGLIORE' AND PLAYER_ATTRIBUTES.DATE LIKE '2015-05-01%';,SELECT T2.ATTACKING_WORK_RATE FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.`DATE` LIKE '2015-05-01%' AND T1.PLAYER_NAME = 'FRANCESCO MIGLIORE',
2,1105,ERROR,"NotImplementedError: {'like': ['PLAYER_ATTRIBUTES__DATE', {'literal': '2015-05-01%'}]}",,SELECT PLAYER_ATTRIBUTES.ATTACKING_WORK_RATE FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID WHERE PLAYER.PLAYER_NAME = 'FRANCESCO MIGLIORE' AND PLAYER_ATTRIBUTES.DATE LIKE '2015-05-01%';,SELECT T2.ATTACKING_WORK_RATE FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.`DATE` LIKE '2015-05-01%' AND T1.PLAYER_NAME = 'FRANCESCO MIGLIORE',
3,1105,ERROR,"NotImplementedError: {'like': ['PLAYER_ATTRIBUTES__DATE', {'literal': '2015-05-01%'}]}",,SELECT PLAYER_ATTRIBUTES.ATTACKING_WORK_RATE FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID WHERE PLAYER.PLAYER_NAME = 'FRANCESCO MIGLIORE' AND PLAYER_ATTRIBUTES.DATE LIKE '2015-05-01%';,SELECT T2.ATTACKING_WORK_RATE FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.`DATE` LIKE '2015-05-01%' AND T1.PLAYER_NAME = 'FRANCESCO MIGLIORE',
1,1106,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__DATE`,,SELECT PLAYER.DEFENSIVE_WORK_RATE FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'KEVIN BERIGAUD' AND PLAYER.DATE = '2013-02-22 00:00:00',"SELECT T2.DEFENSIVE_WORK_RATE FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_FIFA_API_ID = T2.PLAYER_FIFA_API_ID WHERE SUBSTR(T2.`DATE`, 1, 10) = '2013-02-22' AND T1.PLAYER_NAME = 'KEVIN BERIGAUD'",
2,1106,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__DATE`,,SELECT PLAYER.DEFENSIVE_WORK_RATE FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'KEVIN BERIGAUD' AND PLAYER.DATE = '2013-02-22 00:00:00',"SELECT T2.DEFENSIVE_WORK_RATE FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_FIFA_API_ID = T2.PLAYER_FIFA_API_ID WHERE SUBSTR(T2.`DATE`, 1, 10) = '2013-02-22' AND T1.PLAYER_NAME = 'KEVIN BERIGAUD'",
3,1106,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__DATE`,,SELECT PLAYER.DEFENSIVE_WORK_RATE FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'KEVIN BERIGAUD' AND PLAYER.DATE = '2013-02-22 00:00:00',"SELECT T2.DEFENSIVE_WORK_RATE FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_FIFA_API_ID = T2.PLAYER_FIFA_API_ID WHERE SUBSTR(T2.`DATE`, 1, 10) = '2013-02-22' AND T1.PLAYER_NAME = 'KEVIN BERIGAUD'",
1,1107,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute DATE`,,SELECT DATE FROM PLAYER_ATTRIBUTES WHERE PLAYER_API_ID = (SELECT PLAYER_API_ID FROM PLAYER WHERE PLAYER_NAME = 'KEVIN CONSTANT') ORDER BY CROSSING DESC LIMIT 1,"SELECT `DATE` FROM ( SELECT T2.CROSSING, T2.`DATE` FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_FIFA_API_ID = T2.PLAYER_FIFA_API_ID WHERE T1.PLAYER_NAME = 'KEVIN CONSTANT' ORDER BY T2.CROSSING DESC) ORDER BY DATE DESC LIMIT 1",
2,1107,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute DATE`,,SELECT DATE FROM PLAYER_ATTRIBUTES WHERE PLAYER_API_ID = (SELECT PLAYER_API_ID FROM PLAYER WHERE PLAYER_NAME = 'KEVIN CONSTANT') ORDER BY CROSSING DESC LIMIT 1,"SELECT `DATE` FROM ( SELECT T2.CROSSING, T2.`DATE` FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_FIFA_API_ID = T2.PLAYER_FIFA_API_ID WHERE T1.PLAYER_NAME = 'KEVIN CONSTANT' ORDER BY T2.CROSSING DESC) ORDER BY DATE DESC LIMIT 1",
3,1107,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute DATE`,,SELECT DATE FROM PLAYER_ATTRIBUTES WHERE PLAYER_API_ID = (SELECT PLAYER_API_ID FROM PLAYER WHERE PLAYER_NAME = 'KEVIN CONSTANT') ORDER BY CROSSING DESC LIMIT 1,"SELECT `DATE` FROM ( SELECT T2.CROSSING, T2.`DATE` FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_FIFA_API_ID = T2.PLAYER_FIFA_API_ID WHERE T1.PLAYER_NAME = 'KEVIN CONSTANT' ORDER BY T2.CROSSING DESC) ORDER BY DATE DESC LIMIT 1",
1,1108,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__DATE`,,SELECT TEAM.BUILD_UP_PLAY_SPEED_CLASS FROM TEAM WHERE TEAM.TEAM_LONG_NAME = 'WILLEM II' AND TEAM.DATE = '2012-02-22',"SELECT T2.BUILDUPPLAYSPEEDCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_LONG_NAME = 'WILLEM II' AND SUBSTR(T2.`DATE`, 1, 10) = '2011-02-22'",
2,1108,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__DATE`,,SELECT TEAM.BUILD_UP_PLAY_SPEED_CLASS FROM TEAM WHERE TEAM.TEAM_LONG_NAME = 'WILLEM II' AND TEAM.DATE = '2012-02-22',"SELECT T2.BUILDUPPLAYSPEEDCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_LONG_NAME = 'WILLEM II' AND SUBSTR(T2.`DATE`, 1, 10) = '2011-02-22'",
3,1108,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__DATE`,,SELECT TEAM.BUILD_UP_PLAY_SPEED_CLASS FROM TEAM WHERE TEAM.TEAM_LONG_NAME = 'WILLEM II' AND TEAM.DATE = '2012-02-22',"SELECT T2.BUILDUPPLAYSPEEDCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_LONG_NAME = 'WILLEM II' AND SUBSTR(T2.`DATE`, 1, 10) = '2011-02-22'",
1,1109,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__DATE`,,SELECT TEAM.BUILD_UP_PLAY_DRIBBLING_CLASS FROM TEAM WHERE TEAM.TEAM_SHORT_NAME = 'LEI' AND TEAM.DATE = '2015-09-10 00:00:00',"SELECT T2.BUILDUPPLAYDRIBBLINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_SHORT_NAME = 'LEI' AND SUBSTR(T2.`DATE`, 1, 10) = '2015-09-10'",
2,1109,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__DATE`,,SELECT TEAM.BUILD_UP_PLAY_DRIBBLING_CLASS FROM TEAM WHERE TEAM.TEAM_SHORT_NAME = 'LEI' AND TEAM.DATE = '2015-09-10 00:00:00',"SELECT T2.BUILDUPPLAYDRIBBLINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_SHORT_NAME = 'LEI' AND SUBSTR(T2.`DATE`, 1, 10) = '2015-09-10'",
3,1109,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__DATE`,,SELECT TEAM.BUILD_UP_PLAY_DRIBBLING_CLASS FROM TEAM WHERE TEAM.TEAM_SHORT_NAME = 'LEI' AND TEAM.DATE = '2015-09-10 00:00:00',"SELECT T2.BUILDUPPLAYDRIBBLINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_SHORT_NAME = 'LEI' AND SUBSTR(T2.`DATE`, 1, 10) = '2015-09-10'",
1,1110,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM_ATTRIBUTES__TEAM_LONG_NAME`,,SELECT TEAM_ATTRIBUTES.BUILDUPPLAYPASSINGCLASS FROM TEAM_ATTRIBUTES WHERE TEAM_ATTRIBUTES.TEAM_LONG_NAME = 'FC LORIENT' AND TEAM_ATTRIBUTES.DATE LIKE '2010-02-22%',SELECT T2.BUILDUPPLAYPASSINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_LONG_NAME = 'FC LORIENT' AND T2.`DATE` LIKE '2010-02-22%',
2,1110,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM_ATTRIBUTES__TEAM_LONG_NAME`,,SELECT TEAM_ATTRIBUTES.BUILDUPPLAYPASSINGCLASS FROM TEAM_ATTRIBUTES WHERE TEAM_ATTRIBUTES.TEAM_LONG_NAME = 'FC LORIENT' AND TEAM_ATTRIBUTES.DATE LIKE '2010-02-22%',SELECT T2.BUILDUPPLAYPASSINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_LONG_NAME = 'FC LORIENT' AND T2.`DATE` LIKE '2010-02-22%',
3,1110,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM_ATTRIBUTES__TEAM_LONG_NAME`,,SELECT TEAM_ATTRIBUTES.BUILDUPPLAYPASSINGCLASS FROM TEAM_ATTRIBUTES WHERE TEAM_ATTRIBUTES.TEAM_LONG_NAME = 'FC LORIENT' AND TEAM_ATTRIBUTES.DATE LIKE '2010-02-22%',SELECT T2.BUILDUPPLAYPASSINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_LONG_NAME = 'FC LORIENT' AND T2.`DATE` LIKE '2010-02-22%',
1,1111,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM_LONG_NAME`,,SELECT CHANCECREATIONPASSING FROM TEAM_ATTRIBUTES WHERE TEAM_LONG_NAME = 'PEC ZWOLLE' AND DATE = '2013-09-20 00:00:00',"SELECT T2.CHANCECREATIONPASSINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_LONG_NAME = 'PEC ZWOLLE' AND SUBSTR(T2.`DATE`, 1, 10) = '2013-09-20'",
2,1111,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM_LONG_NAME`,,SELECT CHANCECREATIONPASSING FROM TEAM_ATTRIBUTES WHERE TEAM_LONG_NAME = 'PEC ZWOLLE' AND DATE = '2013-09-20 00:00:00',"SELECT T2.CHANCECREATIONPASSINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_LONG_NAME = 'PEC ZWOLLE' AND SUBSTR(T2.`DATE`, 1, 10) = '2013-09-20'",
3,1111,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM_LONG_NAME`,,SELECT CHANCECREATIONPASSING FROM TEAM_ATTRIBUTES WHERE TEAM_LONG_NAME = 'PEC ZWOLLE' AND DATE = '2013-09-20 00:00:00',"SELECT T2.CHANCECREATIONPASSINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_LONG_NAME = 'PEC ZWOLLE' AND SUBSTR(T2.`DATE`, 1, 10) = '2013-09-20'",
1,1112,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM_LONG_NAME`,,SELECT CHANCE_CREATION_CROSSING_CLASS FROM TEAM_ATTRIBUTES WHERE TEAM_LONG_NAME = 'HULL CITY' AND DATE = '2010-02-22 00:00:00',"SELECT T2.CHANCECREATIONCROSSINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_LONG_NAME = 'HULL CITY' AND SUBSTR(T2.`DATE`, 1, 10) = '2010-02-22'",
2,1112,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM_LONG_NAME`,,SELECT CHANCE_CREATION_CROSSING_CLASS FROM TEAM_ATTRIBUTES WHERE TEAM_LONG_NAME = 'HULL CITY' AND DATE = '2010-02-22 00:00:00',"SELECT T2.CHANCECREATIONCROSSINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_LONG_NAME = 'HULL CITY' AND SUBSTR(T2.`DATE`, 1, 10) = '2010-02-22'",
3,1112,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM_LONG_NAME`,,SELECT CHANCE_CREATION_CROSSING_CLASS FROM TEAM_ATTRIBUTES WHERE TEAM_LONG_NAME = 'HULL CITY' AND DATE = '2010-02-22 00:00:00',"SELECT T2.CHANCECREATIONCROSSINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_LONG_NAME = 'HULL CITY' AND SUBSTR(T2.`DATE`, 1, 10) = '2010-02-22'",
1,1113,ERROR,"NotImplementedError: {'like': ['TEAM_ATTRIBUTES__DATE', {'literal': '2015-09-10%'}]}",,SELECT TEAM_ATTRIBUTES.DEFENCE_AGGRESSION_CLASS FROM TEAM_ATTRIBUTES INNER JOIN TEAM ON TEAM_ATTRIBUTES.TEAM_API_ID = TEAM.TEAM_API_ID WHERE TEAM.TEAM_LONG_NAME = 'HANNOVER 96' AND TEAM_ATTRIBUTES.DATE LIKE '2015-09-10%';,SELECT T2.CHANCECREATIONSHOOTINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_LONG_NAME = 'HANNOVER 96' AND T2.`DATE` LIKE '2015-09-10%',
2,1113,ERROR,"NotImplementedError: {'like': ['TEAM_ATTRIBUTES__DATE', {'literal': '2015-09-10%'}]}",,SELECT TEAM_ATTRIBUTES.DEFENCE_AGGRESSION_CLASS FROM TEAM_ATTRIBUTES INNER JOIN TEAM ON TEAM_ATTRIBUTES.TEAM_API_ID = TEAM.TEAM_API_ID WHERE TEAM.TEAM_LONG_NAME = 'HANNOVER 96' AND TEAM_ATTRIBUTES.DATE LIKE '2015-09-10%';,SELECT T2.CHANCECREATIONSHOOTINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_LONG_NAME = 'HANNOVER 96' AND T2.`DATE` LIKE '2015-09-10%',
3,1113,ERROR,"NotImplementedError: {'like': ['TEAM_ATTRIBUTES__DATE', {'literal': '2015-09-10%'}]}",,SELECT TEAM_ATTRIBUTES.DEFENCE_AGGRESSION_CLASS FROM TEAM_ATTRIBUTES INNER JOIN TEAM ON TEAM_ATTRIBUTES.TEAM_API_ID = TEAM.TEAM_API_ID WHERE TEAM.TEAM_LONG_NAME = 'HANNOVER 96' AND TEAM_ATTRIBUTES.DATE LIKE '2015-09-10%';,SELECT T2.CHANCECREATIONSHOOTINGCLASS FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T1.TEAM_LONG_NAME = 'HANNOVER 96' AND T2.`DATE` LIKE '2015-09-10%',
1,1114,ERROR,"NotImplementedError: {'substr': ['PLAYER__DATE', 1, 10]}",,"SELECT AVG(PLAYER.OVERALL_RATING) FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'MARKO ARNAUTOVIC' AND SUBSTR(PLAYER.DATE, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'","SELECT CAST(SUM(T2.OVERALL_RATING) AS REAL) / COUNT(T2.ID) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_FIFA_API_ID = T2.PLAYER_FIFA_API_ID WHERE T1.PLAYER_NAME = 'MARKO ARNAUTOVIC' AND SUBSTR(T2.`DATE`, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'",
2,1114,ERROR,"NotImplementedError: {'substr': ['PLAYER__DATE', 1, 10]}",,"SELECT AVG(PLAYER.OVERALL_RATING) FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'MARKO ARNAUTOVIC' AND SUBSTR(PLAYER.DATE, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'","SELECT CAST(SUM(T2.OVERALL_RATING) AS REAL) / COUNT(T2.ID) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_FIFA_API_ID = T2.PLAYER_FIFA_API_ID WHERE T1.PLAYER_NAME = 'MARKO ARNAUTOVIC' AND SUBSTR(T2.`DATE`, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'",
3,1114,ERROR,"NotImplementedError: {'substr': ['PLAYER__DATE', 1, 10]}",,"SELECT AVG(PLAYER.OVERALL_RATING) FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'MARKO ARNAUTOVIC' AND SUBSTR(PLAYER.DATE, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'","SELECT CAST(SUM(T2.OVERALL_RATING) AS REAL) / COUNT(T2.ID) FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_FIFA_API_ID = T2.PLAYER_FIFA_API_ID WHERE T1.PLAYER_NAME = 'MARKO ARNAUTOVIC' AND SUBSTR(T2.`DATE`, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'",
1,1115,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT CAST((SELECT SUM(PLAYER.OVERALL_RATING) FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'LANDON DONOVAN' AND PLAYER.DATE = '2013/7/12') - (SELECT SUM(PLAYER.OVERALL_RATING) FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'JORDAN BOWERY' AND PLAYER.DATE = '2013/7/12') AS REAL) * 100 / (SELECT SUM(PLAYER.OVERALL_RATING) FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'LANDON DONOVAN' AND PLAYER.DATE = '2013/7/12') AS PERCENTAGE_DIFFERENCE,"SELECT (SUM(CASE WHEN T1.PLAYER_NAME = 'LANDON DONOVAN' THEN T2.OVERALL_RATING ELSE 0 END) * 1.0 - SUM(CASE WHEN T1.PLAYER_NAME = 'JORDAN BOWERY' THEN T2.OVERALL_RATING ELSE 0 END)) * 100 / SUM(CASE WHEN T1.PLAYER_NAME = 'LANDON DONOVAN' THEN T2.OVERALL_RATING ELSE 0 END) LVSJ_PERCENT FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_FIFA_API_ID = T2.PLAYER_FIFA_API_ID WHERE SUBSTR(T2.`DATE`, 1, 10) = '2013-07-12'",
2,1115,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT CAST((SELECT SUM(PLAYER.OVERALL_RATING) FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'LANDON DONOVAN' AND PLAYER.DATE = '2013/7/12') - (SELECT SUM(PLAYER.OVERALL_RATING) FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'JORDAN BOWERY' AND PLAYER.DATE = '2013/7/12') AS REAL) * 100 / (SELECT SUM(PLAYER.OVERALL_RATING) FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'LANDON DONOVAN' AND PLAYER.DATE = '2013/7/12') AS PERCENTAGE_DIFFERENCE,"SELECT (SUM(CASE WHEN T1.PLAYER_NAME = 'LANDON DONOVAN' THEN T2.OVERALL_RATING ELSE 0 END) * 1.0 - SUM(CASE WHEN T1.PLAYER_NAME = 'JORDAN BOWERY' THEN T2.OVERALL_RATING ELSE 0 END)) * 100 / SUM(CASE WHEN T1.PLAYER_NAME = 'LANDON DONOVAN' THEN T2.OVERALL_RATING ELSE 0 END) LVSJ_PERCENT FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_FIFA_API_ID = T2.PLAYER_FIFA_API_ID WHERE SUBSTR(T2.`DATE`, 1, 10) = '2013-07-12'",
3,1115,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT CAST((SELECT SUM(PLAYER.OVERALL_RATING) FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'LANDON DONOVAN' AND PLAYER.DATE = '2013/7/12') - (SELECT SUM(PLAYER.OVERALL_RATING) FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'JORDAN BOWERY' AND PLAYER.DATE = '2013/7/12') AS REAL) * 100 / (SELECT SUM(PLAYER.OVERALL_RATING) FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'LANDON DONOVAN' AND PLAYER.DATE = '2013/7/12') AS PERCENTAGE_DIFFERENCE,"SELECT (SUM(CASE WHEN T1.PLAYER_NAME = 'LANDON DONOVAN' THEN T2.OVERALL_RATING ELSE 0 END) * 1.0 - SUM(CASE WHEN T1.PLAYER_NAME = 'JORDAN BOWERY' THEN T2.OVERALL_RATING ELSE 0 END)) * 100 / SUM(CASE WHEN T1.PLAYER_NAME = 'LANDON DONOVAN' THEN T2.OVERALL_RATING ELSE 0 END) LVSJ_PERCENT FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_FIFA_API_ID = T2.PLAYER_FIFA_API_ID WHERE SUBSTR(T2.`DATE`, 1, 10) = '2013-07-12'",
1,1116,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT PLAYER.NAME FROM PLAYER ORDER BY PLAYER.HEIGHT DESC LIMIT 1;,"SELECT PLAYER_NAME FROM (SELECT PLAYER_NAME, HEIGHT, DENSE_RANK() OVER (ORDER BY HEIGHT DESC) AS RANK FROM PLAYER) WHERE RANK = 1",
2,1116,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT PLAYER.NAME FROM PLAYER ORDER BY PLAYER.HEIGHT DESC LIMIT 1;,"SELECT PLAYER_NAME FROM (SELECT PLAYER_NAME, HEIGHT, DENSE_RANK() OVER (ORDER BY HEIGHT DESC) AS RANK FROM PLAYER) WHERE RANK = 1",
3,1116,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT PLAYER.NAME FROM PLAYER ORDER BY PLAYER.HEIGHT DESC LIMIT 1;,"SELECT PLAYER_NAME FROM (SELECT PLAYER_NAME, HEIGHT, DENSE_RANK() OVER (ORDER BY HEIGHT DESC) AS RANK FROM PLAYER) WHERE RANK = 1",
1,1117,True,,0.03674,SELECT PLAYER_API_ID FROM PLAYER ORDER BY WEIGHT DESC LIMIT 10,SELECT PLAYER_API_ID FROM PLAYER ORDER BY WEIGHT DESC LIMIT 10,
1,1118,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, {'literal': 'NOW'}]}",,"SELECT PLAYER.NAME FROM PLAYER WHERE STRFTIME('%Y', 'NOW') - STRFTIME('%Y', BIRTHDAY) > 34",SELECT PLAYER_NAME FROM PLAYER WHERE CAST((JULIANDAY('NOW') - JULIANDAY(BIRTHDAY)) AS REAL) / 365 >= 35,
2,1118,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, {'literal': 'NOW'}]}",,"SELECT PLAYER.NAME FROM PLAYER WHERE STRFTIME('%Y', 'NOW') - STRFTIME('%Y', BIRTHDAY) > 34",SELECT PLAYER_NAME FROM PLAYER WHERE CAST((JULIANDAY('NOW') - JULIANDAY(BIRTHDAY)) AS REAL) / 365 >= 35,
3,1118,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, {'literal': 'NOW'}]}",,"SELECT PLAYER.NAME FROM PLAYER WHERE STRFTIME('%Y', 'NOW') - STRFTIME('%Y', BIRTHDAY) > 34",SELECT PLAYER_NAME FROM PLAYER WHERE CAST((JULIANDAY('NOW') - JULIANDAY(BIRTHDAY)) AS REAL) / 365 >= 35,
1,1119,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute MATCH__HOME_PLAYER_1`,,SELECT SUM(HOME_TEAM_GOAL) FROM MATCH INNER JOIN PLAYER ON MATCH.HOME_PLAYER_1 = PLAYER.PLAYER_API_ID WHERE PLAYER.PLAYER_NAME = 'AARON LENNON',SELECT SUM(T2.HOME_TEAM_GOAL) FROM PLAYER AS T1 INNER JOIN MATCH AS T2 ON T1.PLAYER_API_ID = T2.AWAY_PLAYER_9 WHERE T1.PLAYER_NAME = 'AARON LENNON',
2,1119,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute MATCH__HOME_PLAYER_1`,,SELECT SUM(HOME_TEAM_GOAL) FROM MATCH INNER JOIN PLAYER ON MATCH.HOME_PLAYER_1 = PLAYER.PLAYER_API_ID WHERE PLAYER.PLAYER_NAME = 'AARON LENNON',SELECT SUM(T2.HOME_TEAM_GOAL) FROM PLAYER AS T1 INNER JOIN MATCH AS T2 ON T1.PLAYER_API_ID = T2.AWAY_PLAYER_9 WHERE T1.PLAYER_NAME = 'AARON LENNON',
3,1119,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute MATCH__HOME_PLAYER_1`,,SELECT SUM(HOME_TEAM_GOAL) FROM MATCH INNER JOIN PLAYER ON MATCH.HOME_PLAYER_1 = PLAYER.PLAYER_API_ID WHERE PLAYER.PLAYER_NAME = 'AARON LENNON',SELECT SUM(T2.HOME_TEAM_GOAL) FROM PLAYER AS T1 INNER JOIN MATCH AS T2 ON T1.PLAYER_API_ID = T2.AWAY_PLAYER_9 WHERE T1.PLAYER_NAME = 'AARON LENNON',
1,1120,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute MATCH__AWAY_PLAYER_1`,,"SELECT SUM(MATCH.AWAY_TEAM_GOAL) FROM MATCH INNER JOIN PLAYER ON MATCH.AWAY_PLAYER_1 = PLAYER.PLAYER_API_ID WHERE PLAYER.PLAYER_NAME IN ('DAAN SMITH', 'FILIPE FERREIRA')","SELECT SUM(T2.AWAY_TEAM_GOAL) FROM PLAYER AS T1 INNER JOIN MATCH AS T2 ON T1.PLAYER_API_ID = T2.AWAY_PLAYER_5 WHERE T1.PLAYER_NAME IN ('DAAN SMITH', 'FILIPE FERREIRA')",
2,1120,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute MATCH__AWAY_PLAYER_1`,,"SELECT SUM(MATCH.AWAY_TEAM_GOAL) FROM MATCH INNER JOIN PLAYER ON MATCH.AWAY_PLAYER_1 = PLAYER.PLAYER_API_ID WHERE PLAYER.PLAYER_NAME IN ('DAAN SMITH', 'FILIPE FERREIRA')","SELECT SUM(T2.AWAY_TEAM_GOAL) FROM PLAYER AS T1 INNER JOIN MATCH AS T2 ON T1.PLAYER_API_ID = T2.AWAY_PLAYER_5 WHERE T1.PLAYER_NAME IN ('DAAN SMITH', 'FILIPE FERREIRA')",
3,1120,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute MATCH__AWAY_PLAYER_1`,,"SELECT SUM(MATCH.AWAY_TEAM_GOAL) FROM MATCH INNER JOIN PLAYER ON MATCH.AWAY_PLAYER_1 = PLAYER.PLAYER_API_ID WHERE PLAYER.PLAYER_NAME IN ('DAAN SMITH', 'FILIPE FERREIRA')","SELECT SUM(T2.AWAY_TEAM_GOAL) FROM PLAYER AS T1 INNER JOIN MATCH AS T2 ON T1.PLAYER_API_ID = T2.AWAY_PLAYER_5 WHERE T1.PLAYER_NAME IN ('DAAN SMITH', 'FILIPE FERREIRA')",
1,1121,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute MATCH__HOME_PLAYER_1`,,"SELECT SUM(MATCH.HOME_TEAM_GOAL) FROM MATCH INNER JOIN PLAYER ON MATCH.HOME_PLAYER_1 = PLAYER.PLAYER_API_ID WHERE (STRFTIME('%Y', 'NOW') - STRFTIME('%Y', PLAYER.BIRTHDAY)) < 31","SELECT SUM(T2.HOME_TEAM_GOAL) FROM PLAYER AS T1 INNER JOIN MATCH AS T2 ON T1.PLAYER_API_ID = T2.AWAY_PLAYER_1 WHERE DATETIME(CURRENT_TIMESTAMP, 'LOCALTIME') - DATETIME(T1.BIRTHDAY) < 31",
2,1121,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute MATCH__HOME_PLAYER_1`,,"SELECT SUM(MATCH.HOME_TEAM_GOAL) FROM MATCH INNER JOIN PLAYER ON MATCH.HOME_PLAYER_1 = PLAYER.PLAYER_API_ID WHERE (STRFTIME('%Y', 'NOW') - STRFTIME('%Y', PLAYER.BIRTHDAY)) < 31","SELECT SUM(T2.HOME_TEAM_GOAL) FROM PLAYER AS T1 INNER JOIN MATCH AS T2 ON T1.PLAYER_API_ID = T2.AWAY_PLAYER_1 WHERE DATETIME(CURRENT_TIMESTAMP, 'LOCALTIME') - DATETIME(T1.BIRTHDAY) < 31",
3,1121,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute MATCH__HOME_PLAYER_1`,,"SELECT SUM(MATCH.HOME_TEAM_GOAL) FROM MATCH INNER JOIN PLAYER ON MATCH.HOME_PLAYER_1 = PLAYER.PLAYER_API_ID WHERE (STRFTIME('%Y', 'NOW') - STRFTIME('%Y', PLAYER.BIRTHDAY)) < 31","SELECT SUM(T2.HOME_TEAM_GOAL) FROM PLAYER AS T1 INNER JOIN MATCH AS T2 ON T1.PLAYER_API_ID = T2.AWAY_PLAYER_1 WHERE DATETIME(CURRENT_TIMESTAMP, 'LOCALTIME') - DATETIME(T1.BIRTHDAY) < 31",
1,1122,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT PLAYER.NAME FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID ORDER BY PLAYER_ATTRIBUTES.OVERALL_RATING DESC LIMIT 1,SELECT DISTINCT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.OVERALL_RATING = (SELECT MAX(OVERALL_RATING) FROM PLAYER_ATTRIBUTES),
2,1122,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT PLAYER.NAME FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID ORDER BY PLAYER_ATTRIBUTES.OVERALL_RATING DESC LIMIT 1,SELECT DISTINCT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.OVERALL_RATING = (SELECT MAX(OVERALL_RATING) FROM PLAYER_ATTRIBUTES),
3,1122,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT PLAYER.NAME FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID ORDER BY PLAYER_ATTRIBUTES.OVERALL_RATING DESC LIMIT 1,SELECT DISTINCT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.OVERALL_RATING = (SELECT MAX(OVERALL_RATING) FROM PLAYER_ATTRIBUTES),
1,1123,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__POTENTIAL`,,SELECT PLAYER.NAME FROM PLAYER WHERE PLAYER.POTENTIAL = (SELECT MAX(PLAYER.POTENTIAL) FROM PLAYER),SELECT DISTINCT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID ORDER BY T2.POTENTIAL DESC LIMIT 1,
2,1123,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__POTENTIAL`,,SELECT PLAYER.NAME FROM PLAYER WHERE PLAYER.POTENTIAL = (SELECT MAX(PLAYER.POTENTIAL) FROM PLAYER),SELECT DISTINCT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID ORDER BY T2.POTENTIAL DESC LIMIT 1,
3,1123,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__POTENTIAL`,,SELECT PLAYER.NAME FROM PLAYER WHERE PLAYER.POTENTIAL = (SELECT MAX(PLAYER.POTENTIAL) FROM PLAYER),SELECT DISTINCT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID ORDER BY T2.POTENTIAL DESC LIMIT 1,
1,1124,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `PLAYERS`,,SELECT PLAYERS.PLAYER_NAME FROM PLAYERS WHERE PLAYERS.ATTACKING_WORK_RATE = 'HIGH',SELECT DISTINCT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.ATTACKING_WORK_RATE = 'HIGH',
2,1124,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `PLAYERS`,,SELECT PLAYERS.PLAYER_NAME FROM PLAYERS WHERE PLAYERS.ATTACKING_WORK_RATE = 'HIGH',SELECT DISTINCT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.ATTACKING_WORK_RATE = 'HIGH',
3,1124,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `PLAYERS`,,SELECT PLAYERS.PLAYER_NAME FROM PLAYERS WHERE PLAYERS.ATTACKING_WORK_RATE = 'HIGH',SELECT DISTINCT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.ATTACKING_WORK_RATE = 'HIGH',
1,1125,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT PLAYER.NAME FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID WHERE PLAYER_ATTRIBUTES.FINISHING = 1 ORDER BY PLAYER.BIRTHDAY ASC LIMIT 1,SELECT DISTINCT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.FINISHING = 1 ORDER BY T1.BIRTHDAY ASC LIMIT 1,
2,1125,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT PLAYER.NAME FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID WHERE PLAYER_ATTRIBUTES.FINISHING = 1 ORDER BY PLAYER.BIRTHDAY ASC LIMIT 1,SELECT DISTINCT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.FINISHING = 1 ORDER BY T1.BIRTHDAY ASC LIMIT 1,
3,1125,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT PLAYER.NAME FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID WHERE PLAYER_ATTRIBUTES.FINISHING = 1 ORDER BY PLAYER.BIRTHDAY ASC LIMIT 1,SELECT DISTINCT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.FINISHING = 1 ORDER BY T1.BIRTHDAY ASC LIMIT 1,
1,1126,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__COUNTRY_ID`,,SELECT PLAYER.PLAYER_NAME FROM PLAYER INNER JOIN COUNTRY ON PLAYER.COUNTRY_ID = COUNTRY.ID WHERE COUNTRY.NAME = 'BELGIUM',SELECT T3.PLAYER_NAME FROM COUNTRY AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.COUNTRY_ID INNER JOIN PLAYER AS T3 ON T2.HOME_PLAYER_1 = T3.PLAYER_API_ID WHERE T1.NAME = 'BELGIUM',
2,1126,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__COUNTRY_ID`,,SELECT PLAYER.PLAYER_NAME FROM PLAYER INNER JOIN COUNTRY ON PLAYER.COUNTRY_ID = COUNTRY.ID WHERE COUNTRY.NAME = 'BELGIUM',SELECT T3.PLAYER_NAME FROM COUNTRY AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.COUNTRY_ID INNER JOIN PLAYER AS T3 ON T2.HOME_PLAYER_1 = T3.PLAYER_API_ID WHERE T1.NAME = 'BELGIUM',
3,1126,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__COUNTRY_ID`,,SELECT PLAYER.PLAYER_NAME FROM PLAYER INNER JOIN COUNTRY ON PLAYER.COUNTRY_ID = COUNTRY.ID WHERE COUNTRY.NAME = 'BELGIUM',SELECT T3.PLAYER_NAME FROM COUNTRY AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.COUNTRY_ID INNER JOIN PLAYER AS T3 ON T2.HOME_PLAYER_1 = T3.PLAYER_API_ID WHERE T1.NAME = 'BELGIUM',
1,1127,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__COUNTRY`,,SELECT PLAYER.COUNTRY FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID WHERE PLAYER_ATTRIBUTES.VISION > 89,SELECT DISTINCT T4.NAME FROM PLAYER_ATTRIBUTES AS T1 INNER JOIN PLAYER AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID INNER JOIN MATCH AS T3 ON T2.PLAYER_API_ID = T3.HOME_PLAYER_8 INNER JOIN COUNTRY AS T4 ON T3.COUNTRY_ID = T4.ID WHERE T1.VISION > 89,
2,1127,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__COUNTRY`,,SELECT PLAYER.COUNTRY FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID WHERE PLAYER_ATTRIBUTES.VISION > 89,SELECT DISTINCT T4.NAME FROM PLAYER_ATTRIBUTES AS T1 INNER JOIN PLAYER AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID INNER JOIN MATCH AS T3 ON T2.PLAYER_API_ID = T3.HOME_PLAYER_8 INNER JOIN COUNTRY AS T4 ON T3.COUNTRY_ID = T4.ID WHERE T1.VISION > 89,
3,1127,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__COUNTRY`,,SELECT PLAYER.COUNTRY FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID WHERE PLAYER_ATTRIBUTES.VISION > 89,SELECT DISTINCT T4.NAME FROM PLAYER_ATTRIBUTES AS T1 INNER JOIN PLAYER AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID INNER JOIN MATCH AS T3 ON T2.PLAYER_API_ID = T3.HOME_PLAYER_8 INNER JOIN COUNTRY AS T4 ON T3.COUNTRY_ID = T4.ID WHERE T1.VISION > 89,
1,1128,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__COUNTRY`,,SELECT PLAYER.COUNTRY FROM PLAYER GROUP BY PLAYER.COUNTRY ORDER BY AVG(PLAYER.WEIGHT) DESC LIMIT 1,SELECT T1.NAME FROM COUNTRY AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.COUNTRY_ID INNER JOIN PLAYER AS T3 ON T2.HOME_PLAYER_1 = T3.PLAYER_API_ID GROUP BY T1.NAME ORDER BY AVG(T3.WEIGHT) DESC LIMIT 1,
2,1128,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__COUNTRY`,,SELECT PLAYER.COUNTRY FROM PLAYER GROUP BY PLAYER.COUNTRY ORDER BY AVG(PLAYER.WEIGHT) DESC LIMIT 1,SELECT T1.NAME FROM COUNTRY AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.COUNTRY_ID INNER JOIN PLAYER AS T3 ON T2.HOME_PLAYER_1 = T3.PLAYER_API_ID GROUP BY T1.NAME ORDER BY AVG(T3.WEIGHT) DESC LIMIT 1,
3,1128,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__COUNTRY`,,SELECT PLAYER.COUNTRY FROM PLAYER GROUP BY PLAYER.COUNTRY ORDER BY AVG(PLAYER.WEIGHT) DESC LIMIT 1,SELECT T1.NAME FROM COUNTRY AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.COUNTRY_ID INNER JOIN PLAYER AS T3 ON T2.HOME_PLAYER_1 = T3.PLAYER_API_ID GROUP BY T1.NAME ORDER BY AVG(T3.WEIGHT) DESC LIMIT 1,
1,1129,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__BUILDUPPLAYSPEEDCLASS`,,SELECT TEAM.TEAM_LONG_NAME FROM TEAM WHERE TEAM.BUILDUPPLAYSPEEDCLASS = 'SLOW';,SELECT DISTINCT T1.TEAM_LONG_NAME FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T2.BUILDUPPLAYSPEEDCLASS = 'SLOW',
2,1129,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__BUILDUPPLAYSPEEDCLASS`,,SELECT TEAM.TEAM_LONG_NAME FROM TEAM WHERE TEAM.BUILDUPPLAYSPEEDCLASS = 'SLOW';,SELECT DISTINCT T1.TEAM_LONG_NAME FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T2.BUILDUPPLAYSPEEDCLASS = 'SLOW',
3,1129,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute TEAM__BUILDUPPLAYSPEEDCLASS`,,SELECT TEAM.TEAM_LONG_NAME FROM TEAM WHERE TEAM.BUILDUPPLAYSPEEDCLASS = 'SLOW';,SELECT DISTINCT T1.TEAM_LONG_NAME FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T2.BUILDUPPLAYSPEEDCLASS = 'SLOW',
1,1130,True,,0.0775189999999999,SELECT TEAM.TEAM_SHORT_NAME FROM TEAM INNER JOIN TEAM_ATTRIBUTES ON TEAM.TEAM_API_ID = TEAM_ATTRIBUTES.TEAM_API_ID WHERE TEAM_ATTRIBUTES.CHANCECREATIONPASSINGCLASS = 'SAFE';,SELECT DISTINCT T1.TEAM_SHORT_NAME FROM TEAM AS T1 INNER JOIN TEAM_ATTRIBUTES AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T2.CHANCECREATIONPASSINGCLASS = 'SAFE',
1,1131,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `PLAYERS`,,SELECT AVG(PLAYERS.HEIGHT) FROM PLAYERS INNER JOIN COUNTRY ON PLAYERS.COUNTRY_ID = COUNTRY.ID WHERE COUNTRY.NAME = 'ITALY',SELECT CAST(SUM(T1.HEIGHT) AS REAL) / COUNT(T1.ID) FROM PLAYER AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.ID INNER JOIN COUNTRY AS T3 ON T2.COUNTRY_ID = T3.ID WHERE T3.NAME = 'ITALY',
2,1131,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `PLAYERS`,,SELECT AVG(PLAYERS.HEIGHT) FROM PLAYERS INNER JOIN COUNTRY ON PLAYERS.COUNTRY_ID = COUNTRY.ID WHERE COUNTRY.NAME = 'ITALY',SELECT CAST(SUM(T1.HEIGHT) AS REAL) / COUNT(T1.ID) FROM PLAYER AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.ID INNER JOIN COUNTRY AS T3 ON T2.COUNTRY_ID = T3.ID WHERE T3.NAME = 'ITALY',
3,1131,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `PLAYERS`,,SELECT AVG(PLAYERS.HEIGHT) FROM PLAYERS INNER JOIN COUNTRY ON PLAYERS.COUNTRY_ID = COUNTRY.ID WHERE COUNTRY.NAME = 'ITALY',SELECT CAST(SUM(T1.HEIGHT) AS REAL) / COUNT(T1.ID) FROM PLAYER AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.ID INNER JOIN COUNTRY AS T3 ON T2.COUNTRY_ID = T3.ID WHERE T3.NAME = 'ITALY',
1,1132,True,,0.041926,SELECT PLAYER.PLAYER_NAME FROM PLAYER WHERE PLAYER.HEIGHT > 180 ORDER BY PLAYER.PLAYER_NAME ASC LIMIT 3,SELECT PLAYER_NAME FROM PLAYER WHERE HEIGHT > 180 ORDER BY PLAYER_NAME LIMIT 3,
1,1133,ERROR,"NotImplementedError: {'like': ['PLAYER_NAME', {'literal': 'AARON%'}]}",,SELECT COUNT(*) FROM PLAYER WHERE BIRTHDAY > '1990' AND PLAYER_NAME LIKE 'AARON%',SELECT COUNT(ID) FROM PLAYER WHERE BIRTHDAY > '1990' AND PLAYER_NAME LIKE 'AARON%',
2,1133,ERROR,"NotImplementedError: {'like': ['PLAYER_NAME', {'literal': 'AARON%'}]}",,SELECT COUNT(*) FROM PLAYER WHERE BIRTHDAY > '1990' AND PLAYER_NAME LIKE 'AARON%',SELECT COUNT(ID) FROM PLAYER WHERE BIRTHDAY > '1990' AND PLAYER_NAME LIKE 'AARON%',
3,1133,ERROR,"NotImplementedError: {'like': ['PLAYER_NAME', {'literal': 'AARON%'}]}",,SELECT COUNT(*) FROM PLAYER WHERE BIRTHDAY > '1990' AND PLAYER_NAME LIKE 'AARON%',SELECT COUNT(ID) FROM PLAYER WHERE BIRTHDAY > '1990' AND PLAYER_NAME LIKE 'AARON%',
1,1134,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT SUM(PLAYER.JUMPING) FROM PLAYER WHERE PLAYER.ID = 6) - (SELECT SUM(PLAYER.JUMPING) FROM PLAYER WHERE PLAYER.ID = 23),SELECT SUM(CASE WHEN T1.ID = 6 THEN T1.JUMPING ELSE 0 END) - SUM(CASE WHEN T1.ID = 23 THEN T1.JUMPING ELSE 0 END) FROM PLAYER_ATTRIBUTES AS T1,
2,1134,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT SUM(PLAYER.JUMPING) FROM PLAYER WHERE PLAYER.ID = 6) - (SELECT SUM(PLAYER.JUMPING) FROM PLAYER WHERE PLAYER.ID = 23),SELECT SUM(CASE WHEN T1.ID = 6 THEN T1.JUMPING ELSE 0 END) - SUM(CASE WHEN T1.ID = 23 THEN T1.JUMPING ELSE 0 END) FROM PLAYER_ATTRIBUTES AS T1,
3,1134,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT SUM(PLAYER.JUMPING) FROM PLAYER WHERE PLAYER.ID = 6) - (SELECT SUM(PLAYER.JUMPING) FROM PLAYER WHERE PLAYER.ID = 23),SELECT SUM(CASE WHEN T1.ID = 6 THEN T1.JUMPING ELSE 0 END) - SUM(CASE WHEN T1.ID = 23 THEN T1.JUMPING ELSE 0 END) FROM PLAYER_ATTRIBUTES AS T1,
1,1135,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `PLAYERS`,,SELECT PLAYERS.PLAYER_ID FROM PLAYERS WHERE PLAYERS.PREFERRED_FOOT = 'RIGHT' ORDER BY PLAYERS.POTENTIAL ASC LIMIT 5,SELECT ID FROM PLAYER_ATTRIBUTES WHERE PREFERRED_FOOT = 'RIGHT' ORDER BY POTENTIAL DESC LIMIT 5,
2,1135,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `PLAYERS`,,SELECT PLAYERS.PLAYER_ID FROM PLAYERS WHERE PLAYERS.PREFERRED_FOOT = 'RIGHT' ORDER BY PLAYERS.POTENTIAL ASC LIMIT 5,SELECT ID FROM PLAYER_ATTRIBUTES WHERE PREFERRED_FOOT = 'RIGHT' ORDER BY POTENTIAL DESC LIMIT 5,
3,1135,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `PLAYERS`,,SELECT PLAYERS.PLAYER_ID FROM PLAYERS WHERE PLAYERS.PREFERRED_FOOT = 'RIGHT' ORDER BY PLAYERS.POTENTIAL ASC LIMIT 5,SELECT ID FROM PLAYER_ATTRIBUTES WHERE PREFERRED_FOOT = 'RIGHT' ORDER BY POTENTIAL DESC LIMIT 5,
1,1136,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PREFERRED_FOOT`,,SELECT COUNT(*) FROM PLAYER WHERE PREFERRED_FOOT = 'LEFT' AND CROSSING = (SELECT MAX(CROSSING) FROM PLAYER),SELECT COUNT(T1.ID) FROM PLAYER_ATTRIBUTES AS T1 WHERE T1.PREFERRED_FOOT = 'LEFT' AND T1.CROSSING = ( SELECT MAX(CROSSING) FROM PLAYER_ATTRIBUTES),
2,1136,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PREFERRED_FOOT`,,SELECT COUNT(*) FROM PLAYER WHERE PREFERRED_FOOT = 'LEFT' AND CROSSING = (SELECT MAX(CROSSING) FROM PLAYER),SELECT COUNT(T1.ID) FROM PLAYER_ATTRIBUTES AS T1 WHERE T1.PREFERRED_FOOT = 'LEFT' AND T1.CROSSING = ( SELECT MAX(CROSSING) FROM PLAYER_ATTRIBUTES),
3,1136,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PREFERRED_FOOT`,,SELECT COUNT(*) FROM PLAYER WHERE PREFERRED_FOOT = 'LEFT' AND CROSSING = (SELECT MAX(CROSSING) FROM PLAYER),SELECT COUNT(T1.ID) FROM PLAYER_ATTRIBUTES AS T1 WHERE T1.PREFERRED_FOOT = 'LEFT' AND T1.CROSSING = ( SELECT MAX(CROSSING) FROM PLAYER_ATTRIBUTES),
1,1137,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute STRENGTH`,,SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM PLAYER) FROM PLAYER WHERE STRENGTH > 80 AND STAMINA > 80,SELECT CAST(COUNT(CASE WHEN STRENGTH > 80 AND STAMINA > 80 THEN ID ELSE NULL END) AS REAL) * 100 / COUNT(ID) FROM PLAYER_ATTRIBUTES T,
2,1137,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute STRENGTH`,,SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM PLAYER) FROM PLAYER WHERE STRENGTH > 80 AND STAMINA > 80,SELECT CAST(COUNT(CASE WHEN STRENGTH > 80 AND STAMINA > 80 THEN ID ELSE NULL END) AS REAL) * 100 / COUNT(ID) FROM PLAYER_ATTRIBUTES T,
3,1137,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute STRENGTH`,,SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM PLAYER) FROM PLAYER WHERE STRENGTH > 80 AND STAMINA > 80,SELECT CAST(COUNT(CASE WHEN STRENGTH > 80 AND STAMINA > 80 THEN ID ELSE NULL END) AS REAL) * 100 / COUNT(ID) FROM PLAYER_ATTRIBUTES T,
1,1138,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `DF`,,SELECT COUNTRY FROM DF WHERE ELEMENT = 'POLAND EKSTRAKLASA',SELECT NAME FROM COUNTRY WHERE ID IN ( SELECT COUNTRY_ID FROM LEAGUE WHERE NAME = 'POLAND EKSTRAKLASA' ),
2,1138,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `DF`,,SELECT COUNTRY FROM DF WHERE ELEMENT = 'POLAND EKSTRAKLASA',SELECT NAME FROM COUNTRY WHERE ID IN ( SELECT COUNTRY_ID FROM LEAGUE WHERE NAME = 'POLAND EKSTRAKLASA' ),
3,1138,ERROR,UnknownDatabaseError: UnknownDatabaseError: UnknownDatabaseError: unknown database `DF`,,SELECT COUNTRY FROM DF WHERE ELEMENT = 'POLAND EKSTRAKLASA',SELECT NAME FROM COUNTRY WHERE ID IN ( SELECT COUNTRY_ID FROM LEAGUE WHERE NAME = 'POLAND EKSTRAKLASA' ),
1,1139,ERROR,"NotImplementedError: {'like': ['MATCH__DATE', {'literal': '2008-09-24%'}]}",,"SELECT MATCH.HOME_TEAM_GOAL, MATCH.AWAY_TEAM_GOAL FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE MATCH.DATE LIKE '2008-09-24%' AND LEAGUE.NAME = 'BELGIUM JUPILER LEAGUE';","SELECT T2.HOME_TEAM_GOAL, T2.AWAY_TEAM_GOAL FROM LEAGUE AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.LEAGUE_ID WHERE T1.NAME = 'BELGIUM JUPILER LEAGUE' AND T2.`DATE` LIKE '2008-09-24%'",
2,1139,ERROR,"NotImplementedError: {'like': ['MATCH__DATE', {'literal': '2008-09-24%'}]}",,"SELECT MATCH.HOME_TEAM_GOAL, MATCH.AWAY_TEAM_GOAL FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE MATCH.DATE LIKE '2008-09-24%' AND LEAGUE.NAME = 'BELGIUM JUPILER LEAGUE';","SELECT T2.HOME_TEAM_GOAL, T2.AWAY_TEAM_GOAL FROM LEAGUE AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.LEAGUE_ID WHERE T1.NAME = 'BELGIUM JUPILER LEAGUE' AND T2.`DATE` LIKE '2008-09-24%'",
3,1139,ERROR,"NotImplementedError: {'like': ['MATCH__DATE', {'literal': '2008-09-24%'}]}",,"SELECT MATCH.HOME_TEAM_GOAL, MATCH.AWAY_TEAM_GOAL FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE MATCH.DATE LIKE '2008-09-24%' AND LEAGUE.NAME = 'BELGIUM JUPILER LEAGUE';","SELECT T2.HOME_TEAM_GOAL, T2.AWAY_TEAM_GOAL FROM LEAGUE AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.LEAGUE_ID WHERE T1.NAME = 'BELGIUM JUPILER LEAGUE' AND T2.`DATE` LIKE '2008-09-24%'",
1,1140,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__SPRINT_SPEED`,,"SELECT PLAYER.SPRINT_SPEED, PLAYER.AGILITY, PLAYER.ACCELERATION FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'ALEXIS BLIN'","SELECT SPRINT_SPEED, AGILITY, ACCELERATION FROM PLAYER_ATTRIBUTES WHERE PLAYER_API_ID IN ( SELECT PLAYER_API_ID FROM PLAYER WHERE PLAYER_NAME = 'ALEXIS BLIN' )",
2,1140,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__SPRINT_SPEED`,,"SELECT PLAYER.SPRINT_SPEED, PLAYER.AGILITY, PLAYER.ACCELERATION FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'ALEXIS BLIN'","SELECT SPRINT_SPEED, AGILITY, ACCELERATION FROM PLAYER_ATTRIBUTES WHERE PLAYER_API_ID IN ( SELECT PLAYER_API_ID FROM PLAYER WHERE PLAYER_NAME = 'ALEXIS BLIN' )",
3,1140,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__SPRINT_SPEED`,,"SELECT PLAYER.SPRINT_SPEED, PLAYER.AGILITY, PLAYER.ACCELERATION FROM PLAYER WHERE PLAYER.PLAYER_NAME = 'ALEXIS BLIN'","SELECT SPRINT_SPEED, AGILITY, ACCELERATION FROM PLAYER_ATTRIBUTES WHERE PLAYER_API_ID IN ( SELECT PLAYER_API_ID FROM PLAYER WHERE PLAYER_NAME = 'ALEXIS BLIN' )",
1,1141,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BUILDUPPLAYSPEEDCLASS`,,SELECT BUILDUPPLAYSPEEDCLASS FROM TEAM WHERE TEAM_LONG_NAME = 'KSV CERCLE BRUGGE',SELECT DISTINCT T1.BUILDUPPLAYSPEEDCLASS FROM TEAM_ATTRIBUTES AS T1 INNER JOIN TEAM AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T2.TEAM_LONG_NAME = 'KSV CERCLE BRUGGE',
2,1141,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BUILDUPPLAYSPEEDCLASS`,,SELECT BUILDUPPLAYSPEEDCLASS FROM TEAM WHERE TEAM_LONG_NAME = 'KSV CERCLE BRUGGE',SELECT DISTINCT T1.BUILDUPPLAYSPEEDCLASS FROM TEAM_ATTRIBUTES AS T1 INNER JOIN TEAM AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T2.TEAM_LONG_NAME = 'KSV CERCLE BRUGGE',
3,1141,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BUILDUPPLAYSPEEDCLASS`,,SELECT BUILDUPPLAYSPEEDCLASS FROM TEAM WHERE TEAM_LONG_NAME = 'KSV CERCLE BRUGGE',SELECT DISTINCT T1.BUILDUPPLAYSPEEDCLASS FROM TEAM_ATTRIBUTES AS T1 INNER JOIN TEAM AS T2 ON T1.TEAM_API_ID = T2.TEAM_API_ID WHERE T2.TEAM_LONG_NAME = 'KSV CERCLE BRUGGE',
1,1142,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE PLAYER_ATTRIBUTES (
	ID VARCHAR(20),
	PLAYER_FIFA_API_ID VARCHAR(20),
	PLAYER_API_ID VARCHAR(20),
	DATE VARCHAR(20),
	OVERALL_RATING VARCHAR(20),
	POTENTIAL VARCHAR(20),
	PREFERRED_FOOT VARCHAR(20),
	ATTACKING_WORK_RATE VARCHAR(20),
	DEFENSIVE_WORK_RATE VARCHAR(20),
	CROSSING VARCHAR(20),
	FINISHING VARCHAR(20),
	HEADING_ACCURACY VARCHAR(20),
	SHORT_PASSING VARCHAR(20),
	VOLLEYS VARCHAR(20),
	DRIBBLING VARCHAR(20),
	CURVE VARCHAR(20),
	FREE_KICK_ACCURACY VARCHAR(20),
	LONG_PASSING VARCHAR(20),
	BALL_CONTROL VARCHAR(20),
	ACCELERATION VARCHAR(20),
	SPRINT_SPEED VARCHAR(20),
	AGILITY VARCHAR(20),
	REACTIONS VARCHAR(20),
	BALANCE VARCHAR(20),
	SHOT_POWER VARCHAR(20),
	JUMPING VARCHAR(20),
	STAMINA VARCHAR(20),
	STRENGTH VARCHAR(20),
	LONG_SHOTS VARCHAR(20),
	AGGRESSION VARCHAR(20),
	INTERCEPTIONS VARCHAR(20),
	POSITIONING VARCHAR(20),
	VISION VARCHAR(20),
	PENALTIES VARCHAR(20),
	MARKING VARCHAR(20),
	STANDING_TACKLE VARCHAR(20),
	SLIDING_TACKLE VARCHAR(20),
	GK_DIVING VARCHAR(20),
	GK_HANDLING VARCHAR(20),
	GK_KICKING VARCHAR(20),
	GK_POSITIONING VARCHAR(20),
	GK_REFLEXES VARCHAR(20)
);
INSERT INTO PLAYER_ATTRIBUTES VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE PLAYER (
	ID VARCHAR(20),
	PLAYER_API_ID VARCHAR(20),
	PLAYER_NAME VARCHAR(20),
	PLAYER_FIFA_API_ID VARCHAR(20),
	BIRTHDAY VARCHAR(20),
	HEIGHT VARCHAR(20),
	WEIGHT VARCHAR(20)
);
INSERT INTO PLAYER VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE LEAGUE (
	ID VARCHAR(20),
	COUNTRY_ID VARCHAR(20),
	NAME VARCHAR(20)
);
INSERT INTO LEAGUE VALUES ('2147483648', '2147483648', 'ITALIAN SERIE A');
CREATE TABLE COUNTRY (
	ID VARCHAR(20),
	NAME VARCHAR(20)
);
INSERT INTO COUNTRY VALUES ('2147483648', '2147483648');
CREATE TABLE TEAM (
	ID VARCHAR(20),
	TEAM_API_ID VARCHAR(20),
	TEAM_FIFA_API_ID VARCHAR(20),
	TEAM_LONG_NAME VARCHAR(20),
	TEAM_SHORT_NAME VARCHAR(20)
);
INSERT INTO TEAM VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE TEAM_ATTRIBUTES (
	ID VARCHAR(20),
	TEAM_FIFA_API_ID VARCHAR(20),
	TEAM_API_ID VARCHAR(20),
	DATE VARCHAR(20),
	BUILDUPPLAYSPEED VARCHAR(20),
	BUILDUPPLAYSPEEDCLASS VARCHAR(20),
	BUILDUPPLAYDRIBBLING VARCHAR(20),
	BUILDUPPLAYDRIBBLINGCLASS VARCHAR(20),
	BUILDUPPLAYPASSING VARCHAR(20),
	BUILDUPPLAYPASSINGCLASS VARCHAR(20),
	BUILDUPPLAYPOSITIONINGCLASS VARCHAR(20),
	CHANCECREATIONPASSING VARCHAR(20),
	CHANCECREATIONPASSINGCLASS VARCHAR(20),
	CHANCECREATIONCROSSING VARCHAR(20),
	CHANCECREATIONCROSSINGCLASS VARCHAR(20),
	CHANCECREATIONSHOOTING VARCHAR(20),
	CHANCECREATIONSHOOTINGCLASS VARCHAR(20),
	CHANCECREATIONPOSITIONINGCLASS VARCHAR(20),
	DEFENCEPRESSURE VARCHAR(20),
	DEFENCEPRESSURECLASS VARCHAR(20),
	DEFENCEAGGRESSION VARCHAR(20),
	DEFENCEAGGRESSIONCLASS VARCHAR(20),
	DEFENCETEAMWIDTH VARCHAR(20),
	DEFENCETEAMWIDTHCLASS VARCHAR(20),
	DEFENCEDEFENDERLINECLASS VARCHAR(20)
);
INSERT INTO TEAM_ATTRIBUTES VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MATCH (
	ID VARCHAR(20),
	COUNTRY_ID VARCHAR(20),
	LEAGUE_ID VARCHAR(20),
	SEASON VARCHAR(20),
	STAGE VARCHAR(20),
	DATE VARCHAR(20),
	MATCH_API_ID VARCHAR(20),
	HOME_TEAM_API_ID VARCHAR(20),
	AWAY_TEAM_API_ID VARCHAR(20),
	HOME_TEAM_GOAL VARCHAR(20),
	AWAY_TEAM_GOAL VARCHAR(20)
);
INSERT INTO MATCH VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
-- 1
SELECT COUNT(*) FROM MATCH WHERE SEASON = '2015/2016' AND LEAGUE_ID = (SELECT ID FROM LEAGUE WHERE NAME = 'ITALIAN SERIE A');
-- ----------sql2------------
-- 0
SELECT COUNT(T2.ID) FROM LEAGUE AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.LEAGUE_ID WHERE T1.NAME = 'ITALY SERIE A' AND T2.SEASON = '2015/2016';
",0.0821939999999999,SELECT COUNT(*) FROM MATCH WHERE SEASON = '2015/2016' AND LEAGUE_ID = (SELECT ID FROM LEAGUE WHERE NAME = 'ITALIAN SERIE A'),SELECT COUNT(T2.ID) FROM LEAGUE AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.LEAGUE_ID WHERE T1.NAME = 'ITALY SERIE A' AND T2.SEASON = '2015/2016',
1,1143,True,,0.068574,SELECT MAX(MATCH.HOME_TEAM_GOAL) FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE LEAGUE.NAME = 'NETHERLANDS EREDIVISIE';,SELECT MAX(T2.HOME_TEAM_GOAL) FROM LEAGUE AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.LEAGUE_ID WHERE T1.NAME = 'NETHERLANDS EREDIVISIE',
1,1144,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__FINISHING`,,"SELECT PLAYER.FINISHING, PLAYER.CURVE FROM PLAYER WHERE PLAYER.WEIGHT = (SELECT MAX(PLAYER.WEIGHT) FROM PLAYER)","SELECT ID, FINISHING, CURVE FROM PLAYER_ATTRIBUTES WHERE PLAYER_API_ID = ( SELECT PLAYER_API_ID FROM PLAYER ORDER BY WEIGHT DESC LIMIT 1 ) LIMIT 1",
2,1144,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__FINISHING`,,"SELECT PLAYER.FINISHING, PLAYER.CURVE FROM PLAYER WHERE PLAYER.WEIGHT = (SELECT MAX(PLAYER.WEIGHT) FROM PLAYER)","SELECT ID, FINISHING, CURVE FROM PLAYER_ATTRIBUTES WHERE PLAYER_API_ID = ( SELECT PLAYER_API_ID FROM PLAYER ORDER BY WEIGHT DESC LIMIT 1 ) LIMIT 1",
3,1144,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__FINISHING`,,"SELECT PLAYER.FINISHING, PLAYER.CURVE FROM PLAYER WHERE PLAYER.WEIGHT = (SELECT MAX(PLAYER.WEIGHT) FROM PLAYER)","SELECT ID, FINISHING, CURVE FROM PLAYER_ATTRIBUTES WHERE PLAYER_API_ID = ( SELECT PLAYER_API_ID FROM PLAYER ORDER BY WEIGHT DESC LIMIT 1 ) LIMIT 1",
1,1145,True,,0.075807,SELECT LEAGUE.NAME FROM MATCH INNER JOIN LEAGUE ON MATCH.LEAGUE_ID = LEAGUE.ID WHERE MATCH.SEASON = '2015/2016' GROUP BY LEAGUE.NAME ORDER BY COUNT(MATCH.ID) DESC LIMIT 4,SELECT T1.NAME FROM LEAGUE AS T1 INNER JOIN MATCH AS T2 ON T1.ID = T2.LEAGUE_ID WHERE T2.SEASON = '2015/2016' GROUP BY T1.NAME ORDER BY COUNT(T2.ID) DESC LIMIT 4,
1,1146,True,,0.069168,SELECT TEAM.TEAM_LONG_NAME FROM MATCH INNER JOIN TEAM ON MATCH.AWAY_TEAM_API_ID = TEAM.TEAM_API_ID GROUP BY MATCH.AWAY_TEAM_API_ID ORDER BY SUM(MATCH.AWAY_TEAM_GOAL) DESC LIMIT 1,SELECT T2.TEAM_LONG_NAME FROM MATCH AS T1 INNER JOIN TEAM AS T2 ON T1.AWAY_TEAM_API_ID = T2.TEAM_API_ID ORDER BY T1.AWAY_TEAM_GOAL DESC LIMIT 1,
1,1147,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT PLAYER.NAME FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID ORDER BY PLAYER_ATTRIBUTES.OVERALL_RATING DESC LIMIT 1,SELECT DISTINCT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.OVERALL_RATING = ( SELECT MAX(OVERALL_RATING) FROM PLAYER_ATTRIBUTES),
2,1147,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT PLAYER.NAME FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID ORDER BY PLAYER_ATTRIBUTES.OVERALL_RATING DESC LIMIT 1,SELECT DISTINCT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.OVERALL_RATING = ( SELECT MAX(OVERALL_RATING) FROM PLAYER_ATTRIBUTES),
3,1147,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PLAYER__NAME`,,SELECT PLAYER.NAME FROM PLAYER INNER JOIN PLAYER_ATTRIBUTES ON PLAYER.PLAYER_API_ID = PLAYER_ATTRIBUTES.PLAYER_API_ID ORDER BY PLAYER_ATTRIBUTES.OVERALL_RATING DESC LIMIT 1,SELECT DISTINCT T1.PLAYER_NAME FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T2.OVERALL_RATING = ( SELECT MAX(OVERALL_RATING) FROM PLAYER_ATTRIBUTES),
1,1148,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT COUNT(*) FROM PLAYER WHERE HEIGHT < 180 AND OVERALL_RATING > 70) AS REAL) / (SELECT COUNT(*) FROM PLAYER)) * 100,SELECT CAST(COUNT(CASE WHEN T2.OVERALL_RATING > 70 THEN T1.ID ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) PERCENT FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.HEIGHT < 180,
2,1148,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT COUNT(*) FROM PLAYER WHERE HEIGHT < 180 AND OVERALL_RATING > 70) AS REAL) / (SELECT COUNT(*) FROM PLAYER)) * 100,SELECT CAST(COUNT(CASE WHEN T2.OVERALL_RATING > 70 THEN T1.ID ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) PERCENT FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.HEIGHT < 180,
3,1148,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT COUNT(*) FROM PLAYER WHERE HEIGHT < 180 AND OVERALL_RATING > 70) AS REAL) / (SELECT COUNT(*) FROM PLAYER)) * 100,SELECT CAST(COUNT(CASE WHEN T2.OVERALL_RATING > 70 THEN T1.ID ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) PERCENT FROM PLAYER AS T1 INNER JOIN PLAYER_ATTRIBUTES AS T2 ON T1.PLAYER_API_ID = T2.PLAYER_API_ID WHERE T1.HEIGHT < 180,
1,1149,ERROR,NotImplementedError: {'real': {}},,SELECT CAST((SELECT COUNT(*) FROM PATIENT WHERE SEX = 'M' AND ADMISSION = '+') - (SELECT COUNT(*) FROM PATIENT WHERE SEX = 'M' AND ADMISSION = '-') AS REAL) * 100 / (SELECT COUNT(*) FROM PATIENT WHERE SEX = 'M' AND ADMISSION = '-') AS DEVIATION_PERCENTAGE FROM PATIENT LIMIT 1;,SELECT CAST(SUM(CASE WHEN ADMISSION = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN ADMISSION = '-' THEN 1 ELSE 0 END) FROM PATIENT WHERE SEX = 'M',
2,1149,ERROR,NotImplementedError: {'real': {}},,SELECT CAST((SELECT COUNT(*) FROM PATIENT WHERE SEX = 'M' AND ADMISSION = '+') - (SELECT COUNT(*) FROM PATIENT WHERE SEX = 'M' AND ADMISSION = '-') AS REAL) * 100 / (SELECT COUNT(*) FROM PATIENT WHERE SEX = 'M' AND ADMISSION = '-') AS DEVIATION_PERCENTAGE FROM PATIENT LIMIT 1;,SELECT CAST(SUM(CASE WHEN ADMISSION = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN ADMISSION = '-' THEN 1 ELSE 0 END) FROM PATIENT WHERE SEX = 'M',
3,1149,ERROR,NotImplementedError: {'real': {}},,SELECT CAST((SELECT COUNT(*) FROM PATIENT WHERE SEX = 'M' AND ADMISSION = '+') - (SELECT COUNT(*) FROM PATIENT WHERE SEX = 'M' AND ADMISSION = '-') AS REAL) * 100 / (SELECT COUNT(*) FROM PATIENT WHERE SEX = 'M' AND ADMISSION = '-') AS DEVIATION_PERCENTAGE FROM PATIENT LIMIT 1;,SELECT CAST(SUM(CASE WHEN ADMISSION = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN ADMISSION = '-' THEN 1 ELSE 0 END) FROM PATIENT WHERE SEX = 'M',
1,1150,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'BIRTHDAY']}",,"SELECT CAST(COUNT(ID) * 100.0 / (SELECT COUNT(ID) FROM PATIENT WHERE SEX = 'F') AS REAL) FROM PATIENT WHERE SEX = 'F' AND STRFTIME('%Y', BIRTHDAY) > '1930'","SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', BIRTHDAY) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM PATIENT WHERE SEX = 'F'",
2,1150,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'BIRTHDAY']}",,"SELECT CAST(COUNT(ID) * 100.0 / (SELECT COUNT(ID) FROM PATIENT WHERE SEX = 'F') AS REAL) FROM PATIENT WHERE SEX = 'F' AND STRFTIME('%Y', BIRTHDAY) > '1930'","SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', BIRTHDAY) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM PATIENT WHERE SEX = 'F'",
3,1150,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'BIRTHDAY']}",,"SELECT CAST(COUNT(ID) * 100.0 / (SELECT COUNT(ID) FROM PATIENT WHERE SEX = 'F') AS REAL) FROM PATIENT WHERE SEX = 'F' AND STRFTIME('%Y', BIRTHDAY) > '1930'","SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', BIRTHDAY) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM PATIENT WHERE SEX = 'F'",
1,1151,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'BIRTHDAY']}",,"SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM PATIENT WHERE STRFTIME('%Y', BIRTHDAY) BETWEEN '1930' AND '1940') FROM PATIENT WHERE STRFTIME('%Y', BIRTHDAY) BETWEEN '1930' AND '1940' AND ADMISSION = '+'","SELECT CAST(SUM(CASE WHEN ADMISSION = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM PATIENT WHERE STRFTIME('%Y', BIRTHDAY) BETWEEN '1930' AND '1940'",
2,1151,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'BIRTHDAY']}",,"SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM PATIENT WHERE STRFTIME('%Y', BIRTHDAY) BETWEEN '1930' AND '1940') FROM PATIENT WHERE STRFTIME('%Y', BIRTHDAY) BETWEEN '1930' AND '1940' AND ADMISSION = '+'","SELECT CAST(SUM(CASE WHEN ADMISSION = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM PATIENT WHERE STRFTIME('%Y', BIRTHDAY) BETWEEN '1930' AND '1940'",
3,1151,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'BIRTHDAY']}",,"SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM PATIENT WHERE STRFTIME('%Y', BIRTHDAY) BETWEEN '1930' AND '1940') FROM PATIENT WHERE STRFTIME('%Y', BIRTHDAY) BETWEEN '1930' AND '1940' AND ADMISSION = '+'","SELECT CAST(SUM(CASE WHEN ADMISSION = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM PATIENT WHERE STRFTIME('%Y', BIRTHDAY) BETWEEN '1930' AND '1940'",
1,1152,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(ID) FROM PATIENT WHERE DIAGNOSIS = 'SLE' AND ADMISSION = '+') AS REAL)) / (SELECT COUNT(ID) FROM PATIENT WHERE DIAGNOSIS = 'SLE' AND ADMISSION = '-') AS RATIO FROM PATIENT LIMIT 1;,SELECT SUM(CASE WHEN ADMISSION = '+' THEN 1.0 ELSE 0 END) / SUM(CASE WHEN ADMISSION = '-' THEN 1 ELSE 0 END) FROM PATIENT WHERE DIAGNOSIS = 'SLE',
2,1152,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(ID) FROM PATIENT WHERE DIAGNOSIS = 'SLE' AND ADMISSION = '+') AS REAL)) / (SELECT COUNT(ID) FROM PATIENT WHERE DIAGNOSIS = 'SLE' AND ADMISSION = '-') AS RATIO FROM PATIENT LIMIT 1;,SELECT SUM(CASE WHEN ADMISSION = '+' THEN 1.0 ELSE 0 END) / SUM(CASE WHEN ADMISSION = '-' THEN 1 ELSE 0 END) FROM PATIENT WHERE DIAGNOSIS = 'SLE',
3,1152,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(ID) FROM PATIENT WHERE DIAGNOSIS = 'SLE' AND ADMISSION = '+') AS REAL)) / (SELECT COUNT(ID) FROM PATIENT WHERE DIAGNOSIS = 'SLE' AND ADMISSION = '-') AS RATIO FROM PATIENT LIMIT 1;,SELECT SUM(CASE WHEN ADMISSION = '+' THEN 1.0 ELSE 0 END) / SUM(CASE WHEN ADMISSION = '-' THEN 1 ELSE 0 END) FROM PATIENT WHERE DIAGNOSIS = 'SLE',
1,1153,True,,0.0700679999999999,"SELECT PATIENT.DIAGNOSIS, LABORATORY.DATE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.ID = '30609'","SELECT T1.DIAGNOSIS, T2.DATE FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.ID = 30609",
1,1154,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,"SELECT PATIENT.SEX, PATIENT.BIRTHDAY, EXAMINATION.`EXAMINATION DATE`, EXAMINATION.SYMPTOMS FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE PATIENT.ID = '163109'","SELECT T1.SEX, T1.BIRTHDAY, T2.`EXAMINATION DATE`, T2.SYMPTOMS FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T1.ID = 163109",
2,1154,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,"SELECT PATIENT.SEX, PATIENT.BIRTHDAY, EXAMINATION.`EXAMINATION DATE`, EXAMINATION.SYMPTOMS FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE PATIENT.ID = '163109'","SELECT T1.SEX, T1.BIRTHDAY, T2.`EXAMINATION DATE`, T2.SYMPTOMS FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T1.ID = 163109",
3,1154,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,"SELECT PATIENT.SEX, PATIENT.BIRTHDAY, EXAMINATION.`EXAMINATION DATE`, EXAMINATION.SYMPTOMS FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE PATIENT.ID = '163109'","SELECT T1.SEX, T1.BIRTHDAY, T2.`EXAMINATION DATE`, T2.SYMPTOMS FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T1.ID = 163109",
1,1155,True,,0.080903,"SELECT PATIENT.ID, PATIENT.SEX, PATIENT.BIRTHDAY FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.LDH > 500","SELECT DISTINCT T1.ID, T1.SEX, T1.BIRTHDAY FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 500",
1,1156,ERROR,NotImplementedError: {'year': 'CURRENT_TIMESTAMP'},,"SELECT PATIENT.ID, YEAR(CURRENT_TIMESTAMP) - YEAR(PATIENT.BIRTHDAY) AS AGE FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE EXAMINATION.RVVT = '+'","SELECT DISTINCT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T2.RVVT = '+'",
2,1156,ERROR,NotImplementedError: {'year': 'CURRENT_TIMESTAMP'},,"SELECT PATIENT.ID, YEAR(CURRENT_TIMESTAMP) - YEAR(PATIENT.BIRTHDAY) AS AGE FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE EXAMINATION.RVVT = '+'","SELECT DISTINCT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T2.RVVT = '+'",
3,1156,ERROR,NotImplementedError: {'year': 'CURRENT_TIMESTAMP'},,"SELECT PATIENT.ID, YEAR(CURRENT_TIMESTAMP) - YEAR(PATIENT.BIRTHDAY) AS AGE FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE EXAMINATION.RVVT = '+'","SELECT DISTINCT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T2.RVVT = '+'",
1,1157,True,,0.050119,"SELECT PATIENT.ID, PATIENT.SEX, PATIENT.DIAGNOSIS FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE EXAMINATION.THROMBOSIS = 2","SELECT DISTINCT T1.ID, T1.SEX, T1.DIAGNOSIS FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T2.THROMBOSIS = 2",
1,1158,ERROR,NotImplementedError: {'year': 'PATIENT__BIRTHDAY'},,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(PATIENT.BIRTHDAY) = 1937 AND LABORATORY.T-CHO >= 250,"SELECT DISTINCT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.BIRTHDAY) = '1937' AND T2.`T-CHO` >= 250",
2,1158,ERROR,NotImplementedError: {'year': 'PATIENT__BIRTHDAY'},,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(PATIENT.BIRTHDAY) = 1937 AND LABORATORY.T-CHO >= 250,"SELECT DISTINCT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.BIRTHDAY) = '1937' AND T2.`T-CHO` >= 250",
3,1158,ERROR,NotImplementedError: {'year': 'PATIENT__BIRTHDAY'},,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(PATIENT.BIRTHDAY) = 1937 AND LABORATORY.T-CHO >= 250,"SELECT DISTINCT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.BIRTHDAY) = '1937' AND T2.`T-CHO` >= 250",
1,1159,True,,0.081176,"SELECT PATIENT.ID, PATIENT.SEX, PATIENT.DIAGNOSIS FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.ALB < 3.5;","SELECT DISTINCT T1.ID, T1.SEX, T1.DIAGNOSIS FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.ALB < 3.5",
1,1160,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM PATIENT WHERE SEX = 'F') FROM LABORATORY INNER JOIN PATIENT ON LABORATORY.ID = PATIENT.ID WHERE PATIENT.SEX = 'F' AND (LABORATORY.TP < '6.0' OR LABORATORY.TP > '8.5'),SELECT CAST(SUM(CASE WHEN T1.SEX = 'F' AND (T2.TP < 6.0 OR T2.TP > 8.5) THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F',
2,1160,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM PATIENT WHERE SEX = 'F') FROM LABORATORY INNER JOIN PATIENT ON LABORATORY.ID = PATIENT.ID WHERE PATIENT.SEX = 'F' AND (LABORATORY.TP < '6.0' OR LABORATORY.TP > '8.5'),SELECT CAST(SUM(CASE WHEN T1.SEX = 'F' AND (T2.TP < 6.0 OR T2.TP > 8.5) THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F',
3,1160,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM PATIENT WHERE SEX = 'F') FROM LABORATORY INNER JOIN PATIENT ON LABORATORY.ID = PATIENT.ID WHERE PATIENT.SEX = 'F' AND (LABORATORY.TP < '6.0' OR LABORATORY.TP > '8.5'),SELECT CAST(SUM(CASE WHEN T1.SEX = 'F' AND (T2.TP < 6.0 OR T2.TP > 8.5) THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F',
1,1161,ERROR,NotImplementedError: {'year': {'curdate': {}}},,SELECT AVG(EXAMINATION.`ACL IGG`) FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE PATIENT.ADMISSION = '+' AND YEAR(CURDATE()) - YEAR(PATIENT.BIRTHDAY) >= 50,"SELECT AVG(T2.`ACL IGG`) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) >= 50 AND T1.ADMISSION = '+'",
2,1161,ERROR,NotImplementedError: {'year': {'curdate': {}}},,SELECT AVG(EXAMINATION.`ACL IGG`) FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE PATIENT.ADMISSION = '+' AND YEAR(CURDATE()) - YEAR(PATIENT.BIRTHDAY) >= 50,"SELECT AVG(T2.`ACL IGG`) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) >= 50 AND T1.ADMISSION = '+'",
3,1161,ERROR,NotImplementedError: {'year': {'curdate': {}}},,SELECT AVG(EXAMINATION.`ACL IGG`) FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE PATIENT.ADMISSION = '+' AND YEAR(CURDATE()) - YEAR(PATIENT.BIRTHDAY) >= 50,"SELECT AVG(T2.`ACL IGG`) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) >= 50 AND T1.ADMISSION = '+'",
1,1162,ERROR,NotImplementedError: {'year': 'DESCRIPTION'},,SELECT COUNT(*) FROM PATIENT WHERE SEX = 'F' AND YEAR(DESCRIPTION) = 1997 AND ADMISSION = '-',"SELECT COUNT(*) FROM PATIENT WHERE STRFTIME('%Y', DESCRIPTION) = '1997' AND SEX = 'F' AND ADMISSION = '-'",
2,1162,ERROR,NotImplementedError: {'year': 'DESCRIPTION'},,SELECT COUNT(*) FROM PATIENT WHERE SEX = 'F' AND YEAR(DESCRIPTION) = 1997 AND ADMISSION = '-',"SELECT COUNT(*) FROM PATIENT WHERE STRFTIME('%Y', DESCRIPTION) = '1997' AND SEX = 'F' AND ADMISSION = '-'",
3,1162,ERROR,NotImplementedError: {'year': 'DESCRIPTION'},,SELECT COUNT(*) FROM PATIENT WHERE SEX = 'F' AND YEAR(DESCRIPTION) = 1997 AND ADMISSION = '-',"SELECT COUNT(*) FROM PATIENT WHERE STRFTIME('%Y', DESCRIPTION) = '1997' AND SEX = 'F' AND ADMISSION = '-'",
1,1163,ERROR,NotImplementedError: {'year': 'FIRST DATE'},,SELECT MIN(YEAR(`FIRST DATE`) - YEAR(BIRTHDAY)) AS AGE FROM PATIENT,"SELECT MIN(STRFTIME('%Y', `FIRST DATE`) - STRFTIME('%Y', BIRTHDAY)) FROM PATIENT",
2,1163,ERROR,NotImplementedError: {'year': 'FIRST DATE'},,SELECT MIN(YEAR(`FIRST DATE`) - YEAR(BIRTHDAY)) AS AGE FROM PATIENT,"SELECT MIN(STRFTIME('%Y', `FIRST DATE`) - STRFTIME('%Y', BIRTHDAY)) FROM PATIENT",
3,1163,ERROR,NotImplementedError: {'year': 'FIRST DATE'},,SELECT MIN(YEAR(`FIRST DATE`) - YEAR(BIRTHDAY)) AS AGE FROM PATIENT,"SELECT MIN(STRFTIME('%Y', `FIRST DATE`) - STRFTIME('%Y', BIRTHDAY)) FROM PATIENT",
1,1164,ERROR,NotImplementedError: {'year': 'EXAMINATION__EXAMINATION DATE'},,SELECT COUNT(*) FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID WHERE EXAMINATION.THROMBOSIS = '1' AND YEAR(EXAMINATION.`EXAMINATION DATE`) = 1997 AND PATIENT.SEX = 'F',"SELECT  COUNT(*) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND STRFTIME('%Y', T2.`EXAMINATION DATE`) = '1997' AND T2.THROMBOSIS = 1",
2,1164,ERROR,NotImplementedError: {'year': 'EXAMINATION__EXAMINATION DATE'},,SELECT COUNT(*) FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID WHERE EXAMINATION.THROMBOSIS = '1' AND YEAR(EXAMINATION.`EXAMINATION DATE`) = 1997 AND PATIENT.SEX = 'F',"SELECT  COUNT(*) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND STRFTIME('%Y', T2.`EXAMINATION DATE`) = '1997' AND T2.THROMBOSIS = 1",
3,1164,ERROR,NotImplementedError: {'year': 'EXAMINATION__EXAMINATION DATE'},,SELECT COUNT(*) FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID WHERE EXAMINATION.THROMBOSIS = '1' AND YEAR(EXAMINATION.`EXAMINATION DATE`) = 1997 AND PATIENT.SEX = 'F',"SELECT  COUNT(*) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND STRFTIME('%Y', T2.`EXAMINATION DATE`) = '1997' AND T2.THROMBOSIS = 1",
1,1165,ERROR,NotImplementedError: {'year': 'PATIENT__BIRTHDAY'},,SELECT MAX(YEAR(PATIENT.BIRTHDAY)) - MIN(YEAR(PATIENT.BIRTHDAY)) AS AGE_GAP FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.TG >= 200,"SELECT STRFTIME('%Y', MAX(T1.BIRTHDAY)) - STRFTIME('%Y', MIN(T1.BIRTHDAY)) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.TG >= 200",
2,1165,ERROR,NotImplementedError: {'year': 'PATIENT__BIRTHDAY'},,SELECT MAX(YEAR(PATIENT.BIRTHDAY)) - MIN(YEAR(PATIENT.BIRTHDAY)) AS AGE_GAP FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.TG >= 200,"SELECT STRFTIME('%Y', MAX(T1.BIRTHDAY)) - STRFTIME('%Y', MIN(T1.BIRTHDAY)) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.TG >= 200",
3,1165,ERROR,NotImplementedError: {'year': 'PATIENT__BIRTHDAY'},,SELECT MAX(YEAR(PATIENT.BIRTHDAY)) - MIN(YEAR(PATIENT.BIRTHDAY)) AS AGE_GAP FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.TG >= 200,"SELECT STRFTIME('%Y', MAX(T1.BIRTHDAY)) - STRFTIME('%Y', MIN(T1.BIRTHDAY)) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.TG >= 200",
1,1166,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EXAMINATION (
	ID VARCHAR(20),
	EXAMINATION_DATE VARCHAR(20),
	ACL_IGG VARCHAR(20),
	ACL_IGM VARCHAR(20),
	ANA VARCHAR(20),
	ANA_PATTERN VARCHAR(20),
	ACL_IGA VARCHAR(20),
	DIAGNOSIS VARCHAR(20),
	KCT VARCHAR(20),
	RVVT VARCHAR(20),
	LAC VARCHAR(20),
	SYMPTOMS VARCHAR(20),
	THROMBOSIS VARCHAR(20)
);
INSERT INTO EXAMINATION VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE PATIENT (
	ID VARCHAR(20),
	SEX VARCHAR(20),
	BIRTHDAY VARCHAR(20),
	DESCRIPTION VARCHAR(20),
	FIRST_DATE VARCHAR(20),
	ADMISSION VARCHAR(20),
	DIAGNOSIS VARCHAR(20)
);
INSERT INTO PATIENT VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483649');
CREATE TABLE LABORATORY (
	ID VARCHAR(20),
	DATE VARCHAR(20),
	GOT VARCHAR(20),
	GPT VARCHAR(20),
	LDH VARCHAR(20),
	ALP VARCHAR(20),
	TP VARCHAR(20),
	ALB VARCHAR(20),
	UA VARCHAR(20),
	UN VARCHAR(20),
	CRE VARCHAR(20),
	T-BIL VARCHAR(20),
	T-CHO VARCHAR(20),
	TG VARCHAR(20),
	CPK VARCHAR(20),
	GLU VARCHAR(20),
	WBC VARCHAR(20),
	RBC VARCHAR(20),
	HGB VARCHAR(20),
	HCT VARCHAR(20),
	PLT VARCHAR(20),
	PT VARCHAR(20),
	APTT VARCHAR(20),
	FG VARCHAR(20),
	PIC VARCHAR(20),
	TAT VARCHAR(20),
	TAT2 VARCHAR(20),
	U-PRO VARCHAR(20),
	IGG VARCHAR(20),
	IGA VARCHAR(20),
	IGM VARCHAR(20),
	CRP VARCHAR(20),
	RA VARCHAR(20),
	RF VARCHAR(20),
	C3 VARCHAR(20),
	C4 VARCHAR(20),
	RNP VARCHAR(20),
	SM VARCHAR(20),
	SC170 VARCHAR(20),
	SSA VARCHAR(20),
	SSB VARCHAR(20),
	CENTROMEA VARCHAR(20),
	DNA VARCHAR(20),
	DNA-II VARCHAR(20)
);
INSERT INTO LABORATORY VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
-- 2147483648, 2147483648
SELECT EXAMINATION.SYMPTOMS, EXAMINATION.DIAGNOSIS FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID WHERE EXAMINATION.SYMPTOMS IS NOT NULL ORDER BY PATIENT.BIRTHDAY DESC LIMIT 1;
-- ----------sql2------------
-- 2147483648, 2147483649
SELECT T2.SYMPTOMS, T1.DIAGNOSIS FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T2.SYMPTOMS IS NOT NULL ORDER BY T1.BIRTHDAY DESC LIMIT 1;
",0.0481819999999999,"SELECT EXAMINATION.SYMPTOMS, EXAMINATION.DIAGNOSIS FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID WHERE EXAMINATION.SYMPTOMS IS NOT NULL ORDER BY PATIENT.BIRTHDAY DESC LIMIT 1","SELECT T2.SYMPTOMS, T1.DIAGNOSIS FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T2.SYMPTOMS IS NOT NULL ORDER BY T1.BIRTHDAY DESC LIMIT 1",
1,1167,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(DISTINCT PATIENT.ID) AS REAL) / 12 FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.SEX = 'M' AND LABORATORY.DATE BETWEEN '1998-01-01' AND '1998-12-31',"SELECT CAST(COUNT(T1.ID) AS REAL) / 12 FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.DATE) = '1998' AND T1.SEX = 'M'",
2,1167,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(DISTINCT PATIENT.ID) AS REAL) / 12 FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.SEX = 'M' AND LABORATORY.DATE BETWEEN '1998-01-01' AND '1998-12-31',"SELECT CAST(COUNT(T1.ID) AS REAL) / 12 FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.DATE) = '1998' AND T1.SEX = 'M'",
3,1167,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(DISTINCT PATIENT.ID) AS REAL) / 12 FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.SEX = 'M' AND LABORATORY.DATE BETWEEN '1998-01-01' AND '1998-12-31',"SELECT CAST(COUNT(T1.ID) AS REAL) / 12 FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.DATE) = '1998' AND T1.SEX = 'M'",
1,1168,ERROR,NotImplementedError: {'year': 'FIRST DATE'},,"SELECT LABORATORY.DATE, YEAR(`FIRST DATE`) - YEAR(PATIENT.BIRTHDAY) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.DIAGNOSIS = 'SJS' ORDER BY PATIENT.BIRTHDAY ASC LIMIT 1","SELECT T1.DATE, STRFTIME('%Y', T2.`FIRST DATE`) - STRFTIME('%Y', T2.BIRTHDAY),T2.BIRTHDAY FROM LABORATORY AS T1 INNER JOIN PATIENT AS T2 ON T1.ID = T2.ID WHERE T2.DIAGNOSIS = 'SJS' AND T2.BIRTHDAY IS NOT NULL ORDER BY T2.BIRTHDAY ASC LIMIT 1",
2,1168,ERROR,NotImplementedError: {'year': 'FIRST DATE'},,"SELECT LABORATORY.DATE, YEAR(`FIRST DATE`) - YEAR(PATIENT.BIRTHDAY) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.DIAGNOSIS = 'SJS' ORDER BY PATIENT.BIRTHDAY ASC LIMIT 1","SELECT T1.DATE, STRFTIME('%Y', T2.`FIRST DATE`) - STRFTIME('%Y', T2.BIRTHDAY),T2.BIRTHDAY FROM LABORATORY AS T1 INNER JOIN PATIENT AS T2 ON T1.ID = T2.ID WHERE T2.DIAGNOSIS = 'SJS' AND T2.BIRTHDAY IS NOT NULL ORDER BY T2.BIRTHDAY ASC LIMIT 1",
3,1168,ERROR,NotImplementedError: {'year': 'FIRST DATE'},,"SELECT LABORATORY.DATE, YEAR(`FIRST DATE`) - YEAR(PATIENT.BIRTHDAY) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.DIAGNOSIS = 'SJS' ORDER BY PATIENT.BIRTHDAY ASC LIMIT 1","SELECT T1.DATE, STRFTIME('%Y', T2.`FIRST DATE`) - STRFTIME('%Y', T2.BIRTHDAY),T2.BIRTHDAY FROM LABORATORY AS T1 INNER JOIN PATIENT AS T2 ON T1.ID = T2.ID WHERE T2.DIAGNOSIS = 'SJS' AND T2.BIRTHDAY IS NOT NULL ORDER BY T2.BIRTHDAY ASC LIMIT 1",
1,1169,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.UA <= 8.0 AND PATIENT.SEX = 'M') AS REAL)) / (SELECT COUNT(*) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.UA <= 6.5 AND PATIENT.SEX = 'F') AS RATIO FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID,SELECT CAST(SUM(CASE WHEN T2.UA <= 8.0 AND T1.SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.UA <= 6.5 AND T1.SEX = 'F' THEN 1 ELSE 0 END) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID,
2,1169,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.UA <= 8.0 AND PATIENT.SEX = 'M') AS REAL)) / (SELECT COUNT(*) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.UA <= 6.5 AND PATIENT.SEX = 'F') AS RATIO FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID,SELECT CAST(SUM(CASE WHEN T2.UA <= 8.0 AND T1.SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.UA <= 6.5 AND T1.SEX = 'F' THEN 1 ELSE 0 END) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID,
3,1169,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.UA <= 8.0 AND PATIENT.SEX = 'M') AS REAL)) / (SELECT COUNT(*) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.UA <= 6.5 AND PATIENT.SEX = 'F') AS RATIO FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID,SELECT CAST(SUM(CASE WHEN T2.UA <= 8.0 AND T1.SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.UA <= 6.5 AND T1.SEX = 'F' THEN 1 ELSE 0 END) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID,
1,1170,ERROR,NotImplementedError: {'year': 'EXAMINATION__EXAMINATION DATE'},,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT LEFT JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE YEAR(EXAMINATION.`EXAMINATION DATE`) - YEAR(PATIENT.`FIRST DATE`) >= 1,"SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T1.ADMISSION = '+' AND STRFTIME('%Y', T2.`EXAMINATION DATE`) - STRFTIME('%Y', T1.`FIRST DATE`) >= 1",
2,1170,ERROR,NotImplementedError: {'year': 'EXAMINATION__EXAMINATION DATE'},,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT LEFT JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE YEAR(EXAMINATION.`EXAMINATION DATE`) - YEAR(PATIENT.`FIRST DATE`) >= 1,"SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T1.ADMISSION = '+' AND STRFTIME('%Y', T2.`EXAMINATION DATE`) - STRFTIME('%Y', T1.`FIRST DATE`) >= 1",
3,1170,ERROR,NotImplementedError: {'year': 'EXAMINATION__EXAMINATION DATE'},,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT LEFT JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE YEAR(EXAMINATION.`EXAMINATION DATE`) - YEAR(PATIENT.`FIRST DATE`) >= 1,"SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T1.ADMISSION = '+' AND STRFTIME('%Y', T2.`EXAMINATION DATE`) - STRFTIME('%Y', T1.`FIRST DATE`) >= 1",
1,1171,ERROR,NotImplementedError: {'year': 'PATIENT__BIRTHDAY'},,SELECT COUNT(*) FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID WHERE YEAR(PATIENT.BIRTHDAY) < 18 AND YEAR(EXAMINATION.`EXAMINATION DATE`) BETWEEN 1990 AND 1993,"SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.`EXAMINATION DATE`) BETWEEN '1990' AND '1993' AND STRFTIME('%Y', T2.`EXAMINATION DATE`) - STRFTIME('%Y', T1.BIRTHDAY) < 18",
2,1171,ERROR,NotImplementedError: {'year': 'PATIENT__BIRTHDAY'},,SELECT COUNT(*) FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID WHERE YEAR(PATIENT.BIRTHDAY) < 18 AND YEAR(EXAMINATION.`EXAMINATION DATE`) BETWEEN 1990 AND 1993,"SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.`EXAMINATION DATE`) BETWEEN '1990' AND '1993' AND STRFTIME('%Y', T2.`EXAMINATION DATE`) - STRFTIME('%Y', T1.BIRTHDAY) < 18",
3,1171,ERROR,NotImplementedError: {'year': 'PATIENT__BIRTHDAY'},,SELECT COUNT(*) FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID WHERE YEAR(PATIENT.BIRTHDAY) < 18 AND YEAR(EXAMINATION.`EXAMINATION DATE`) BETWEEN 1990 AND 1993,"SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.`EXAMINATION DATE`) BETWEEN '1990' AND '1993' AND STRFTIME('%Y', T2.`EXAMINATION DATE`) - STRFTIME('%Y', T1.BIRTHDAY) < 18",
1,1172,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.SEX = 'M' AND LABORATORY.T-BIL >= 2.0,SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.`T-BIL` >= 2.0 AND T1.SEX = 'M',
2,1172,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.SEX = 'M' AND LABORATORY.T-BIL >= 2.0,SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.`T-BIL` >= 2.0 AND T1.SEX = 'M',
3,1172,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.SEX = 'M' AND LABORATORY.T-BIL >= 2.0,SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.`T-BIL` >= 2.0 AND T1.SEX = 'M',
1,1173,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,SELECT EXAMINATION.DIAGNOSIS FROM EXAMINATION WHERE EXAMINATION.`EXAMINATION DATE` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY EXAMINATION.DIAGNOSIS ORDER BY COUNT(EXAMINATION.DIAGNOSIS) DESC LIMIT 1,SELECT T2.DIAGNOSIS FROM EXAMINATION AS T1 INNER JOIN PATIENT AS T2 ON T1.ID = T2.ID WHERE T1.`EXAMINATION DATE` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T2.DIAGNOSIS ORDER BY COUNT(T2.DIAGNOSIS) DESC LIMIT 1,
2,1173,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,SELECT EXAMINATION.DIAGNOSIS FROM EXAMINATION WHERE EXAMINATION.`EXAMINATION DATE` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY EXAMINATION.DIAGNOSIS ORDER BY COUNT(EXAMINATION.DIAGNOSIS) DESC LIMIT 1,SELECT T2.DIAGNOSIS FROM EXAMINATION AS T1 INNER JOIN PATIENT AS T2 ON T1.ID = T2.ID WHERE T1.`EXAMINATION DATE` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T2.DIAGNOSIS ORDER BY COUNT(T2.DIAGNOSIS) DESC LIMIT 1,
3,1173,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,SELECT EXAMINATION.DIAGNOSIS FROM EXAMINATION WHERE EXAMINATION.`EXAMINATION DATE` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY EXAMINATION.DIAGNOSIS ORDER BY COUNT(EXAMINATION.DIAGNOSIS) DESC LIMIT 1,SELECT T2.DIAGNOSIS FROM EXAMINATION AS T1 INNER JOIN PATIENT AS T2 ON T1.ID = T2.ID WHERE T1.`EXAMINATION DATE` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T2.DIAGNOSIS ORDER BY COUNT(T2.DIAGNOSIS) DESC LIMIT 1,
1,1174,ERROR,"NotImplementedError: {'extract': ['year', 'PATIENT__BIRTHDAY']}",,SELECT AVG(1999 - EXTRACT(YEAR FROM PATIENT.BIRTHDAY)) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE DATE(LABORATORY.DATE) BETWEEN '1991-10-01' AND '1991-10-31',"SELECT AVG('1999'  - STRFTIME('%Y', T2.BIRTHDAY)) FROM LABORATORY AS T1 INNER JOIN PATIENT AS T2 ON T1.ID = T2.ID WHERE T1.DATE BETWEEN '1991-10-01' AND '1991-10-30'",
2,1174,ERROR,"NotImplementedError: {'extract': ['year', 'PATIENT__BIRTHDAY']}",,SELECT AVG(1999 - EXTRACT(YEAR FROM PATIENT.BIRTHDAY)) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE DATE(LABORATORY.DATE) BETWEEN '1991-10-01' AND '1991-10-31',"SELECT AVG('1999'  - STRFTIME('%Y', T2.BIRTHDAY)) FROM LABORATORY AS T1 INNER JOIN PATIENT AS T2 ON T1.ID = T2.ID WHERE T1.DATE BETWEEN '1991-10-01' AND '1991-10-30'",
3,1174,ERROR,"NotImplementedError: {'extract': ['year', 'PATIENT__BIRTHDAY']}",,SELECT AVG(1999 - EXTRACT(YEAR FROM PATIENT.BIRTHDAY)) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE DATE(LABORATORY.DATE) BETWEEN '1991-10-01' AND '1991-10-31',"SELECT AVG('1999'  - STRFTIME('%Y', T2.BIRTHDAY)) FROM LABORATORY AS T1 INNER JOIN PATIENT AS T2 ON T1.ID = T2.ID WHERE T1.DATE BETWEEN '1991-10-01' AND '1991-10-30'",
1,1175,ERROR,NotImplementedError: {'year': 'EXAMINATION__EXAMINATION DATE'},,"SELECT YEAR(EXAMINATION.`EXAMINATION DATE`) - YEAR(PATIENT.BIRTHDAY) AS AGE, EXAMINATION.DIAGNOSIS FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID ORDER BY LABORATORY.HGB DESC LIMIT 1","SELECT STRFTIME('%Y', T2.DATE) - STRFTIME('%Y', T1.BIRTHDAY), T1.DIAGNOSIS FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID ORDER BY T2.HGB DESC LIMIT 1",
2,1175,ERROR,NotImplementedError: {'year': 'EXAMINATION__EXAMINATION DATE'},,"SELECT YEAR(EXAMINATION.`EXAMINATION DATE`) - YEAR(PATIENT.BIRTHDAY) AS AGE, EXAMINATION.DIAGNOSIS FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID ORDER BY LABORATORY.HGB DESC LIMIT 1","SELECT STRFTIME('%Y', T2.DATE) - STRFTIME('%Y', T1.BIRTHDAY), T1.DIAGNOSIS FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID ORDER BY T2.HGB DESC LIMIT 1",
3,1175,ERROR,NotImplementedError: {'year': 'EXAMINATION__EXAMINATION DATE'},,"SELECT YEAR(EXAMINATION.`EXAMINATION DATE`) - YEAR(PATIENT.BIRTHDAY) AS AGE, EXAMINATION.DIAGNOSIS FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID ORDER BY LABORATORY.HGB DESC LIMIT 1","SELECT STRFTIME('%Y', T2.DATE) - STRFTIME('%Y', T1.BIRTHDAY), T1.DIAGNOSIS FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID ORDER BY T2.HGB DESC LIMIT 1",
1,1176,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,SELECT EXAMINATION.ANA FROM EXAMINATION WHERE EXAMINATION.ID = '3605340' AND EXAMINATION.`EXAMINATION DATE` = '1996-12-02',SELECT ANA FROM EXAMINATION WHERE ID = 3605340 AND `EXAMINATION DATE` = '1996-12-02',
2,1176,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,SELECT EXAMINATION.ANA FROM EXAMINATION WHERE EXAMINATION.ID = '3605340' AND EXAMINATION.`EXAMINATION DATE` = '1996-12-02',SELECT ANA FROM EXAMINATION WHERE ID = 3605340 AND `EXAMINATION DATE` = '1996-12-02',
3,1176,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,SELECT EXAMINATION.ANA FROM EXAMINATION WHERE EXAMINATION.ID = '3605340' AND EXAMINATION.`EXAMINATION DATE` = '1996-12-02',SELECT ANA FROM EXAMINATION WHERE ID = 3605340 AND `EXAMINATION DATE` = '1996-12-02',
1,1177,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T`,,SELECT COUNT(*) FROM LABORATORY WHERE ID = '2927464' AND DATE = '1995-9-4' AND T-CHO < 250,SELECT CASE WHEN `T-CHO` < 250 THEN 'NORMAL' ELSE 'ABNORMAL' END FROM LABORATORY WHERE ID = 2927464 AND DATE = '1995-09-04',
2,1177,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T`,,SELECT COUNT(*) FROM LABORATORY WHERE ID = '2927464' AND DATE = '1995-9-4' AND T-CHO < 250,SELECT CASE WHEN `T-CHO` < 250 THEN 'NORMAL' ELSE 'ABNORMAL' END FROM LABORATORY WHERE ID = 2927464 AND DATE = '1995-09-04',
3,1177,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T`,,SELECT COUNT(*) FROM LABORATORY WHERE ID = '2927464' AND DATE = '1995-9-4' AND T-CHO < 250,SELECT CASE WHEN `T-CHO` < 250 THEN 'NORMAL' ELSE 'ABNORMAL' END FROM LABORATORY WHERE ID = 2927464 AND DATE = '1995-09-04',
1,1178,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FIRST DATE`,,SELECT PATIENT.SEX FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE PATIENT.DIAGNOSIS = 'AORTITIS' ORDER BY EXAMINATION.ID LIMIT 1;,SELECT SEX FROM PATIENT WHERE DIAGNOSIS = 'AORTITIS' AND `FIRST DATE` IS NOT NULL ORDER BY `FIRST DATE` ASC LIMIT 1,
2,1178,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FIRST DATE`,,SELECT PATIENT.SEX FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE PATIENT.DIAGNOSIS = 'AORTITIS' ORDER BY EXAMINATION.ID LIMIT 1;,SELECT SEX FROM PATIENT WHERE DIAGNOSIS = 'AORTITIS' AND `FIRST DATE` IS NOT NULL ORDER BY `FIRST DATE` ASC LIMIT 1,
3,1178,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FIRST DATE`,,SELECT PATIENT.SEX FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE PATIENT.DIAGNOSIS = 'AORTITIS' ORDER BY EXAMINATION.ID LIMIT 1;,SELECT SEX FROM PATIENT WHERE DIAGNOSIS = 'AORTITIS' AND `FIRST DATE` IS NOT NULL ORDER BY `FIRST DATE` ASC LIMIT 1,
1,1179,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__DESCRIPTION`,,SELECT EXAMINATION.ACL_IGM FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE PATIENT.DIAGNOSIS = 'SLE' AND PATIENT.DESCRIPTION = '1994-02-19' AND EXAMINATION.DESCRIPTION = '1993-11-12',"SELECT `ACL IGA`, `ACL IGG`, `ACL IGM` FROM EXAMINATION WHERE ID IN ( SELECT ID FROM PATIENT WHERE DIAGNOSIS = 'SLE' AND DESCRIPTION = '1994-02-19' ) AND `EXAMINATION DATE` = '1993-11-12'",
2,1179,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__DESCRIPTION`,,SELECT EXAMINATION.ACL_IGM FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE PATIENT.DIAGNOSIS = 'SLE' AND PATIENT.DESCRIPTION = '1994-02-19' AND EXAMINATION.DESCRIPTION = '1993-11-12',"SELECT `ACL IGA`, `ACL IGG`, `ACL IGM` FROM EXAMINATION WHERE ID IN ( SELECT ID FROM PATIENT WHERE DIAGNOSIS = 'SLE' AND DESCRIPTION = '1994-02-19' ) AND `EXAMINATION DATE` = '1993-11-12'",
3,1179,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__DESCRIPTION`,,SELECT EXAMINATION.ACL_IGM FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE PATIENT.DIAGNOSIS = 'SLE' AND PATIENT.DESCRIPTION = '1994-02-19' AND EXAMINATION.DESCRIPTION = '1993-11-12',"SELECT `ACL IGA`, `ACL IGG`, `ACL IGM` FROM EXAMINATION WHERE ID IN ( SELECT ID FROM PATIENT WHERE DIAGNOSIS = 'SLE' AND DESCRIPTION = '1994-02-19' ) AND `EXAMINATION DATE` = '1993-11-12'",
1,1180,True,,0.0972669999999999,SELECT PATIENT.SEX FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.GPT = '9' AND LABORATORY.DATE = '1992-06-12',SELECT T1.SEX FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.GPT = 9.0 AND T2.DATE = '1992-06-12',
1,1181,ERROR,NotImplementedError: {'year': {'date': '1991-10-21'}},,SELECT YEAR('1991-10-21') - YEAR(PATIENT.BIRTHDAY) AS AGE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.UA = '8.4' AND LABORATORY.DATE = '1991-10-21',"SELECT STRFTIME('%Y', T2.DATE) - STRFTIME('%Y', T1.BIRTHDAY) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.UA = 8.4 AND T2.DATE = '1991-10-21'",
2,1181,ERROR,NotImplementedError: {'year': {'date': '1991-10-21'}},,SELECT YEAR('1991-10-21') - YEAR(PATIENT.BIRTHDAY) AS AGE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.UA = '8.4' AND LABORATORY.DATE = '1991-10-21',"SELECT STRFTIME('%Y', T2.DATE) - STRFTIME('%Y', T1.BIRTHDAY) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.UA = 8.4 AND T2.DATE = '1991-10-21'",
3,1181,ERROR,NotImplementedError: {'year': {'date': '1991-10-21'}},,SELECT YEAR('1991-10-21') - YEAR(PATIENT.BIRTHDAY) AS AGE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.UA = '8.4' AND LABORATORY.DATE = '1991-10-21',"SELECT STRFTIME('%Y', T2.DATE) - STRFTIME('%Y', T1.BIRTHDAY) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.UA = 8.4 AND T2.DATE = '1991-10-21'",
1,1182,ERROR,"NotImplementedError: {'like': ['LABORATORY__DATE', {'literal': '1995%'}]}",,SELECT COUNT(LABORATORY.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.DIAGNOSIS = 'SJS' AND LABORATORY.DATE = '1991-06-13' AND LABORATORY.DATE LIKE '1995%';,"SELECT COUNT(*) FROM LABORATORY WHERE ID = ( SELECT ID FROM PATIENT WHERE `FIRST DATE` = '1991-06-13' AND DIAGNOSIS = 'SJS' ) AND STRFTIME('%Y', DATE) = '1995'",
2,1182,ERROR,"NotImplementedError: {'like': ['LABORATORY__DATE', {'literal': '1995%'}]}",,SELECT COUNT(LABORATORY.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.DIAGNOSIS = 'SJS' AND LABORATORY.DATE = '1991-06-13' AND LABORATORY.DATE LIKE '1995%';,"SELECT COUNT(*) FROM LABORATORY WHERE ID = ( SELECT ID FROM PATIENT WHERE `FIRST DATE` = '1991-06-13' AND DIAGNOSIS = 'SJS' ) AND STRFTIME('%Y', DATE) = '1995'",
3,1182,ERROR,"NotImplementedError: {'like': ['LABORATORY__DATE', {'literal': '1995%'}]}",,SELECT COUNT(LABORATORY.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.DIAGNOSIS = 'SJS' AND LABORATORY.DATE = '1991-06-13' AND LABORATORY.DATE LIKE '1995%';,"SELECT COUNT(*) FROM LABORATORY WHERE ID = ( SELECT ID FROM PATIENT WHERE `FIRST DATE` = '1991-06-13' AND DIAGNOSIS = 'SJS' ) AND STRFTIME('%Y', DATE) = '1995'",
1,1183,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,SELECT PATIENT.DIAGNOSIS FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE EXAMINATION.DIAGNOSIS = 'SLE' AND EXAMINATION.`EXAMINATION DATE` = '1997-01-27' ORDER BY PATIENT.`FIRST DATE` LIMIT 1,SELECT T1.DIAGNOSIS FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T1.ID = ( SELECT ID FROM EXAMINATION WHERE `EXAMINATION DATE` = '1997-01-27' AND DIAGNOSIS = 'SLE' ) AND T2.`EXAMINATION DATE` = T1.`FIRST DATE`,
2,1183,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,SELECT PATIENT.DIAGNOSIS FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE EXAMINATION.DIAGNOSIS = 'SLE' AND EXAMINATION.`EXAMINATION DATE` = '1997-01-27' ORDER BY PATIENT.`FIRST DATE` LIMIT 1,SELECT T1.DIAGNOSIS FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T1.ID = ( SELECT ID FROM EXAMINATION WHERE `EXAMINATION DATE` = '1997-01-27' AND DIAGNOSIS = 'SLE' ) AND T2.`EXAMINATION DATE` = T1.`FIRST DATE`,
3,1183,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,SELECT PATIENT.DIAGNOSIS FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE EXAMINATION.DIAGNOSIS = 'SLE' AND EXAMINATION.`EXAMINATION DATE` = '1997-01-27' ORDER BY PATIENT.`FIRST DATE` LIMIT 1,SELECT T1.DIAGNOSIS FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T1.ID = ( SELECT ID FROM EXAMINATION WHERE `EXAMINATION DATE` = '1997-01-27' AND DIAGNOSIS = 'SLE' ) AND T2.`EXAMINATION DATE` = T1.`FIRST DATE`,
1,1184,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T2__EXAMINATION DATE`,,SELECT EXAMINATION.SYMPTOMS FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID WHERE PATIENT.BIRTHDAY = '1959-03-01' AND EXAMINATION.ID = '1993-09-27',SELECT T2.SYMPTOMS FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T1.BIRTHDAY = '1959-03-01' AND T2.`EXAMINATION DATE` = '1993-09-27',
2,1184,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T2__EXAMINATION DATE`,,SELECT EXAMINATION.SYMPTOMS FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID WHERE PATIENT.BIRTHDAY = '1959-03-01' AND EXAMINATION.ID = '1993-09-27',SELECT T2.SYMPTOMS FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T1.BIRTHDAY = '1959-03-01' AND T2.`EXAMINATION DATE` = '1993-09-27',
3,1184,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T2__EXAMINATION DATE`,,SELECT EXAMINATION.SYMPTOMS FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID WHERE PATIENT.BIRTHDAY = '1959-03-01' AND EXAMINATION.ID = '1993-09-27',SELECT T2.SYMPTOMS FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T1.BIRTHDAY = '1959-03-01' AND T2.`EXAMINATION DATE` = '1993-09-27',
1,1185,ERROR,"NotImplementedError: {'like': ['DATE', {'literal': '1981-11-%'}]}",,SELECT (SUM(CASE WHEN DATE LIKE '1981-11-%' THEN `T-CHO` END) - SUM(CASE WHEN DATE LIKE '1981-12-%' THEN `T-CHO` END)) AS DECREASE_RATE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE BIRTHDAY = '1959-02-18',SELECT CAST((SUM(CASE WHEN T2.DATE LIKE '1981-11-%' THEN T2.`T-CHO` ELSE 0 END) - SUM(CASE WHEN T2.DATE LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END)) AS REAL) / SUM(CASE WHEN T2.DATE LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.BIRTHDAY = '1959-02-18',
2,1185,ERROR,"NotImplementedError: {'like': ['DATE', {'literal': '1981-11-%'}]}",,SELECT (SUM(CASE WHEN DATE LIKE '1981-11-%' THEN `T-CHO` END) - SUM(CASE WHEN DATE LIKE '1981-12-%' THEN `T-CHO` END)) AS DECREASE_RATE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE BIRTHDAY = '1959-02-18',SELECT CAST((SUM(CASE WHEN T2.DATE LIKE '1981-11-%' THEN T2.`T-CHO` ELSE 0 END) - SUM(CASE WHEN T2.DATE LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END)) AS REAL) / SUM(CASE WHEN T2.DATE LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.BIRTHDAY = '1959-02-18',
3,1185,ERROR,"NotImplementedError: {'like': ['DATE', {'literal': '1981-11-%'}]}",,SELECT (SUM(CASE WHEN DATE LIKE '1981-11-%' THEN `T-CHO` END) - SUM(CASE WHEN DATE LIKE '1981-12-%' THEN `T-CHO` END)) AS DECREASE_RATE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE BIRTHDAY = '1959-02-18',SELECT CAST((SUM(CASE WHEN T2.DATE LIKE '1981-11-%' THEN T2.`T-CHO` ELSE 0 END) - SUM(CASE WHEN T2.DATE LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END)) AS REAL) / SUM(CASE WHEN T2.DATE LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.BIRTHDAY = '1959-02-18',
1,1186,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,SELECT PATIENT.ID FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE EXAMINATION.DIAGNOSIS = 'BEHCET' AND EXAMINATION.`EXAMINATION DATE` >= '1997-01-01' AND EXAMINATION.`EXAMINATION DATE` < '1998-01-01',SELECT ID FROM EXAMINATION WHERE `EXAMINATION DATE` BETWEEN '1997-01-01' AND '1997-12-31' AND DIAGNOSIS = 'BEHCET',
2,1186,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,SELECT PATIENT.ID FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE EXAMINATION.DIAGNOSIS = 'BEHCET' AND EXAMINATION.`EXAMINATION DATE` >= '1997-01-01' AND EXAMINATION.`EXAMINATION DATE` < '1998-01-01',SELECT ID FROM EXAMINATION WHERE `EXAMINATION DATE` BETWEEN '1997-01-01' AND '1997-12-31' AND DIAGNOSIS = 'BEHCET',
3,1186,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,SELECT PATIENT.ID FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE EXAMINATION.DIAGNOSIS = 'BEHCET' AND EXAMINATION.`EXAMINATION DATE` >= '1997-01-01' AND EXAMINATION.`EXAMINATION DATE` < '1998-01-01',SELECT ID FROM EXAMINATION WHERE `EXAMINATION DATE` BETWEEN '1997-01-01' AND '1997-12-31' AND DIAGNOSIS = 'BEHCET',
1,1187,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,SELECT PATIENT.ID FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE EXAMINATION.`EXAMINATION DATE` BETWEEN '1987-07-06' AND '1996-01-31' AND LABORATORY.GPT > 30 AND LABORATORY.ALB < 4,SELECT DISTINCT ID FROM LABORATORY WHERE DATE BETWEEN '1987-07-06' AND '1996-01-31' AND GPT > 30 AND ALB < 4,
2,1187,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,SELECT PATIENT.ID FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE EXAMINATION.`EXAMINATION DATE` BETWEEN '1987-07-06' AND '1996-01-31' AND LABORATORY.GPT > 30 AND LABORATORY.ALB < 4,SELECT DISTINCT ID FROM LABORATORY WHERE DATE BETWEEN '1987-07-06' AND '1996-01-31' AND GPT > 30 AND ALB < 4,
3,1187,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,SELECT PATIENT.ID FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE EXAMINATION.`EXAMINATION DATE` BETWEEN '1987-07-06' AND '1996-01-31' AND LABORATORY.GPT > 30 AND LABORATORY.ALB < 4,SELECT DISTINCT ID FROM LABORATORY WHERE DATE BETWEEN '1987-07-06' AND '1996-01-31' AND GPT > 30 AND ALB < 4,
1,1188,ERROR,NotImplementedError: {'year': 'BIRTHDAY'},,SELECT PATIENT.ID FROM PATIENT WHERE SEX = 'F' AND YEAR(BIRTHDAY) = 1964 AND ADMISSION = '+',"SELECT ID FROM PATIENT WHERE STRFTIME('%Y', BIRTHDAY) = '1964' AND SEX = 'F' AND ADMISSION = '+'",
2,1188,ERROR,NotImplementedError: {'year': 'BIRTHDAY'},,SELECT PATIENT.ID FROM PATIENT WHERE SEX = 'F' AND YEAR(BIRTHDAY) = 1964 AND ADMISSION = '+',"SELECT ID FROM PATIENT WHERE STRFTIME('%Y', BIRTHDAY) = '1964' AND SEX = 'F' AND ADMISSION = '+'",
3,1188,ERROR,NotImplementedError: {'year': 'BIRTHDAY'},,SELECT PATIENT.ID FROM PATIENT WHERE SEX = 'F' AND YEAR(BIRTHDAY) = 1964 AND ADMISSION = '+',"SELECT ID FROM PATIENT WHERE STRFTIME('%Y', BIRTHDAY) = '1964' AND SEX = 'F' AND ADMISSION = '+'",
1,1189,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute ACL IGM`,,SELECT COUNT(*) FROM EXAMINATION WHERE THROMBOSIS = 2 AND ANA = 'S' AND `ACL IGM` > (SELECT AVG(`ACL IGM`) * 1.2 FROM EXAMINATION WHERE THROMBOSIS = 2 AND ANA = 'S'),SELECT COUNT(*) FROM EXAMINATION WHERE THROMBOSIS = 2 AND `ANA PATTERN` = 'S' AND `ACL IGM` > (SELECT AVG(`ACL IGM`) * 1.2 FROM EXAMINATION WHERE THROMBOSIS = 2 AND `ANA PATTERN` = 'S'),
2,1189,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute ACL IGM`,,SELECT COUNT(*) FROM EXAMINATION WHERE THROMBOSIS = 2 AND ANA = 'S' AND `ACL IGM` > (SELECT AVG(`ACL IGM`) * 1.2 FROM EXAMINATION WHERE THROMBOSIS = 2 AND ANA = 'S'),SELECT COUNT(*) FROM EXAMINATION WHERE THROMBOSIS = 2 AND `ANA PATTERN` = 'S' AND `ACL IGM` > (SELECT AVG(`ACL IGM`) * 1.2 FROM EXAMINATION WHERE THROMBOSIS = 2 AND `ANA PATTERN` = 'S'),
3,1189,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute ACL IGM`,,SELECT COUNT(*) FROM EXAMINATION WHERE THROMBOSIS = 2 AND ANA = 'S' AND `ACL IGM` > (SELECT AVG(`ACL IGM`) * 1.2 FROM EXAMINATION WHERE THROMBOSIS = 2 AND ANA = 'S'),SELECT COUNT(*) FROM EXAMINATION WHERE THROMBOSIS = 2 AND `ANA PATTERN` = 'S' AND `ACL IGM` > (SELECT AVG(`ACL IGM`) * 1.2 FROM EXAMINATION WHERE THROMBOSIS = 2 AND `ANA PATTERN` = 'S'),
1,1190,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) FILTER (WHERE `U-PRO` > 0 AND `U-PRO` < 30 AND `UA` <= 6.5) AS REAL) * 100 / COUNT(*) FILTER (WHERE `U-PRO` > 0 AND `U-PRO` < 30) FROM LABORATORY,SELECT CAST(SUM(CASE WHEN UA <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM LABORATORY WHERE `U-PRO` > 0 AND `U-PRO` < 30,
2,1190,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) FILTER (WHERE `U-PRO` > 0 AND `U-PRO` < 30 AND `UA` <= 6.5) AS REAL) * 100 / COUNT(*) FILTER (WHERE `U-PRO` > 0 AND `U-PRO` < 30) FROM LABORATORY,SELECT CAST(SUM(CASE WHEN UA <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM LABORATORY WHERE `U-PRO` > 0 AND `U-PRO` < 30,
3,1190,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) FILTER (WHERE `U-PRO` > 0 AND `U-PRO` < 30 AND `UA` <= 6.5) AS REAL) * 100 / COUNT(*) FILTER (WHERE `U-PRO` > 0 AND `U-PRO` < 30) FROM LABORATORY,SELECT CAST(SUM(CASE WHEN UA <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM LABORATORY WHERE `U-PRO` > 0 AND `U-PRO` < 30,
1,1191,ERROR,NotImplementedError: {'year': 'PATIENT__FIRST DATE'},,SELECT CAST(COUNT(*) FILTER (WHERE EXAMINATION.DIAGNOSIS = 'BEHCET') AS REAL) * 100 / COUNT(*) FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE PATIENT.SEX = 'M' AND YEAR(PATIENT.`FIRST DATE`) = 1981,"SELECT CAST(SUM(CASE WHEN DIAGNOSIS = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM PATIENT WHERE STRFTIME('%Y', `FIRST DATE`) = '1981' AND SEX = 'M'",
2,1191,ERROR,NotImplementedError: {'year': 'PATIENT__FIRST DATE'},,SELECT CAST(COUNT(*) FILTER (WHERE EXAMINATION.DIAGNOSIS = 'BEHCET') AS REAL) * 100 / COUNT(*) FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE PATIENT.SEX = 'M' AND YEAR(PATIENT.`FIRST DATE`) = 1981,"SELECT CAST(SUM(CASE WHEN DIAGNOSIS = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM PATIENT WHERE STRFTIME('%Y', `FIRST DATE`) = '1981' AND SEX = 'M'",
3,1191,ERROR,NotImplementedError: {'year': 'PATIENT__FIRST DATE'},,SELECT CAST(COUNT(*) FILTER (WHERE EXAMINATION.DIAGNOSIS = 'BEHCET') AS REAL) * 100 / COUNT(*) FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE PATIENT.SEX = 'M' AND YEAR(PATIENT.`FIRST DATE`) = 1981,"SELECT CAST(SUM(CASE WHEN DIAGNOSIS = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM PATIENT WHERE STRFTIME('%Y', `FIRST DATE`) = '1981' AND SEX = 'M'",
1,1192,ERROR,"NotImplementedError: {'like': ['LABORATORY__DATE', {'literal': '1991-10%'}]}",,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.ADMISSION = '-' AND LABORATORY.DATE LIKE '1991-10%' AND LABORATORY.T-BIL < 2.0,SELECT DISTINCT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.ADMISSION = '-' AND T2.`T-BIL` < 2.0 AND T2.DATE LIKE '1991-10-%',
2,1192,ERROR,"NotImplementedError: {'like': ['LABORATORY__DATE', {'literal': '1991-10%'}]}",,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.ADMISSION = '-' AND LABORATORY.DATE LIKE '1991-10%' AND LABORATORY.T-BIL < 2.0,SELECT DISTINCT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.ADMISSION = '-' AND T2.`T-BIL` < 2.0 AND T2.DATE LIKE '1991-10-%',
3,1192,ERROR,"NotImplementedError: {'like': ['LABORATORY__DATE', {'literal': '1991-10%'}]}",,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.ADMISSION = '-' AND LABORATORY.DATE LIKE '1991-10%' AND LABORATORY.T-BIL < 2.0,SELECT DISTINCT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.ADMISSION = '-' AND T2.`T-BIL` < 2.0 AND T2.DATE LIKE '1991-10-%',
1,1193,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__ANA PATTERN`,,SELECT COUNT(*) FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE EXAMINATION.`ANA PATTERN` != 'P' AND PATIENT.SEX = 'F' AND PATIENT.BIRTHDAY BETWEEN '1980-01-01' AND '1989-12-31',"SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T2.`ANA PATTERN` != 'P' AND STRFTIME('%Y', T1.BIRTHDAY) BETWEEN '1980' AND '1989' AND T1.SEX = 'F'",
2,1193,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__ANA PATTERN`,,SELECT COUNT(*) FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE EXAMINATION.`ANA PATTERN` != 'P' AND PATIENT.SEX = 'F' AND PATIENT.BIRTHDAY BETWEEN '1980-01-01' AND '1989-12-31',"SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T2.`ANA PATTERN` != 'P' AND STRFTIME('%Y', T1.BIRTHDAY) BETWEEN '1980' AND '1989' AND T1.SEX = 'F'",
3,1193,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__ANA PATTERN`,,SELECT COUNT(*) FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE EXAMINATION.`ANA PATTERN` != 'P' AND PATIENT.SEX = 'F' AND PATIENT.BIRTHDAY BETWEEN '1980-01-01' AND '1989-12-31',"SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T2.`ANA PATTERN` != 'P' AND STRFTIME('%Y', T1.BIRTHDAY) BETWEEN '1980' AND '1989' AND T1.SEX = 'F'",
1,1194,True,,0.147855,SELECT PATIENT.SEX FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE EXAMINATION.DIAGNOSIS = 'PSS' AND LABORATORY.CRP > 2 AND LABORATORY.CRE = 1 AND LABORATORY.LDH = 123,SELECT T1.SEX FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID INNER JOIN LABORATORY AS T3 ON T3.ID = T2.ID WHERE T2.DIAGNOSIS = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1.0 AND T3.LDH = 123,
1,1195,True,,0.113661,SELECT AVG(LABORATORY.ALB) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.SEX = 'F' AND LABORATORY.PLT > 400 AND PATIENT.DIAGNOSIS = 'SLE',SELECT AVG(T2.ALB) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.PLT > 400 AND T1.DIAGNOSIS = 'SLE' AND T1.SEX = 'F',
1,1196,True,,0.037988,SELECT EXAMINATION.SYMPTOMS FROM EXAMINATION WHERE EXAMINATION.DIAGNOSIS = 'SLE' GROUP BY EXAMINATION.SYMPTOMS ORDER BY COUNT(*) DESC LIMIT 1,SELECT SYMPTOMS FROM EXAMINATION WHERE DIAGNOSIS = 'SLE' GROUP BY SYMPTOMS ORDER BY COUNT(SYMPTOMS) DESC LIMIT 1,
1,1197,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FIRST DATE`,,"SELECT DESCRIPTION, DIAGNOSIS FROM PATIENT WHERE ID = 48473","SELECT `FIRST DATE`, DIAGNOSIS FROM PATIENT WHERE ID = 48473",
2,1197,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FIRST DATE`,,"SELECT DESCRIPTION, DIAGNOSIS FROM PATIENT WHERE ID = 48473","SELECT `FIRST DATE`, DIAGNOSIS FROM PATIENT WHERE ID = 48473",
3,1197,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute FIRST DATE`,,"SELECT DESCRIPTION, DIAGNOSIS FROM PATIENT WHERE ID = 48473","SELECT `FIRST DATE`, DIAGNOSIS FROM PATIENT WHERE ID = 48473",
1,1198,True,,0.047527,SELECT COUNT(*) FROM PATIENT WHERE SEX = 'F' AND DIAGNOSIS = 'APS',SELECT COUNT(ID) FROM PATIENT WHERE SEX = 'F' AND DIAGNOSIS = 'APS',
1,1199,ERROR,NotImplementedError: {'year': 'LABORATORY__DATE'},,SELECT COUNT(DISTINCT PATIENT.ID) FROM LABORATORY INNER JOIN PATIENT ON LABORATORY.ID = PATIENT.ID WHERE YEAR(LABORATORY.DATE) = 1997 AND (LABORATORY.TP < 6 OR LABORATORY.TP > 8.5),"SELECT COUNT(ID) FROM LABORATORY WHERE (ALB <= 6.0 OR ALB >= 8.5) AND STRFTIME('%Y', DATE) = '1997'",
2,1199,ERROR,NotImplementedError: {'year': 'LABORATORY__DATE'},,SELECT COUNT(DISTINCT PATIENT.ID) FROM LABORATORY INNER JOIN PATIENT ON LABORATORY.ID = PATIENT.ID WHERE YEAR(LABORATORY.DATE) = 1997 AND (LABORATORY.TP < 6 OR LABORATORY.TP > 8.5),"SELECT COUNT(ID) FROM LABORATORY WHERE (ALB <= 6.0 OR ALB >= 8.5) AND STRFTIME('%Y', DATE) = '1997'",
3,1199,ERROR,NotImplementedError: {'year': 'LABORATORY__DATE'},,SELECT COUNT(DISTINCT PATIENT.ID) FROM LABORATORY INNER JOIN PATIENT ON LABORATORY.ID = PATIENT.ID WHERE YEAR(LABORATORY.DATE) = 1997 AND (LABORATORY.TP < 6 OR LABORATORY.TP > 8.5),"SELECT COUNT(ID) FROM LABORATORY WHERE (ALB <= 6.0 OR ALB >= 8.5) AND STRFTIME('%Y', DATE) = '1997'",
1,1200,ERROR,"NotImplementedError: {'like': ['EXAMINATION__DIAGNOSIS', {'literal': '%THROMBOCYTOPENIA%'}]}",,SELECT CAST(COUNT(DISTINCT CASE WHEN EXAMINATION.DIAGNOSIS LIKE '%THROMBOCYTOPENIA%' THEN PATIENT.ID END) AS REAL) * 100 / COUNT(DISTINCT CASE WHEN EXAMINATION.DIAGNOSIS LIKE '%SLE%' THEN PATIENT.ID END) FROM EXAMINATION,SELECT CAST(SUM(CASE WHEN DIAGNOSIS = 'SLE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM EXAMINATION WHERE SYMPTOMS = 'THROMBOCYTOPENIA',
2,1200,ERROR,"NotImplementedError: {'like': ['EXAMINATION__DIAGNOSIS', {'literal': '%THROMBOCYTOPENIA%'}]}",,SELECT CAST(COUNT(DISTINCT CASE WHEN EXAMINATION.DIAGNOSIS LIKE '%THROMBOCYTOPENIA%' THEN PATIENT.ID END) AS REAL) * 100 / COUNT(DISTINCT CASE WHEN EXAMINATION.DIAGNOSIS LIKE '%SLE%' THEN PATIENT.ID END) FROM EXAMINATION,SELECT CAST(SUM(CASE WHEN DIAGNOSIS = 'SLE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM EXAMINATION WHERE SYMPTOMS = 'THROMBOCYTOPENIA',
3,1200,ERROR,"NotImplementedError: {'like': ['EXAMINATION__DIAGNOSIS', {'literal': '%THROMBOCYTOPENIA%'}]}",,SELECT CAST(COUNT(DISTINCT CASE WHEN EXAMINATION.DIAGNOSIS LIKE '%THROMBOCYTOPENIA%' THEN PATIENT.ID END) AS REAL) * 100 / COUNT(DISTINCT CASE WHEN EXAMINATION.DIAGNOSIS LIKE '%SLE%' THEN PATIENT.ID END) FROM EXAMINATION,SELECT CAST(SUM(CASE WHEN DIAGNOSIS = 'SLE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM EXAMINATION WHERE SYMPTOMS = 'THROMBOCYTOPENIA',
1,1201,ERROR,NotImplementedError: {'year': 'PATIENT__BIRTHDAY'},,SELECT CAST(COUNT(CASE WHEN PATIENT.SEX = 'F' THEN 1 END) AS REAL) * 100 / COUNT(*) FROM PATIENT WHERE YEAR(PATIENT.BIRTHDAY) = '1980' AND PATIENT.DIAGNOSIS = 'RA',"SELECT CAST(SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM PATIENT WHERE DIAGNOSIS = 'RA' AND STRFTIME('%Y', BIRTHDAY) = '1980'",
2,1201,ERROR,NotImplementedError: {'year': 'PATIENT__BIRTHDAY'},,SELECT CAST(COUNT(CASE WHEN PATIENT.SEX = 'F' THEN 1 END) AS REAL) * 100 / COUNT(*) FROM PATIENT WHERE YEAR(PATIENT.BIRTHDAY) = '1980' AND PATIENT.DIAGNOSIS = 'RA',"SELECT CAST(SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM PATIENT WHERE DIAGNOSIS = 'RA' AND STRFTIME('%Y', BIRTHDAY) = '1980'",
3,1201,ERROR,NotImplementedError: {'year': 'PATIENT__BIRTHDAY'},,SELECT CAST(COUNT(CASE WHEN PATIENT.SEX = 'F' THEN 1 END) AS REAL) * 100 / COUNT(*) FROM PATIENT WHERE YEAR(PATIENT.BIRTHDAY) = '1980' AND PATIENT.DIAGNOSIS = 'RA',"SELECT CAST(SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM PATIENT WHERE DIAGNOSIS = 'RA' AND STRFTIME('%Y', BIRTHDAY) = '1980'",
1,1202,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,SELECT COUNT(*) FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE PATIENT.SEX = 'M' AND EXAMINATION.`EXAMINATION DATE` BETWEEN '1995' AND '1997' AND EXAMINATION.DIAGNOSIS = 'BEHCET' AND PATIENT.ADMISSION = '-',"SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T2.DIAGNOSIS = 'BEHCET' AND T1.SEX = 'M' AND STRFTIME('%Y', T2.`EXAMINATION DATE`) BETWEEN '1995' AND '1997' AND T1.ADMISSION = '-'",
2,1202,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,SELECT COUNT(*) FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE PATIENT.SEX = 'M' AND EXAMINATION.`EXAMINATION DATE` BETWEEN '1995' AND '1997' AND EXAMINATION.DIAGNOSIS = 'BEHCET' AND PATIENT.ADMISSION = '-',"SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T2.DIAGNOSIS = 'BEHCET' AND T1.SEX = 'M' AND STRFTIME('%Y', T2.`EXAMINATION DATE`) BETWEEN '1995' AND '1997' AND T1.ADMISSION = '-'",
3,1202,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,SELECT COUNT(*) FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE PATIENT.SEX = 'M' AND EXAMINATION.`EXAMINATION DATE` BETWEEN '1995' AND '1997' AND EXAMINATION.DIAGNOSIS = 'BEHCET' AND PATIENT.ADMISSION = '-',"SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T2.DIAGNOSIS = 'BEHCET' AND T1.SEX = 'M' AND STRFTIME('%Y', T2.`EXAMINATION DATE`) BETWEEN '1995' AND '1997' AND T1.ADMISSION = '-'",
1,1203,True,,0.100704,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.SEX = 'F' AND LABORATORY.WBC < 3.5,SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.WBC < 3.5 AND T1.SEX = 'F',
1,1204,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION DATE`,,"SELECT DATEDIFF(`EXAMINATION DATE`, `FIRST DATE`) FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID WHERE PATIENT.ID = 821298;","SELECT STRFTIME('%D', T3.`EXAMINATION DATE`) - STRFTIME('%D', T1.`FIRST DATE`) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T3 ON T1.ID = T3.ID WHERE T1.ID = 821298",
2,1204,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION DATE`,,"SELECT DATEDIFF(`EXAMINATION DATE`, `FIRST DATE`) FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID WHERE PATIENT.ID = 821298;","SELECT STRFTIME('%D', T3.`EXAMINATION DATE`) - STRFTIME('%D', T1.`FIRST DATE`) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T3 ON T1.ID = T3.ID WHERE T1.ID = 821298",
3,1204,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION DATE`,,"SELECT DATEDIFF(`EXAMINATION DATE`, `FIRST DATE`) FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID WHERE PATIENT.ID = 821298;","SELECT STRFTIME('%D', T3.`EXAMINATION DATE`) - STRFTIME('%D', T1.`FIRST DATE`) FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T3 ON T1.ID = T3.ID WHERE T1.ID = 821298",
1,1205,True,,0.285842,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE (PATIENT.ID = 57266 AND LABORATORY.UA > 8.0 AND PATIENT.SEX = 'M') OR (PATIENT.ID = 57266 AND LABORATORY.UA > 6.5 AND PATIENT.SEX = 'F'),SELECT CASE WHEN (T1.SEX = 'F' AND T2.UA > 6.5) OR (T1.SEX = 'M' AND T2.UA > 8.0) THEN TRUE ELSE FALSE END FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.ID = 57266,
1,1206,True,,0.039702,SELECT LABORATORY.DATE FROM LABORATORY WHERE LABORATORY.ID = '48473' AND LABORATORY.GOT >= 60,SELECT DATE FROM LABORATORY WHERE ID = 48473 AND GOT >= 60,
1,1207,ERROR,NotImplementedError: {'year': 'LABORATORY__DATE'},,"SELECT PATIENT.SEX, PATIENT.BIRTHDAY FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.GOT < 60 AND YEAR(LABORATORY.DATE) = 1994","SELECT DISTINCT T1.SEX, T1.BIRTHDAY FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND STRFTIME('%Y', T2.DATE) = '1994'",
2,1207,ERROR,NotImplementedError: {'year': 'LABORATORY__DATE'},,"SELECT PATIENT.SEX, PATIENT.BIRTHDAY FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.GOT < 60 AND YEAR(LABORATORY.DATE) = 1994","SELECT DISTINCT T1.SEX, T1.BIRTHDAY FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND STRFTIME('%Y', T2.DATE) = '1994'",
3,1207,ERROR,NotImplementedError: {'year': 'LABORATORY__DATE'},,"SELECT PATIENT.SEX, PATIENT.BIRTHDAY FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.GOT < 60 AND YEAR(LABORATORY.DATE) = 1994","SELECT DISTINCT T1.SEX, T1.BIRTHDAY FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND STRFTIME('%Y', T2.DATE) = '1994'",
1,1208,True,,0.096121,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.SEX = 'M' AND LABORATORY.GPT >= 60,SELECT DISTINCT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT >= 60,
1,1209,True,,0.076211,SELECT PATIENT.DIAGNOSIS FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.GPT > 60 ORDER BY PATIENT.BIRTHDAY ASC,SELECT DISTINCT T1.DIAGNOSIS FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.GPT > 60 ORDER BY T1.BIRTHDAY ASC,
1,1210,True,,0.032768,SELECT AVG(LABORATORY.LDH) FROM LABORATORY WHERE LABORATORY.LDH < 500,SELECT AVG(LDH) FROM LABORATORY WHERE LDH < 500,
1,1211,ERROR,NotImplementedError: {'year': 'CURRENT_TIMESTAMP'},,"SELECT PATIENT.ID, YEAR(CURRENT_TIMESTAMP) - YEAR(PATIENT.BIRTHDAY) AS AGE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.LDH BETWEEN 600 AND 800;","SELECT DISTINCT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 600 AND T2.LDH < 800",
2,1211,ERROR,NotImplementedError: {'year': 'CURRENT_TIMESTAMP'},,"SELECT PATIENT.ID, YEAR(CURRENT_TIMESTAMP) - YEAR(PATIENT.BIRTHDAY) AS AGE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.LDH BETWEEN 600 AND 800;","SELECT DISTINCT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 600 AND T2.LDH < 800",
3,1211,ERROR,NotImplementedError: {'year': 'CURRENT_TIMESTAMP'},,"SELECT PATIENT.ID, YEAR(CURRENT_TIMESTAMP) - YEAR(PATIENT.BIRTHDAY) AS AGE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.LDH BETWEEN 600 AND 800;","SELECT DISTINCT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 600 AND T2.LDH < 800",
1,1212,True,,0.078056,SELECT PATIENT.ADMISSION FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.ALP < 300,SELECT T1.ADMISSION FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.ALP < 300,
1,1213,False,,,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.BIRTHDAY = '1982-04-01' AND LABORATORY.ALP < 300,"SELECT T1.ID , CASE WHEN T2.ALP < 300 THEN 'NORMAL' ELSE 'ABNORMAL' END FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.BIRTHDAY = '1982-04-01'",
1,1214,True,,0.140822,"SELECT PATIENT.ID, PATIENT.SEX, PATIENT.BIRTHDAY FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.TP < 6.0","SELECT DISTINCT T1.ID, T1.SEX, T1.BIRTHDAY FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.TP < 6.0",
1,1215,True,,0.099187,SELECT LABORATORY.TP - 8.5 AS DEVIATION FROM LABORATORY INNER JOIN PATIENT ON LABORATORY.ID = PATIENT.ID WHERE PATIENT.SEX = 'F' AND LABORATORY.TP > 8.5,SELECT T2.TP - 8.5 FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.TP > 8.5,
1,1216,False,,,"SELECT PATIENT.ID, PATIENT.BIRTHDAY FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.SEX = 'M' AND (LABORATORY.ALB <= 3.5 OR LABORATORY.ALB >= 5.5) ORDER BY PATIENT.BIRTHDAY DESC",SELECT DISTINCT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND (T2.ALB <= 3.5 OR T2.ALB >= 5.5) ORDER BY T1.BIRTHDAY DESC,
1,1217,ERROR,NotImplementedError: {'year': 'PATIENT__BIRTHDAY'},,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(PATIENT.BIRTHDAY) = 1982 AND LABORATORY.ALB BETWEEN 3.5 AND 5.5,"SELECT CASE WHEN T2.ALB >= 3.5 AND T2.ALB <= 5.5 THEN 'NORMAL' ELSE 'ABNORMAL' END FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.BIRTHDAY) = '1982'",
2,1217,ERROR,NotImplementedError: {'year': 'PATIENT__BIRTHDAY'},,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(PATIENT.BIRTHDAY) = 1982 AND LABORATORY.ALB BETWEEN 3.5 AND 5.5,"SELECT CASE WHEN T2.ALB >= 3.5 AND T2.ALB <= 5.5 THEN 'NORMAL' ELSE 'ABNORMAL' END FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.BIRTHDAY) = '1982'",
3,1217,ERROR,NotImplementedError: {'year': 'PATIENT__BIRTHDAY'},,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(PATIENT.BIRTHDAY) = 1982 AND LABORATORY.ALB BETWEEN 3.5 AND 5.5,"SELECT CASE WHEN T2.ALB >= 3.5 AND T2.ALB <= 5.5 THEN 'NORMAL' ELSE 'ABNORMAL' END FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.BIRTHDAY) = '1982'",
1,1218,ERROR,KeyError: 1,,SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM PATIENT WHERE SEX = 'F')) AS PERCENTAGE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.SEX = 'F' AND LABORATORY.UA > 6.5,SELECT CAST(SUM(CASE WHEN T2.UA > 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F',
2,1218,ERROR,KeyError: 1,,SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM PATIENT WHERE SEX = 'F')) AS PERCENTAGE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.SEX = 'F' AND LABORATORY.UA > 6.5,SELECT CAST(SUM(CASE WHEN T2.UA > 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F',
3,1218,ERROR,KeyError: 1,,SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM PATIENT WHERE SEX = 'F')) AS PERCENTAGE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.SEX = 'F' AND LABORATORY.UA > 6.5,SELECT CAST(SUM(CASE WHEN T2.UA > 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F',
1,1219,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__UA`,,"SELECT AVG(LABORATORY.UA) FROM ( SELECT PATIENT.ID, LABORATORY.UA, LABORATORY.DATE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE (PATIENT.SEX = 'M' AND LABORATORY.UA < 8.0) OR (PATIENT.SEX = 'F' AND LABORATORY.UA < 6.5) ORDER BY LABORATORY.DATE DESC LIMIT 1 ) AS SUBQUERY",SELECT AVG(T2.UA) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE (T2.UA < 6.5 AND T1.SEX = 'F') OR (T2.UA < 8.0 AND T1.SEX = 'M') AND T2.DATE = ( SELECT MAX(DATE) FROM LABORATORY ),
2,1219,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__UA`,,"SELECT AVG(LABORATORY.UA) FROM ( SELECT PATIENT.ID, LABORATORY.UA, LABORATORY.DATE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE (PATIENT.SEX = 'M' AND LABORATORY.UA < 8.0) OR (PATIENT.SEX = 'F' AND LABORATORY.UA < 6.5) ORDER BY LABORATORY.DATE DESC LIMIT 1 ) AS SUBQUERY",SELECT AVG(T2.UA) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE (T2.UA < 6.5 AND T1.SEX = 'F') OR (T2.UA < 8.0 AND T1.SEX = 'M') AND T2.DATE = ( SELECT MAX(DATE) FROM LABORATORY ),
3,1219,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__UA`,,"SELECT AVG(LABORATORY.UA) FROM ( SELECT PATIENT.ID, LABORATORY.UA, LABORATORY.DATE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE (PATIENT.SEX = 'M' AND LABORATORY.UA < 8.0) OR (PATIENT.SEX = 'F' AND LABORATORY.UA < 6.5) ORDER BY LABORATORY.DATE DESC LIMIT 1 ) AS SUBQUERY",SELECT AVG(T2.UA) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE (T2.UA < 6.5 AND T1.SEX = 'F') OR (T2.UA < 8.0 AND T1.SEX = 'M') AND T2.DATE = ( SELECT MAX(DATE) FROM LABORATORY ),
1,1220,True,,0.082189,"SELECT PATIENT.ID, PATIENT.SEX, PATIENT.BIRTHDAY FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.UN = 29","SELECT DISTINCT T1.ID, T1.SEX, T1.BIRTHDAY FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.UN = 29",
1,1221,True,,0.096762,"SELECT PATIENT.ID, PATIENT.SEX, PATIENT.BIRTHDAY FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.DIAGNOSIS = 'RA' AND LABORATORY.UN < 30","SELECT DISTINCT T1.ID, T1.SEX, T1.BIRTHDAY FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.UN < 30 AND T1.DIAGNOSIS = 'RA'",
1,1222,True,,0.1047459999999999,SELECT COUNT(*) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.SEX = 'M' AND LABORATORY.CRE >= 1.5,SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND T1.SEX = 'M',
1,1223,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT CASE WHEN (SELECT COUNT(*) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.CRE >= 1.5 AND PATIENT.SEX = 'M') > (SELECT COUNT(*) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.CRE >= 1.5 AND PATIENT.SEX = 'F') THEN 'TRUE' ELSE 'FALSE' END,SELECT CASE WHEN SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) THEN 'TRUE' ELSE 'FALSE' END FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5,
2,1223,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT CASE WHEN (SELECT COUNT(*) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.CRE >= 1.5 AND PATIENT.SEX = 'M') > (SELECT COUNT(*) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.CRE >= 1.5 AND PATIENT.SEX = 'F') THEN 'TRUE' ELSE 'FALSE' END,SELECT CASE WHEN SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) THEN 'TRUE' ELSE 'FALSE' END FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5,
3,1223,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT CASE WHEN (SELECT COUNT(*) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.CRE >= 1.5 AND PATIENT.SEX = 'M') > (SELECT COUNT(*) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.CRE >= 1.5 AND PATIENT.SEX = 'F') THEN 'TRUE' ELSE 'FALSE' END,SELECT CASE WHEN SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) THEN 'TRUE' ELSE 'FALSE' END FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5,
1,1224,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,"SELECT PATIENT.ID, PATIENT.SEX, PATIENT.BIRTHDAY FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.T-BIL = (SELECT MAX(T-BIL) FROM LABORATORY)","SELECT T2.`T-BIL`, T1.ID, T1.SEX, T1.BIRTHDAY FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID ORDER BY T2.`T-BIL` DESC LIMIT 1",
2,1224,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,"SELECT PATIENT.ID, PATIENT.SEX, PATIENT.BIRTHDAY FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.T-BIL = (SELECT MAX(T-BIL) FROM LABORATORY)","SELECT T2.`T-BIL`, T1.ID, T1.SEX, T1.BIRTHDAY FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID ORDER BY T2.`T-BIL` DESC LIMIT 1",
3,1224,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,"SELECT PATIENT.ID, PATIENT.SEX, PATIENT.BIRTHDAY FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.T-BIL = (SELECT MAX(T-BIL) FROM LABORATORY)","SELECT T2.`T-BIL`, T1.ID, T1.SEX, T1.BIRTHDAY FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID ORDER BY T2.`T-BIL` DESC LIMIT 1",
1,1225,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,"SELECT PATIENT.SEX, GROUP_CONCAT(DISTINCT PATIENT.ID) FROM LABORATORY INNER JOIN PATIENT ON LABORATORY.ID = PATIENT.ID WHERE LABORATORY.T-BIL >= 2.0 GROUP BY PATIENT.SEX","SELECT T1.ID,T1.SEX FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.`T-BIL` >= 2.0 GROUP BY T1.SEX,T1.ID",
2,1225,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,"SELECT PATIENT.SEX, GROUP_CONCAT(DISTINCT PATIENT.ID) FROM LABORATORY INNER JOIN PATIENT ON LABORATORY.ID = PATIENT.ID WHERE LABORATORY.T-BIL >= 2.0 GROUP BY PATIENT.SEX","SELECT T1.ID,T1.SEX FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.`T-BIL` >= 2.0 GROUP BY T1.SEX,T1.ID",
3,1225,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,"SELECT PATIENT.SEX, GROUP_CONCAT(DISTINCT PATIENT.ID) FROM LABORATORY INNER JOIN PATIENT ON LABORATORY.ID = PATIENT.ID WHERE LABORATORY.T-BIL >= 2.0 GROUP BY PATIENT.SEX","SELECT T1.ID,T1.SEX FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.`T-BIL` >= 2.0 GROUP BY T1.SEX,T1.ID",
1,1226,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,"SELECT PATIENT.ID, LABORATORY.T-CHO FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID ORDER BY PATIENT.BIRTHDAY ASC, LABORATORY.T-CHO DESC LIMIT 1","SELECT T1.ID, T2.`T-CHO` FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID ORDER BY T2.`T-CHO` DESC, T1.BIRTHDAY ASC LIMIT 1",
2,1226,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,"SELECT PATIENT.ID, LABORATORY.T-CHO FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID ORDER BY PATIENT.BIRTHDAY ASC, LABORATORY.T-CHO DESC LIMIT 1","SELECT T1.ID, T2.`T-CHO` FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID ORDER BY T2.`T-CHO` DESC, T1.BIRTHDAY ASC LIMIT 1",
3,1226,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,"SELECT PATIENT.ID, LABORATORY.T-CHO FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID ORDER BY PATIENT.BIRTHDAY ASC, LABORATORY.T-CHO DESC LIMIT 1","SELECT T1.ID, T2.`T-CHO` FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID ORDER BY T2.`T-CHO` DESC, T1.BIRTHDAY ASC LIMIT 1",
1,1227,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T`,,SELECT AVG(YEAR(CURDATE()) - YEAR(BIRTHDAY)) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE SEX = 'M' AND T-CHO >= 250;,"SELECT AVG(STRFTIME('%Y', DATE('NOW')) - STRFTIME('%Y', T1.BIRTHDAY)) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.`T-CHO` >= 250 AND T1.SEX = 'M'",
2,1227,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T`,,SELECT AVG(YEAR(CURDATE()) - YEAR(BIRTHDAY)) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE SEX = 'M' AND T-CHO >= 250;,"SELECT AVG(STRFTIME('%Y', DATE('NOW')) - STRFTIME('%Y', T1.BIRTHDAY)) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.`T-CHO` >= 250 AND T1.SEX = 'M'",
3,1227,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T`,,SELECT AVG(YEAR(CURDATE()) - YEAR(BIRTHDAY)) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE SEX = 'M' AND T-CHO >= 250;,"SELECT AVG(STRFTIME('%Y', DATE('NOW')) - STRFTIME('%Y', T1.BIRTHDAY)) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.`T-CHO` >= 250 AND T1.SEX = 'M'",
1,1228,True,,0.0779,"SELECT PATIENT.ID, PATIENT.DIAGNOSIS FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.TG > 300;","SELECT T1.ID, T1.DIAGNOSIS FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.TG > 300",
1,1229,ERROR,NotImplementedError: {'year': {'curdate': {}}},,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.TG >= 200 AND YEAR(CURDATE()) - YEAR(PATIENT.BIRTHDAY) > 50,"SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.TG >= 200 AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) > 50",
2,1229,ERROR,NotImplementedError: {'year': {'curdate': {}}},,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.TG >= 200 AND YEAR(CURDATE()) - YEAR(PATIENT.BIRTHDAY) > 50,"SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.TG >= 200 AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) > 50",
3,1229,ERROR,NotImplementedError: {'year': {'curdate': {}}},,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.TG >= 200 AND YEAR(CURDATE()) - YEAR(PATIENT.BIRTHDAY) > 50,"SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.TG >= 200 AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) > 50",
1,1230,True,,0.09908,SELECT DISTINCT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.ADMISSION = '-' AND LABORATORY.CPK < 250;,SELECT DISTINCT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.CPK < 250 AND T1.ADMISSION = '-',
1,1231,ERROR,NotImplementedError: {'year': 'PATIENT__BIRTHDAY'},,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(PATIENT.BIRTHDAY) BETWEEN 1936 AND 1956 AND PATIENT.SEX = 'M' AND LABORATORY.CPK >= 250,"SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.BIRTHDAY) BETWEEN '1936' AND '1956' AND T1.SEX = 'M' AND T2.CPK >= 250",
2,1231,ERROR,NotImplementedError: {'year': 'PATIENT__BIRTHDAY'},,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(PATIENT.BIRTHDAY) BETWEEN 1936 AND 1956 AND PATIENT.SEX = 'M' AND LABORATORY.CPK >= 250,"SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.BIRTHDAY) BETWEEN '1936' AND '1956' AND T1.SEX = 'M' AND T2.CPK >= 250",
3,1231,ERROR,NotImplementedError: {'year': 'PATIENT__BIRTHDAY'},,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(PATIENT.BIRTHDAY) BETWEEN 1936 AND 1956 AND PATIENT.SEX = 'M' AND LABORATORY.CPK >= 250,"SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.BIRTHDAY) BETWEEN '1936' AND '1956' AND T1.SEX = 'M' AND T2.CPK >= 250",
1,1232,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,"SELECT PATIENT.ID, PATIENT.SEX, YEAR(CURRENT_TIMESTAMP) - YEAR(PATIENT.BIRTHDAY) AS AGE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.GLU >= 180 AND LABORATORY.T-CHO < 250;","SELECT DISTINCT T1.ID, T1.SEX , STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250",
2,1232,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,"SELECT PATIENT.ID, PATIENT.SEX, YEAR(CURRENT_TIMESTAMP) - YEAR(PATIENT.BIRTHDAY) AS AGE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.GLU >= 180 AND LABORATORY.T-CHO < 250;","SELECT DISTINCT T1.ID, T1.SEX , STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250",
3,1232,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,"SELECT PATIENT.ID, PATIENT.SEX, YEAR(CURRENT_TIMESTAMP) - YEAR(PATIENT.BIRTHDAY) AS AGE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.GLU >= 180 AND LABORATORY.T-CHO < 250;","SELECT DISTINCT T1.ID, T1.SEX , STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250",
1,1233,ERROR,NotImplementedError: {'year': 'PATIENT__DESCRIPTION'},,"SELECT PATIENT.ID, LABORATORY.GLU FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(PATIENT.DESCRIPTION) = 1991 AND LABORATORY.GLU < 180","SELECT DISTINCT T1.ID, T2.GLU FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.`FIRST DATE`) = '1991' AND T2.GLU < 180",
2,1233,ERROR,NotImplementedError: {'year': 'PATIENT__DESCRIPTION'},,"SELECT PATIENT.ID, LABORATORY.GLU FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(PATIENT.DESCRIPTION) = 1991 AND LABORATORY.GLU < 180","SELECT DISTINCT T1.ID, T2.GLU FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.`FIRST DATE`) = '1991' AND T2.GLU < 180",
3,1233,ERROR,NotImplementedError: {'year': 'PATIENT__DESCRIPTION'},,"SELECT PATIENT.ID, LABORATORY.GLU FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(PATIENT.DESCRIPTION) = 1991 AND LABORATORY.GLU < 180","SELECT DISTINCT T1.ID, T2.GLU FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.`FIRST DATE`) = '1991' AND T2.GLU < 180",
1,1234,True,,0.135789,"SELECT PATIENT.ID, PATIENT.SEX, PATIENT.BIRTHDAY FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.WBC <= 3.5 OR LABORATORY.WBC >= 9.0 GROUP BY PATIENT.SEX ORDER BY PATIENT.BIRTHDAY ASC;","SELECT DISTINCT T1.ID, T1.SEX, T1.BIRTHDAY FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.WBC <= 3.5 OR T2.WBC >= 9.0 GROUP BY T1.SEX,T1.ID ORDER BY T1.BIRTHDAY ASC",
1,1235,ERROR,NotImplementedError: {'year': 'CURRENT_TIMESTAMP'},,"SELECT PATIENT.ID, PATIENT.DIAGNOSIS, YEAR(CURRENT_TIMESTAMP) - YEAR(PATIENT.BIRTHDAY) AS AGE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.RBC < 3.5","SELECT DISTINCT T1.DIAGNOSIS, T1.ID , STRFTIME('%Y', CURRENT_TIMESTAMP) -STRFTIME('%Y', T1.BIRTHDAY) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.RBC < 3.5",
2,1235,ERROR,NotImplementedError: {'year': 'CURRENT_TIMESTAMP'},,"SELECT PATIENT.ID, PATIENT.DIAGNOSIS, YEAR(CURRENT_TIMESTAMP) - YEAR(PATIENT.BIRTHDAY) AS AGE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.RBC < 3.5","SELECT DISTINCT T1.DIAGNOSIS, T1.ID , STRFTIME('%Y', CURRENT_TIMESTAMP) -STRFTIME('%Y', T1.BIRTHDAY) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.RBC < 3.5",
3,1235,ERROR,NotImplementedError: {'year': 'CURRENT_TIMESTAMP'},,"SELECT PATIENT.ID, PATIENT.DIAGNOSIS, YEAR(CURRENT_TIMESTAMP) - YEAR(PATIENT.BIRTHDAY) AS AGE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.RBC < 3.5","SELECT DISTINCT T1.DIAGNOSIS, T1.ID , STRFTIME('%Y', CURRENT_TIMESTAMP) -STRFTIME('%Y', T1.BIRTHDAY) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.RBC < 3.5",
1,1236,ERROR,NotImplementedError: {'year': {'curdate': {}}},,SELECT PATIENT.ADMISSION FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.SEX = 'F' AND YEAR(CURDATE()) - YEAR(PATIENT.BIRTHDAY) >= 50 AND (LABORATORY.RBC <= 3.5 OR LABORATORY.RBC >= 6.0),"SELECT DISTINCT T1.ID, T1.ADMISSION FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) >= 50",
2,1236,ERROR,NotImplementedError: {'year': {'curdate': {}}},,SELECT PATIENT.ADMISSION FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.SEX = 'F' AND YEAR(CURDATE()) - YEAR(PATIENT.BIRTHDAY) >= 50 AND (LABORATORY.RBC <= 3.5 OR LABORATORY.RBC >= 6.0),"SELECT DISTINCT T1.ID, T1.ADMISSION FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) >= 50",
3,1236,ERROR,NotImplementedError: {'year': {'curdate': {}}},,SELECT PATIENT.ADMISSION FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.SEX = 'F' AND YEAR(CURDATE()) - YEAR(PATIENT.BIRTHDAY) >= 50 AND (LABORATORY.RBC <= 3.5 OR LABORATORY.RBC >= 6.0),"SELECT DISTINCT T1.ID, T1.ADMISSION FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) >= 50",
1,1237,False,,,"SELECT PATIENT.ID, LABORATORY.ID, PATIENT.SEX FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.ADMISSION = '-' AND LABORATORY.HGB < 10","SELECT DISTINCT T1.ID, T1.SEX FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.HGB < 10 AND T1.ADMISSION = '-'",
1,1238,True,,0.148618,"SELECT PATIENT.ID, PATIENT.SEX FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE EXAMINATION.DIAGNOSIS = 'SLE' AND LABORATORY.HGB BETWEEN 10 AND 17 ORDER BY PATIENT.BIRTHDAY ASC LIMIT 1","SELECT T1.ID, T1.SEX FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.DIAGNOSIS = 'SLE' AND T2.HGB > 10 AND T2.HGB < 17 ORDER BY T1.BIRTHDAY ASC LIMIT 1",
1,1239,ERROR,NotImplementedError: {'year': 'CURRENT_TIMESTAMP'},,"SELECT PATIENT.ID, YEAR(CURRENT_TIMESTAMP) - YEAR(PATIENT.BIRTHDAY) AS AGE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID GROUP BY PATIENT.ID HAVING COUNT(LABORATORY.ID) > 2 AND MAX(LABORATORY.HCT) >= 52","SELECT DISTINCT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.ID IN ( SELECT ID FROM LABORATORY WHERE HCT >= 52 GROUP BY ID HAVING COUNT(ID) >= 2 )",
2,1239,ERROR,NotImplementedError: {'year': 'CURRENT_TIMESTAMP'},,"SELECT PATIENT.ID, YEAR(CURRENT_TIMESTAMP) - YEAR(PATIENT.BIRTHDAY) AS AGE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID GROUP BY PATIENT.ID HAVING COUNT(LABORATORY.ID) > 2 AND MAX(LABORATORY.HCT) >= 52","SELECT DISTINCT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.ID IN ( SELECT ID FROM LABORATORY WHERE HCT >= 52 GROUP BY ID HAVING COUNT(ID) >= 2 )",
3,1239,ERROR,NotImplementedError: {'year': 'CURRENT_TIMESTAMP'},,"SELECT PATIENT.ID, YEAR(CURRENT_TIMESTAMP) - YEAR(PATIENT.BIRTHDAY) AS AGE FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID GROUP BY PATIENT.ID HAVING COUNT(LABORATORY.ID) > 2 AND MAX(LABORATORY.HCT) >= 52","SELECT DISTINCT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.ID IN ( SELECT ID FROM LABORATORY WHERE HCT >= 52 GROUP BY ID HAVING COUNT(ID) >= 2 )",
1,1240,ERROR,"NotImplementedError: {'like': ['LABORATORY__DATE', {'literal': '1991%'}]}",,SELECT AVG(LABORATORY.HCT) FROM LABORATORY WHERE LABORATORY.DATE LIKE '1991%' AND LABORATORY.HCT < 29,"SELECT AVG(T2.HCT) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.HCT < 29 AND STRFTIME('%Y', T2.DATE) = '1991'",
2,1240,ERROR,"NotImplementedError: {'like': ['LABORATORY__DATE', {'literal': '1991%'}]}",,SELECT AVG(LABORATORY.HCT) FROM LABORATORY WHERE LABORATORY.DATE LIKE '1991%' AND LABORATORY.HCT < 29,"SELECT AVG(T2.HCT) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.HCT < 29 AND STRFTIME('%Y', T2.DATE) = '1991'",
3,1240,ERROR,"NotImplementedError: {'like': ['LABORATORY__DATE', {'literal': '1991%'}]}",,SELECT AVG(LABORATORY.HCT) FROM LABORATORY WHERE LABORATORY.DATE LIKE '1991%' AND LABORATORY.HCT < 29,"SELECT AVG(T2.HCT) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.HCT < 29 AND STRFTIME('%Y', T2.DATE) = '1991'",
1,1241,True,,0.067793,SELECT (SELECT COUNT(*) FROM LABORATORY WHERE PLT < 100) - (SELECT COUNT(*) FROM LABORATORY WHERE PLT > 400) AS CALCULATION FROM LABORATORY,SELECT SUM(CASE WHEN T2.PLT <= 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.PLT >= 400 THEN 1 ELSE 0 END) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID,
1,1242,ERROR,NotImplementedError: {'year': 'LABORATORY__DATE'},,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(LABORATORY.DATE) = 1984 AND YEAR(CURDATE()) - YEAR(PATIENT.BIRTHDAY) < 50 AND LABORATORY.PLT BETWEEN 100 AND 400,"SELECT DISTINCT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND STRFTIME('%Y', T2.DATE) - STRFTIME('%Y', T1.BIRTHDAY) < 50 AND STRFTIME('%Y', T2.DATE) = '1984'",
2,1242,ERROR,NotImplementedError: {'year': 'LABORATORY__DATE'},,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(LABORATORY.DATE) = 1984 AND YEAR(CURDATE()) - YEAR(PATIENT.BIRTHDAY) < 50 AND LABORATORY.PLT BETWEEN 100 AND 400,"SELECT DISTINCT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND STRFTIME('%Y', T2.DATE) - STRFTIME('%Y', T1.BIRTHDAY) < 50 AND STRFTIME('%Y', T2.DATE) = '1984'",
3,1242,ERROR,NotImplementedError: {'year': 'LABORATORY__DATE'},,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(LABORATORY.DATE) = 1984 AND YEAR(CURDATE()) - YEAR(PATIENT.BIRTHDAY) < 50 AND LABORATORY.PLT BETWEEN 100 AND 400,"SELECT DISTINCT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND STRFTIME('%Y', T2.DATE) - STRFTIME('%Y', T1.BIRTHDAY) < 50 AND STRFTIME('%Y', T2.DATE) = '1984'",
1,1243,ERROR,NotImplementedError: {'year': 'CURRENT_TIMESTAMP'},,SELECT CAST(COUNT(CASE WHEN PATIENT.SEX = 'F' THEN 1 END) AS REAL) * 100 / COUNT(*) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(CURRENT_TIMESTAMP) - YEAR(PATIENT.BIRTHDAY) > 55 AND LABORATORY.PT >= 14,"SELECT CAST(SUM(CASE WHEN T2.PT >= 14 AND T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) > 55",
2,1243,ERROR,NotImplementedError: {'year': 'CURRENT_TIMESTAMP'},,SELECT CAST(COUNT(CASE WHEN PATIENT.SEX = 'F' THEN 1 END) AS REAL) * 100 / COUNT(*) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(CURRENT_TIMESTAMP) - YEAR(PATIENT.BIRTHDAY) > 55 AND LABORATORY.PT >= 14,"SELECT CAST(SUM(CASE WHEN T2.PT >= 14 AND T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) > 55",
3,1243,ERROR,NotImplementedError: {'year': 'CURRENT_TIMESTAMP'},,SELECT CAST(COUNT(CASE WHEN PATIENT.SEX = 'F' THEN 1 END) AS REAL) * 100 / COUNT(*) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(CURRENT_TIMESTAMP) - YEAR(PATIENT.BIRTHDAY) > 55 AND LABORATORY.PT >= 14,"SELECT CAST(SUM(CASE WHEN T2.PT >= 14 AND T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BIRTHDAY) > 55",
1,1244,ERROR,NotImplementedError: {'year': 'PATIENT__FIRST DATE'},,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(PATIENT.`FIRST DATE`) > 1992 AND LABORATORY.PT < 14;,"SELECT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.`FIRST DATE`) > '1992' AND T2.PT < 14",
2,1244,ERROR,NotImplementedError: {'year': 'PATIENT__FIRST DATE'},,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(PATIENT.`FIRST DATE`) > 1992 AND LABORATORY.PT < 14;,"SELECT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.`FIRST DATE`) > '1992' AND T2.PT < 14",
3,1244,ERROR,NotImplementedError: {'year': 'PATIENT__FIRST DATE'},,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(PATIENT.`FIRST DATE`) > 1992 AND LABORATORY.PT < 14;,"SELECT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.`FIRST DATE`) > '1992' AND T2.PT < 14",
1,1245,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION DATE`,,SELECT COUNT(*) FROM EXAMINATION WHERE `EXAMINATION DATE` > '1997-01-01' AND APTT < 45,SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.DATE > '1997-01-01' AND T2.APTT >= 45,
2,1245,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION DATE`,,SELECT COUNT(*) FROM EXAMINATION WHERE `EXAMINATION DATE` > '1997-01-01' AND APTT < 45,SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.DATE > '1997-01-01' AND T2.APTT >= 45,
3,1245,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION DATE`,,SELECT COUNT(*) FROM EXAMINATION WHERE `EXAMINATION DATE` > '1997-01-01' AND APTT < 45,SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.DATE > '1997-01-01' AND T2.APTT >= 45,
1,1246,True,,0.129638,SELECT COUNT(DISTINCT EXAMINATION.ID) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE LABORATORY.APTT > 45 AND EXAMINATION.THROMBOSIS = 0,SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T3.ID = T2.ID WHERE T3.THROMBOSIS = 0 AND T2.APTT > 45,
1,1247,True,,0.22816,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.SEX = 'M' AND LABORATORY.WBC > 3.5 AND LABORATORY.WBC < 9.0 AND (LABORATORY.FG <= 150 OR LABORATORY.FG >= 450),SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.FG <= 150 OR T2.FG >= 450 AND T2.WBC > 3.5 AND T2.WBC < 9.0 AND T1.SEX = 'M',
1,1248,True,,0.154099,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.BIRTHDAY > '1980-01-01' AND (LABORATORY.FG < 150 OR LABORATORY.FG > 450),SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.FG <= 150 OR T2.FG >= 450 AND T1.BIRTHDAY > '1980-01-01',
1,1249,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__U`,,SELECT PATIENT.DIAGNOSIS FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.U-PRO >= 30,SELECT T1.DIAGNOSIS FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.`U-PRO` >= 30,
2,1249,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__U`,,SELECT PATIENT.DIAGNOSIS FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.U-PRO >= 30,SELECT T1.DIAGNOSIS FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.`U-PRO` >= 30,
3,1249,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__U`,,SELECT PATIENT.DIAGNOSIS FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.U-PRO >= 30,SELECT T1.DIAGNOSIS FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.`U-PRO` >= 30,
1,1250,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__U`,,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.DIAGNOSIS = 'SLE' AND LABORATORY.U-PRO > 0 AND LABORATORY.U-PRO < 30,SELECT DISTINCT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.`U-PRO` > 0 AND T2.`U-PRO` < 30 AND T1.DIAGNOSIS = 'SLE',
2,1250,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__U`,,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.DIAGNOSIS = 'SLE' AND LABORATORY.U-PRO > 0 AND LABORATORY.U-PRO < 30,SELECT DISTINCT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.`U-PRO` > 0 AND T2.`U-PRO` < 30 AND T1.DIAGNOSIS = 'SLE',
3,1250,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__U`,,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.DIAGNOSIS = 'SLE' AND LABORATORY.U-PRO > 0 AND LABORATORY.U-PRO < 30,SELECT DISTINCT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.`U-PRO` > 0 AND T2.`U-PRO` < 30 AND T1.DIAGNOSIS = 'SLE',
1,1251,True,,0.0846659999999999,SELECT COUNT(DISTINCT LABORATORY.ID) FROM LABORATORY WHERE LABORATORY.IGG >= 2000,SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T3.ID = T2.ID WHERE T2.IGG >= 2000,
1,1252,True,,0.16413,SELECT COUNT(*) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE LABORATORY.IGG > 900 AND LABORATORY.IGG < 2000 AND EXAMINATION.SYMPTOMS IS NOT NULL;,SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T3.ID = T2.ID WHERE T2.IGG BETWEEN 900 AND 2000 AND T3.SYMPTOMS IS NOT NULL,
1,1253,True,,0.090976,SELECT PATIENT.DIAGNOSIS FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.IGA BETWEEN 80 AND 500 ORDER BY LABORATORY.IGA DESC LIMIT 1,SELECT PATIENTDATA.DIAGNOSIS FROM PATIENT AS PATIENTDATA INNER JOIN LABORATORY AS LABDATA ON PATIENTDATA.ID = LABDATA.ID WHERE LABDATA.IGA BETWEEN 80 AND 500 ORDER BY LABDATA.IGA DESC LIMIT 1,
1,1254,ERROR,NotImplementedError: {'year': 'PATIENT__FIRST DATE'},,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.IGA > 80 AND LABORATORY.IGA < 500 AND YEAR(PATIENT.`FIRST DATE`) >= 1990;,"SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.IGA BETWEEN 80 AND 500 AND  STRFTIME('%Y',  T1.`FIRST DATE`) > '1990'",
2,1254,ERROR,NotImplementedError: {'year': 'PATIENT__FIRST DATE'},,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.IGA > 80 AND LABORATORY.IGA < 500 AND YEAR(PATIENT.`FIRST DATE`) >= 1990;,"SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.IGA BETWEEN 80 AND 500 AND  STRFTIME('%Y',  T1.`FIRST DATE`) > '1990'",
3,1254,ERROR,NotImplementedError: {'year': 'PATIENT__FIRST DATE'},,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.IGA > 80 AND LABORATORY.IGA < 500 AND YEAR(PATIENT.`FIRST DATE`) >= 1990;,"SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.IGA BETWEEN 80 AND 500 AND  STRFTIME('%Y',  T1.`FIRST DATE`) > '1990'",
1,1255,True,,0.128866,SELECT PATIENT.DIAGNOSIS FROM LABORATORY INNER JOIN PATIENT ON LABORATORY.ID = PATIENT.ID WHERE LABORATORY.IGM <= 40 OR LABORATORY.IGM >= 400 GROUP BY PATIENT.DIAGNOSIS ORDER BY COUNT(PATIENT.DIAGNOSIS) DESC LIMIT 1,SELECT T1.DIAGNOSIS FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.IGM NOT BETWEEN 40 AND 400 GROUP BY T1.DIAGNOSIS ORDER BY COUNT(T1.DIAGNOSIS) DESC LIMIT 1,
1,1256,True,,0.094467,SELECT COUNT(*) FROM LABORATORY INNER JOIN PATIENT ON LABORATORY.ID = PATIENT.ID WHERE LABORATORY.CRP = '+' AND PATIENT.DESCRIPTION IS NULL;,SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE (T2.CRP = '+' ) AND T1.DESCRIPTION IS NULL,
1,1257,ERROR,NotImplementedError: {'year': {'curdate': {}}},,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.CRE >= 1.5 AND (YEAR(CURDATE()) - YEAR(PATIENT.BIRTHDAY)) < 70,"SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND STRFTIME('%Y', DATE('NOW')) - STRFTIME('%Y', T1.BIRTHDAY) < 70",
2,1257,ERROR,NotImplementedError: {'year': {'curdate': {}}},,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.CRE >= 1.5 AND (YEAR(CURDATE()) - YEAR(PATIENT.BIRTHDAY)) < 70,"SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND STRFTIME('%Y', DATE('NOW')) - STRFTIME('%Y', T1.BIRTHDAY) < 70",
3,1257,ERROR,NotImplementedError: {'year': {'curdate': {}}},,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.CRE >= 1.5 AND (YEAR(CURDATE()) - YEAR(PATIENT.BIRTHDAY)) < 70,"SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND STRFTIME('%Y', DATE('NOW')) - STRFTIME('%Y', T1.BIRTHDAY) < 70",
1,1258,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PATIENT__ID`,,"SELECT COUNT(DISTINCT PATIENT.ID) FROM LABORATORY INNER JOIN EXAMINATION ON LABORATORY.ID = EXAMINATION.ID WHERE LABORATORY.RA IN ('-', '+-') AND EXAMINATION.KCT = '+';",SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T3.ID = T2.ID WHERE (T2.RA = '-' OR T2.RA = '+-') AND T3.KCT = '+',
2,1258,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PATIENT__ID`,,"SELECT COUNT(DISTINCT PATIENT.ID) FROM LABORATORY INNER JOIN EXAMINATION ON LABORATORY.ID = EXAMINATION.ID WHERE LABORATORY.RA IN ('-', '+-') AND EXAMINATION.KCT = '+';",SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T3.ID = T2.ID WHERE (T2.RA = '-' OR T2.RA = '+-') AND T3.KCT = '+',
3,1258,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PATIENT__ID`,,"SELECT COUNT(DISTINCT PATIENT.ID) FROM LABORATORY INNER JOIN EXAMINATION ON LABORATORY.ID = EXAMINATION.ID WHERE LABORATORY.RA IN ('-', '+-') AND EXAMINATION.KCT = '+';",SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T3.ID = T2.ID WHERE (T2.RA = '-' OR T2.RA = '+-') AND T3.KCT = '+',
1,1259,ERROR,NotImplementedError: {'year': 'PATIENT__BIRTHDAY'},,"SELECT PATIENT.DIAGNOSIS FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(PATIENT.BIRTHDAY) > 1985 AND LABORATORY.RA IN('-', '+-')",SELECT T1.DIAGNOSIS FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE (T2.RA = '-' OR T2.RA = '+-') AND T1.BIRTHDAY > '1985-01-01',
2,1259,ERROR,NotImplementedError: {'year': 'PATIENT__BIRTHDAY'},,"SELECT PATIENT.DIAGNOSIS FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(PATIENT.BIRTHDAY) > 1985 AND LABORATORY.RA IN('-', '+-')",SELECT T1.DIAGNOSIS FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE (T2.RA = '-' OR T2.RA = '+-') AND T1.BIRTHDAY > '1985-01-01',
3,1259,ERROR,NotImplementedError: {'year': 'PATIENT__BIRTHDAY'},,"SELECT PATIENT.DIAGNOSIS FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE YEAR(PATIENT.BIRTHDAY) > 1985 AND LABORATORY.RA IN('-', '+-')",SELECT T1.DIAGNOSIS FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE (T2.RA = '-' OR T2.RA = '+-') AND T1.BIRTHDAY > '1985-01-01',
1,1260,ERROR,NotImplementedError: {'year': {'curdate': {}}},,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.RF < 20 AND YEAR(CURDATE()) - YEAR(PATIENT.BIRTHDAY) > 60;,"SELECT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND STRFTIME('%Y', DATE('NOW')) - STRFTIME('%Y', T1.BIRTHDAY) > 60",
2,1260,ERROR,NotImplementedError: {'year': {'curdate': {}}},,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.RF < 20 AND YEAR(CURDATE()) - YEAR(PATIENT.BIRTHDAY) > 60;,"SELECT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND STRFTIME('%Y', DATE('NOW')) - STRFTIME('%Y', T1.BIRTHDAY) > 60",
3,1260,ERROR,NotImplementedError: {'year': {'curdate': {}}},,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.RF < 20 AND YEAR(CURDATE()) - YEAR(PATIENT.BIRTHDAY) > 60;,"SELECT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND STRFTIME('%Y', DATE('NOW')) - STRFTIME('%Y', T1.BIRTHDAY) > 60",
1,1261,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PATIENT__ID`,,SELECT COUNT(DISTINCT PATIENT.ID) FROM LABORATORY INNER JOIN EXAMINATION ON LABORATORY.ID = EXAMINATION.ID WHERE LABORATORY.RF < 20 AND EXAMINATION.THROMBOSIS = '0';,SELECT COUNT(DISTINCT T1.ID) FROM EXAMINATION AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND T1.THROMBOSIS = 0,
2,1261,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PATIENT__ID`,,SELECT COUNT(DISTINCT PATIENT.ID) FROM LABORATORY INNER JOIN EXAMINATION ON LABORATORY.ID = EXAMINATION.ID WHERE LABORATORY.RF < 20 AND EXAMINATION.THROMBOSIS = '0';,SELECT COUNT(DISTINCT T1.ID) FROM EXAMINATION AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND T1.THROMBOSIS = 0,
3,1261,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PATIENT__ID`,,SELECT COUNT(DISTINCT PATIENT.ID) FROM LABORATORY INNER JOIN EXAMINATION ON LABORATORY.ID = EXAMINATION.ID WHERE LABORATORY.RF < 20 AND EXAMINATION.THROMBOSIS = '0';,SELECT COUNT(DISTINCT T1.ID) FROM EXAMINATION AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND T1.THROMBOSIS = 0,
1,1262,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__ANA PATTERN`,,SELECT COUNT(DISTINCT PATIENT.ID) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE LABORATORY.C3 > 35 AND EXAMINATION.`ANA PATTERN` = 'P',SELECT COUNT(DISTINCT T1.ID) FROM EXAMINATION AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.C3 > 35 AND T1.`ANA PATTERN` = 'P',
2,1262,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__ANA PATTERN`,,SELECT COUNT(DISTINCT PATIENT.ID) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE LABORATORY.C3 > 35 AND EXAMINATION.`ANA PATTERN` = 'P',SELECT COUNT(DISTINCT T1.ID) FROM EXAMINATION AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.C3 > 35 AND T1.`ANA PATTERN` = 'P',
3,1262,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__ANA PATTERN`,,SELECT COUNT(DISTINCT PATIENT.ID) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE LABORATORY.C3 > 35 AND EXAMINATION.`ANA PATTERN` = 'P',SELECT COUNT(DISTINCT T1.ID) FROM EXAMINATION AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.C3 > 35 AND T1.`ANA PATTERN` = 'P',
1,1263,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__ACL IGA`,,SELECT EXAMINATION.ID FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE LABORATORY.HCT < 29 OR LABORATORY.HCT > 52 ORDER BY EXAMINATION.`ACL IGA` DESC LIMIT 1,SELECT DISTINCT T1.ID FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID INNER JOIN LABORATORY AS T3 ON T1.ID = T3.ID WHERE (T3.HCT >= 52 OR T3.HCT <= 29) ORDER BY T2.`ACL IGA` DESC LIMIT 1,
2,1263,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__ACL IGA`,,SELECT EXAMINATION.ID FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE LABORATORY.HCT < 29 OR LABORATORY.HCT > 52 ORDER BY EXAMINATION.`ACL IGA` DESC LIMIT 1,SELECT DISTINCT T1.ID FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID INNER JOIN LABORATORY AS T3 ON T1.ID = T3.ID WHERE (T3.HCT >= 52 OR T3.HCT <= 29) ORDER BY T2.`ACL IGA` DESC LIMIT 1,
3,1263,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__ACL IGA`,,SELECT EXAMINATION.ID FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE LABORATORY.HCT < 29 OR LABORATORY.HCT > 52 ORDER BY EXAMINATION.`ACL IGA` DESC LIMIT 1,SELECT DISTINCT T1.ID FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID INNER JOIN LABORATORY AS T3 ON T1.ID = T3.ID WHERE (T3.HCT >= 52 OR T3.HCT <= 29) ORDER BY T2.`ACL IGA` DESC LIMIT 1,
1,1264,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PATIENT__ID`,,SELECT COUNT(DISTINCT PATIENT.ID) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE EXAMINATION.THROMBOSIS = 'YES' AND LABORATORY.C4 > 10,SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.C4 > 10 AND T1.DIAGNOSIS = 'APS',
2,1264,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PATIENT__ID`,,SELECT COUNT(DISTINCT PATIENT.ID) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE EXAMINATION.THROMBOSIS = 'YES' AND LABORATORY.C4 > 10,SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.C4 > 10 AND T1.DIAGNOSIS = 'APS',
3,1264,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PATIENT__ID`,,SELECT COUNT(DISTINCT PATIENT.ID) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE EXAMINATION.THROMBOSIS = 'YES' AND LABORATORY.C4 > 10,SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.C4 > 10 AND T1.DIAGNOSIS = 'APS',
1,1265,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EXAMINATION (
	ID VARCHAR(20),
	EXAMINATION_DATE VARCHAR(20),
	ACL_IGG VARCHAR(20),
	ACL_IGM VARCHAR(20),
	ANA VARCHAR(20),
	ANA_PATTERN VARCHAR(20),
	ACL_IGA VARCHAR(20),
	DIAGNOSIS VARCHAR(20),
	KCT VARCHAR(20),
	RVVT VARCHAR(20),
	LAC VARCHAR(20),
	SYMPTOMS VARCHAR(20),
	THROMBOSIS VARCHAR(20)
);
INSERT INTO EXAMINATION VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE PATIENT (
	ID VARCHAR(20),
	SEX VARCHAR(20),
	BIRTHDAY VARCHAR(20),
	DESCRIPTION VARCHAR(20),
	FIRST_DATE VARCHAR(20),
	ADMISSION VARCHAR(20),
	DIAGNOSIS VARCHAR(20)
);
INSERT INTO PATIENT VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '+', '2147483648');
CREATE TABLE LABORATORY (
	ID VARCHAR(20),
	DATE VARCHAR(20),
	GOT VARCHAR(20),
	GPT VARCHAR(20),
	LDH VARCHAR(20),
	ALP VARCHAR(20),
	TP VARCHAR(20),
	ALB VARCHAR(20),
	UA VARCHAR(20),
	UN VARCHAR(20),
	CRE VARCHAR(20),
	T-BIL VARCHAR(20),
	T-CHO VARCHAR(20),
	TG VARCHAR(20),
	CPK VARCHAR(20),
	GLU VARCHAR(20),
	WBC VARCHAR(20),
	RBC VARCHAR(20),
	HGB VARCHAR(20),
	HCT VARCHAR(20),
	PLT VARCHAR(20),
	PT VARCHAR(20),
	APTT VARCHAR(20),
	FG VARCHAR(20),
	PIC VARCHAR(20),
	TAT VARCHAR(20),
	TAT2 VARCHAR(20),
	U-PRO VARCHAR(20),
	IGG VARCHAR(20),
	IGA VARCHAR(20),
	IGM VARCHAR(20),
	CRP VARCHAR(20),
	RA VARCHAR(20),
	RF VARCHAR(20),
	C3 VARCHAR(20),
	C4 VARCHAR(20),
	RNP VARCHAR(20),
	SM VARCHAR(20),
	SC170 VARCHAR(20),
	SSA VARCHAR(20),
	SSB VARCHAR(20),
	CENTROMEA VARCHAR(20),
	DNA VARCHAR(20),
	DNA-II VARCHAR(20)
);
INSERT INTO LABORATORY VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '+-', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
-- 1
SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.RNP IN ('-', '+-') AND PATIENT.ADMISSION = '+';
-- ----------sql2------------
-- 0
SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.RNP = 'NEGATIVE' OR T2.RNP = '0' AND T1.ADMISSION = '+';
",0.444992,"SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.RNP IN ('-', '+-') AND PATIENT.ADMISSION = '+';",SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.RNP = 'NEGATIVE' OR T2.RNP = '0' AND T1.ADMISSION = '+',
1,1266,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EXAMINATION (
	ID VARCHAR(20),
	EXAMINATION_DATE VARCHAR(20),
	ACL_IGG VARCHAR(20),
	ACL_IGM VARCHAR(20),
	ANA VARCHAR(20),
	ANA_PATTERN VARCHAR(20),
	ACL_IGA VARCHAR(20),
	DIAGNOSIS VARCHAR(20),
	KCT VARCHAR(20),
	RVVT VARCHAR(20),
	LAC VARCHAR(20),
	SYMPTOMS VARCHAR(20),
	THROMBOSIS VARCHAR(20)
);
INSERT INTO EXAMINATION VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE PATIENT (
	ID VARCHAR(20),
	SEX VARCHAR(20),
	BIRTHDAY VARCHAR(20),
	DESCRIPTION VARCHAR(20),
	FIRST_DATE VARCHAR(20),
	ADMISSION VARCHAR(20),
	DIAGNOSIS VARCHAR(20)
);
INSERT INTO PATIENT VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE LABORATORY (
	ID VARCHAR(20),
	DATE VARCHAR(20),
	GOT VARCHAR(20),
	GPT VARCHAR(20),
	LDH VARCHAR(20),
	ALP VARCHAR(20),
	TP VARCHAR(20),
	ALB VARCHAR(20),
	UA VARCHAR(20),
	UN VARCHAR(20),
	CRE VARCHAR(20),
	T-BIL VARCHAR(20),
	T-CHO VARCHAR(20),
	TG VARCHAR(20),
	CPK VARCHAR(20),
	GLU VARCHAR(20),
	WBC VARCHAR(20),
	RBC VARCHAR(20),
	HGB VARCHAR(20),
	HCT VARCHAR(20),
	PLT VARCHAR(20),
	PT VARCHAR(20),
	APTT VARCHAR(20),
	FG VARCHAR(20),
	PIC VARCHAR(20),
	TAT VARCHAR(20),
	TAT2 VARCHAR(20),
	U-PRO VARCHAR(20),
	IGG VARCHAR(20),
	IGA VARCHAR(20),
	IGM VARCHAR(20),
	CRP VARCHAR(20),
	RA VARCHAR(20),
	RF VARCHAR(20),
	C3 VARCHAR(20),
	C4 VARCHAR(20),
	RNP VARCHAR(20),
	SM VARCHAR(20),
	SC170 VARCHAR(20),
	SSA VARCHAR(20),
	SSB VARCHAR(20),
	CENTROMEA VARCHAR(20),
	DNA VARCHAR(20),
	DNA-II VARCHAR(20)
);
INSERT INTO LABORATORY VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '+-', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
SELECT PATIENT.BIRTHDAY FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.RNP NOT IN('-', '+-') ORDER BY PATIENT.BIRTHDAY ASC LIMIT 1;
-- ----------sql2------------
-- 2147483648
SELECT T1.BIRTHDAY FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.RNP != '-' OR '+-' ORDER BY T1.BIRTHDAY DESC LIMIT 1;
",0.09698,"SELECT PATIENT.BIRTHDAY FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.RNP NOT IN('-', '+-') ORDER BY PATIENT.BIRTHDAY ASC LIMIT 1;",SELECT T1.BIRTHDAY FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.RNP != '-' OR '+-' ORDER BY T1.BIRTHDAY DESC LIMIT 1,
1,1267,ERROR,NotImplementedError: {'literal': 0},,"SELECT COUNT(*) FROM LABORATORY INNER JOIN EXAMINATION ON LABORATORY.ID = EXAMINATION.ID WHERE LABORATORY.SM IN('-', '+-') AND EXAMINATION.THROMBOSIS = 0;","SELECT COUNT(T1.ID) FROM EXAMINATION AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.SM IN ('NEGATIVE','0') AND T1.THROMBOSIS = 0",
2,1267,ERROR,NotImplementedError: {'literal': 0},,"SELECT COUNT(*) FROM LABORATORY INNER JOIN EXAMINATION ON LABORATORY.ID = EXAMINATION.ID WHERE LABORATORY.SM IN('-', '+-') AND EXAMINATION.THROMBOSIS = 0;","SELECT COUNT(T1.ID) FROM EXAMINATION AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.SM IN ('NEGATIVE','0') AND T1.THROMBOSIS = 0",
3,1267,ERROR,NotImplementedError: {'literal': 0},,"SELECT COUNT(*) FROM LABORATORY INNER JOIN EXAMINATION ON LABORATORY.ID = EXAMINATION.ID WHERE LABORATORY.SM IN('-', '+-') AND EXAMINATION.THROMBOSIS = 0;","SELECT COUNT(T1.ID) FROM EXAMINATION AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.SM IN ('NEGATIVE','0') AND T1.THROMBOSIS = 0",
1,1268,True,,0.101105,"SELECT PATIENT.ID FROM LABORATORY INNER JOIN PATIENT ON LABORATORY.ID = PATIENT.ID WHERE LABORATORY.SM NOT IN ('NEGATIVE', '0') ORDER BY PATIENT.BIRTHDAY DESC LIMIT 3;","SELECT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.SM NOT IN ('NEGATIVE','0') ORDER BY T1.BIRTHDAY DESC LIMIT 3",
1,1269,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,"SELECT EXAMINATION.ID FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE EXAMINATION.`EXAMINATION DATE` > '1997-01-01' AND LABORATORY.SC170 IN ('NEGATIVE','0')","SELECT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.SC170 IN ('NEGATIVE','0') AND T2.DATE > 1997-01-01",
2,1269,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,"SELECT EXAMINATION.ID FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE EXAMINATION.`EXAMINATION DATE` > '1997-01-01' AND LABORATORY.SC170 IN ('NEGATIVE','0')","SELECT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.SC170 IN ('NEGATIVE','0') AND T2.DATE > 1997-01-01",
3,1269,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__EXAMINATION DATE`,,"SELECT EXAMINATION.ID FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE EXAMINATION.`EXAMINATION DATE` > '1997-01-01' AND LABORATORY.SC170 IN ('NEGATIVE','0')","SELECT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.SC170 IN ('NEGATIVE','0') AND T2.DATE > 1997-01-01",
1,1270,ERROR,NotImplementedError: {'literal': 0},,"SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.SC170 IN ('NEGATIVE', '0') AND PATIENT.SEX = 'F' AND EXAMINATION.SYMPTOMS IS NULL",SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T3.ID = T2.ID WHERE (T2.SC170 = 'NEGATIVE' OR T2.SC170 = '0') AND T1.SEX = 'F' AND T3.SYMPTOMS IS NULL,
2,1270,ERROR,NotImplementedError: {'literal': 0},,"SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.SC170 IN ('NEGATIVE', '0') AND PATIENT.SEX = 'F' AND EXAMINATION.SYMPTOMS IS NULL",SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T3.ID = T2.ID WHERE (T2.SC170 = 'NEGATIVE' OR T2.SC170 = '0') AND T1.SEX = 'F' AND T3.SYMPTOMS IS NULL,
3,1270,ERROR,NotImplementedError: {'literal': 0},,"SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.SC170 IN ('NEGATIVE', '0') AND PATIENT.SEX = 'F' AND EXAMINATION.SYMPTOMS IS NULL",SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T3.ID = T2.ID WHERE (T2.SC170 = 'NEGATIVE' OR T2.SC170 = '0') AND T1.SEX = 'F' AND T3.SYMPTOMS IS NULL,
1,1271,ERROR,NotImplementedError: {'year': 'PATIENT__FIRST DATE'},,"SELECT COUNT(DISTINCT PATIENT.ID) FROM LABORATORY INNER JOIN PATIENT ON LABORATORY.ID = PATIENT.ID WHERE LABORATORY.SSA IN ('-', '+-') AND YEAR(PATIENT.`FIRST DATE`) < 2000","SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.SSA IN ('NEGATIVE', '0') AND STRFTIME('%Y', T2.DATE) < '2000'",
2,1271,ERROR,NotImplementedError: {'year': 'PATIENT__FIRST DATE'},,"SELECT COUNT(DISTINCT PATIENT.ID) FROM LABORATORY INNER JOIN PATIENT ON LABORATORY.ID = PATIENT.ID WHERE LABORATORY.SSA IN ('-', '+-') AND YEAR(PATIENT.`FIRST DATE`) < 2000","SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.SSA IN ('NEGATIVE', '0') AND STRFTIME('%Y', T2.DATE) < '2000'",
3,1271,ERROR,NotImplementedError: {'year': 'PATIENT__FIRST DATE'},,"SELECT COUNT(DISTINCT PATIENT.ID) FROM LABORATORY INNER JOIN PATIENT ON LABORATORY.ID = PATIENT.ID WHERE LABORATORY.SSA IN ('-', '+-') AND YEAR(PATIENT.`FIRST DATE`) < 2000","SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.SSA IN ('NEGATIVE', '0') AND STRFTIME('%Y', T2.DATE) < '2000'",
1,1272,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PATIENT__FIRST DATE`,,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.SSA != 'NEGATIVE' AND LABORATORY.SSA != '0' ORDER BY PATIENT.`FIRST DATE` ASC LIMIT 1;,"SELECT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.`FIRST DATE` IS NOT NULL AND T2.SSA NOT IN ('NEGATIVE', '0') ORDER BY T1.`FIRST DATE` ASC LIMIT 1",
2,1272,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PATIENT__FIRST DATE`,,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.SSA != 'NEGATIVE' AND LABORATORY.SSA != '0' ORDER BY PATIENT.`FIRST DATE` ASC LIMIT 1;,"SELECT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.`FIRST DATE` IS NOT NULL AND T2.SSA NOT IN ('NEGATIVE', '0') ORDER BY T1.`FIRST DATE` ASC LIMIT 1",
3,1272,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PATIENT__FIRST DATE`,,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.SSA != 'NEGATIVE' AND LABORATORY.SSA != '0' ORDER BY PATIENT.`FIRST DATE` ASC LIMIT 1;,"SELECT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.`FIRST DATE` IS NOT NULL AND T2.SSA NOT IN ('NEGATIVE', '0') ORDER BY T1.`FIRST DATE` ASC LIMIT 1",
1,1273,ERROR,NotImplementedError: {'literal': 0},,"SELECT COUNT(DISTINCT PATIENT.ID) FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID WHERE EXAMINATION.DIAGNOSIS = 'SLE' AND PATIENT.DIAGNOSIS IN ('NEGATIVE', '0')",SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.SSB = 'NEGATIVE' OR '0' AND T1.DIAGNOSIS = 'SLE',
2,1273,ERROR,NotImplementedError: {'literal': 0},,"SELECT COUNT(DISTINCT PATIENT.ID) FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID WHERE EXAMINATION.DIAGNOSIS = 'SLE' AND PATIENT.DIAGNOSIS IN ('NEGATIVE', '0')",SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.SSB = 'NEGATIVE' OR '0' AND T1.DIAGNOSIS = 'SLE',
3,1273,ERROR,NotImplementedError: {'literal': 0},,"SELECT COUNT(DISTINCT PATIENT.ID) FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID WHERE EXAMINATION.DIAGNOSIS = 'SLE' AND PATIENT.DIAGNOSIS IN ('NEGATIVE', '0')",SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.SSB = 'NEGATIVE' OR '0' AND T1.DIAGNOSIS = 'SLE',
1,1274,ERROR,NotImplementedError: {'literal': 0},,"SELECT COUNT(DISTINCT EXAMINATION.ID) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE LABORATORY.SSB IN ('NEGATIVE', '0') AND EXAMINATION.SYMPTOMS IS NOT NULL",SELECT COUNT(DISTINCT T1.ID) FROM EXAMINATION AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.SSB = 'NEGATIVE' OR '0' AND T1.SYMPTOMS IS NOT NULL,
2,1274,ERROR,NotImplementedError: {'literal': 0},,"SELECT COUNT(DISTINCT EXAMINATION.ID) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE LABORATORY.SSB IN ('NEGATIVE', '0') AND EXAMINATION.SYMPTOMS IS NOT NULL",SELECT COUNT(DISTINCT T1.ID) FROM EXAMINATION AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.SSB = 'NEGATIVE' OR '0' AND T1.SYMPTOMS IS NOT NULL,
3,1274,ERROR,NotImplementedError: {'literal': 0},,"SELECT COUNT(DISTINCT EXAMINATION.ID) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE LABORATORY.SSB IN ('NEGATIVE', '0') AND EXAMINATION.SYMPTOMS IS NOT NULL",SELECT COUNT(DISTINCT T1.ID) FROM EXAMINATION AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.SSB = 'NEGATIVE' OR '0' AND T1.SYMPTOMS IS NOT NULL,
1,1275,ERROR,NotImplementedError: {'literal': 0},,"SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.CENTROMEA IN('-', '+-') AND LABORATORY.SSB IN('-', '+-') AND PATIENT.SEX = 'M';","SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.CENTROMEA IN ('NEGATIVE', '0') AND T2.SSB IN ('NEGATIVE', '0') AND T1.SEX = 'M'",
2,1275,ERROR,NotImplementedError: {'literal': 0},,"SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.CENTROMEA IN('-', '+-') AND LABORATORY.SSB IN('-', '+-') AND PATIENT.SEX = 'M';","SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.CENTROMEA IN ('NEGATIVE', '0') AND T2.SSB IN ('NEGATIVE', '0') AND T1.SEX = 'M'",
3,1275,ERROR,NotImplementedError: {'literal': 0},,"SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.CENTROMEA IN('-', '+-') AND LABORATORY.SSB IN('-', '+-') AND PATIENT.SEX = 'M';","SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.CENTROMEA IN ('NEGATIVE', '0') AND T2.SSB IN ('NEGATIVE', '0') AND T1.SEX = 'M'",
1,1276,True,,0.07494,SELECT PATIENT.DIAGNOSIS FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.DNA >= 8,SELECT DISTINCT(T1.DIAGNOSIS) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.DNA >= 8,
1,1277,True,,0.133489,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT LEFT JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.DNA < 8 AND PATIENT.DESCRIPTION IS NULL,SELECT COUNT(DISTINCT T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.DNA < 8 AND T1.DESCRIPTION IS NULL,
1,1278,True,,0.106625,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.IGG > 900 AND LABORATORY.IGG < 2000 AND PATIENT.ADMISSION = '+';,SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.IGG > 900 AND T2.IGG <2000 AND  T1.ADMISSION = '+',
1,1279,ERROR,KeyError: 1,,SELECT CAST(COUNT(DISTINCT DF2.ID) * 100.0 / COUNT(DISTINCT DF1.ID)) AS PERCENTAGE FROM (SELECT LABORATORY.ID FROM LABORATORY WHERE LABORATORY.GOT >= 60) AS DF1 INNER JOIN (SELECT PATIENT.ID FROM PATIENT WHERE PATIENT.DIAGNOSIS = 'SLE') AS DF2 ON DF1.ID = DF2.ID,SELECT COUNT(CASE WHEN T1.DIAGNOSIS LIKE '%SLE%' THEN T1.ID ELSE 0 END) / COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.`GOT` >= 60,
2,1279,ERROR,KeyError: 1,,SELECT CAST(COUNT(DISTINCT DF2.ID) * 100.0 / COUNT(DISTINCT DF1.ID)) AS PERCENTAGE FROM (SELECT LABORATORY.ID FROM LABORATORY WHERE LABORATORY.GOT >= 60) AS DF1 INNER JOIN (SELECT PATIENT.ID FROM PATIENT WHERE PATIENT.DIAGNOSIS = 'SLE') AS DF2 ON DF1.ID = DF2.ID,SELECT COUNT(CASE WHEN T1.DIAGNOSIS LIKE '%SLE%' THEN T1.ID ELSE 0 END) / COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.`GOT` >= 60,
3,1279,ERROR,KeyError: 1,,SELECT CAST(COUNT(DISTINCT DF2.ID) * 100.0 / COUNT(DISTINCT DF1.ID)) AS PERCENTAGE FROM (SELECT LABORATORY.ID FROM LABORATORY WHERE LABORATORY.GOT >= 60) AS DF1 INNER JOIN (SELECT PATIENT.ID FROM PATIENT WHERE PATIENT.DIAGNOSIS = 'SLE') AS DF2 ON DF1.ID = DF2.ID,SELECT COUNT(CASE WHEN T1.DIAGNOSIS LIKE '%SLE%' THEN T1.ID ELSE 0 END) / COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.`GOT` >= 60,
1,1280,True,,0.100231,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.SEX = 'M' AND LABORATORY.GOT < 60,SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND T1.SEX = 'M',
1,1281,True,,0.0803359999999999,SELECT PATIENT.BIRTHDAY FROM LABORATORY INNER JOIN PATIENT ON LABORATORY.ID = PATIENT.ID WHERE LABORATORY.GOT >= 60 ORDER BY PATIENT.BIRTHDAY DESC LIMIT 1;,SELECT T1.BIRTHDAY FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.GOT >= 60 ORDER BY T1.BIRTHDAY DESC LIMIT 1,
1,1282,True,,0.078544,SELECT PATIENT.BIRTHDAY FROM LABORATORY INNER JOIN PATIENT ON LABORATORY.ID = PATIENT.ID WHERE LABORATORY.GPT < 60 ORDER BY LABORATORY.GPT DESC LIMIT 3,SELECT T1.BIRTHDAY FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.GPT < 60 ORDER BY T2.GPT DESC LIMIT 3,
1,1283,True,,0.101251,SELECT COUNT(PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.GPT < 60 AND PATIENT.SEX = 'M',SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND T1.SEX = 'M',
1,1284,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__DATE`,,SELECT MIN(LABORATORY.DATE) FROM ( SELECT LABORATORY.DATE FROM LABORATORY WHERE LABORATORY.LDH < 500 ORDER BY LABORATORY.LDH DESC LIMIT 1 ) AS DF1 ORDER BY LABORATORY.DATE ASC LIMIT 1,SELECT T1.`FIRST DATE` FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.LDH < 500 ORDER BY T2.LDH ASC LIMIT 1,
2,1284,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__DATE`,,SELECT MIN(LABORATORY.DATE) FROM ( SELECT LABORATORY.DATE FROM LABORATORY WHERE LABORATORY.LDH < 500 ORDER BY LABORATORY.LDH DESC LIMIT 1 ) AS DF1 ORDER BY LABORATORY.DATE ASC LIMIT 1,SELECT T1.`FIRST DATE` FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.LDH < 500 ORDER BY T2.LDH ASC LIMIT 1,
3,1284,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__DATE`,,SELECT MIN(LABORATORY.DATE) FROM ( SELECT LABORATORY.DATE FROM LABORATORY WHERE LABORATORY.LDH < 500 ORDER BY LABORATORY.LDH DESC LIMIT 1 ) AS DF1 ORDER BY LABORATORY.DATE ASC LIMIT 1,SELECT T1.`FIRST DATE` FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.LDH < 500 ORDER BY T2.LDH ASC LIMIT 1,
1,1285,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__FIRST DATE`,,SELECT LABORATORY.DATE FROM LABORATORY WHERE LABORATORY.LDH >= 500 ORDER BY LABORATORY.DATE DESC LIMIT 1,SELECT T1.`FIRST DATE` FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.LDH >= 500 ORDER BY T1.`FIRST DATE` DESC LIMIT 1,
2,1285,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__FIRST DATE`,,SELECT LABORATORY.DATE FROM LABORATORY WHERE LABORATORY.LDH >= 500 ORDER BY LABORATORY.DATE DESC LIMIT 1,SELECT T1.`FIRST DATE` FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.LDH >= 500 ORDER BY T1.`FIRST DATE` DESC LIMIT 1,
3,1285,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T1__FIRST DATE`,,SELECT LABORATORY.DATE FROM LABORATORY WHERE LABORATORY.LDH >= 500 ORDER BY LABORATORY.DATE DESC LIMIT 1,SELECT T1.`FIRST DATE` FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.LDH >= 500 ORDER BY T1.`FIRST DATE` DESC LIMIT 1,
1,1286,True,,0.099865,SELECT COUNT(*) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.ALP >= 300 AND PATIENT.ADMISSION = '+',SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.ALP >= 300 AND T1.ADMISSION = '+',
1,1287,True,,0.102904,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.ADMISSION = '-' AND LABORATORY.ALP < 300;,SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.ALP < 300 AND T1.ADMISSION = '-',
1,1288,True,,0.0770489999999999,SELECT PATIENT.DIAGNOSIS FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.TP < 6.0;,SELECT T1.DIAGNOSIS FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.TP < 6.0,
1,1289,True,,0.110459,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.DIAGNOSIS = 'SJS' AND LABORATORY.TP > 6.0 AND LABORATORY.TP < 8.5,SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.DIAGNOSIS = 'SJS' AND T2.TP > 6.0 AND T2.TP < 8.5,
1,1290,True,,0.0383649999999999,SELECT LABORATORY.DATE FROM LABORATORY WHERE LABORATORY.ALB > 3.5 AND LABORATORY.ALB < 5.5 ORDER BY LABORATORY.ALB DESC LIMIT 1,SELECT DATE FROM LABORATORY WHERE ALB > 3.5 AND ALB < 5.5 ORDER BY ALB DESC LIMIT 1,
1,1291,True,,0.1824829999999999,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.SEX = 'M' AND LABORATORY.ALB > 3.5 AND LABORATORY.ALB < 5.5 AND LABORATORY.TP >= 6.0 AND LABORATORY.TP <= 8.5,SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M'  AND T2.ALB > 3.5 AND T2.ALB < 5.5 AND T2.TP BETWEEN 6.0 AND 8.5,
1,1292,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__ACL IGG`,,"SELECT EXAMINATION.`ACL IGG`, EXAMINATION.`ACL IGM`, EXAMINATION.`ACL IGA` FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE PATIENT.SEX = 'F' AND LABORATORY.UA <= 6.50 ORDER BY LABORATORY.UA DESC LIMIT 1","SELECT T3.`ACL IGG`, T3.`ACL IGM`, T3.`ACL IGA` FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T3.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 ORDER BY T2.UA DESC LIMIT 1",
2,1292,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__ACL IGG`,,"SELECT EXAMINATION.`ACL IGG`, EXAMINATION.`ACL IGM`, EXAMINATION.`ACL IGA` FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE PATIENT.SEX = 'F' AND LABORATORY.UA <= 6.50 ORDER BY LABORATORY.UA DESC LIMIT 1","SELECT T3.`ACL IGG`, T3.`ACL IGM`, T3.`ACL IGA` FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T3.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 ORDER BY T2.UA DESC LIMIT 1",
3,1292,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXAMINATION__ACL IGG`,,"SELECT EXAMINATION.`ACL IGG`, EXAMINATION.`ACL IGM`, EXAMINATION.`ACL IGA` FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID WHERE PATIENT.SEX = 'F' AND LABORATORY.UA <= 6.50 ORDER BY LABORATORY.UA DESC LIMIT 1","SELECT T3.`ACL IGG`, T3.`ACL IGM`, T3.`ACL IGA` FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T3.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 ORDER BY T2.UA DESC LIMIT 1",
1,1293,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EXAMINATION (
	ID VARCHAR(20),
	EXAMINATION_DATE VARCHAR(20),
	ACL_IGG VARCHAR(20),
	ACL_IGM VARCHAR(20),
	ANA VARCHAR(20),
	ANA_PATTERN VARCHAR(20),
	ACL_IGA VARCHAR(20),
	DIAGNOSIS VARCHAR(20),
	KCT VARCHAR(20),
	RVVT VARCHAR(20),
	LAC VARCHAR(20),
	SYMPTOMS VARCHAR(20),
	THROMBOSIS VARCHAR(20)
);
INSERT INTO EXAMINATION VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE PATIENT (
	ID VARCHAR(20),
	SEX VARCHAR(20),
	BIRTHDAY VARCHAR(20),
	DESCRIPTION VARCHAR(20),
	FIRST_DATE VARCHAR(20),
	ADMISSION VARCHAR(20),
	DIAGNOSIS VARCHAR(20)
);
INSERT INTO PATIENT VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE LABORATORY (
	ID VARCHAR(20),
	DATE VARCHAR(20),
	GOT VARCHAR(20),
	GPT VARCHAR(20),
	LDH VARCHAR(20),
	ALP VARCHAR(20),
	TP VARCHAR(20),
	ALB VARCHAR(20),
	UA VARCHAR(20),
	UN VARCHAR(20),
	CRE VARCHAR(20),
	T-BIL VARCHAR(20),
	T-CHO VARCHAR(20),
	TG VARCHAR(20),
	CPK VARCHAR(20),
	GLU VARCHAR(20),
	WBC VARCHAR(20),
	RBC VARCHAR(20),
	HGB VARCHAR(20),
	HCT VARCHAR(20),
	PLT VARCHAR(20),
	PT VARCHAR(20),
	APTT VARCHAR(20),
	FG VARCHAR(20),
	PIC VARCHAR(20),
	TAT VARCHAR(20),
	TAT2 VARCHAR(20),
	U-PRO VARCHAR(20),
	IGG VARCHAR(20),
	IGA VARCHAR(20),
	IGM VARCHAR(20),
	CRP VARCHAR(20),
	RA VARCHAR(20),
	RF VARCHAR(20),
	C3 VARCHAR(20),
	C4 VARCHAR(20),
	RNP VARCHAR(20),
	SM VARCHAR(20),
	SC170 VARCHAR(20),
	SSA VARCHAR(20),
	SSB VARCHAR(20),
	CENTROMEA VARCHAR(20),
	DNA VARCHAR(20),
	DNA-II VARCHAR(20)
);
INSERT INTO LABORATORY VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
-- NULL
SELECT MAX(EXAMINATION.ANA) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE LABORATORY.CRE < 1.5;
-- ----------sql2------------
SELECT T2.ANA FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID INNER JOIN LABORATORY AS T3 ON T1.ID = T3.ID WHERE T3.CRE < 1.5 ORDER BY T2.ANA DESC LIMIT 1;
",0.100859,SELECT MAX(EXAMINATION.ANA) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE LABORATORY.CRE < 1.5,SELECT T2.ANA FROM PATIENT AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID INNER JOIN LABORATORY AS T3 ON T1.ID = T3.ID WHERE T3.CRE < 1.5 ORDER BY T2.ANA DESC LIMIT 1,
1,1294,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT PATIENT.ID FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.CRE < 1.5 ORDER BY LABORATORY.ACL IGA DESC LIMIT 1;`,,SELECT PATIENT.ID FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.CRE < 1.5 ORDER BY LABORATORY.ACL IGA DESC LIMIT 1;,SELECT T2.ID FROM LABORATORY AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T1.CRE < 1.5 ORDER BY T2.`ACL IGA` DESC LIMIT 1,
2,1294,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT PATIENT.ID FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.CRE < 1.5 ORDER BY LABORATORY.ACL IGA DESC LIMIT 1;`,,SELECT PATIENT.ID FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.CRE < 1.5 ORDER BY LABORATORY.ACL IGA DESC LIMIT 1;,SELECT T2.ID FROM LABORATORY AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T1.CRE < 1.5 ORDER BY T2.`ACL IGA` DESC LIMIT 1,
3,1294,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT PATIENT.ID FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.CRE < 1.5 ORDER BY LABORATORY.ACL IGA DESC LIMIT 1;`,,SELECT PATIENT.ID FROM EXAMINATION INNER JOIN PATIENT ON EXAMINATION.ID = PATIENT.ID INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.CRE < 1.5 ORDER BY LABORATORY.ACL IGA DESC LIMIT 1;,SELECT T2.ID FROM LABORATORY AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T1.CRE < 1.5 ORDER BY T2.`ACL IGA` DESC LIMIT 1,
1,1295,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,SELECT COUNT(*) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE LABORATORY.T-BIL >= 2.0 AND EXAMINATION.`ANA PATTERN` LIKE '%P%',SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` >= 2 AND T3.`ANA PATTERN` LIKE '%P%',
2,1295,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,SELECT COUNT(*) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE LABORATORY.T-BIL >= 2.0 AND EXAMINATION.`ANA PATTERN` LIKE '%P%',SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` >= 2 AND T3.`ANA PATTERN` LIKE '%P%',
3,1295,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,SELECT COUNT(*) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE LABORATORY.T-BIL >= 2.0 AND EXAMINATION.`ANA PATTERN` LIKE '%P%',SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` >= 2 AND T3.`ANA PATTERN` LIKE '%P%',
1,1296,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,SELECT EXAMINATION.ANA FROM EXAMINATION INNER JOIN ( SELECT LABORATORY.ID FROM LABORATORY WHERE LABORATORY.T-BIL < 2.0 ORDER BY LABORATORY.T-BIL DESC LIMIT 1 ) AS SUBQUERY ON EXAMINATION.ID = SUBQUERY.ID,SELECT T3.ANA FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` < 2.0 ORDER BY T2.`T-BIL` DESC LIMIT 1,
2,1296,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,SELECT EXAMINATION.ANA FROM EXAMINATION INNER JOIN ( SELECT LABORATORY.ID FROM LABORATORY WHERE LABORATORY.T-BIL < 2.0 ORDER BY LABORATORY.T-BIL DESC LIMIT 1 ) AS SUBQUERY ON EXAMINATION.ID = SUBQUERY.ID,SELECT T3.ANA FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` < 2.0 ORDER BY T2.`T-BIL` DESC LIMIT 1,
3,1296,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,SELECT EXAMINATION.ANA FROM EXAMINATION INNER JOIN ( SELECT LABORATORY.ID FROM LABORATORY WHERE LABORATORY.T-BIL < 2.0 ORDER BY LABORATORY.T-BIL DESC LIMIT 1 ) AS SUBQUERY ON EXAMINATION.ID = SUBQUERY.ID,SELECT T3.ANA FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` < 2.0 ORDER BY T2.`T-BIL` DESC LIMIT 1,
1,1297,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,SELECT COUNT(*) FROM LABORATORY INNER JOIN EXAMINATION ON LABORATORY.ID = EXAMINATION.ID WHERE LABORATORY.T-CHO >= 250 AND EXAMINATION.KCT = '-',SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T1.ID = T3.ID WHERE T2.`T-CHO` >= 250 AND T3.KCT = '-',
2,1297,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,SELECT COUNT(*) FROM LABORATORY INNER JOIN EXAMINATION ON LABORATORY.ID = EXAMINATION.ID WHERE LABORATORY.T-CHO >= 250 AND EXAMINATION.KCT = '-',SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T1.ID = T3.ID WHERE T2.`T-CHO` >= 250 AND T3.KCT = '-',
3,1297,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,SELECT COUNT(*) FROM LABORATORY INNER JOIN EXAMINATION ON LABORATORY.ID = EXAMINATION.ID WHERE LABORATORY.T-CHO >= 250 AND EXAMINATION.KCT = '-',SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T1.ID = T3.ID WHERE T2.`T-CHO` >= 250 AND T3.KCT = '-',
1,1298,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,SELECT COUNT(*) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE LABORATORY.T-CHO < 250 AND EXAMINATION.`ANA PATTERN` = 'P';,SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T1.ID = T3.ID WHERE T3.`ANA PATTERN` = 'P' AND T2.`T-CHO` < 250,
2,1298,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,SELECT COUNT(*) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE LABORATORY.T-CHO < 250 AND EXAMINATION.`ANA PATTERN` = 'P';,SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T1.ID = T3.ID WHERE T3.`ANA PATTERN` = 'P' AND T2.`T-CHO` < 250,
3,1298,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute LABORATORY__T`,,SELECT COUNT(*) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE LABORATORY.T-CHO < 250 AND EXAMINATION.`ANA PATTERN` = 'P';,SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T1.ID = T3.ID WHERE T3.`ANA PATTERN` = 'P' AND T2.`T-CHO` < 250,
1,1299,True,,0.127917,SELECT COUNT(*) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE LABORATORY.TG < 200 AND EXAMINATION.SYMPTOMS IS NOT NULL;,SELECT COUNT(T1.ID) FROM EXAMINATION AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.TG < 200 AND T1.SYMPTOMS IS NOT NULL,
1,1300,True,,0.0820989999999999,SELECT PATIENT.DIAGNOSIS FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.TG < 200 ORDER BY LABORATORY.TG DESC LIMIT 1,SELECT T1.DIAGNOSIS FROM EXAMINATION AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.TG < 200 ORDER BY T2.TG DESC LIMIT 1,
1,1301,True,,0.1112079999999999,SELECT PATIENT.ID FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE EXAMINATION.THROMBOSIS = 0 AND LABORATORY.CPK < 250,SELECT DISTINCT T1.ID FROM LABORATORY AS T1 INNER JOIN EXAMINATION AS T2 ON T1.ID = T2.ID WHERE T2.THROMBOSIS = 0 AND T1.CPK < 250,
1,1302,True,,0.285821,SELECT COUNT(*) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE LABORATORY.CPK < 250 AND (EXAMINATION.KCT = '+' OR EXAMINATION.RVVT = '+' OR EXAMINATION.LAC = '+'),SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T1.ID = T3.ID WHERE T2.CPK < 250 AND (T3.KCT = '+' OR T3.RVVT = '+' OR T3.LAC = '+'),
1,1303,True,,0.0781719999999999,SELECT PATIENT.BIRTHDAY FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE LABORATORY.GLU > 180 ORDER BY PATIENT.BIRTHDAY ASC LIMIT 1;,SELECT T1.BIRTHDAY FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.GLU > 180 ORDER BY T1.BIRTHDAY ASC LIMIT 1,
1,1304,True,,0.255142,SELECT COUNT(*) FROM LABORATORY INNER JOIN EXAMINATION ON LABORATORY.ID = EXAMINATION.ID WHERE LABORATORY.GLU < 180 AND EXAMINATION.THROMBOSIS = 0,SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T1.ID = T3.ID WHERE T2.GLU < 180 AND T3.THROMBOSIS = 0,
1,1305,True,,0.199566,SELECT COUNT(*) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.ADMISSION = '+' AND LABORATORY.WBC BETWEEN 3.5 AND 9.0,SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.WBC BETWEEN 3.5 AND 9 AND T1.ADMISSION = '+',
1,1306,True,,0.2159049999999999,SELECT COUNT(DISTINCT PATIENT.ID) FROM PATIENT INNER JOIN EXAMINATION ON PATIENT.ID = EXAMINATION.ID INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE EXAMINATION.DIAGNOSIS = 'SLE' AND LABORATORY.WBC BETWEEN 3.5 AND 9.0,SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.DIAGNOSIS = 'SLE' AND T2.WBC BETWEEN 3.5 AND 9,
1,1307,True,,0.155664,SELECT PATIENT.ID FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE (LABORATORY.RBC <= 3.5 OR LABORATORY.RBC >= 6.0) AND PATIENT.ADMISSION = '-';,SELECT DISTINCT T1.ID FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE (T2.RBC <= 3.5 OR T2.RBC >= 6) AND T1.ADMISSION = '-',
1,1308,True,,0.103673,SELECT COUNT(*) FROM LABORATORY INNER JOIN EXAMINATION ON LABORATORY.ID = EXAMINATION.ID WHERE LABORATORY.PLT > 100 AND LABORATORY.PLT < 400 AND EXAMINATION.DIAGNOSIS IS NOT NULL;,SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.PLT > 100 AND T2.PLT < 400 AND T1.DIAGNOSIS IS NOT NULL,
1,1309,True,,0.129107,SELECT LABORATORY.PLT FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.DIAGNOSIS = 'MCTD' AND LABORATORY.PLT > 100 AND LABORATORY.PLT < 400,SELECT T2.PLT FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T1.DIAGNOSIS = 'MCTD' AND T2.PLT BETWEEN 100 AND 400,
1,1310,True,,0.104839,SELECT AVG(LABORATORY.PT) FROM PATIENT INNER JOIN LABORATORY ON PATIENT.ID = LABORATORY.ID WHERE PATIENT.SEX = 'M' AND LABORATORY.PT < 14,SELECT AVG(T2.PT) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID WHERE T2.PT < 14 AND T1.SEX = 'M',
1,1311,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PATIENT__ID`,,"SELECT COUNT(DISTINCT PATIENT.ID) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE EXAMINATION.THROMBOSIS IN (1, 2) AND LABORATORY.PT < 14",SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T1.ID = T3.ID WHERE T2.PT < 14 AND T3.THROMBOSIS < 3 AND T3.THROMBOSIS > 0,
2,1311,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PATIENT__ID`,,"SELECT COUNT(DISTINCT PATIENT.ID) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE EXAMINATION.THROMBOSIS IN (1, 2) AND LABORATORY.PT < 14",SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T1.ID = T3.ID WHERE T2.PT < 14 AND T3.THROMBOSIS < 3 AND T3.THROMBOSIS > 0,
3,1311,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute PATIENT__ID`,,"SELECT COUNT(DISTINCT PATIENT.ID) FROM EXAMINATION INNER JOIN LABORATORY ON EXAMINATION.ID = LABORATORY.ID WHERE EXAMINATION.THROMBOSIS IN (1, 2) AND LABORATORY.PT < 14",SELECT COUNT(T1.ID) FROM PATIENT AS T1 INNER JOIN LABORATORY AS T2 ON T1.ID = T2.ID INNER JOIN EXAMINATION AS T3 ON T1.ID = T3.ID WHERE T2.PT < 14 AND T3.THROMBOSIS < 3 AND T3.THROMBOSIS > 0,
1,1312,True,,0.057557,SELECT MAJOR.MAJOR_NAME FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MEMBER.FIRST_NAME = 'ANGELA' AND MEMBER.LAST_NAME = 'SANDERS',SELECT T2.MAJOR_NAME FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T1.LINK_TO_MAJOR = T2.MAJOR_ID WHERE T1.FIRST_NAME = 'ANGELA' AND T1.LAST_NAME = 'SANDERS',
1,1313,True,,0.049396,SELECT COUNT(*) FROM MAJOR INNER JOIN MEMBER ON MAJOR.MAJOR_ID = MEMBER.LINK_TO_MAJOR WHERE MAJOR.COLLEGE = 'COLLEGE OF ENGINEERING';,SELECT COUNT(T1.MEMBER_ID) FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T1.LINK_TO_MAJOR = T2.MAJOR_ID WHERE T2.COLLEGE = 'COLLEGE OF ENGINEERING',
1,1314,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EVENT (
	EVENT_ID VARCHAR(20),
	EVENT_NAME VARCHAR(20),
	EVENT_DATE VARCHAR(20),
	TYPE VARCHAR(20),
	NOTES VARCHAR(20),
	LOCATION VARCHAR(20),
	STATUS VARCHAR(20)
);
INSERT INTO EVENT VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MAJOR (
	MAJOR_ID VARCHAR(20),
	MAJOR_NAME VARCHAR(20),
	DEPARTMENT VARCHAR(20),
	COLLEGE VARCHAR(20)
);
INSERT INTO MAJOR VALUES ('2147483648', '2147483648', 'ART AND DESIGN', '2147483648');
CREATE TABLE ZIP_CODE (
	ZIP_CODE VARCHAR(20),
	TYPE VARCHAR(20),
	CITY VARCHAR(20),
	COUNTY VARCHAR(20),
	STATE VARCHAR(20),
	SHORT_STATE VARCHAR(20)
);
INSERT INTO ZIP_CODE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ATTENDANCE (
	LINK_TO_EVENT VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO ATTENDANCE VALUES ('2147483648', '2147483648');
CREATE TABLE BUDGET (
	BUDGET_ID VARCHAR(20),
	CATEGORY VARCHAR(20),
	SPENT VARCHAR(20),
	REMAINING VARCHAR(20),
	AMOUNT VARCHAR(20),
	EVENT_STATUS VARCHAR(20),
	LINK_TO_EVENT VARCHAR(20)
);
INSERT INTO BUDGET VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE EXPENSE (
	EXPENSE_ID VARCHAR(20),
	EXPENSE_DESCRIPTION VARCHAR(20),
	EXPENSE_DATE VARCHAR(20),
	COST VARCHAR(20),
	APPROVED VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20),
	LINK_TO_BUDGET VARCHAR(20)
);
INSERT INTO EXPENSE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE INCOME (
	INCOME_ID VARCHAR(20),
	DATE_RECEIVED VARCHAR(20),
	AMOUNT VARCHAR(20),
	SOURCE VARCHAR(20),
	NOTES VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO INCOME VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR(20),
	FIRST_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	EMAIL VARCHAR(20),
	POSITION VARCHAR(20),
	T_SHIRT_SIZE VARCHAR(20),
	PHONE VARCHAR(20),
	ZIP VARCHAR(20),
	LINK_TO_MAJOR VARCHAR(20)
);
INSERT INTO MEMBER VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
-- 2147483648, 2147483648
SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.DEPARTMENT = 'ART AND DESIGN';
-- ----------sql2------------
SELECT T1.FIRST_NAME, T1.LAST_NAME FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T1.LINK_TO_MAJOR = T2.MAJOR_ID WHERE T2.DEPARTMENT = 'ART AND DESIGN DEPARTMENT';
",0.045048,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.DEPARTMENT = 'ART AND DESIGN';","SELECT T1.FIRST_NAME, T1.LAST_NAME FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T1.LINK_TO_MAJOR = T2.MAJOR_ID WHERE T2.DEPARTMENT = 'ART AND DESIGN DEPARTMENT'",
1,1315,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT COUNT(*) FROM ATTENDANCE INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER'`,,SELECT COUNT(*) FROM ATTENDANCE INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER',SELECT COUNT(T1.EVENT_ID) FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.EVENT_NAME = 'WOMEN''S SOCCER',
2,1315,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT COUNT(*) FROM ATTENDANCE INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER'`,,SELECT COUNT(*) FROM ATTENDANCE INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER',SELECT COUNT(T1.EVENT_ID) FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.EVENT_NAME = 'WOMEN''S SOCCER',
3,1315,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT COUNT(*) FROM ATTENDANCE INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER'`,,SELECT COUNT(*) FROM ATTENDANCE INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER',SELECT COUNT(T1.EVENT_ID) FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.EVENT_NAME = 'WOMEN''S SOCCER',
1,1316,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT MEMBER.PHONE FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER';`,,SELECT MEMBER.PHONE FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER';,SELECT T3.PHONE FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN MEMBER AS T3 ON T2.LINK_TO_MEMBER = T3.MEMBER_ID WHERE T1.EVENT_NAME = 'WOMEN''S SOCCER',
2,1316,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT MEMBER.PHONE FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER';`,,SELECT MEMBER.PHONE FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER';,SELECT T3.PHONE FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN MEMBER AS T3 ON T2.LINK_TO_MEMBER = T3.MEMBER_ID WHERE T1.EVENT_NAME = 'WOMEN''S SOCCER',
3,1316,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT MEMBER.PHONE FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER';`,,SELECT MEMBER.PHONE FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER';,SELECT T3.PHONE FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN MEMBER AS T3 ON T2.LINK_TO_MEMBER = T3.MEMBER_ID WHERE T1.EVENT_NAME = 'WOMEN''S SOCCER',
1,1317,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT COUNT(*) FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER' AND MEMBER.T_SHIRT_SIZE = 'MEDIUM'`,,SELECT COUNT(*) FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER' AND MEMBER.T_SHIRT_SIZE = 'MEDIUM',SELECT COUNT(T1.EVENT_ID) FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN MEMBER AS T3 ON T2.LINK_TO_MEMBER = T3.MEMBER_ID WHERE T1.EVENT_NAME = 'WOMEN''S SOCCER' AND T3.T_SHIRT_SIZE = 'MEDIUM',
2,1317,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT COUNT(*) FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER' AND MEMBER.T_SHIRT_SIZE = 'MEDIUM'`,,SELECT COUNT(*) FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER' AND MEMBER.T_SHIRT_SIZE = 'MEDIUM',SELECT COUNT(T1.EVENT_ID) FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN MEMBER AS T3 ON T2.LINK_TO_MEMBER = T3.MEMBER_ID WHERE T1.EVENT_NAME = 'WOMEN''S SOCCER' AND T3.T_SHIRT_SIZE = 'MEDIUM',
3,1317,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT COUNT(*) FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER' AND MEMBER.T_SHIRT_SIZE = 'MEDIUM'`,,SELECT COUNT(*) FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER' AND MEMBER.T_SHIRT_SIZE = 'MEDIUM',SELECT COUNT(T1.EVENT_ID) FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN MEMBER AS T3 ON T2.LINK_TO_MEMBER = T3.MEMBER_ID WHERE T1.EVENT_NAME = 'WOMEN''S SOCCER' AND T3.T_SHIRT_SIZE = 'MEDIUM',
1,1318,True,,0.0466279999999999,SELECT EVENT.EVENT_NAME FROM ATTENDANCE INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID GROUP BY EVENT.EVENT_ID ORDER BY COUNT(ATTENDANCE.LINK_TO_EVENT) DESC LIMIT 1,SELECT T1.EVENT_NAME FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT GROUP BY T1.EVENT_NAME ORDER BY COUNT(T2.LINK_TO_EVENT) DESC LIMIT 1,
1,1319,ERROR,"NotImplementedError: {'like': ['T1__POSITION', {'literal': 'VICE PRESIDENT'}]}",,SELECT MAJOR.COLLEGE FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MEMBER.POSITION = 'VICE PRESIDENT',SELECT T2.COLLEGE FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T1.LINK_TO_MAJOR = T2.MAJOR_ID WHERE T1.POSITION LIKE 'VICE PRESIDENT',
2,1319,ERROR,"NotImplementedError: {'like': ['T1__POSITION', {'literal': 'VICE PRESIDENT'}]}",,SELECT MAJOR.COLLEGE FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MEMBER.POSITION = 'VICE PRESIDENT',SELECT T2.COLLEGE FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T1.LINK_TO_MAJOR = T2.MAJOR_ID WHERE T1.POSITION LIKE 'VICE PRESIDENT',
3,1319,ERROR,"NotImplementedError: {'like': ['T1__POSITION', {'literal': 'VICE PRESIDENT'}]}",,SELECT MAJOR.COLLEGE FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MEMBER.POSITION = 'VICE PRESIDENT',SELECT T2.COLLEGE FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T1.LINK_TO_MAJOR = T2.MAJOR_ID WHERE T1.POSITION LIKE 'VICE PRESIDENT',
1,1320,True,,0.0837,SELECT EVENT.EVENT_NAME FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE MEMBER.FIRST_NAME = 'MAYA' AND MEMBER.LAST_NAME = 'MCLEAN';,SELECT T1.EVENT_NAME FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN MEMBER AS T3 ON T2.LINK_TO_MEMBER = T3.MEMBER_ID WHERE T3.FIRST_NAME = 'MAYA' AND T3.LAST_NAME = 'MCLEAN',
1,1321,ERROR,NotImplementedError: {'year': 'EVENT__EVENT_DATE'},,SELECT COUNT(*) FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE MEMBER.FIRST_NAME = 'SACHA' AND MEMBER.LAST_NAME = 'HARRISON' AND YEAR(EVENT.EVENT_DATE) = 2019,"SELECT COUNT(T1.EVENT_ID) FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN MEMBER AS T3 ON T2.LINK_TO_MEMBER = T3.MEMBER_ID WHERE T3.FIRST_NAME = 'SACHA' AND T3.LAST_NAME = 'HARRISON' AND SUBSTR(T1.EVENT_DATE, 1, 4) = '2019'",
2,1321,ERROR,NotImplementedError: {'year': 'EVENT__EVENT_DATE'},,SELECT COUNT(*) FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE MEMBER.FIRST_NAME = 'SACHA' AND MEMBER.LAST_NAME = 'HARRISON' AND YEAR(EVENT.EVENT_DATE) = 2019,"SELECT COUNT(T1.EVENT_ID) FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN MEMBER AS T3 ON T2.LINK_TO_MEMBER = T3.MEMBER_ID WHERE T3.FIRST_NAME = 'SACHA' AND T3.LAST_NAME = 'HARRISON' AND SUBSTR(T1.EVENT_DATE, 1, 4) = '2019'",
3,1321,ERROR,NotImplementedError: {'year': 'EVENT__EVENT_DATE'},,SELECT COUNT(*) FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE MEMBER.FIRST_NAME = 'SACHA' AND MEMBER.LAST_NAME = 'HARRISON' AND YEAR(EVENT.EVENT_DATE) = 2019,"SELECT COUNT(T1.EVENT_ID) FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN MEMBER AS T3 ON T2.LINK_TO_MEMBER = T3.MEMBER_ID WHERE T3.FIRST_NAME = 'SACHA' AND T3.LAST_NAME = 'HARRISON' AND SUBSTR(T1.EVENT_DATE, 1, 4) = '2019'",
1,1322,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute DF1__TYPE`,,SELECT COUNT(*) FROM ( SELECT EVENT.EVENT_ID FROM ATTENDANCE INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID GROUP BY EVENT.EVENT_ID HAVING COUNT(ATTENDANCE.LINK_TO_MEMBER) > 10 ) AS DF1 WHERE DF1.TYPE = 'MEETING',SELECT T1.EVENT_NAME FROM EVENT AS T1  INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT GROUP BY T1.EVENT_ID  HAVING COUNT(T2.LINK_TO_EVENT) > 10 EXCEPT SELECT T1.EVENT_NAME  FROM EVENT AS T1  WHERE T1.TYPE = 'MEETING',
2,1322,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute DF1__TYPE`,,SELECT COUNT(*) FROM ( SELECT EVENT.EVENT_ID FROM ATTENDANCE INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID GROUP BY EVENT.EVENT_ID HAVING COUNT(ATTENDANCE.LINK_TO_MEMBER) > 10 ) AS DF1 WHERE DF1.TYPE = 'MEETING',SELECT T1.EVENT_NAME FROM EVENT AS T1  INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT GROUP BY T1.EVENT_ID  HAVING COUNT(T2.LINK_TO_EVENT) > 10 EXCEPT SELECT T1.EVENT_NAME  FROM EVENT AS T1  WHERE T1.TYPE = 'MEETING',
3,1322,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute DF1__TYPE`,,SELECT COUNT(*) FROM ( SELECT EVENT.EVENT_ID FROM ATTENDANCE INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID GROUP BY EVENT.EVENT_ID HAVING COUNT(ATTENDANCE.LINK_TO_MEMBER) > 10 ) AS DF1 WHERE DF1.TYPE = 'MEETING',SELECT T1.EVENT_NAME FROM EVENT AS T1  INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT GROUP BY T1.EVENT_ID  HAVING COUNT(T2.LINK_TO_EVENT) > 10 EXCEPT SELECT T1.EVENT_NAME  FROM EVENT AS T1  WHERE T1.TYPE = 'MEETING',
1,1323,ERROR,"CorrelatedQueryError: Not supported feature: CorrelatedQueryError {'and': [{'gt': [{'count': 'ATTENDANCE__LINK_TO_MEMBER'}, 20]}, {'neq': ['EVENT__TYPE', {'literal': 'FUNDRAISERS'}]}]}",,SELECT EVENT.EVENT_NAME FROM EVENT INNER JOIN ATTENDANCE ON EVENT.EVENT_ID = ATTENDANCE.LINK_TO_EVENT GROUP BY EVENT.EVENT_ID HAVING COUNT(ATTENDANCE.LINK_TO_MEMBER) > 20 AND EVENT.TYPE != 'FUNDRAISERS',SELECT T1.EVENT_NAME FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT GROUP BY T1.EVENT_ID HAVING COUNT(T2.LINK_TO_EVENT) > 20 EXCEPT SELECT T1.EVENT_NAME FROM EVENT AS T1  WHERE T1.TYPE = 'FUNDRAISER',
2,1323,ERROR,"CorrelatedQueryError: Not supported feature: CorrelatedQueryError {'and': [{'gt': [{'count': 'ATTENDANCE__LINK_TO_MEMBER'}, 20]}, {'neq': ['EVENT__TYPE', {'literal': 'FUNDRAISERS'}]}]}",,SELECT EVENT.EVENT_NAME FROM EVENT INNER JOIN ATTENDANCE ON EVENT.EVENT_ID = ATTENDANCE.LINK_TO_EVENT GROUP BY EVENT.EVENT_ID HAVING COUNT(ATTENDANCE.LINK_TO_MEMBER) > 20 AND EVENT.TYPE != 'FUNDRAISERS',SELECT T1.EVENT_NAME FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT GROUP BY T1.EVENT_ID HAVING COUNT(T2.LINK_TO_EVENT) > 20 EXCEPT SELECT T1.EVENT_NAME FROM EVENT AS T1  WHERE T1.TYPE = 'FUNDRAISER',
3,1323,ERROR,"CorrelatedQueryError: Not supported feature: CorrelatedQueryError {'and': [{'gt': [{'count': 'ATTENDANCE__LINK_TO_MEMBER'}, 20]}, {'neq': ['EVENT__TYPE', {'literal': 'FUNDRAISERS'}]}]}",,SELECT EVENT.EVENT_NAME FROM EVENT INNER JOIN ATTENDANCE ON EVENT.EVENT_ID = ATTENDANCE.LINK_TO_EVENT GROUP BY EVENT.EVENT_ID HAVING COUNT(ATTENDANCE.LINK_TO_MEMBER) > 20 AND EVENT.TYPE != 'FUNDRAISERS',SELECT T1.EVENT_NAME FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT GROUP BY T1.EVENT_ID HAVING COUNT(T2.LINK_TO_EVENT) > 20 EXCEPT SELECT T1.EVENT_NAME FROM EVENT AS T1  WHERE T1.TYPE = 'FUNDRAISER',
1,1324,ERROR,NotImplementedError: {'year': 'EVENT__EVENT_DATE'},,SELECT COUNT(EVENT.EVENT_ID) / COUNT(DISTINCT EVENT.EVENT_ID) FROM EVENT INNER JOIN ATTENDANCE ON EVENT.EVENT_ID = ATTENDANCE.LINK_TO_EVENT WHERE EVENT.TYPE = 'MEETING' AND YEAR(EVENT.EVENT_DATE) = 2020,"SELECT CAST(COUNT(T2.LINK_TO_EVENT) AS REAL) / COUNT(DISTINCT T2.LINK_TO_EVENT) FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE SUBSTR(T1.EVENT_DATE, 1, 4) = '2020' AND T1.TYPE = 'MEETING'",
2,1324,ERROR,NotImplementedError: {'year': 'EVENT__EVENT_DATE'},,SELECT COUNT(EVENT.EVENT_ID) / COUNT(DISTINCT EVENT.EVENT_ID) FROM EVENT INNER JOIN ATTENDANCE ON EVENT.EVENT_ID = ATTENDANCE.LINK_TO_EVENT WHERE EVENT.TYPE = 'MEETING' AND YEAR(EVENT.EVENT_DATE) = 2020,"SELECT CAST(COUNT(T2.LINK_TO_EVENT) AS REAL) / COUNT(DISTINCT T2.LINK_TO_EVENT) FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE SUBSTR(T1.EVENT_DATE, 1, 4) = '2020' AND T1.TYPE = 'MEETING'",
3,1324,ERROR,NotImplementedError: {'year': 'EVENT__EVENT_DATE'},,SELECT COUNT(EVENT.EVENT_ID) / COUNT(DISTINCT EVENT.EVENT_ID) FROM EVENT INNER JOIN ATTENDANCE ON EVENT.EVENT_ID = ATTENDANCE.LINK_TO_EVENT WHERE EVENT.TYPE = 'MEETING' AND YEAR(EVENT.EVENT_DATE) = 2020,"SELECT CAST(COUNT(T2.LINK_TO_EVENT) AS REAL) / COUNT(DISTINCT T2.LINK_TO_EVENT) FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE SUBSTR(T1.EVENT_DATE, 1, 4) = '2020' AND T1.TYPE = 'MEETING'",
1,1325,True,,0.021446,SELECT EXPENSE.EXPENSE_DESCRIPTION FROM EXPENSE ORDER BY EXPENSE.COST DESC LIMIT 1,SELECT EXPENSE_DESCRIPTION FROM EXPENSE ORDER BY COST DESC LIMIT 1,
1,1326,True,,0.050193,SELECT COUNT(*) FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'ENVIRONMENTAL ENGINEERING';,SELECT COUNT(T1.MEMBER_ID) FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T1.LINK_TO_MAJOR = T2.MAJOR_ID WHERE T2.MAJOR_NAME = 'ENVIRONMENTAL ENGINEERING',
1,1327,True,,0.067183,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'LAUGH OUT LOUD'","SELECT T1.FIRST_NAME, T1.LAST_NAME FROM MEMBER AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER INNER JOIN EVENT AS T3 ON T2.LINK_TO_EVENT = T3.EVENT_ID WHERE T3.EVENT_NAME = 'LAUGH OUT LOUD'",
1,1328,True,,0.0442069999999999,SELECT MEMBER.LAST_NAME FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'LAW AND CONSTITUTIONAL STUDIES';,SELECT T1.LAST_NAME FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T1.LINK_TO_MAJOR = T2.MAJOR_ID WHERE T2.MAJOR_NAME = 'LAW AND CONSTITUTIONAL STUDIES',
1,1329,True,,0.069378,SELECT ZIP_CODE.COUNTY FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE MEMBER.FIRST_NAME = 'SHERRI' AND MEMBER.LAST_NAME = 'RAMSEY',SELECT T2.COUNTY FROM MEMBER AS T1 INNER JOIN ZIP_CODE AS T2 ON T1.ZIP = T2.ZIP_CODE WHERE T1.FIRST_NAME = 'SHERRI' AND T1.LAST_NAME = 'RAMSEY',
1,1330,True,,0.064082,SELECT MAJOR.COLLEGE FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MEMBER.FIRST_NAME = 'TYLER' AND MEMBER.LAST_NAME = 'HEWITT',SELECT T2.COLLEGE FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T1.LINK_TO_MAJOR = T2.MAJOR_ID WHERE T1.FIRST_NAME = 'TYLER' AND T1.LAST_NAME = 'HEWITT',
1,1331,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EVENT (
	EVENT_ID VARCHAR(20),
	EVENT_NAME VARCHAR(20),
	EVENT_DATE VARCHAR(20),
	TYPE VARCHAR(20),
	NOTES VARCHAR(20),
	LOCATION VARCHAR(20),
	STATUS VARCHAR(20)
);
INSERT INTO EVENT VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MAJOR (
	MAJOR_ID VARCHAR(20),
	MAJOR_NAME VARCHAR(20),
	DEPARTMENT VARCHAR(20),
	COLLEGE VARCHAR(20)
);
INSERT INTO MAJOR VALUES ('2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ZIP_CODE (
	ZIP_CODE VARCHAR(20),
	TYPE VARCHAR(20),
	CITY VARCHAR(20),
	COUNTY VARCHAR(20),
	STATE VARCHAR(20),
	SHORT_STATE VARCHAR(20)
);
INSERT INTO ZIP_CODE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ATTENDANCE (
	LINK_TO_EVENT VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO ATTENDANCE VALUES ('2147483648', '2147483648');
CREATE TABLE BUDGET (
	BUDGET_ID VARCHAR(20),
	CATEGORY VARCHAR(20),
	SPENT VARCHAR(20),
	REMAINING VARCHAR(20),
	AMOUNT VARCHAR(20),
	EVENT_STATUS VARCHAR(20),
	LINK_TO_EVENT VARCHAR(20)
);
INSERT INTO BUDGET VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE EXPENSE (
	EXPENSE_ID VARCHAR(20),
	EXPENSE_DESCRIPTION VARCHAR(20),
	EXPENSE_DATE VARCHAR(20),
	COST VARCHAR(20),
	APPROVED VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20),
	LINK_TO_BUDGET VARCHAR(20)
);
INSERT INTO EXPENSE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE INCOME (
	INCOME_ID VARCHAR(20),
	DATE_RECEIVED VARCHAR(20),
	AMOUNT VARCHAR(20),
	SOURCE VARCHAR(20),
	NOTES VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO INCOME VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR(20),
	FIRST_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	EMAIL VARCHAR(20),
	POSITION VARCHAR(20),
	T_SHIRT_SIZE VARCHAR(20),
	PHONE VARCHAR(20),
	ZIP VARCHAR(20),
	LINK_TO_MAJOR VARCHAR(20)
);
INSERT INTO MEMBER VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '7257204160846255026', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
-- NULL
SELECT SUM(INCOME.AMOUNT) FROM MEMBER INNER JOIN INCOME ON MEMBER.MEMBER_ID = INCOME.LINK_TO_MEMBER WHERE MEMBER.POSITION = 'VICE PRESIDENT';
-- ----------sql2------------
SELECT T2.AMOUNT FROM MEMBER AS T1 INNER JOIN INCOME AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T1.POSITION = 'VICE PRESIDENT';
",0.050318,SELECT SUM(INCOME.AMOUNT) FROM MEMBER INNER JOIN INCOME ON MEMBER.MEMBER_ID = INCOME.LINK_TO_MEMBER WHERE MEMBER.POSITION = 'VICE PRESIDENT',SELECT T2.AMOUNT FROM MEMBER AS T1 INNER JOIN INCOME AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T1.POSITION = 'VICE PRESIDENT',
1,1332,ERROR,"NotImplementedError: {'substr': ['T1__EVENT_DATE', 6, 2]}",,SELECT BUDGET.SPENT FROM EVENT INNER JOIN BUDGET ON EVENT.EVENT_ID = BUDGET.LINK_TO_EVENT WHERE EVENT.EVENT_NAME = 'SEPTEMBER MEETING' AND BUDGET.CATEGORY = 'FOOD',"SELECT T2.SPENT FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.EVENT_NAME = 'SEPTEMBER MEETING' AND T2.CATEGORY = 'FOOD' AND SUBSTR(T1.EVENT_DATE, 6, 2) = '09'",
2,1332,ERROR,"NotImplementedError: {'substr': ['T1__EVENT_DATE', 6, 2]}",,SELECT BUDGET.SPENT FROM EVENT INNER JOIN BUDGET ON EVENT.EVENT_ID = BUDGET.LINK_TO_EVENT WHERE EVENT.EVENT_NAME = 'SEPTEMBER MEETING' AND BUDGET.CATEGORY = 'FOOD',"SELECT T2.SPENT FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.EVENT_NAME = 'SEPTEMBER MEETING' AND T2.CATEGORY = 'FOOD' AND SUBSTR(T1.EVENT_DATE, 6, 2) = '09'",
3,1332,ERROR,"NotImplementedError: {'substr': ['T1__EVENT_DATE', 6, 2]}",,SELECT BUDGET.SPENT FROM EVENT INNER JOIN BUDGET ON EVENT.EVENT_ID = BUDGET.LINK_TO_EVENT WHERE EVENT.EVENT_NAME = 'SEPTEMBER MEETING' AND BUDGET.CATEGORY = 'FOOD',"SELECT T2.SPENT FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.EVENT_NAME = 'SEPTEMBER MEETING' AND T2.CATEGORY = 'FOOD' AND SUBSTR(T1.EVENT_DATE, 6, 2) = '09'",
1,1333,True,,0.04722,"SELECT ZIP_CODE.CITY, ZIP_CODE.STATE FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE MEMBER.POSITION = 'PRESIDENT';","SELECT T2.CITY, T2.STATE FROM MEMBER AS T1 INNER JOIN ZIP_CODE AS T2 ON T1.ZIP = T2.ZIP_CODE WHERE T1.POSITION = 'PRESIDENT'",
1,1334,True,,0.046523,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE ZIP_CODE.STATE = 'ILLINOIS';","SELECT T1.FIRST_NAME, T1.LAST_NAME FROM MEMBER AS T1 INNER JOIN ZIP_CODE AS T2 ON T1.ZIP = T2.ZIP_CODE WHERE T2.STATE = 'ILLINOIS'",
1,1335,ERROR,"NotImplementedError: {'substr': ['T1__EVENT_DATE', 6, 2]}",,SELECT SUM(BUDGET.SPENT) FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'SEPTEMBER MEETING' AND BUDGET.CATEGORY = 'ADVERTISEMENT';,"SELECT T2.SPENT FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.EVENT_NAME = 'SEPTEMBER MEETING' AND T2.CATEGORY = 'ADVERTISEMENT' AND SUBSTR(T1.EVENT_DATE, 6, 2) = '09'",
2,1335,ERROR,"NotImplementedError: {'substr': ['T1__EVENT_DATE', 6, 2]}",,SELECT SUM(BUDGET.SPENT) FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'SEPTEMBER MEETING' AND BUDGET.CATEGORY = 'ADVERTISEMENT';,"SELECT T2.SPENT FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.EVENT_NAME = 'SEPTEMBER MEETING' AND T2.CATEGORY = 'ADVERTISEMENT' AND SUBSTR(T1.EVENT_DATE, 6, 2) = '09'",
3,1335,ERROR,"NotImplementedError: {'substr': ['T1__EVENT_DATE', 6, 2]}",,SELECT SUM(BUDGET.SPENT) FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'SEPTEMBER MEETING' AND BUDGET.CATEGORY = 'ADVERTISEMENT';,"SELECT T2.SPENT FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.EVENT_NAME = 'SEPTEMBER MEETING' AND T2.CATEGORY = 'ADVERTISEMENT' AND SUBSTR(T1.EVENT_DATE, 6, 2) = '09'",
1,1336,True,,0.105721,"SELECT MAJOR.DEPARTMENT FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MEMBER.LAST_NAME IN ('PIERCE', 'GUIDI')",SELECT T2.DEPARTMENT FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T1.LINK_TO_MAJOR = T2.MAJOR_ID WHERE T1.LAST_NAME = 'PIERCE' OR T1.LAST_NAME = 'GUIDI',
1,1337,True,,0.053275,SELECT SUM(BUDGET.AMOUNT) FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'OCTOBER SPEAKER',SELECT SUM(T2.AMOUNT) FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.EVENT_NAME = 'OCTOBER SPEAKER',
1,1338,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXPENSE__LINK_TO_EVENT`,,SELECT EXPENSE.APPROVED FROM EXPENSE INNER JOIN EVENT ON EXPENSE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'OCTOBER MEETING' AND EVENT.EVENT_DATE = '2019-10-08';,SELECT T3.APPROVED FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET WHERE T1.EVENT_NAME = 'OCTOBER MEETING' AND T1.EVENT_DATE LIKE '2019-10-08%',
2,1338,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXPENSE__LINK_TO_EVENT`,,SELECT EXPENSE.APPROVED FROM EXPENSE INNER JOIN EVENT ON EXPENSE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'OCTOBER MEETING' AND EVENT.EVENT_DATE = '2019-10-08';,SELECT T3.APPROVED FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET WHERE T1.EVENT_NAME = 'OCTOBER MEETING' AND T1.EVENT_DATE LIKE '2019-10-08%',
3,1338,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXPENSE__LINK_TO_EVENT`,,SELECT EXPENSE.APPROVED FROM EXPENSE INNER JOIN EVENT ON EXPENSE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'OCTOBER MEETING' AND EVENT.EVENT_DATE = '2019-10-08';,SELECT T3.APPROVED FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET WHERE T1.EVENT_NAME = 'OCTOBER MEETING' AND T1.EVENT_DATE LIKE '2019-10-08%',
1,1339,ERROR,"NotImplementedError: {'strftime': [{'literal': '%M'}, 'EXPENSE__EXPENSE_DATE']}",,"SELECT AVG(EXPENSE.COST) FROM EXPENSE INNER JOIN MEMBER ON EXPENSE.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE MEMBER.FIRST_NAME = 'ELIJAH' AND MEMBER.LAST_NAME = 'ALLEN' AND (STRFTIME('%M', EXPENSE.EXPENSE_DATE) = '09' OR STRFTIME('%M', EXPENSE.EXPENSE_DATE) = '10')","SELECT AVG(T2.COST) FROM MEMBER AS T1 INNER JOIN EXPENSE AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T1.LAST_NAME = 'ALLEN' AND T1.FIRST_NAME = 'ELIJAH' AND (SUBSTR(T2.EXPENSE_DATE, 6, 2) = '09' OR SUBSTR(T2.EXPENSE_DATE, 6, 2) = '10')",
2,1339,ERROR,"NotImplementedError: {'strftime': [{'literal': '%M'}, 'EXPENSE__EXPENSE_DATE']}",,"SELECT AVG(EXPENSE.COST) FROM EXPENSE INNER JOIN MEMBER ON EXPENSE.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE MEMBER.FIRST_NAME = 'ELIJAH' AND MEMBER.LAST_NAME = 'ALLEN' AND (STRFTIME('%M', EXPENSE.EXPENSE_DATE) = '09' OR STRFTIME('%M', EXPENSE.EXPENSE_DATE) = '10')","SELECT AVG(T2.COST) FROM MEMBER AS T1 INNER JOIN EXPENSE AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T1.LAST_NAME = 'ALLEN' AND T1.FIRST_NAME = 'ELIJAH' AND (SUBSTR(T2.EXPENSE_DATE, 6, 2) = '09' OR SUBSTR(T2.EXPENSE_DATE, 6, 2) = '10')",
3,1339,ERROR,"NotImplementedError: {'strftime': [{'literal': '%M'}, 'EXPENSE__EXPENSE_DATE']}",,"SELECT AVG(EXPENSE.COST) FROM EXPENSE INNER JOIN MEMBER ON EXPENSE.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE MEMBER.FIRST_NAME = 'ELIJAH' AND MEMBER.LAST_NAME = 'ALLEN' AND (STRFTIME('%M', EXPENSE.EXPENSE_DATE) = '09' OR STRFTIME('%M', EXPENSE.EXPENSE_DATE) = '10')","SELECT AVG(T2.COST) FROM MEMBER AS T1 INNER JOIN EXPENSE AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T1.LAST_NAME = 'ALLEN' AND T1.FIRST_NAME = 'ELIJAH' AND (SUBSTR(T2.EXPENSE_DATE, 6, 2) = '09' OR SUBSTR(T2.EXPENSE_DATE, 6, 2) = '10')",
1,1340,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,"SELECT (SELECT SUM(BUDGET.SPENT) FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE STRFTIME('%Y', EVENT.EVENT_DATE) = '2019') - (SELECT SUM(BUDGET.SPENT) FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE STRFTIME('%Y', EVENT.EVENT_DATE) = '2020') AS DIFFERENCE","SELECT SUM(CASE WHEN SUBSTR(T1.EVENT_DATE, 1, 4) = '2019' THEN T2.SPENT ELSE 0 END) - SUM(CASE WHEN SUBSTR(T1.EVENT_DATE, 1, 4) = '2020' THEN T2.SPENT ELSE 0 END) AS NUM FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT",
2,1340,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,"SELECT (SELECT SUM(BUDGET.SPENT) FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE STRFTIME('%Y', EVENT.EVENT_DATE) = '2019') - (SELECT SUM(BUDGET.SPENT) FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE STRFTIME('%Y', EVENT.EVENT_DATE) = '2020') AS DIFFERENCE","SELECT SUM(CASE WHEN SUBSTR(T1.EVENT_DATE, 1, 4) = '2019' THEN T2.SPENT ELSE 0 END) - SUM(CASE WHEN SUBSTR(T1.EVENT_DATE, 1, 4) = '2020' THEN T2.SPENT ELSE 0 END) AS NUM FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT",
3,1340,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,"SELECT (SELECT SUM(BUDGET.SPENT) FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE STRFTIME('%Y', EVENT.EVENT_DATE) = '2019') - (SELECT SUM(BUDGET.SPENT) FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE STRFTIME('%Y', EVENT.EVENT_DATE) = '2020') AS DIFFERENCE","SELECT SUM(CASE WHEN SUBSTR(T1.EVENT_DATE, 1, 4) = '2019' THEN T2.SPENT ELSE 0 END) - SUM(CASE WHEN SUBSTR(T1.EVENT_DATE, 1, 4) = '2020' THEN T2.SPENT ELSE 0 END) AS NUM FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT",
1,1341,True,,0.02634,SELECT EVENT.LOCATION FROM EVENT WHERE EVENT.EVENT_NAME = 'SPRING BUDGET REVIEW';,SELECT LOCATION FROM EVENT WHERE EVENT_NAME = 'SPRING BUDGET REVIEW',
1,1342,True,,0.044478,SELECT EXPENSE.COST FROM EXPENSE WHERE EXPENSE.EXPENSE_DESCRIPTION = 'POSTERS' AND EXPENSE.EXPENSE_DATE = '2019-09-04',SELECT COST FROM EXPENSE WHERE EXPENSE_DESCRIPTION = 'POSTERS' AND EXPENSE_DATE = '2019-09-04',
1,1343,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute REMAINING`,,SELECT BUDGET.REMAINING FROM BUDGET WHERE BUDGET.CATEGORY = 'FOOD' ORDER BY BUDGET.AMOUNT DESC LIMIT 1,SELECT REMAINING FROM BUDGET WHERE CATEGORY = 'FOOD' AND AMOUNT = ( SELECT MAX(AMOUNT) FROM BUDGET WHERE CATEGORY = 'FOOD' ),
2,1343,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute REMAINING`,,SELECT BUDGET.REMAINING FROM BUDGET WHERE BUDGET.CATEGORY = 'FOOD' ORDER BY BUDGET.AMOUNT DESC LIMIT 1,SELECT REMAINING FROM BUDGET WHERE CATEGORY = 'FOOD' AND AMOUNT = ( SELECT MAX(AMOUNT) FROM BUDGET WHERE CATEGORY = 'FOOD' ),
3,1343,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute REMAINING`,,SELECT BUDGET.REMAINING FROM BUDGET WHERE BUDGET.CATEGORY = 'FOOD' ORDER BY BUDGET.AMOUNT DESC LIMIT 1,SELECT REMAINING FROM BUDGET WHERE CATEGORY = 'FOOD' AND AMOUNT = ( SELECT MAX(AMOUNT) FROM BUDGET WHERE CATEGORY = 'FOOD' ),
1,1344,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EVENT__NOTES`,,SELECT EVENT.NOTES FROM INCOME WHERE INCOME.SOURCE = 'FUNDRAISING' AND INCOME.DATE_RECEIVED = '2019-09-14',SELECT NOTES FROM INCOME WHERE SOURCE = 'FUNDRAISING' AND DATE_RECEIVED = '2019-09-14',
2,1344,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EVENT__NOTES`,,SELECT EVENT.NOTES FROM INCOME WHERE INCOME.SOURCE = 'FUNDRAISING' AND INCOME.DATE_RECEIVED = '2019-09-14',SELECT NOTES FROM INCOME WHERE SOURCE = 'FUNDRAISING' AND DATE_RECEIVED = '2019-09-14',
3,1344,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EVENT__NOTES`,,SELECT EVENT.NOTES FROM INCOME WHERE INCOME.SOURCE = 'FUNDRAISING' AND INCOME.DATE_RECEIVED = '2019-09-14',SELECT NOTES FROM INCOME WHERE SOURCE = 'FUNDRAISING' AND DATE_RECEIVED = '2019-09-14',
1,1345,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EVENT (
	EVENT_ID VARCHAR(20),
	EVENT_NAME VARCHAR(20),
	EVENT_DATE VARCHAR(20),
	TYPE VARCHAR(20),
	NOTES VARCHAR(20),
	LOCATION VARCHAR(20),
	STATUS VARCHAR(20)
);
INSERT INTO EVENT VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MAJOR (
	MAJOR_ID VARCHAR(20),
	MAJOR_NAME VARCHAR(20),
	DEPARTMENT VARCHAR(20),
	COLLEGE VARCHAR(20)
);
INSERT INTO MAJOR VALUES ('2147483648', NULL, NULL, 'COLLEGE OF HUMANITIES AND SOCIAL SCIENCES');
CREATE TABLE ZIP_CODE (
	ZIP_CODE VARCHAR(20),
	TYPE VARCHAR(20),
	CITY VARCHAR(20),
	COUNTY VARCHAR(20),
	STATE VARCHAR(20),
	SHORT_STATE VARCHAR(20)
);
INSERT INTO ZIP_CODE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ATTENDANCE (
	LINK_TO_EVENT VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO ATTENDANCE VALUES ('2147483648', '2147483648');
CREATE TABLE BUDGET (
	BUDGET_ID VARCHAR(20),
	CATEGORY VARCHAR(20),
	SPENT VARCHAR(20),
	REMAINING VARCHAR(20),
	AMOUNT VARCHAR(20),
	EVENT_STATUS VARCHAR(20),
	LINK_TO_EVENT VARCHAR(20)
);
INSERT INTO BUDGET VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE EXPENSE (
	EXPENSE_ID VARCHAR(20),
	EXPENSE_DESCRIPTION VARCHAR(20),
	EXPENSE_DATE VARCHAR(20),
	COST VARCHAR(20),
	APPROVED VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20),
	LINK_TO_BUDGET VARCHAR(20)
);
INSERT INTO EXPENSE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE INCOME (
	INCOME_ID VARCHAR(20),
	DATE_RECEIVED VARCHAR(20),
	AMOUNT VARCHAR(20),
	SOURCE VARCHAR(20),
	NOTES VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO INCOME VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR(20),
	FIRST_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	EMAIL VARCHAR(20),
	POSITION VARCHAR(20),
	T_SHIRT_SIZE VARCHAR(20),
	PHONE VARCHAR(20),
	ZIP VARCHAR(20),
	LINK_TO_MAJOR VARCHAR(20)
);
INSERT INTO MEMBER VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
-- 1
SELECT COUNT(*) FROM MAJOR WHERE COLLEGE = 'COLLEGE OF HUMANITIES AND SOCIAL SCIENCES';
-- ----------sql2------------
-- 0
SELECT COUNT(MAJOR_NAME) FROM MAJOR WHERE COLLEGE = 'COLLEGE OF HUMANITIES AND SOCIAL SCIENCES';
",0.031131,SELECT COUNT(*) FROM MAJOR WHERE COLLEGE = 'COLLEGE OF HUMANITIES AND SOCIAL SCIENCES';,SELECT COUNT(MAJOR_NAME) FROM MAJOR WHERE COLLEGE = 'COLLEGE OF HUMANITIES AND SOCIAL SCIENCES',
1,1346,True,,0.045651,SELECT MEMBER.PHONE FROM MEMBER WHERE MEMBER.FIRST_NAME = 'CARLO' AND MEMBER.LAST_NAME = 'JACOBS';,SELECT PHONE FROM MEMBER WHERE FIRST_NAME = 'CARLO' AND LAST_NAME = 'JACOBS',
1,1347,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT ZIP_CODE.COUNTY FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE MEMBER.FIRST_NAME = 'ADELA' AND MEMBER.LAST_NAME = 'O\'GALLAGHER'`,,SELECT ZIP_CODE.COUNTY FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE MEMBER.FIRST_NAME = 'ADELA' AND MEMBER.LAST_NAME = 'O\'GALLAGHER',SELECT T2.COUNTY FROM MEMBER AS T1 INNER JOIN ZIP_CODE AS T2 ON T1.ZIP = T2.ZIP_CODE WHERE T1.FIRST_NAME = 'ADELA' AND T1.LAST_NAME = 'O''GALLAGHER',
2,1347,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT ZIP_CODE.COUNTY FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE MEMBER.FIRST_NAME = 'ADELA' AND MEMBER.LAST_NAME = 'O\'GALLAGHER'`,,SELECT ZIP_CODE.COUNTY FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE MEMBER.FIRST_NAME = 'ADELA' AND MEMBER.LAST_NAME = 'O\'GALLAGHER',SELECT T2.COUNTY FROM MEMBER AS T1 INNER JOIN ZIP_CODE AS T2 ON T1.ZIP = T2.ZIP_CODE WHERE T1.FIRST_NAME = 'ADELA' AND T1.LAST_NAME = 'O''GALLAGHER',
3,1347,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT ZIP_CODE.COUNTY FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE MEMBER.FIRST_NAME = 'ADELA' AND MEMBER.LAST_NAME = 'O\'GALLAGHER'`,,SELECT ZIP_CODE.COUNTY FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE MEMBER.FIRST_NAME = 'ADELA' AND MEMBER.LAST_NAME = 'O\'GALLAGHER',SELECT T2.COUNTY FROM MEMBER AS T1 INNER JOIN ZIP_CODE AS T2 ON T1.ZIP = T2.ZIP_CODE WHERE T1.FIRST_NAME = 'ADELA' AND T1.LAST_NAME = 'O''GALLAGHER',
1,1348,True,,0.067538,SELECT COUNT(*) FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'NOVEMBER MEETING' AND BUDGET.REMAINING < 0,SELECT COUNT(T2.EVENT_ID) FROM BUDGET AS T1 INNER JOIN EVENT AS T2 ON T1.LINK_TO_EVENT = T2.EVENT_ID WHERE T2.EVENT_NAME = 'NOVEMBER MEETING' AND T1.REMAINING < 0,
1,1349,True,,0.053072,SELECT SUM(BUDGET.AMOUNT) FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'SEPTEMBER SPEAKER',SELECT SUM(T1.AMOUNT) FROM BUDGET AS T1 INNER JOIN EVENT AS T2 ON T1.LINK_TO_EVENT = T2.EVENT_ID WHERE T2.EVENT_NAME = 'SEPTEMBER SPEAKER',
1,1350,True,,0.07656,"SELECT EVENT.STATUS FROM EXPENSE INNER JOIN BUDGET ON EXPENSE.LINK_TO_BUDGET = BUDGET.BUDGET_ID INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EXPENSE.EXPENSE_DESCRIPTION = 'POST CARDS, POSTERS' AND EXPENSE.EXPENSE_DATE = '2019-8-20'","SELECT T1.EVENT_STATUS FROM BUDGET AS T1 INNER JOIN EXPENSE AS T2 ON T1.BUDGET_ID = T2.LINK_TO_BUDGET WHERE T2.EXPENSE_DESCRIPTION = 'POST CARDS, POSTERS' AND T2.EXPENSE_DATE = '2019-08-20'",
1,1351,True,,0.06408,SELECT MAJOR.MAJOR_NAME FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MEMBER.FIRST_NAME = 'BRENT' AND MEMBER.LAST_NAME = 'THOMASON',SELECT T2.MAJOR_NAME FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T1.LINK_TO_MAJOR = T2.MAJOR_ID WHERE T1.FIRST_NAME = 'BRENT' AND T1.LAST_NAME = 'THOMASON',
1,1352,True,,0.071304,SELECT COUNT(*) FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'BUSINESS' AND MEMBER.T_SHIRT_SIZE = 'MEDIUM',SELECT COUNT(T1.MEMBER_ID) FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T1.LINK_TO_MAJOR = T2.MAJOR_ID WHERE T2.MAJOR_NAME = 'BUSINESS' AND T1.T_SHIRT_SIZE = 'MEDIUM',
1,1353,True,,0.065535,SELECT ZIP_CODE.TYPE FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE MEMBER.LAST_NAME = 'NIELSON' AND MEMBER.FIRST_NAME = 'CHRISTOF',SELECT T2.TYPE FROM MEMBER AS T1 INNER JOIN ZIP_CODE AS T2 ON T1.ZIP = T2.ZIP_CODE WHERE T1.FIRST_NAME = 'CHRISTOF' AND T1.LAST_NAME = 'NIELSON',
1,1354,True,,0.045042,SELECT MAJOR.MAJOR_NAME FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MEMBER.POSITION = 'VICE PRESIDENT',SELECT T2.MAJOR_NAME FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T1.LINK_TO_MAJOR = T2.MAJOR_ID WHERE T1.POSITION = 'VICE PRESIDENT',
1,1355,True,,0.065766,SELECT ZIP_CODE.STATE FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE MEMBER.FIRST_NAME = 'SACHA' AND MEMBER.LAST_NAME = 'HARRISON';,SELECT T2.STATE FROM MEMBER AS T1 INNER JOIN ZIP_CODE AS T2 ON T1.ZIP = T2.ZIP_CODE WHERE T1.FIRST_NAME = 'SACHA' AND T1.LAST_NAME = 'HARRISON',
1,1356,True,,0.045187,SELECT MAJOR.DEPARTMENT FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MEMBER.POSITION = 'PRESIDENT';,SELECT T2.DEPARTMENT FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T1.LINK_TO_MAJOR = T2.MAJOR_ID WHERE T1.POSITION = 'PRESIDENT',
1,1357,True,,0.075728,SELECT INCOME.DATE_RECEIVED FROM INCOME INNER JOIN MEMBER ON INCOME.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE MEMBER.FIRST_NAME = 'CONNOR' AND MEMBER.LAST_NAME = 'HILTON' AND INCOME.SOURCE = 'DUES';,SELECT T2.DATE_RECEIVED FROM MEMBER AS T1 INNER JOIN INCOME AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T1.FIRST_NAME = 'CONNOR' AND T1.LAST_NAME = 'HILTON' AND T2.SOURCE = 'DUES',
1,1358,True,,0.051782,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME FROM INCOME INNER JOIN MEMBER ON INCOME.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE INCOME.SOURCE = 'DUES' ORDER BY INCOME.DATE_RECEIVED LIMIT 1","SELECT T1.FIRST_NAME, T1.LAST_NAME FROM MEMBER AS T1 INNER JOIN INCOME AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T2.SOURCE = 'DUES' ORDER BY T2.DATE_RECEIVED LIMIT 1",
1,1359,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT SUM(BUDGET.AMOUNT) FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE BUDGET.CATEGORY = 'ADVERTISEMENT' AND EVENT.EVENT_NAME = 'YEARLY KICKOFF') / (SELECT SUM(BUDGET.AMOUNT) FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE BUDGET.CATEGORY = 'ADVERTISEMENT' AND EVENT.EVENT_NAME = 'OCTOBER MEETING') AS TIMES,SELECT CAST(SUM(CASE WHEN T2.EVENT_NAME = 'YEARLY KICKOFF' THEN T1.AMOUNT ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.EVENT_NAME = 'OCTOBER MEETING' THEN T1.AMOUNT ELSE 0 END) FROM BUDGET AS T1 INNER JOIN EVENT AS T2 ON T1.LINK_TO_EVENT = T2.EVENT_ID WHERE T1.CATEGORY = 'ADVERTISEMENT' AND T2.TYPE = 'MEETING',
2,1359,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT SUM(BUDGET.AMOUNT) FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE BUDGET.CATEGORY = 'ADVERTISEMENT' AND EVENT.EVENT_NAME = 'YEARLY KICKOFF') / (SELECT SUM(BUDGET.AMOUNT) FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE BUDGET.CATEGORY = 'ADVERTISEMENT' AND EVENT.EVENT_NAME = 'OCTOBER MEETING') AS TIMES,SELECT CAST(SUM(CASE WHEN T2.EVENT_NAME = 'YEARLY KICKOFF' THEN T1.AMOUNT ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.EVENT_NAME = 'OCTOBER MEETING' THEN T1.AMOUNT ELSE 0 END) FROM BUDGET AS T1 INNER JOIN EVENT AS T2 ON T1.LINK_TO_EVENT = T2.EVENT_ID WHERE T1.CATEGORY = 'ADVERTISEMENT' AND T2.TYPE = 'MEETING',
3,1359,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT SUM(BUDGET.AMOUNT) FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE BUDGET.CATEGORY = 'ADVERTISEMENT' AND EVENT.EVENT_NAME = 'YEARLY KICKOFF') / (SELECT SUM(BUDGET.AMOUNT) FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE BUDGET.CATEGORY = 'ADVERTISEMENT' AND EVENT.EVENT_NAME = 'OCTOBER MEETING') AS TIMES,SELECT CAST(SUM(CASE WHEN T2.EVENT_NAME = 'YEARLY KICKOFF' THEN T1.AMOUNT ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.EVENT_NAME = 'OCTOBER MEETING' THEN T1.AMOUNT ELSE 0 END) FROM BUDGET AS T1 INNER JOIN EVENT AS T2 ON T1.LINK_TO_EVENT = T2.EVENT_ID WHERE T1.CATEGORY = 'ADVERTISEMENT' AND T2.TYPE = 'MEETING',
1,1360,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(BUDGET.AMOUNT) FILTER (WHERE BUDGET.CATEGORY = 'PARKING') AS REAL) * 100) / SUM(BUDGET.AMOUNT) AS PERCENTAGE FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'NOVEMBER SPEAKER',SELECT CAST(SUM(CASE WHEN T1.CATEGORY = 'PARKING' THEN T1.AMOUNT ELSE 0 END) AS REAL) * 100 / SUM(T1.AMOUNT) FROM BUDGET AS T1 INNER JOIN EVENT AS T2 ON T1.LINK_TO_EVENT = T2.EVENT_ID WHERE T2.EVENT_NAME = 'NOVEMBER SPEAKER',
2,1360,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(BUDGET.AMOUNT) FILTER (WHERE BUDGET.CATEGORY = 'PARKING') AS REAL) * 100) / SUM(BUDGET.AMOUNT) AS PERCENTAGE FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'NOVEMBER SPEAKER',SELECT CAST(SUM(CASE WHEN T1.CATEGORY = 'PARKING' THEN T1.AMOUNT ELSE 0 END) AS REAL) * 100 / SUM(T1.AMOUNT) FROM BUDGET AS T1 INNER JOIN EVENT AS T2 ON T1.LINK_TO_EVENT = T2.EVENT_ID WHERE T2.EVENT_NAME = 'NOVEMBER SPEAKER',
3,1360,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(BUDGET.AMOUNT) FILTER (WHERE BUDGET.CATEGORY = 'PARKING') AS REAL) * 100) / SUM(BUDGET.AMOUNT) AS PERCENTAGE FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'NOVEMBER SPEAKER',SELECT CAST(SUM(CASE WHEN T1.CATEGORY = 'PARKING' THEN T1.AMOUNT ELSE 0 END) AS REAL) * 100 / SUM(T1.AMOUNT) FROM BUDGET AS T1 INNER JOIN EVENT AS T2 ON T1.LINK_TO_EVENT = T2.EVENT_ID WHERE T2.EVENT_NAME = 'NOVEMBER SPEAKER',
1,1361,True,,0.032467,SELECT SUM(EXPENSE.COST) FROM EXPENSE WHERE EXPENSE.EXPENSE_DESCRIPTION = 'PIZZA',SELECT SUM(COST) FROM EXPENSE WHERE EXPENSE_DESCRIPTION = 'PIZZA',
1,1362,True,,0.051579,SELECT COUNT(DISTINCT ZIP_CODE.CITY) FROM ZIP_CODE WHERE ZIP_CODE.COUNTY = 'ORANGE COUNTY' AND ZIP_CODE.STATE = 'VIRGINIA',SELECT COUNT(CITY) FROM ZIP_CODE WHERE COUNTY = 'ORANGE COUNTY' AND STATE = 'VIRGINIA',
1,1363,True,,0.025267,SELECT MAJOR.DEPARTMENT FROM MAJOR WHERE MAJOR.COLLEGE = 'COLLEGE OF HUMANITIES AND SOCIAL SCIENCES',SELECT DEPARTMENT FROM MAJOR WHERE COLLEGE = 'COLLEGE OF HUMANITIES AND SOCIAL SCIENCES',
1,1364,True,,0.068251,"SELECT ZIP_CODE.CITY, ZIP_CODE.COUNTY, ZIP_CODE.STATE FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE MEMBER.FIRST_NAME = 'AMY' AND MEMBER.LAST_NAME = 'FIRTH'","SELECT T2.CITY, T2.COUNTY, T2.STATE FROM MEMBER AS T1 INNER JOIN ZIP_CODE AS T2 ON T1.ZIP = T2.ZIP_CODE WHERE T1.FIRST_NAME = 'AMY' AND T1.LAST_NAME = 'FIRTH'",
1,1365,True,,0.04026,SELECT EXPENSE.EXPENSE_DESCRIPTION FROM EXPENSE INNER JOIN ( SELECT BUDGET_ID FROM BUDGET ORDER BY REMAINING ASC LIMIT 1 ) AS DF1 ON EXPENSE.LINK_TO_BUDGET = DF1.BUDGET_ID,SELECT T2.EXPENSE_DESCRIPTION FROM BUDGET AS T1 INNER JOIN EXPENSE AS T2 ON T1.BUDGET_ID = T2.LINK_TO_BUDGET ORDER BY T1.REMAINING LIMIT 1,
1,1366,False,,,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'OCTOBER MEETING';",SELECT DISTINCT T3.MEMBER_ID FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN MEMBER AS T3 ON T2.LINK_TO_MEMBER = T3.MEMBER_ID WHERE T1.EVENT_NAME = 'OCTOBER MEETING',
1,1367,True,,0.05404,SELECT MAJOR.COLLEGE FROM MAJOR INNER JOIN MEMBER ON MAJOR.MAJOR_ID = MEMBER.LINK_TO_MAJOR GROUP BY MAJOR.COLLEGE ORDER BY COUNT(*) DESC LIMIT 1,SELECT T2.COLLEGE FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T1.LINK_TO_MAJOR = T2.MAJOR_ID GROUP BY T2.MAJOR_ID ORDER BY COUNT(T2.COLLEGE) DESC LIMIT 1,
1,1368,True,,0.045494,SELECT MAJOR.MAJOR_NAME FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MEMBER.PHONE = '809-555-3360',SELECT T2.MAJOR_NAME FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T1.LINK_TO_MAJOR = T2.MAJOR_ID WHERE T1.PHONE = '809-555-3360',
1,1369,True,,0.042006,SELECT EVENT.EVENT_NAME FROM EVENT INNER JOIN BUDGET ON EVENT.EVENT_ID = BUDGET.LINK_TO_EVENT ORDER BY BUDGET.AMOUNT DESC LIMIT 1,SELECT T2.EVENT_NAME FROM BUDGET AS T1 INNER JOIN EVENT AS T2 ON T1.LINK_TO_EVENT = T2.EVENT_ID ORDER BY T1.AMOUNT DESC LIMIT 1,
1,1370,False,,,SELECT EXPENSE.EXPENSE_DESCRIPTION FROM EXPENSE INNER JOIN MEMBER ON EXPENSE.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE MEMBER.POSITION = 'VICE PRESIDENT',"SELECT T2.EXPENSE_ID, T2.EXPENSE_DESCRIPTION FROM MEMBER AS T1 INNER JOIN EXPENSE AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T1.POSITION = 'VICE PRESIDENT'",
1,1371,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT COUNT(*) FROM ATTENDANCE INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER';`,,SELECT COUNT(*) FROM ATTENDANCE INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER';,SELECT COUNT(T2.LINK_TO_MEMBER) FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.EVENT_NAME = 'WOMEN''S SOCCER',
2,1371,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT COUNT(*) FROM ATTENDANCE INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER';`,,SELECT COUNT(*) FROM ATTENDANCE INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER';,SELECT COUNT(T2.LINK_TO_MEMBER) FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.EVENT_NAME = 'WOMEN''S SOCCER',
3,1371,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT COUNT(*) FROM ATTENDANCE INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER';`,,SELECT COUNT(*) FROM ATTENDANCE INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER';,SELECT COUNT(T2.LINK_TO_MEMBER) FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.EVENT_NAME = 'WOMEN''S SOCCER',
1,1372,True,,0.066983,SELECT INCOME.DATE_RECEIVED FROM MEMBER INNER JOIN INCOME ON MEMBER.MEMBER_ID = INCOME.LINK_TO_MEMBER WHERE MEMBER.FIRST_NAME = 'CASEY' AND MEMBER.LAST_NAME = 'MASON',SELECT T2.DATE_RECEIVED FROM MEMBER AS T1 INNER JOIN INCOME AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T1.FIRST_NAME = 'CASEY' AND T1.LAST_NAME = 'MASON',
1,1373,True,,0.051068,SELECT COUNT(MEMBER.MEMBER_ID) FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE ZIP_CODE.STATE = 'MARYLAND';,SELECT COUNT(T2.MEMBER_ID) FROM ZIP_CODE AS T1 INNER JOIN MEMBER AS T2 ON T1.ZIP_CODE = T2.ZIP WHERE T1.STATE = 'MARYLAND',
1,1374,True,,0.048895,SELECT COUNT(*) FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE MEMBER.PHONE = '954-555-6240',SELECT COUNT(T2.LINK_TO_EVENT) FROM MEMBER AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T1.PHONE = '954-555-6240',
1,1375,True,,0.044938,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.DEPARTMENT = 'SCHOOL OF APPLIED SCIENCES, TECHNOLOGY AND EDUCATION';","SELECT T1.FIRST_NAME, T1.LAST_NAME FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T1.LINK_TO_MAJOR = T2.MAJOR_ID WHERE T2.DEPARTMENT = 'SCHOOL OF APPLIED SCIENCES, TECHNOLOGY AND EDUCATION'",
1,1376,True,,0.0480439999999999,SELECT EVENT.EVENT_NAME FROM EVENT INNER JOIN BUDGET ON EVENT.EVENT_ID = BUDGET.LINK_TO_EVENT WHERE EVENT.STATUS = 'CLOSED' ORDER BY (BUDGET.SPENT / BUDGET.AMOUNT) DESC LIMIT 1,SELECT T2.EVENT_NAME FROM BUDGET AS T1 INNER JOIN EVENT AS T2 ON T1.LINK_TO_EVENT = T2.EVENT_ID WHERE T2.STATUS = 'CLOSED' ORDER BY T1.SPENT / T1.AMOUNT DESC LIMIT 1,
1,1377,True,,0.030752,SELECT COUNT(*) FROM MEMBER WHERE POSITION = 'PRESIDENT';,SELECT COUNT(MEMBER_ID) FROM MEMBER WHERE POSITION = 'PRESIDENT',
1,1378,True,,0.028146,SELECT MAX(BUDGET.SPENT) FROM BUDGET,SELECT MAX(SPENT) FROM BUDGET,
1,1379,ERROR,NotImplementedError: {'year': 'EVENT_DATE'},,SELECT COUNT(*) FROM EVENT WHERE TYPE = 'MEETING' AND YEAR(EVENT_DATE) = 2020,"SELECT COUNT(EVENT_ID) FROM EVENT WHERE TYPE = 'MEETING' AND SUBSTR(EVENT_DATE, 1, 4) = '2020'",
2,1379,ERROR,NotImplementedError: {'year': 'EVENT_DATE'},,SELECT COUNT(*) FROM EVENT WHERE TYPE = 'MEETING' AND YEAR(EVENT_DATE) = 2020,"SELECT COUNT(EVENT_ID) FROM EVENT WHERE TYPE = 'MEETING' AND SUBSTR(EVENT_DATE, 1, 4) = '2020'",
3,1379,ERROR,NotImplementedError: {'year': 'EVENT_DATE'},,SELECT COUNT(*) FROM EVENT WHERE TYPE = 'MEETING' AND YEAR(EVENT_DATE) = 2020,"SELECT COUNT(EVENT_ID) FROM EVENT WHERE TYPE = 'MEETING' AND SUBSTR(EVENT_DATE, 1, 4) = '2020'",
1,1380,True,,0.032595,SELECT SUM(BUDGET.SPENT) FROM BUDGET WHERE BUDGET.CATEGORY = 'FOOD',SELECT SUM(SPENT) FROM BUDGET WHERE CATEGORY = 'FOOD',
1,1381,True,,0.066857,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME FROM MEMBER INNER JOIN ATTENDANCE ON MEMBER.MEMBER_ID = ATTENDANCE.LINK_TO_MEMBER GROUP BY MEMBER.MEMBER_ID HAVING COUNT(ATTENDANCE.LINK_TO_EVENT) > 7","SELECT T1.FIRST_NAME, T1.LAST_NAME FROM MEMBER AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER GROUP BY T2.LINK_TO_MEMBER HAVING COUNT(T2.LINK_TO_EVENT) > 7",
1,1382,True,,0.1099199999999999,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME FROM MEMBER INNER JOIN ATTENDANCE ON MEMBER.MEMBER_ID = ATTENDANCE.LINK_TO_MEMBER INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'INTERIOR DESIGN' AND EVENT.EVENT_NAME = 'COMMUNITY THEATER'","SELECT T2.FIRST_NAME, T2.LAST_NAME FROM MAJOR AS T1 INNER JOIN MEMBER AS T2 ON T1.MAJOR_ID = T2.LINK_TO_MAJOR INNER JOIN ATTENDANCE AS T3 ON T2.MEMBER_ID = T3.LINK_TO_MEMBER INNER JOIN EVENT AS T4 ON T3.LINK_TO_EVENT = T4.EVENT_ID WHERE T4.EVENT_NAME = 'COMMUNITY THEATER' AND T1.MAJOR_NAME = 'INTERIOR DESIGN'",
1,1383,True,,0.067224,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE ZIP_CODE.CITY = 'GEORGETOWN' AND ZIP_CODE.STATE = 'SOUTH CAROLINA'","SELECT T1.FIRST_NAME, T1.LAST_NAME FROM MEMBER AS T1 INNER JOIN ZIP_CODE AS T2 ON T1.ZIP = T2.ZIP_CODE WHERE T2.CITY = 'GEORGETOWN' AND T2.STATE = 'SOUTH CAROLINA'",
1,1384,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EVENT (
	EVENT_ID VARCHAR(20),
	EVENT_NAME VARCHAR(20),
	EVENT_DATE VARCHAR(20),
	TYPE VARCHAR(20),
	NOTES VARCHAR(20),
	LOCATION VARCHAR(20),
	STATUS VARCHAR(20)
);
INSERT INTO EVENT VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MAJOR (
	MAJOR_ID VARCHAR(20),
	MAJOR_NAME VARCHAR(20),
	DEPARTMENT VARCHAR(20),
	COLLEGE VARCHAR(20)
);
INSERT INTO MAJOR VALUES ('2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ZIP_CODE (
	ZIP_CODE VARCHAR(20),
	TYPE VARCHAR(20),
	CITY VARCHAR(20),
	COUNTY VARCHAR(20),
	STATE VARCHAR(20),
	SHORT_STATE VARCHAR(20)
);
INSERT INTO ZIP_CODE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ATTENDANCE (
	LINK_TO_EVENT VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO ATTENDANCE VALUES ('2147483648', '2147483648');
CREATE TABLE BUDGET (
	BUDGET_ID VARCHAR(20),
	CATEGORY VARCHAR(20),
	SPENT VARCHAR(20),
	REMAINING VARCHAR(20),
	AMOUNT VARCHAR(20),
	EVENT_STATUS VARCHAR(20),
	LINK_TO_EVENT VARCHAR(20)
);
INSERT INTO BUDGET VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE EXPENSE (
	EXPENSE_ID VARCHAR(20),
	EXPENSE_DESCRIPTION VARCHAR(20),
	EXPENSE_DATE VARCHAR(20),
	COST VARCHAR(20),
	APPROVED VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20),
	LINK_TO_BUDGET VARCHAR(20)
);
INSERT INTO EXPENSE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE INCOME (
	INCOME_ID VARCHAR(20),
	DATE_RECEIVED VARCHAR(20),
	AMOUNT VARCHAR(20),
	SOURCE VARCHAR(20),
	NOTES VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO INCOME VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR(20),
	FIRST_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	EMAIL VARCHAR(20),
	POSITION VARCHAR(20),
	T_SHIRT_SIZE VARCHAR(20),
	PHONE VARCHAR(20),
	ZIP VARCHAR(20),
	LINK_TO_MAJOR VARCHAR(20)
);
INSERT INTO MEMBER VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
-- 0
SELECT COUNT(INCOME.AMOUNT) FROM INCOME INNER JOIN MEMBER ON INCOME.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE MEMBER.LAST_NAME = 'GILMOUR' AND MEMBER.FIRST_NAME = 'GRANT';
-- ----------sql2------------
SELECT T2.AMOUNT FROM MEMBER AS T1 INNER JOIN INCOME AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T1.FIRST_NAME = 'GRANT' AND T1.LAST_NAME = 'GILMOUR';
",0.069276,SELECT COUNT(INCOME.AMOUNT) FROM INCOME INNER JOIN MEMBER ON INCOME.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE MEMBER.LAST_NAME = 'GILMOUR' AND MEMBER.FIRST_NAME = 'GRANT',SELECT T2.AMOUNT FROM MEMBER AS T1 INNER JOIN INCOME AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T1.FIRST_NAME = 'GRANT' AND T1.LAST_NAME = 'GILMOUR',
1,1385,True,,0.046159,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME FROM MEMBER INNER JOIN INCOME ON MEMBER.MEMBER_ID = INCOME.LINK_TO_MEMBER WHERE INCOME.AMOUNT > 40","SELECT T1.FIRST_NAME, T1.LAST_NAME FROM MEMBER AS T1 INNER JOIN INCOME AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T2.AMOUNT > 40",
1,1386,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EVENT (
	EVENT_ID VARCHAR(20),
	EVENT_NAME VARCHAR(20),
	EVENT_DATE VARCHAR(20),
	TYPE VARCHAR(20),
	NOTES VARCHAR(20),
	LOCATION VARCHAR(20),
	STATUS VARCHAR(20)
);
INSERT INTO EVENT VALUES ('2147483649', 'YEARLY KICKOFF', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MAJOR (
	MAJOR_ID VARCHAR(20),
	MAJOR_NAME VARCHAR(20),
	DEPARTMENT VARCHAR(20),
	COLLEGE VARCHAR(20)
);
INSERT INTO MAJOR VALUES ('2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ZIP_CODE (
	ZIP_CODE VARCHAR(20),
	TYPE VARCHAR(20),
	CITY VARCHAR(20),
	COUNTY VARCHAR(20),
	STATE VARCHAR(20),
	SHORT_STATE VARCHAR(20)
);
INSERT INTO ZIP_CODE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ATTENDANCE (
	LINK_TO_EVENT VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO ATTENDANCE VALUES ('2147483649', '2147483648');
CREATE TABLE BUDGET (
	BUDGET_ID VARCHAR(20),
	CATEGORY VARCHAR(20),
	SPENT VARCHAR(20),
	REMAINING VARCHAR(20),
	AMOUNT VARCHAR(20),
	EVENT_STATUS VARCHAR(20),
	LINK_TO_EVENT VARCHAR(20)
);
INSERT INTO BUDGET VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483649');
CREATE TABLE EXPENSE (
	EXPENSE_ID VARCHAR(20),
	EXPENSE_DESCRIPTION VARCHAR(20),
	EXPENSE_DATE VARCHAR(20),
	COST VARCHAR(20),
	APPROVED VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20),
	LINK_TO_BUDGET VARCHAR(20)
);
INSERT INTO EXPENSE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE INCOME (
	INCOME_ID VARCHAR(20),
	DATE_RECEIVED VARCHAR(20),
	AMOUNT VARCHAR(20),
	SOURCE VARCHAR(20),
	NOTES VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO INCOME VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR(20),
	FIRST_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	EMAIL VARCHAR(20),
	POSITION VARCHAR(20),
	T_SHIRT_SIZE VARCHAR(20),
	PHONE VARCHAR(20),
	ZIP VARCHAR(20),
	LINK_TO_MAJOR VARCHAR(20)
);
INSERT INTO MEMBER VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
-- NULL
SELECT SUM(EXPENSE.COST) FROM EXPENSE INNER JOIN EVENT ON EXPENSE.EXPENSE_ID = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'YEARLY KICKOFF';
-- ----------sql2------------
-- 2147483648
SELECT SUM(T3.COST) FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET WHERE T1.EVENT_NAME = 'YEARLY KICKOFF';
",0.066036,SELECT SUM(EXPENSE.COST) FROM EXPENSE INNER JOIN EVENT ON EXPENSE.EXPENSE_ID = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'YEARLY KICKOFF',SELECT SUM(T3.COST) FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET WHERE T1.EVENT_NAME = 'YEARLY KICKOFF',
1,1387,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EVENT (
	EVENT_ID VARCHAR(20),
	EVENT_NAME VARCHAR(20),
	EVENT_DATE VARCHAR(20),
	TYPE VARCHAR(20),
	NOTES VARCHAR(20),
	LOCATION VARCHAR(20),
	STATUS VARCHAR(20)
);
INSERT INTO EVENT VALUES ('2147483648', 'YEARLY KICKOFF', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MAJOR (
	MAJOR_ID VARCHAR(20),
	MAJOR_NAME VARCHAR(20),
	DEPARTMENT VARCHAR(20),
	COLLEGE VARCHAR(20)
);
INSERT INTO MAJOR VALUES ('2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ZIP_CODE (
	ZIP_CODE VARCHAR(20),
	TYPE VARCHAR(20),
	CITY VARCHAR(20),
	COUNTY VARCHAR(20),
	STATE VARCHAR(20),
	SHORT_STATE VARCHAR(20)
);
INSERT INTO ZIP_CODE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ATTENDANCE (
	LINK_TO_EVENT VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO ATTENDANCE VALUES ('2147483648', '2147483649');
CREATE TABLE BUDGET (
	BUDGET_ID VARCHAR(20),
	CATEGORY VARCHAR(20),
	SPENT VARCHAR(20),
	REMAINING VARCHAR(20),
	AMOUNT VARCHAR(20),
	EVENT_STATUS VARCHAR(20),
	LINK_TO_EVENT VARCHAR(20)
);
INSERT INTO BUDGET VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE EXPENSE (
	EXPENSE_ID VARCHAR(20),
	EXPENSE_DESCRIPTION VARCHAR(20),
	EXPENSE_DATE VARCHAR(20),
	COST VARCHAR(20),
	APPROVED VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20),
	LINK_TO_BUDGET VARCHAR(20)
);
INSERT INTO EXPENSE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483649', '2147483648');
CREATE TABLE INCOME (
	INCOME_ID VARCHAR(20),
	DATE_RECEIVED VARCHAR(20),
	AMOUNT VARCHAR(20),
	SOURCE VARCHAR(20),
	NOTES VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO INCOME VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483649');
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR(20),
	FIRST_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	EMAIL VARCHAR(20),
	POSITION VARCHAR(20),
	T_SHIRT_SIZE VARCHAR(20),
	PHONE VARCHAR(20),
	ZIP VARCHAR(20),
	LINK_TO_MAJOR VARCHAR(20)
);
INSERT INTO MEMBER VALUES ('2147483649', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME FROM MEMBER INNER JOIN BUDGET ON MEMBER.MEMBER_ID = BUDGET.LINK_TO_EVENT INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'YEARLY KICKOFF';
-- ----------sql2------------
-- 2147483648, 2147483648
SELECT T4.FIRST_NAME, T4.LAST_NAME FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET INNER JOIN MEMBER AS T4 ON T3.LINK_TO_MEMBER = T4.MEMBER_ID WHERE T1.EVENT_NAME = 'YEARLY KICKOFF';
",0.099954,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME FROM MEMBER INNER JOIN BUDGET ON MEMBER.MEMBER_ID = BUDGET.LINK_TO_EVENT INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'YEARLY KICKOFF';","SELECT T4.FIRST_NAME, T4.LAST_NAME FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET INNER JOIN MEMBER AS T4 ON T3.LINK_TO_MEMBER = T4.MEMBER_ID WHERE T1.EVENT_NAME = 'YEARLY KICKOFF'",
1,1388,True,,0.051744,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME, INCOME.SOURCE FROM MEMBER INNER JOIN INCOME ON MEMBER.MEMBER_ID = INCOME.LINK_TO_MEMBER ORDER BY INCOME.AMOUNT DESC LIMIT 1","SELECT T1.FIRST_NAME, T1.LAST_NAME, T2.SOURCE FROM MEMBER AS T1 INNER JOIN INCOME AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER GROUP BY T1.FIRST_NAME, T1.LAST_NAME, T2.SOURCE ORDER BY SUM(T2.AMOUNT) DESC LIMIT 1",
1,1389,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXPENSE__LINK_TO_EVENT`,,SELECT EVENT.EVENT_NAME FROM EVENT INNER JOIN EXPENSE ON EVENT.EVENT_ID = EXPENSE.LINK_TO_EVENT ORDER BY EXPENSE.COST ASC LIMIT 1,SELECT T1.EVENT_NAME FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET ORDER BY T3.COST LIMIT 1,
2,1389,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXPENSE__LINK_TO_EVENT`,,SELECT EVENT.EVENT_NAME FROM EVENT INNER JOIN EXPENSE ON EVENT.EVENT_ID = EXPENSE.LINK_TO_EVENT ORDER BY EXPENSE.COST ASC LIMIT 1,SELECT T1.EVENT_NAME FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET ORDER BY T3.COST LIMIT 1,
3,1389,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXPENSE__LINK_TO_EVENT`,,SELECT EVENT.EVENT_NAME FROM EVENT INNER JOIN EXPENSE ON EVENT.EVENT_ID = EXPENSE.LINK_TO_EVENT ORDER BY EXPENSE.COST ASC LIMIT 1,SELECT T1.EVENT_NAME FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET ORDER BY T3.COST LIMIT 1,
1,1390,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXPENSE__LINK_TO_EVENT`,,SELECT (CAST(SUM(EXPENSE.COST) FILTER (WHERE EVENT.EVENT_NAME = 'YEARLY KICKOFF') AS REAL) * 100 / SUM(EXPENSE.COST)) FROM EVENT INNER JOIN EXPENSE ON EVENT.EVENT_ID = EXPENSE.LINK_TO_EVENT,SELECT CAST(SUM(CASE WHEN T1.EVENT_NAME = 'YEARLY KICKOFF' THEN T3.COST ELSE 0 END) AS REAL) * 100 / SUM(T3.COST) FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET,
2,1390,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXPENSE__LINK_TO_EVENT`,,SELECT (CAST(SUM(EXPENSE.COST) FILTER (WHERE EVENT.EVENT_NAME = 'YEARLY KICKOFF') AS REAL) * 100 / SUM(EXPENSE.COST)) FROM EVENT INNER JOIN EXPENSE ON EVENT.EVENT_ID = EXPENSE.LINK_TO_EVENT,SELECT CAST(SUM(CASE WHEN T1.EVENT_NAME = 'YEARLY KICKOFF' THEN T3.COST ELSE 0 END) AS REAL) * 100 / SUM(T3.COST) FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET,
3,1390,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXPENSE__LINK_TO_EVENT`,,SELECT (CAST(SUM(EXPENSE.COST) FILTER (WHERE EVENT.EVENT_NAME = 'YEARLY KICKOFF') AS REAL) * 100 / SUM(EXPENSE.COST)) FROM EVENT INNER JOIN EXPENSE ON EVENT.EVENT_ID = EXPENSE.LINK_TO_EVENT,SELECT CAST(SUM(CASE WHEN T1.EVENT_NAME = 'YEARLY KICKOFF' THEN T3.COST ELSE 0 END) AS REAL) * 100 / SUM(T3.COST) FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET,
1,1391,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT COUNT(*) FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'FINANCE') AS REAL)) / (SELECT COUNT(*) FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'PHYSICS') AS RATIO,SELECT SUM(CASE WHEN MAJOR_NAME = 'FINANCE' THEN 1 ELSE 0 END) / SUM(CASE WHEN MAJOR_NAME = 'PHYSICS' THEN 1 ELSE 0 END) AS RATIO FROM MAJOR,
2,1391,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT COUNT(*) FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'FINANCE') AS REAL)) / (SELECT COUNT(*) FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'PHYSICS') AS RATIO,SELECT SUM(CASE WHEN MAJOR_NAME = 'FINANCE' THEN 1 ELSE 0 END) / SUM(CASE WHEN MAJOR_NAME = 'PHYSICS' THEN 1 ELSE 0 END) AS RATIO FROM MAJOR,
3,1391,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT COUNT(*) FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'FINANCE') AS REAL)) / (SELECT COUNT(*) FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'PHYSICS') AS RATIO,SELECT SUM(CASE WHEN MAJOR_NAME = 'FINANCE' THEN 1 ELSE 0 END) / SUM(CASE WHEN MAJOR_NAME = 'PHYSICS' THEN 1 ELSE 0 END) AS RATIO FROM MAJOR,
1,1392,True,,0.042212,SELECT INCOME.SOURCE FROM INCOME WHERE INCOME.DATE_RECEIVED BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY INCOME.SOURCE ORDER BY SUM(INCOME.AMOUNT) DESC LIMIT 1,SELECT SOURCE FROM INCOME WHERE DATE_RECEIVED BETWEEN '2019-09-01' AND '2019-09-30' ORDER BY SOURCE DESC LIMIT 1,
1,1393,True,,0.027664,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME, MEMBER.EMAIL FROM MEMBER WHERE MEMBER.POSITION = 'SECRETARY'","SELECT FIRST_NAME, LAST_NAME, EMAIL FROM MEMBER WHERE POSITION = 'SECRETARY'",
1,1394,True,,0.04978,SELECT COUNT(*) FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'PHYSICS TEACHING';,SELECT COUNT(T2.MEMBER_ID) FROM MAJOR AS T1 INNER JOIN MEMBER AS T2 ON T1.MAJOR_ID = T2.LINK_TO_MAJOR WHERE T1.MAJOR_NAME = 'PHYSICS TEACHING',
1,1395,ERROR,NotImplementedError: {'year': 'EVENT__EVENT_DATE'},,SELECT COUNT(DISTINCT ATTENDANCE.LINK_TO_MEMBER) FROM ATTENDANCE INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'COMMUNITY THEATER' AND YEAR(EVENT.EVENT_DATE) = 2019,"SELECT COUNT(T2.LINK_TO_MEMBER) FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.EVENT_NAME = 'COMMUNITY THEATER' AND SUBSTR(T1.EVENT_DATE, 1, 4) = '2019'",
2,1395,ERROR,NotImplementedError: {'year': 'EVENT__EVENT_DATE'},,SELECT COUNT(DISTINCT ATTENDANCE.LINK_TO_MEMBER) FROM ATTENDANCE INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'COMMUNITY THEATER' AND YEAR(EVENT.EVENT_DATE) = 2019,"SELECT COUNT(T2.LINK_TO_MEMBER) FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.EVENT_NAME = 'COMMUNITY THEATER' AND SUBSTR(T1.EVENT_DATE, 1, 4) = '2019'",
3,1395,ERROR,NotImplementedError: {'year': 'EVENT__EVENT_DATE'},,SELECT COUNT(DISTINCT ATTENDANCE.LINK_TO_MEMBER) FROM ATTENDANCE INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'COMMUNITY THEATER' AND YEAR(EVENT.EVENT_DATE) = 2019,"SELECT COUNT(T2.LINK_TO_MEMBER) FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.EVENT_NAME = 'COMMUNITY THEATER' AND SUBSTR(T1.EVENT_DATE, 1, 4) = '2019'",
1,1396,True,,0.09466,"SELECT COUNT(ATTENDANCE.LINK_TO_EVENT), MAJOR.MAJOR_NAME FROM MEMBER INNER JOIN ATTENDANCE ON MEMBER.MEMBER_ID = ATTENDANCE.LINK_TO_MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MEMBER.FIRST_NAME = 'LUISA' AND MEMBER.LAST_NAME = 'GUIDI';","SELECT COUNT(T3.LINK_TO_EVENT), T1.MAJOR_NAME FROM MAJOR AS T1 INNER JOIN MEMBER AS T2 ON T1.MAJOR_ID = T2.LINK_TO_MAJOR INNER JOIN ATTENDANCE AS T3 ON T2.MEMBER_ID = T3.LINK_TO_MEMBER WHERE T2.FIRST_NAME = 'LUISA' AND T2.LAST_NAME = 'GUIDI'",
1,1397,True,,0.067853,SELECT AVG(BUDGET.SPENT) FROM BUDGET WHERE BUDGET.CATEGORY = 'FOOD' AND BUDGET.EVENT_STATUS = 'CLOSED',SELECT SUM(SPENT) / COUNT(SPENT) FROM BUDGET WHERE CATEGORY = 'FOOD' AND EVENT_STATUS = 'CLOSED',
1,1398,True,,0.047094,SELECT EVENT.EVENT_NAME FROM EVENT INNER JOIN BUDGET ON EVENT.EVENT_ID = BUDGET.LINK_TO_EVENT WHERE BUDGET.CATEGORY = 'ADVERTISEMENT' ORDER BY BUDGET.SPENT DESC LIMIT 1,SELECT T2.EVENT_NAME FROM BUDGET AS T1 INNER JOIN EVENT AS T2 ON T1.LINK_TO_EVENT = T2.EVENT_ID WHERE T1.CATEGORY = 'ADVERTISEMENT' ORDER BY T1.SPENT DESC LIMIT 1,
1,1399,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT ATTENDANCE.LINK_TO_MEMBER, ATTENDANCE.LINK_TO_EVENT FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE MEMBER.FIRST_NAME = 'MAYA' AND MEMBER.LAST_NAME = 'MCLEAN' AND EVENT.EVENT_NAME = 'WOMEN'S SOCCER'`",,"SELECT ATTENDANCE.LINK_TO_MEMBER, ATTENDANCE.LINK_TO_EVENT FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE MEMBER.FIRST_NAME = 'MAYA' AND MEMBER.LAST_NAME = 'MCLEAN' AND EVENT.EVENT_NAME = 'WOMEN'S SOCCER'",SELECT CASE WHEN T3.EVENT_NAME = 'WOMEN''S SOCCER' THEN 'YES' END AS RESULT FROM MEMBER AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER INNER JOIN EVENT AS T3 ON T2.LINK_TO_EVENT = T3.EVENT_ID WHERE T1.FIRST_NAME = 'MAYA' AND T1.LAST_NAME = 'MCLEAN',
2,1399,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT ATTENDANCE.LINK_TO_MEMBER, ATTENDANCE.LINK_TO_EVENT FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE MEMBER.FIRST_NAME = 'MAYA' AND MEMBER.LAST_NAME = 'MCLEAN' AND EVENT.EVENT_NAME = 'WOMEN'S SOCCER'`",,"SELECT ATTENDANCE.LINK_TO_MEMBER, ATTENDANCE.LINK_TO_EVENT FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE MEMBER.FIRST_NAME = 'MAYA' AND MEMBER.LAST_NAME = 'MCLEAN' AND EVENT.EVENT_NAME = 'WOMEN'S SOCCER'",SELECT CASE WHEN T3.EVENT_NAME = 'WOMEN''S SOCCER' THEN 'YES' END AS RESULT FROM MEMBER AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER INNER JOIN EVENT AS T3 ON T2.LINK_TO_EVENT = T3.EVENT_ID WHERE T1.FIRST_NAME = 'MAYA' AND T1.LAST_NAME = 'MCLEAN',
3,1399,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT ATTENDANCE.LINK_TO_MEMBER, ATTENDANCE.LINK_TO_EVENT FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE MEMBER.FIRST_NAME = 'MAYA' AND MEMBER.LAST_NAME = 'MCLEAN' AND EVENT.EVENT_NAME = 'WOMEN'S SOCCER'`",,"SELECT ATTENDANCE.LINK_TO_MEMBER, ATTENDANCE.LINK_TO_EVENT FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE MEMBER.FIRST_NAME = 'MAYA' AND MEMBER.LAST_NAME = 'MCLEAN' AND EVENT.EVENT_NAME = 'WOMEN'S SOCCER'",SELECT CASE WHEN T3.EVENT_NAME = 'WOMEN''S SOCCER' THEN 'YES' END AS RESULT FROM MEMBER AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER INNER JOIN EVENT AS T3 ON T2.LINK_TO_EVENT = T3.EVENT_ID WHERE T1.FIRST_NAME = 'MAYA' AND T1.LAST_NAME = 'MCLEAN',
1,1400,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT COUNT(*) FROM EVENT WHERE TYPE = 'COMMUNITY SERVICE' AND EVENT_DATE BETWEEN '2019-01-01' AND '2019-12-31') AS REAL) / (SELECT COUNT(*) FROM EVENT WHERE EVENT_DATE BETWEEN '2019-01-01' AND '2019-12-31')) * 100,"SELECT CAST(SUM(CASE WHEN TYPE = 'COMMUNITY SERVICE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(TYPE) FROM EVENT WHERE SUBSTR(EVENT_DATE, 1, 4) = '2019'",
2,1400,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT COUNT(*) FROM EVENT WHERE TYPE = 'COMMUNITY SERVICE' AND EVENT_DATE BETWEEN '2019-01-01' AND '2019-12-31') AS REAL) / (SELECT COUNT(*) FROM EVENT WHERE EVENT_DATE BETWEEN '2019-01-01' AND '2019-12-31')) * 100,"SELECT CAST(SUM(CASE WHEN TYPE = 'COMMUNITY SERVICE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(TYPE) FROM EVENT WHERE SUBSTR(EVENT_DATE, 1, 4) = '2019'",
3,1400,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (CAST((SELECT COUNT(*) FROM EVENT WHERE TYPE = 'COMMUNITY SERVICE' AND EVENT_DATE BETWEEN '2019-01-01' AND '2019-12-31') AS REAL) / (SELECT COUNT(*) FROM EVENT WHERE EVENT_DATE BETWEEN '2019-01-01' AND '2019-12-31')) * 100,"SELECT CAST(SUM(CASE WHEN TYPE = 'COMMUNITY SERVICE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(TYPE) FROM EVENT WHERE SUBSTR(EVENT_DATE, 1, 4) = '2019'",
1,1401,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXPENSE__LINK_TO_EVENT`,,SELECT EXPENSE.COST FROM EVENT INNER JOIN EXPENSE ON EVENT.EVENT_ID = EXPENSE.LINK_TO_EVENT WHERE EVENT.EVENT_NAME = 'SEPTEMBER SPEAKER' AND EXPENSE.EXPENSE_DESCRIPTION = 'POSTERS',SELECT T3.COST FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET WHERE T1.EVENT_NAME = 'SEPTEMBER SPEAKER' AND T3.EXPENSE_DESCRIPTION = 'POSTERS',
2,1401,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXPENSE__LINK_TO_EVENT`,,SELECT EXPENSE.COST FROM EVENT INNER JOIN EXPENSE ON EVENT.EVENT_ID = EXPENSE.LINK_TO_EVENT WHERE EVENT.EVENT_NAME = 'SEPTEMBER SPEAKER' AND EXPENSE.EXPENSE_DESCRIPTION = 'POSTERS',SELECT T3.COST FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET WHERE T1.EVENT_NAME = 'SEPTEMBER SPEAKER' AND T3.EXPENSE_DESCRIPTION = 'POSTERS',
3,1401,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXPENSE__LINK_TO_EVENT`,,SELECT EXPENSE.COST FROM EVENT INNER JOIN EXPENSE ON EVENT.EVENT_ID = EXPENSE.LINK_TO_EVENT WHERE EVENT.EVENT_NAME = 'SEPTEMBER SPEAKER' AND EXPENSE.EXPENSE_DESCRIPTION = 'POSTERS',SELECT T3.COST FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET WHERE T1.EVENT_NAME = 'SEPTEMBER SPEAKER' AND T3.EXPENSE_DESCRIPTION = 'POSTERS',
1,1402,True,,0.033635,SELECT MEMBER.T_SHIRT_SIZE FROM MEMBER GROUP BY MEMBER.T_SHIRT_SIZE ORDER BY COUNT(*) DESC LIMIT 1,SELECT T_SHIRT_SIZE FROM MEMBER GROUP BY T_SHIRT_SIZE ORDER BY COUNT(T_SHIRT_SIZE) DESC LIMIT 1,
1,1403,True,,0.0625329999999999,SELECT EVENT.EVENT_NAME FROM EVENT INNER JOIN BUDGET ON EVENT.EVENT_ID = BUDGET.LINK_TO_EVENT WHERE EVENT.STATUS = 'CLOSED' AND BUDGET.REMAINING < 0 ORDER BY BUDGET.REMAINING ASC LIMIT 1,SELECT T2.EVENT_NAME FROM BUDGET AS T1 INNER JOIN EVENT AS T2 ON T2.EVENT_ID = T1.LINK_TO_EVENT WHERE T1.EVENT_STATUS = 'CLOSED' AND T1.REMAINING < 0 ORDER BY T1.REMAINING LIMIT 1,
1,1404,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EVENT (
	EVENT_ID VARCHAR(20),
	EVENT_NAME VARCHAR(20),
	EVENT_DATE VARCHAR(20),
	TYPE VARCHAR(20),
	NOTES VARCHAR(20),
	LOCATION VARCHAR(20),
	STATUS VARCHAR(20)
);
INSERT INTO EVENT VALUES ('2147483648', '708167956134573029', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MAJOR (
	MAJOR_ID VARCHAR(20),
	MAJOR_NAME VARCHAR(20),
	DEPARTMENT VARCHAR(20),
	COLLEGE VARCHAR(20)
);
INSERT INTO MAJOR VALUES ('2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ZIP_CODE (
	ZIP_CODE VARCHAR(20),
	TYPE VARCHAR(20),
	CITY VARCHAR(20),
	COUNTY VARCHAR(20),
	STATE VARCHAR(20),
	SHORT_STATE VARCHAR(20)
);
INSERT INTO ZIP_CODE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ATTENDANCE (
	LINK_TO_EVENT VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO ATTENDANCE VALUES ('2147483648', '2147483648');
CREATE TABLE BUDGET (
	BUDGET_ID VARCHAR(20),
	CATEGORY VARCHAR(20),
	SPENT VARCHAR(20),
	REMAINING VARCHAR(20),
	AMOUNT VARCHAR(20),
	EVENT_STATUS VARCHAR(20),
	LINK_TO_EVENT VARCHAR(20)
);
INSERT INTO BUDGET VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE EXPENSE (
	EXPENSE_ID VARCHAR(20),
	EXPENSE_DESCRIPTION VARCHAR(20),
	EXPENSE_DATE VARCHAR(20),
	COST VARCHAR(20),
	APPROVED VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20),
	LINK_TO_BUDGET VARCHAR(20)
);
INSERT INTO EXPENSE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE INCOME (
	INCOME_ID VARCHAR(20),
	DATE_RECEIVED VARCHAR(20),
	AMOUNT VARCHAR(20),
	SOURCE VARCHAR(20),
	NOTES VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO INCOME VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR(20),
	FIRST_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	EMAIL VARCHAR(20),
	POSITION VARCHAR(20),
	T_SHIRT_SIZE VARCHAR(20),
	PHONE VARCHAR(20),
	ZIP VARCHAR(20),
	LINK_TO_MAJOR VARCHAR(20)
);
INSERT INTO MEMBER VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
SELECT EXPENSE.EXPENSE_DESCRIPTION, SUM(EXPENSE.COST) FROM EVENT JOIN BUDGET ON EVENT.EVENT_ID = BUDGET.LINK_TO_EVENT JOIN EXPENSE ON BUDGET.BUDGET_ID = EXPENSE.LINK_TO_BUDGET WHERE EVENT.EVENT_NAME = 'OCTOBER MEETING' AND EXPENSE.APPROVED = TRUE GROUP BY EXPENSE.EXPENSE_DESCRIPTION;
-- ----------sql2------------
-- NULL, NULL
SELECT T1.TYPE, SUM(T3.COST) FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET WHERE T1.EVENT_NAME = 'OCTOBER MEETING';
",0.104679,"SELECT EXPENSE.EXPENSE_DESCRIPTION, SUM(EXPENSE.COST) FROM EVENT JOIN BUDGET ON EVENT.EVENT_ID = BUDGET.LINK_TO_EVENT JOIN EXPENSE ON BUDGET.BUDGET_ID = EXPENSE.LINK_TO_BUDGET WHERE EVENT.EVENT_NAME = 'OCTOBER MEETING' AND EXPENSE.APPROVED = TRUE GROUP BY EXPENSE.EXPENSE_DESCRIPTION","SELECT T1.TYPE, SUM(T3.COST) FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET WHERE T1.EVENT_NAME = 'OCTOBER MEETING'",
1,1405,True,,0.066139,"SELECT BUDGET.CATEGORY, SUM(BUDGET.AMOUNT) FROM EVENT INNER JOIN BUDGET ON EVENT.EVENT_ID = BUDGET.LINK_TO_EVENT WHERE EVENT.EVENT_NAME = 'APRIL SPEAKER' GROUP BY BUDGET.CATEGORY ORDER BY SUM(BUDGET.AMOUNT) ASC;","SELECT T2.CATEGORY, SUM(T2.AMOUNT) FROM EVENT AS T1 JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.EVENT_NAME = 'APRIL SPEAKER' GROUP BY T2.CATEGORY ORDER BY SUM(T2.AMOUNT) ASC",
1,1406,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BUDGET_ID`,,SELECT AMOUNT FROM BUDGET WHERE CATEGORY = 'FOOD' ORDER BY AMOUNT DESC LIMIT 1,SELECT BUDGET_ID FROM BUDGET WHERE CATEGORY = 'FOOD' AND AMOUNT = ( SELECT MAX(AMOUNT) FROM BUDGET ),
2,1406,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BUDGET_ID`,,SELECT AMOUNT FROM BUDGET WHERE CATEGORY = 'FOOD' ORDER BY AMOUNT DESC LIMIT 1,SELECT BUDGET_ID FROM BUDGET WHERE CATEGORY = 'FOOD' AND AMOUNT = ( SELECT MAX(AMOUNT) FROM BUDGET ),
3,1406,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute BUDGET_ID`,,SELECT AMOUNT FROM BUDGET WHERE CATEGORY = 'FOOD' ORDER BY AMOUNT DESC LIMIT 1,SELECT BUDGET_ID FROM BUDGET WHERE CATEGORY = 'FOOD' AND AMOUNT = ( SELECT MAX(AMOUNT) FROM BUDGET ),
1,1407,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EVENT (
	EVENT_ID VARCHAR(20),
	EVENT_NAME VARCHAR(20),
	EVENT_DATE VARCHAR(20),
	TYPE VARCHAR(20),
	NOTES VARCHAR(20),
	LOCATION VARCHAR(20),
	STATUS VARCHAR(20)
);
INSERT INTO EVENT VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MAJOR (
	MAJOR_ID VARCHAR(20),
	MAJOR_NAME VARCHAR(20),
	DEPARTMENT VARCHAR(20),
	COLLEGE VARCHAR(20)
);
INSERT INTO MAJOR VALUES ('2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ZIP_CODE (
	ZIP_CODE VARCHAR(20),
	TYPE VARCHAR(20),
	CITY VARCHAR(20),
	COUNTY VARCHAR(20),
	STATE VARCHAR(20),
	SHORT_STATE VARCHAR(20)
);
INSERT INTO ZIP_CODE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ATTENDANCE (
	LINK_TO_EVENT VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO ATTENDANCE VALUES ('2147483648', '2147483648');
CREATE TABLE BUDGET (
	BUDGET_ID VARCHAR(20),
	CATEGORY VARCHAR(20),
	SPENT VARCHAR(20),
	REMAINING VARCHAR(20),
	AMOUNT VARCHAR(20),
	EVENT_STATUS VARCHAR(20),
	LINK_TO_EVENT VARCHAR(20)
);
INSERT INTO BUDGET VALUES ('2147483648', 'ADVERTISEMENT', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE EXPENSE (
	EXPENSE_ID VARCHAR(20),
	EXPENSE_DESCRIPTION VARCHAR(20),
	EXPENSE_DATE VARCHAR(20),
	COST VARCHAR(20),
	APPROVED VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20),
	LINK_TO_BUDGET VARCHAR(20)
);
INSERT INTO EXPENSE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE INCOME (
	INCOME_ID VARCHAR(20),
	DATE_RECEIVED VARCHAR(20),
	AMOUNT VARCHAR(20),
	SOURCE VARCHAR(20),
	NOTES VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO INCOME VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR(20),
	FIRST_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	EMAIL VARCHAR(20),
	POSITION VARCHAR(20),
	T_SHIRT_SIZE VARCHAR(20),
	PHONE VARCHAR(20),
	ZIP VARCHAR(20),
	LINK_TO_MAJOR VARCHAR(20)
);
INSERT INTO MEMBER VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
SELECT AMOUNT FROM BUDGET WHERE CATEGORY = 'ADVERTISING' ORDER BY AMOUNT DESC LIMIT 3;
-- ----------sql2------------
-- 2147483648
SELECT BUDGET_ID FROM BUDGET WHERE CATEGORY = 'ADVERTISEMENT' ORDER BY AMOUNT DESC LIMIT 3;
",0.027035,SELECT AMOUNT FROM BUDGET WHERE CATEGORY = 'ADVERTISING' ORDER BY AMOUNT DESC LIMIT 3,SELECT BUDGET_ID FROM BUDGET WHERE CATEGORY = 'ADVERTISEMENT' ORDER BY AMOUNT DESC LIMIT 3,
1,1408,True,,0.033537,SELECT SUM(EXPENSE.COST) FROM EXPENSE WHERE EXPENSE.EXPENSE_DESCRIPTION = 'PARKING',SELECT SUM(COST) FROM EXPENSE WHERE EXPENSE_DESCRIPTION = 'PARKING',
1,1409,True,,0.032626,SELECT SUM(EXPENSE.COST) FROM EXPENSE WHERE EXPENSE_DATE = '2019-08-20',SELECT SUM(COST) FROM EXPENSE WHERE EXPENSE_DATE = '2019-08-20',
1,1410,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EVENT (
	EVENT_ID VARCHAR(20),
	EVENT_NAME VARCHAR(20),
	EVENT_DATE VARCHAR(20),
	TYPE VARCHAR(20),
	NOTES VARCHAR(20),
	LOCATION VARCHAR(20),
	STATUS VARCHAR(20)
);
INSERT INTO EVENT VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MAJOR (
	MAJOR_ID VARCHAR(20),
	MAJOR_NAME VARCHAR(20),
	DEPARTMENT VARCHAR(20),
	COLLEGE VARCHAR(20)
);
INSERT INTO MAJOR VALUES ('2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ZIP_CODE (
	ZIP_CODE VARCHAR(20),
	TYPE VARCHAR(20),
	CITY VARCHAR(20),
	COUNTY VARCHAR(20),
	STATE VARCHAR(20),
	SHORT_STATE VARCHAR(20)
);
INSERT INTO ZIP_CODE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ATTENDANCE (
	LINK_TO_EVENT VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO ATTENDANCE VALUES ('2147483648', '194921957359491600');
CREATE TABLE BUDGET (
	BUDGET_ID VARCHAR(20),
	CATEGORY VARCHAR(20),
	SPENT VARCHAR(20),
	REMAINING VARCHAR(20),
	AMOUNT VARCHAR(20),
	EVENT_STATUS VARCHAR(20),
	LINK_TO_EVENT VARCHAR(20)
);
INSERT INTO BUDGET VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE EXPENSE (
	EXPENSE_ID VARCHAR(20),
	EXPENSE_DESCRIPTION VARCHAR(20),
	EXPENSE_DATE VARCHAR(20),
	COST VARCHAR(20),
	APPROVED VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20),
	LINK_TO_BUDGET VARCHAR(20)
);
INSERT INTO EXPENSE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '194921957359491600', '2147483648');
CREATE TABLE INCOME (
	INCOME_ID VARCHAR(20),
	DATE_RECEIVED VARCHAR(20),
	AMOUNT VARCHAR(20),
	SOURCE VARCHAR(20),
	NOTES VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO INCOME VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '194921957359491600');
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR(20),
	FIRST_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	EMAIL VARCHAR(20),
	POSITION VARCHAR(20),
	T_SHIRT_SIZE VARCHAR(20),
	PHONE VARCHAR(20),
	ZIP VARCHAR(20),
	LINK_TO_MAJOR VARCHAR(20)
);
INSERT INTO MEMBER VALUES ('194921957359491600', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME, SUM(EXPENSE.COST) FROM MEMBER INNER JOIN EXPENSE ON MEMBER.MEMBER_ID = EXPENSE.LINK_TO_MEMBER WHERE MEMBER.MEMBER_ID = 'REC4BLDZHS2BLFP4V' GROUP BY MEMBER.FIRST_NAME, MEMBER.LAST_NAME;
-- ----------sql2------------
-- NULL, NULL, NULL
SELECT T1.FIRST_NAME, T1.LAST_NAME, SUM(T2.COST) FROM MEMBER AS T1 INNER JOIN EXPENSE AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T1.MEMBER_ID = 'REC4BLDZHS2BLFP4V';
",0.070312,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME, SUM(EXPENSE.COST) FROM MEMBER INNER JOIN EXPENSE ON MEMBER.MEMBER_ID = EXPENSE.LINK_TO_MEMBER WHERE MEMBER.MEMBER_ID = 'REC4BLDZHS2BLFP4V' GROUP BY MEMBER.FIRST_NAME, MEMBER.LAST_NAME","SELECT T1.FIRST_NAME, T1.LAST_NAME, SUM(T2.COST) FROM MEMBER AS T1 INNER JOIN EXPENSE AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T1.MEMBER_ID = 'REC4BLDZHS2BLFP4V'",
1,1411,True,,0.066734,SELECT EXPENSE.EXPENSE_DESCRIPTION FROM EXPENSE INNER JOIN MEMBER ON EXPENSE.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE MEMBER.FIRST_NAME = 'SACHA' AND MEMBER.LAST_NAME = 'HARRISON',SELECT T2.EXPENSE_DESCRIPTION FROM MEMBER AS T1 INNER JOIN EXPENSE AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T1.FIRST_NAME = 'SACHA' AND T1.LAST_NAME = 'HARRISON',
1,1412,True,,0.048288,SELECT EXPENSE.EXPENSE_DESCRIPTION FROM EXPENSE INNER JOIN MEMBER ON EXPENSE.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE MEMBER.T_SHIRT_SIZE = 'X-LARGE',SELECT T2.EXPENSE_DESCRIPTION FROM MEMBER AS T1 INNER JOIN EXPENSE AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T1.T_SHIRT_SIZE = 'X-LARGE',
1,1413,True,,0.045951,SELECT MEMBER.ZIP FROM EXPENSE INNER JOIN MEMBER ON EXPENSE.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE EXPENSE.COST < 50,SELECT T1.ZIP FROM MEMBER AS T1 INNER JOIN EXPENSE AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T2.COST < 50,
1,1414,True,,0.064853,SELECT MAJOR.MAJOR_NAME FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MEMBER.FIRST_NAME = 'PHILLIP' AND MEMBER.LAST_NAME = 'CULLEN',SELECT T1.MAJOR_NAME FROM MAJOR AS T1 INNER JOIN MEMBER AS T2 ON T1.MAJOR_ID = T2.LINK_TO_MAJOR WHERE T2.FIRST_NAME = 'PHILLIP' AND T2.LAST_NAME = 'CULLEN',
1,1415,True,,0.044305,SELECT MEMBER.POSITION FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'BUSINESS',SELECT T2.POSITION FROM MAJOR AS T1 INNER JOIN MEMBER AS T2 ON T1.MAJOR_ID = T2.LINK_TO_MAJOR WHERE T1.MAJOR_NAME = 'BUSINESS',
1,1416,True,,0.0712889999999999,SELECT COUNT(*) FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'BUSINESS' AND MEMBER.T_SHIRT_SIZE = 'MEDIUM',SELECT COUNT(T2.MEMBER_ID) FROM MAJOR AS T1 INNER JOIN MEMBER AS T2 ON T1.MAJOR_ID = T2.LINK_TO_MAJOR WHERE T1.MAJOR_NAME = 'BUSINESS' AND T2.T_SHIRT_SIZE = 'MEDIUM',
1,1417,True,,0.0442,SELECT EVENT.TYPE FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE BUDGET.REMAINING > 30,SELECT T1.TYPE FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T2.REMAINING > 30,
1,1418,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EVENT (
	EVENT_ID VARCHAR(20),
	EVENT_NAME VARCHAR(20),
	EVENT_DATE VARCHAR(20),
	TYPE VARCHAR(20),
	NOTES VARCHAR(20),
	LOCATION VARCHAR(20),
	STATUS VARCHAR(20)
);
INSERT INTO EVENT VALUES ('2147483648', '2147483648', '2147483648', '2147483649', '2147483648', 'MU 215', '2147483648');
CREATE TABLE MAJOR (
	MAJOR_ID VARCHAR(20),
	MAJOR_NAME VARCHAR(20),
	DEPARTMENT VARCHAR(20),
	COLLEGE VARCHAR(20)
);
INSERT INTO MAJOR VALUES ('2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ZIP_CODE (
	ZIP_CODE VARCHAR(20),
	TYPE VARCHAR(20),
	CITY VARCHAR(20),
	COUNTY VARCHAR(20),
	STATE VARCHAR(20),
	SHORT_STATE VARCHAR(20)
);
INSERT INTO ZIP_CODE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ATTENDANCE (
	LINK_TO_EVENT VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO ATTENDANCE VALUES ('2147483648', '2147483648');
CREATE TABLE BUDGET (
	BUDGET_ID VARCHAR(20),
	CATEGORY VARCHAR(20),
	SPENT VARCHAR(20),
	REMAINING VARCHAR(20),
	AMOUNT VARCHAR(20),
	EVENT_STATUS VARCHAR(20),
	LINK_TO_EVENT VARCHAR(20)
);
INSERT INTO BUDGET VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE EXPENSE (
	EXPENSE_ID VARCHAR(20),
	EXPENSE_DESCRIPTION VARCHAR(20),
	EXPENSE_DATE VARCHAR(20),
	COST VARCHAR(20),
	APPROVED VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20),
	LINK_TO_BUDGET VARCHAR(20)
);
INSERT INTO EXPENSE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE INCOME (
	INCOME_ID VARCHAR(20),
	DATE_RECEIVED VARCHAR(20),
	AMOUNT VARCHAR(20),
	SOURCE VARCHAR(20),
	NOTES VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO INCOME VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR(20),
	FIRST_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	EMAIL VARCHAR(20),
	POSITION VARCHAR(20),
	T_SHIRT_SIZE VARCHAR(20),
	PHONE VARCHAR(20),
	ZIP VARCHAR(20),
	LINK_TO_MAJOR VARCHAR(20)
);
INSERT INTO MEMBER VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
-- 2147483649
SELECT EVENT.TYPE FROM EVENT WHERE EVENT.LOCATION = 'MU 215';
-- ----------sql2------------
-- 2147483648
SELECT T2.CATEGORY FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.LOCATION = 'MU 215';
",0.036944,SELECT EVENT.TYPE FROM EVENT WHERE EVENT.LOCATION = 'MU 215';,SELECT T2.CATEGORY FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.LOCATION = 'MU 215',
1,1419,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EVENT (
	EVENT_ID VARCHAR(20),
	EVENT_NAME VARCHAR(20),
	EVENT_DATE VARCHAR(20),
	TYPE VARCHAR(20),
	NOTES VARCHAR(20),
	LOCATION VARCHAR(20),
	STATUS VARCHAR(20)
);
INSERT INTO EVENT VALUES ('2147483648', '2147483648', '2020-03-24T12:00:00', '2147483649', '2147483648', '2147483648', '2147483648');
CREATE TABLE MAJOR (
	MAJOR_ID VARCHAR(20),
	MAJOR_NAME VARCHAR(20),
	DEPARTMENT VARCHAR(20),
	COLLEGE VARCHAR(20)
);
INSERT INTO MAJOR VALUES ('2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ZIP_CODE (
	ZIP_CODE VARCHAR(20),
	TYPE VARCHAR(20),
	CITY VARCHAR(20),
	COUNTY VARCHAR(20),
	STATE VARCHAR(20),
	SHORT_STATE VARCHAR(20)
);
INSERT INTO ZIP_CODE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ATTENDANCE (
	LINK_TO_EVENT VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO ATTENDANCE VALUES ('2147483648', '2147483648');
CREATE TABLE BUDGET (
	BUDGET_ID VARCHAR(20),
	CATEGORY VARCHAR(20),
	SPENT VARCHAR(20),
	REMAINING VARCHAR(20),
	AMOUNT VARCHAR(20),
	EVENT_STATUS VARCHAR(20),
	LINK_TO_EVENT VARCHAR(20)
);
INSERT INTO BUDGET VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE EXPENSE (
	EXPENSE_ID VARCHAR(20),
	EXPENSE_DESCRIPTION VARCHAR(20),
	EXPENSE_DATE VARCHAR(20),
	COST VARCHAR(20),
	APPROVED VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20),
	LINK_TO_BUDGET VARCHAR(20)
);
INSERT INTO EXPENSE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE INCOME (
	INCOME_ID VARCHAR(20),
	DATE_RECEIVED VARCHAR(20),
	AMOUNT VARCHAR(20),
	SOURCE VARCHAR(20),
	NOTES VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO INCOME VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR(20),
	FIRST_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	EMAIL VARCHAR(20),
	POSITION VARCHAR(20),
	T_SHIRT_SIZE VARCHAR(20),
	PHONE VARCHAR(20),
	ZIP VARCHAR(20),
	LINK_TO_MAJOR VARCHAR(20)
);
INSERT INTO MEMBER VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
-- 2147483649
SELECT EVENT.TYPE FROM EVENT WHERE EVENT.EVENT_DATE = '2020-03-24T12:00:00';
-- ----------sql2------------
-- 2147483648
SELECT T2.CATEGORY FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.EVENT_DATE = '2020-03-24T12:00:00';
",0.0356589999999999,SELECT EVENT.TYPE FROM EVENT WHERE EVENT.EVENT_DATE = '2020-03-24T12:00:00',SELECT T2.CATEGORY FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.EVENT_DATE = '2020-03-24T12:00:00',
1,1420,True,,0.045178,SELECT MAJOR.MAJOR_NAME FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MEMBER.POSITION = 'VICE PRESIDENT',SELECT T1.MAJOR_NAME FROM MAJOR AS T1 INNER JOIN MEMBER AS T2 ON T1.MAJOR_ID = T2.LINK_TO_MAJOR WHERE T2.POSITION = 'VICE PRESIDENT',
1,1421,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'BUSINESS') AS REAL) / COUNT(*) * 100) AS PERCENTAGE FROM MEMBER,SELECT CAST(SUM(CASE WHEN T2.MAJOR_NAME = 'BUSINESS' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.MEMBER_ID) FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T2.MAJOR_ID = T1.LINK_TO_MAJOR WHERE T1.POSITION = 'MEMBER',
2,1421,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'BUSINESS') AS REAL) / COUNT(*) * 100) AS PERCENTAGE FROM MEMBER,SELECT CAST(SUM(CASE WHEN T2.MAJOR_NAME = 'BUSINESS' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.MEMBER_ID) FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T2.MAJOR_ID = T1.LINK_TO_MAJOR WHERE T1.POSITION = 'MEMBER',
3,1421,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'BUSINESS') AS REAL) / COUNT(*) * 100) AS PERCENTAGE FROM MEMBER,SELECT CAST(SUM(CASE WHEN T2.MAJOR_NAME = 'BUSINESS' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.MEMBER_ID) FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T2.MAJOR_ID = T1.LINK_TO_MAJOR WHERE T1.POSITION = 'MEMBER',
1,1422,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EVENT (
	EVENT_ID VARCHAR(20),
	EVENT_NAME VARCHAR(20),
	EVENT_DATE VARCHAR(20),
	TYPE VARCHAR(20),
	NOTES VARCHAR(20),
	LOCATION VARCHAR(20),
	STATUS VARCHAR(20)
);
INSERT INTO EVENT VALUES ('2147483648', '2147483648', '2147483648', '2147483649', '2147483648', 'MU 215', '2147483648');
CREATE TABLE MAJOR (
	MAJOR_ID VARCHAR(20),
	MAJOR_NAME VARCHAR(20),
	DEPARTMENT VARCHAR(20),
	COLLEGE VARCHAR(20)
);
INSERT INTO MAJOR VALUES ('2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ZIP_CODE (
	ZIP_CODE VARCHAR(20),
	TYPE VARCHAR(20),
	CITY VARCHAR(20),
	COUNTY VARCHAR(20),
	STATE VARCHAR(20),
	SHORT_STATE VARCHAR(20)
);
INSERT INTO ZIP_CODE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ATTENDANCE (
	LINK_TO_EVENT VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO ATTENDANCE VALUES ('2147483648', '2147483648');
CREATE TABLE BUDGET (
	BUDGET_ID VARCHAR(20),
	CATEGORY VARCHAR(20),
	SPENT VARCHAR(20),
	REMAINING VARCHAR(20),
	AMOUNT VARCHAR(20),
	EVENT_STATUS VARCHAR(20),
	LINK_TO_EVENT VARCHAR(20)
);
INSERT INTO BUDGET VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE EXPENSE (
	EXPENSE_ID VARCHAR(20),
	EXPENSE_DESCRIPTION VARCHAR(20),
	EXPENSE_DATE VARCHAR(20),
	COST VARCHAR(20),
	APPROVED VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20),
	LINK_TO_BUDGET VARCHAR(20)
);
INSERT INTO EXPENSE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE INCOME (
	INCOME_ID VARCHAR(20),
	DATE_RECEIVED VARCHAR(20),
	AMOUNT VARCHAR(20),
	SOURCE VARCHAR(20),
	NOTES VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO INCOME VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR(20),
	FIRST_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	EMAIL VARCHAR(20),
	POSITION VARCHAR(20),
	T_SHIRT_SIZE VARCHAR(20),
	PHONE VARCHAR(20),
	ZIP VARCHAR(20),
	LINK_TO_MAJOR VARCHAR(20)
);
INSERT INTO MEMBER VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
-- 2147483649
SELECT EVENT.TYPE FROM EVENT WHERE EVENT.LOCATION = 'MU 215';
-- ----------sql2------------
-- 2147483648
SELECT DISTINCT T2.CATEGORY FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.LOCATION = 'MU 215';
",0.037746,SELECT EVENT.TYPE FROM EVENT WHERE EVENT.LOCATION = 'MU 215';,SELECT DISTINCT T2.CATEGORY FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.LOCATION = 'MU 215',
1,1423,True,,0.02997,SELECT COUNT(*) FROM INCOME WHERE AMOUNT = 50;,SELECT COUNT(INCOME_ID) FROM INCOME WHERE AMOUNT = 50,
1,1424,True,,0.05134,SELECT COUNT(*) FROM MEMBER WHERE POSITION = 'MEMBER' AND T_SHIRT_SIZE = 'X-LARGE',SELECT COUNT(MEMBER_ID) FROM MEMBER WHERE POSITION = 'MEMBER' AND T_SHIRT_SIZE = 'X-LARGE',
1,1425,True,,0.050557,"SELECT COUNT(*) FROM MAJOR WHERE COLLEGE = 'COLLEGE OF AGRICULTURE AND APPLIED SCIENCES' AND DEPARTMENT = 'SCHOOL OF APPLIED SCIENCES, TECHNOLOGY AND EDUCATION'","SELECT COUNT(MAJOR_ID) FROM MAJOR WHERE DEPARTMENT = 'SCHOOL OF APPLIED SCIENCES, TECHNOLOGY AND EDUCATION' AND COLLEGE = 'COLLEGE OF AGRICULTURE AND APPLIED SCIENCES'",
1,1426,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EVENT (
	EVENT_ID VARCHAR(20),
	EVENT_NAME VARCHAR(20),
	EVENT_DATE VARCHAR(20),
	TYPE VARCHAR(20),
	NOTES VARCHAR(20),
	LOCATION VARCHAR(20),
	STATUS VARCHAR(20)
);
INSERT INTO EVENT VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MAJOR (
	MAJOR_ID VARCHAR(20),
	MAJOR_NAME VARCHAR(20),
	DEPARTMENT VARCHAR(20),
	COLLEGE VARCHAR(20)
);
INSERT INTO MAJOR VALUES ('2147483648', 'ENVIRONMENTAL ENGINEERING', '2147483648', '2147483648');
CREATE TABLE ZIP_CODE (
	ZIP_CODE VARCHAR(20),
	TYPE VARCHAR(20),
	CITY VARCHAR(20),
	COUNTY VARCHAR(20),
	STATE VARCHAR(20),
	SHORT_STATE VARCHAR(20)
);
INSERT INTO ZIP_CODE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ATTENDANCE (
	LINK_TO_EVENT VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO ATTENDANCE VALUES ('2147483648', '2147483648');
CREATE TABLE BUDGET (
	BUDGET_ID VARCHAR(20),
	CATEGORY VARCHAR(20),
	SPENT VARCHAR(20),
	REMAINING VARCHAR(20),
	AMOUNT VARCHAR(20),
	EVENT_STATUS VARCHAR(20),
	LINK_TO_EVENT VARCHAR(20)
);
INSERT INTO BUDGET VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE EXPENSE (
	EXPENSE_ID VARCHAR(20),
	EXPENSE_DESCRIPTION VARCHAR(20),
	EXPENSE_DATE VARCHAR(20),
	COST VARCHAR(20),
	APPROVED VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20),
	LINK_TO_BUDGET VARCHAR(20)
);
INSERT INTO EXPENSE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE INCOME (
	INCOME_ID VARCHAR(20),
	DATE_RECEIVED VARCHAR(20),
	AMOUNT VARCHAR(20),
	SOURCE VARCHAR(20),
	NOTES VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO INCOME VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR(20),
	FIRST_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	EMAIL VARCHAR(20),
	POSITION VARCHAR(20),
	T_SHIRT_SIZE VARCHAR(20),
	PHONE VARCHAR(20),
	ZIP VARCHAR(20),
	LINK_TO_MAJOR VARCHAR(20)
);
INSERT INTO MEMBER VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '1278362056975449263', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
-- 2147483648, 2147483648, 2147483648
SELECT MEMBER.LAST_NAME, MAJOR.DEPARTMENT, MAJOR.COLLEGE FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'ENVIRONMENTAL ENGINEERING';
-- ----------sql2------------
SELECT T2.LAST_NAME, T1.DEPARTMENT, T1.COLLEGE FROM MAJOR AS T1 INNER JOIN MEMBER AS T2 ON T1.MAJOR_ID = T2.LINK_TO_MAJOR WHERE T2.POSITION = 'MEMBER' AND T1.MAJOR_NAME = 'ENVIRONMENTAL ENGINEERING';
",0.057632,"SELECT MEMBER.LAST_NAME, MAJOR.DEPARTMENT, MAJOR.COLLEGE FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'ENVIRONMENTAL ENGINEERING';","SELECT T2.LAST_NAME, T1.DEPARTMENT, T1.COLLEGE FROM MAJOR AS T1 INNER JOIN MEMBER AS T2 ON T1.MAJOR_ID = T2.LINK_TO_MAJOR WHERE T2.POSITION = 'MEMBER' AND T1.MAJOR_NAME = 'ENVIRONMENTAL ENGINEERING'",
1,1427,False,,,SELECT BUDGET.CATEGORY FROM EVENT INNER JOIN BUDGET ON EVENT.EVENT_ID = BUDGET.LINK_TO_EVENT WHERE EVENT.LOCATION = 'MU 215' AND EVENT.TYPE = 'GUEST SPEAKER' AND BUDGET.SPENT = 0,"SELECT DISTINCT T2.CATEGORY, T1.TYPE FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.LOCATION = 'MU 215' AND T2.SPENT = 0 AND T1.TYPE = 'GUEST SPEAKER'",
1,1428,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EVENT (
	EVENT_ID VARCHAR(20),
	EVENT_NAME VARCHAR(20),
	EVENT_DATE VARCHAR(20),
	TYPE VARCHAR(20),
	NOTES VARCHAR(20),
	LOCATION VARCHAR(20),
	STATUS VARCHAR(20)
);
INSERT INTO EVENT VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MAJOR (
	MAJOR_ID VARCHAR(20),
	MAJOR_NAME VARCHAR(20),
	DEPARTMENT VARCHAR(20),
	COLLEGE VARCHAR(20)
);
INSERT INTO MAJOR VALUES ('2147483648', '2147483648', 'ELECTRICAL AND COMPUTER ENGINEERING DEPARTMENT', '2147483648');
CREATE TABLE ZIP_CODE (
	ZIP_CODE VARCHAR(20),
	TYPE VARCHAR(20),
	CITY VARCHAR(20),
	COUNTY VARCHAR(20),
	STATE VARCHAR(20),
	SHORT_STATE VARCHAR(20)
);
INSERT INTO ZIP_CODE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ATTENDANCE (
	LINK_TO_EVENT VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO ATTENDANCE VALUES ('2147483648', '2147483648');
CREATE TABLE BUDGET (
	BUDGET_ID VARCHAR(20),
	CATEGORY VARCHAR(20),
	SPENT VARCHAR(20),
	REMAINING VARCHAR(20),
	AMOUNT VARCHAR(20),
	EVENT_STATUS VARCHAR(20),
	LINK_TO_EVENT VARCHAR(20)
);
INSERT INTO BUDGET VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE EXPENSE (
	EXPENSE_ID VARCHAR(20),
	EXPENSE_DESCRIPTION VARCHAR(20),
	EXPENSE_DATE VARCHAR(20),
	COST VARCHAR(20),
	APPROVED VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20),
	LINK_TO_BUDGET VARCHAR(20)
);
INSERT INTO EXPENSE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE INCOME (
	INCOME_ID VARCHAR(20),
	DATE_RECEIVED VARCHAR(20),
	AMOUNT VARCHAR(20),
	SOURCE VARCHAR(20),
	NOTES VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO INCOME VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR(20),
	FIRST_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	EMAIL VARCHAR(20),
	POSITION VARCHAR(20),
	T_SHIRT_SIZE VARCHAR(20),
	PHONE VARCHAR(20),
	ZIP VARCHAR(20),
	LINK_TO_MAJOR VARCHAR(20)
);
INSERT INTO MEMBER VALUES ('2147483648', '2147483648', '2147483648', '2147483648', 'MEMBER', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
SELECT ZIP_CODE.CITY, ZIP_CODE.STATE FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE MAJOR.DEPARTMENT = 'ELECTRICAL AND COMPUTER ENGINEERING' AND MEMBER.POSITION = 'MEMBER';
-- ----------sql2------------
-- 2147483648, 2147483648
SELECT CITY, STATE FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T2.MAJOR_ID = T1.LINK_TO_MAJOR INNER JOIN ZIP_CODE AS T3 ON T3.ZIP_CODE = T1.ZIP WHERE DEPARTMENT = 'ELECTRICAL AND COMPUTER ENGINEERING DEPARTMENT' AND POSITION = 'MEMBER';
",0.089483,"SELECT ZIP_CODE.CITY, ZIP_CODE.STATE FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE MAJOR.DEPARTMENT = 'ELECTRICAL AND COMPUTER ENGINEERING' AND MEMBER.POSITION = 'MEMBER'","SELECT CITY, STATE FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T2.MAJOR_ID = T1.LINK_TO_MAJOR INNER JOIN ZIP_CODE AS T3 ON T3.ZIP_CODE = T1.ZIP WHERE DEPARTMENT = 'ELECTRICAL AND COMPUTER ENGINEERING DEPARTMENT' AND POSITION = 'MEMBER'",
1,1429,True,,0.093747,SELECT EVENT.EVENT_NAME FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE MEMBER.POSITION = 'VICE PRESIDENT' AND EVENT.LOCATION = '900 E. WASHINGTON ST.' AND EVENT.TYPE = 'SOCIAL',SELECT T2.EVENT_NAME FROM ATTENDANCE AS T1 INNER JOIN EVENT AS T2 ON T2.EVENT_ID = T1.LINK_TO_EVENT INNER JOIN MEMBER AS T3 ON T1.LINK_TO_MEMBER = T3.MEMBER_ID WHERE T3.POSITION = 'VICE PRESIDENT' AND T2.LOCATION = '900 E. WASHINGTON ST.' AND T2.TYPE = 'SOCIAL',
1,1430,True,,0.068257,"SELECT MEMBER.LAST_NAME, MEMBER.POSITION FROM EXPENSE INNER JOIN MEMBER ON EXPENSE.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE EXPENSE.EXPENSE_DESCRIPTION = 'PIZZA' AND EXPENSE.EXPENSE_DATE = '2019-09-10'","SELECT T1.LAST_NAME, T1.POSITION FROM MEMBER AS T1 INNER JOIN EXPENSE AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T2.EXPENSE_DATE = '2019-09-10' AND T2.EXPENSE_DESCRIPTION = 'PIZZA'",
1,1431,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT MEMBER.LAST_NAME FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER' AND MEMBER.POSITION = 'MEMBER';`,,SELECT MEMBER.LAST_NAME FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER' AND MEMBER.POSITION = 'MEMBER';,SELECT T3.LAST_NAME FROM ATTENDANCE AS T1 INNER JOIN EVENT AS T2 ON T2.EVENT_ID = T1.LINK_TO_EVENT INNER JOIN MEMBER AS T3 ON T1.LINK_TO_MEMBER = T3.MEMBER_ID WHERE T2.EVENT_NAME = 'WOMEN''S SOCCER' AND T3.POSITION = 'MEMBER',
2,1431,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT MEMBER.LAST_NAME FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER' AND MEMBER.POSITION = 'MEMBER';`,,SELECT MEMBER.LAST_NAME FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER' AND MEMBER.POSITION = 'MEMBER';,SELECT T3.LAST_NAME FROM ATTENDANCE AS T1 INNER JOIN EVENT AS T2 ON T2.EVENT_ID = T1.LINK_TO_EVENT INNER JOIN MEMBER AS T3 ON T1.LINK_TO_MEMBER = T3.MEMBER_ID WHERE T2.EVENT_NAME = 'WOMEN''S SOCCER' AND T3.POSITION = 'MEMBER',
3,1431,ERROR,ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT MEMBER.LAST_NAME FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER' AND MEMBER.POSITION = 'MEMBER';`,,SELECT MEMBER.LAST_NAME FROM ATTENDANCE INNER JOIN MEMBER ON ATTENDANCE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN EVENT ON ATTENDANCE.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'WOMEN'S SOCCER' AND MEMBER.POSITION = 'MEMBER';,SELECT T3.LAST_NAME FROM ATTENDANCE AS T1 INNER JOIN EVENT AS T2 ON T2.EVENT_ID = T1.LINK_TO_EVENT INNER JOIN MEMBER AS T3 ON T1.LINK_TO_MEMBER = T3.MEMBER_ID WHERE T2.EVENT_NAME = 'WOMEN''S SOCCER' AND T3.POSITION = 'MEMBER',
1,1432,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(COUNT(INCOME.AMOUNT) AS REAL) * 100 / COUNT(MEMBER.MEMBER_ID)) AS PERCENTAGE FROM INCOME INNER JOIN MEMBER ON INCOME.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE MEMBER.T_SHIRT_SIZE = 'MEDIUM' AND INCOME.AMOUNT = 50,SELECT CAST(SUM(CASE WHEN T2.AMOUNT = 50 THEN 1.0 ELSE 0 END) AS REAL) * 100 / COUNT(T2.INCOME_ID) FROM MEMBER AS T1 INNER JOIN INCOME AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T1.POSITION = 'MEMBER' AND T1.T_SHIRT_SIZE = 'MEDIUM',
2,1432,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(COUNT(INCOME.AMOUNT) AS REAL) * 100 / COUNT(MEMBER.MEMBER_ID)) AS PERCENTAGE FROM INCOME INNER JOIN MEMBER ON INCOME.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE MEMBER.T_SHIRT_SIZE = 'MEDIUM' AND INCOME.AMOUNT = 50,SELECT CAST(SUM(CASE WHEN T2.AMOUNT = 50 THEN 1.0 ELSE 0 END) AS REAL) * 100 / COUNT(T2.INCOME_ID) FROM MEMBER AS T1 INNER JOIN INCOME AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T1.POSITION = 'MEMBER' AND T1.T_SHIRT_SIZE = 'MEDIUM',
3,1432,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(COUNT(INCOME.AMOUNT) AS REAL) * 100 / COUNT(MEMBER.MEMBER_ID)) AS PERCENTAGE FROM INCOME INNER JOIN MEMBER ON INCOME.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE MEMBER.T_SHIRT_SIZE = 'MEDIUM' AND INCOME.AMOUNT = 50,SELECT CAST(SUM(CASE WHEN T2.AMOUNT = 50 THEN 1.0 ELSE 0 END) AS REAL) * 100 / COUNT(T2.INCOME_ID) FROM MEMBER AS T1 INNER JOIN INCOME AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE T1.POSITION = 'MEMBER' AND T1.T_SHIRT_SIZE = 'MEDIUM',
1,1433,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EVENT (
	EVENT_ID VARCHAR(20),
	EVENT_NAME VARCHAR(20),
	EVENT_DATE VARCHAR(20),
	TYPE VARCHAR(20),
	NOTES VARCHAR(20),
	LOCATION VARCHAR(20),
	STATUS VARCHAR(20)
);
INSERT INTO EVENT VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MAJOR (
	MAJOR_ID VARCHAR(20),
	MAJOR_NAME VARCHAR(20),
	DEPARTMENT VARCHAR(20),
	COLLEGE VARCHAR(20)
);
INSERT INTO MAJOR VALUES ('2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ZIP_CODE (
	ZIP_CODE VARCHAR(20),
	TYPE VARCHAR(20),
	CITY VARCHAR(20),
	COUNTY VARCHAR(20),
	STATE VARCHAR(20),
	SHORT_STATE VARCHAR(20)
);
INSERT INTO ZIP_CODE VALUES ('2147483648', 'PO BOX', '2147483648', NULL, '2147483648', '2147483648');
CREATE TABLE ATTENDANCE (
	LINK_TO_EVENT VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO ATTENDANCE VALUES ('2147483648', '2147483648');
CREATE TABLE BUDGET (
	BUDGET_ID VARCHAR(20),
	CATEGORY VARCHAR(20),
	SPENT VARCHAR(20),
	REMAINING VARCHAR(20),
	AMOUNT VARCHAR(20),
	EVENT_STATUS VARCHAR(20),
	LINK_TO_EVENT VARCHAR(20)
);
INSERT INTO BUDGET VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE EXPENSE (
	EXPENSE_ID VARCHAR(20),
	EXPENSE_DESCRIPTION VARCHAR(20),
	EXPENSE_DATE VARCHAR(20),
	COST VARCHAR(20),
	APPROVED VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20),
	LINK_TO_BUDGET VARCHAR(20)
);
INSERT INTO EXPENSE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE INCOME (
	INCOME_ID VARCHAR(20),
	DATE_RECEIVED VARCHAR(20),
	AMOUNT VARCHAR(20),
	SOURCE VARCHAR(20),
	NOTES VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO INCOME VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR(20),
	FIRST_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	EMAIL VARCHAR(20),
	POSITION VARCHAR(20),
	T_SHIRT_SIZE VARCHAR(20),
	PHONE VARCHAR(20),
	ZIP VARCHAR(20),
	LINK_TO_MAJOR VARCHAR(20)
);
INSERT INTO MEMBER VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
-- NULL
SELECT ZIP_CODE.COUNTY FROM ZIP_CODE WHERE ZIP_CODE.TYPE = 'PO BOX';
-- ----------sql2------------
SELECT DISTINCT COUNTY FROM ZIP_CODE WHERE TYPE = 'PO BOX' AND COUNTY IS NOT NULL;
",0.03307,SELECT ZIP_CODE.COUNTY FROM ZIP_CODE WHERE ZIP_CODE.TYPE = 'PO BOX';,SELECT DISTINCT COUNTY FROM ZIP_CODE WHERE TYPE = 'PO BOX' AND COUNTY IS NOT NULL,
1,1434,True,,0.055967,SELECT ZIP_CODE.ZIP_CODE FROM ZIP_CODE WHERE ZIP_CODE.TYPE = 'PO BOX' AND ZIP_CODE.STATE = 'PUERTO RICO' AND ZIP_CODE.COUNTY = 'SAN JUAN MUNICIPIO',SELECT ZIP_CODE FROM ZIP_CODE WHERE TYPE = 'PO BOX' AND COUNTY = 'SAN JUAN MUNICIPIO' AND STATE = 'PUERTO RICO',
1,1435,ERROR,"NotSupportedError: Not supported feature: {'date': {'substr': ['EVENT_DATE', 1, 10]}}",,SELECT EVENT.EVENT_NAME FROM EVENT WHERE EVENT.TYPE = 'GAME' AND EVENT.STATUS = 'CLOSED' AND EVENT.EVENT_DATE BETWEEN '2019-03-15' AND '2020-03-20',"SELECT DISTINCT EVENT_NAME FROM EVENT WHERE TYPE = 'GAME' AND DATE(SUBSTR(EVENT_DATE, 1, 10)) BETWEEN '2019-03-15' AND '2020-03-20' AND STATUS = 'CLOSED'",
2,1435,ERROR,"NotSupportedError: Not supported feature: {'date': {'substr': ['EVENT_DATE', 1, 10]}}",,SELECT EVENT.EVENT_NAME FROM EVENT WHERE EVENT.TYPE = 'GAME' AND EVENT.STATUS = 'CLOSED' AND EVENT.EVENT_DATE BETWEEN '2019-03-15' AND '2020-03-20',"SELECT DISTINCT EVENT_NAME FROM EVENT WHERE TYPE = 'GAME' AND DATE(SUBSTR(EVENT_DATE, 1, 10)) BETWEEN '2019-03-15' AND '2020-03-20' AND STATUS = 'CLOSED'",
3,1435,ERROR,"NotSupportedError: Not supported feature: {'date': {'substr': ['EVENT_DATE', 1, 10]}}",,SELECT EVENT.EVENT_NAME FROM EVENT WHERE EVENT.TYPE = 'GAME' AND EVENT.STATUS = 'CLOSED' AND EVENT.EVENT_DATE BETWEEN '2019-03-15' AND '2020-03-20',"SELECT DISTINCT EVENT_NAME FROM EVENT WHERE TYPE = 'GAME' AND DATE(SUBSTR(EVENT_DATE, 1, 10)) BETWEEN '2019-03-15' AND '2020-03-20' AND STATUS = 'CLOSED'",
1,1436,True,,0.056203,SELECT ATTENDANCE.LINK_TO_EVENT FROM ATTENDANCE INNER JOIN EXPENSE ON ATTENDANCE.LINK_TO_MEMBER = EXPENSE.LINK_TO_MEMBER WHERE EXPENSE.COST > 50,SELECT DISTINCT T3.LINK_TO_EVENT FROM EXPENSE AS T1 INNER JOIN MEMBER AS T2 ON T1.LINK_TO_MEMBER = T2.MEMBER_ID INNER JOIN ATTENDANCE AS T3 ON T2.MEMBER_ID = T3.LINK_TO_MEMBER WHERE T1.COST > 50,
1,1437,ERROR,"NotSupportedError: Not supported feature: {'date': {'substr': ['T1__EXPENSE_DATE', 1, 10]}}",,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME, ATTENDANCE.LINK_TO_EVENT FROM EXPENSE INNER JOIN MEMBER ON EXPENSE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN ATTENDANCE ON MEMBER.MEMBER_ID = ATTENDANCE.LINK_TO_MEMBER WHERE EXPENSE.APPROVED = 'TRUE' AND EXPENSE.EXPENSE_DATE BETWEEN '2019-01-10' AND '2019-11-19'","SELECT DISTINCT T1.LINK_TO_MEMBER, T3.LINK_TO_EVENT FROM EXPENSE AS T1 INNER JOIN MEMBER AS T2 ON T1.LINK_TO_MEMBER = T2.MEMBER_ID INNER JOIN ATTENDANCE AS T3 ON T2.MEMBER_ID = T3.LINK_TO_MEMBER WHERE DATE(SUBSTR(T1.EXPENSE_DATE, 1, 10)) BETWEEN '2019-01-10' AND '2019-11-19' AND T1.APPROVED = 'TRUE'",
2,1437,ERROR,"NotSupportedError: Not supported feature: {'date': {'substr': ['T1__EXPENSE_DATE', 1, 10]}}",,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME, ATTENDANCE.LINK_TO_EVENT FROM EXPENSE INNER JOIN MEMBER ON EXPENSE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN ATTENDANCE ON MEMBER.MEMBER_ID = ATTENDANCE.LINK_TO_MEMBER WHERE EXPENSE.APPROVED = 'TRUE' AND EXPENSE.EXPENSE_DATE BETWEEN '2019-01-10' AND '2019-11-19'","SELECT DISTINCT T1.LINK_TO_MEMBER, T3.LINK_TO_EVENT FROM EXPENSE AS T1 INNER JOIN MEMBER AS T2 ON T1.LINK_TO_MEMBER = T2.MEMBER_ID INNER JOIN ATTENDANCE AS T3 ON T2.MEMBER_ID = T3.LINK_TO_MEMBER WHERE DATE(SUBSTR(T1.EXPENSE_DATE, 1, 10)) BETWEEN '2019-01-10' AND '2019-11-19' AND T1.APPROVED = 'TRUE'",
3,1437,ERROR,"NotSupportedError: Not supported feature: {'date': {'substr': ['T1__EXPENSE_DATE', 1, 10]}}",,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME, ATTENDANCE.LINK_TO_EVENT FROM EXPENSE INNER JOIN MEMBER ON EXPENSE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN ATTENDANCE ON MEMBER.MEMBER_ID = ATTENDANCE.LINK_TO_MEMBER WHERE EXPENSE.APPROVED = 'TRUE' AND EXPENSE.EXPENSE_DATE BETWEEN '2019-01-10' AND '2019-11-19'","SELECT DISTINCT T1.LINK_TO_MEMBER, T3.LINK_TO_EVENT FROM EXPENSE AS T1 INNER JOIN MEMBER AS T2 ON T1.LINK_TO_MEMBER = T2.MEMBER_ID INNER JOIN ATTENDANCE AS T3 ON T2.MEMBER_ID = T3.LINK_TO_MEMBER WHERE DATE(SUBSTR(T1.EXPENSE_DATE, 1, 10)) BETWEEN '2019-01-10' AND '2019-11-19' AND T1.APPROVED = 'TRUE'",
1,1438,True,,0.065201,SELECT MAJOR.COLLEGE FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MEMBER.FIRST_NAME = 'KATY' AND MEMBER.LINK_TO_MAJOR = 'REC1N0UPIVLY5ESTO';,SELECT T2.COLLEGE FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T2.MAJOR_ID = T1.LINK_TO_MAJOR WHERE T1.LINK_TO_MAJOR = 'REC1N0UPIVLY5ESTO' AND T1.FIRST_NAME = 'KATY',
1,1439,True,,0.064084,SELECT MEMBER.PHONE FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.COLLEGE = 'COLLEGE OF AGRICULTURE AND APPLIED SCIENCES' AND MAJOR.MAJOR_NAME = 'BUSINESS';,SELECT T1.PHONE FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T2.MAJOR_ID = T1.LINK_TO_MAJOR WHERE T2.MAJOR_NAME = 'BUSINESS' AND T2.COLLEGE = 'COLLEGE OF AGRICULTURE AND APPLIED SCIENCES',
1,1440,ERROR,"NotSupportedError: Not supported feature: {'date': {'substr': ['T2__EXPENSE_DATE', 1, 10]}}",,SELECT MEMBER.EMAIL FROM EXPENSE INNER JOIN MEMBER ON EXPENSE.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE EXPENSE.COST > 20 AND EXPENSE.EXPENSE_DATE BETWEEN '2019-09-10' AND '2019-11-19';,"SELECT DISTINCT T1.EMAIL FROM MEMBER AS T1 INNER JOIN EXPENSE AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE DATE(SUBSTR(T2.EXPENSE_DATE, 1, 10)) BETWEEN '2019-09-10' AND '2019-11-19' AND T2.COST > 20",
2,1440,ERROR,"NotSupportedError: Not supported feature: {'date': {'substr': ['T2__EXPENSE_DATE', 1, 10]}}",,SELECT MEMBER.EMAIL FROM EXPENSE INNER JOIN MEMBER ON EXPENSE.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE EXPENSE.COST > 20 AND EXPENSE.EXPENSE_DATE BETWEEN '2019-09-10' AND '2019-11-19';,"SELECT DISTINCT T1.EMAIL FROM MEMBER AS T1 INNER JOIN EXPENSE AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE DATE(SUBSTR(T2.EXPENSE_DATE, 1, 10)) BETWEEN '2019-09-10' AND '2019-11-19' AND T2.COST > 20",
3,1440,ERROR,"NotSupportedError: Not supported feature: {'date': {'substr': ['T2__EXPENSE_DATE', 1, 10]}}",,SELECT MEMBER.EMAIL FROM EXPENSE INNER JOIN MEMBER ON EXPENSE.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE EXPENSE.COST > 20 AND EXPENSE.EXPENSE_DATE BETWEEN '2019-09-10' AND '2019-11-19';,"SELECT DISTINCT T1.EMAIL FROM MEMBER AS T1 INNER JOIN EXPENSE AS T2 ON T1.MEMBER_ID = T2.LINK_TO_MEMBER WHERE DATE(SUBSTR(T2.EXPENSE_DATE, 1, 10)) BETWEEN '2019-09-10' AND '2019-11-19' AND T2.COST > 20",
1,1441,ERROR,"NotImplementedError: {'like': ['T2__MAJOR_NAME', {'literal': '%EDUCATION%'}]}",,SELECT COUNT(*) FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'EDUCATION' AND MAJOR.COLLEGE = 'COLLEGE OF EDUCATION & HUMAN SERVICES',SELECT COUNT(T1.MEMBER_ID) FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T2.MAJOR_ID = T1.LINK_TO_MAJOR WHERE T1.POSITION = 'MEMBER' AND T2.MAJOR_NAME LIKE '%EDUCATION%' AND T2.COLLEGE = 'COLLEGE OF EDUCATION & HUMAN SERVICES',
2,1441,ERROR,"NotImplementedError: {'like': ['T2__MAJOR_NAME', {'literal': '%EDUCATION%'}]}",,SELECT COUNT(*) FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'EDUCATION' AND MAJOR.COLLEGE = 'COLLEGE OF EDUCATION & HUMAN SERVICES',SELECT COUNT(T1.MEMBER_ID) FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T2.MAJOR_ID = T1.LINK_TO_MAJOR WHERE T1.POSITION = 'MEMBER' AND T2.MAJOR_NAME LIKE '%EDUCATION%' AND T2.COLLEGE = 'COLLEGE OF EDUCATION & HUMAN SERVICES',
3,1441,ERROR,"NotImplementedError: {'like': ['T2__MAJOR_NAME', {'literal': '%EDUCATION%'}]}",,SELECT COUNT(*) FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'EDUCATION' AND MAJOR.COLLEGE = 'COLLEGE OF EDUCATION & HUMAN SERVICES',SELECT COUNT(T1.MEMBER_ID) FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T2.MAJOR_ID = T1.LINK_TO_MAJOR WHERE T1.POSITION = 'MEMBER' AND T2.MAJOR_NAME LIKE '%EDUCATION%' AND T2.COLLEGE = 'COLLEGE OF EDUCATION & HUMAN SERVICES',
1,1442,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(CASE WHEN REMAINING < 0 THEN 1 ELSE 0 END) AS REAL) / COUNT(EVENT_ID)) * 100 FROM BUDGET,SELECT CAST(SUM(CASE WHEN REMAINING < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(BUDGET_ID) FROM BUDGET,
2,1442,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(CASE WHEN REMAINING < 0 THEN 1 ELSE 0 END) AS REAL) / COUNT(EVENT_ID)) * 100 FROM BUDGET,SELECT CAST(SUM(CASE WHEN REMAINING < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(BUDGET_ID) FROM BUDGET,
3,1442,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(CASE WHEN REMAINING < 0 THEN 1 ELSE 0 END) AS REAL) / COUNT(EVENT_ID)) * 100 FROM BUDGET,SELECT CAST(SUM(CASE WHEN REMAINING < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(BUDGET_ID) FROM BUDGET,
1,1443,ERROR,"NotSupportedError: Not supported feature: {'date': {'substr': ['EVENT_DATE', 1, 10]}}",,"SELECT EVENT.EVENT_ID, EVENT.LOCATION, EVENT.STATUS FROM EVENT WHERE EVENT.EVENT_DATE BETWEEN '2019-11-01' AND '2020-03-31';","SELECT EVENT_ID, LOCATION, STATUS FROM EVENT WHERE DATE(SUBSTR(EVENT_DATE, 1, 10)) BETWEEN '2019-11-01' AND '2020-03-31'",
2,1443,ERROR,"NotSupportedError: Not supported feature: {'date': {'substr': ['EVENT_DATE', 1, 10]}}",,"SELECT EVENT.EVENT_ID, EVENT.LOCATION, EVENT.STATUS FROM EVENT WHERE EVENT.EVENT_DATE BETWEEN '2019-11-01' AND '2020-03-31';","SELECT EVENT_ID, LOCATION, STATUS FROM EVENT WHERE DATE(SUBSTR(EVENT_DATE, 1, 10)) BETWEEN '2019-11-01' AND '2020-03-31'",
3,1443,ERROR,"NotSupportedError: Not supported feature: {'date': {'substr': ['EVENT_DATE', 1, 10]}}",,"SELECT EVENT.EVENT_ID, EVENT.LOCATION, EVENT.STATUS FROM EVENT WHERE EVENT.EVENT_DATE BETWEEN '2019-11-01' AND '2020-03-31';","SELECT EVENT_ID, LOCATION, STATUS FROM EVENT WHERE DATE(SUBSTR(EVENT_DATE, 1, 10)) BETWEEN '2019-11-01' AND '2020-03-31'",
1,1444,True,,0.039137,SELECT EXPENSE_DESCRIPTION FROM EXPENSE GROUP BY EXPENSE_DESCRIPTION HAVING AVG(COST) > 50,SELECT EXPENSE_DESCRIPTION FROM EXPENSE GROUP BY EXPENSE_DESCRIPTION HAVING AVG(COST) > 50,
1,1445,True,,0.025807,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME FROM MEMBER WHERE MEMBER.T_SHIRT_SIZE = 'X-LARGE'","SELECT FIRST_NAME, LAST_NAME FROM MEMBER WHERE T_SHIRT_SIZE = 'X-LARGE'",
1,1446,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(CASE WHEN TYPE = 'PO BOX' THEN 1 ELSE 0 END) AS REAL) / COUNT(ZIP_CODE)) * 100 AS PERCENTAGE FROM ZIP_CODE,SELECT CAST(SUM(CASE WHEN TYPE = 'PO BOX' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ZIP_CODE) FROM ZIP_CODE,
2,1446,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(CASE WHEN TYPE = 'PO BOX' THEN 1 ELSE 0 END) AS REAL) / COUNT(ZIP_CODE)) * 100 AS PERCENTAGE FROM ZIP_CODE,SELECT CAST(SUM(CASE WHEN TYPE = 'PO BOX' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ZIP_CODE) FROM ZIP_CODE,
3,1446,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST(SUM(CASE WHEN TYPE = 'PO BOX' THEN 1 ELSE 0 END) AS REAL) / COUNT(ZIP_CODE)) * 100 AS PERCENTAGE FROM ZIP_CODE,SELECT CAST(SUM(CASE WHEN TYPE = 'PO BOX' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ZIP_CODE) FROM ZIP_CODE,
1,1447,True,,0.045869,"SELECT EVENT.EVENT_NAME, EVENT.LOCATION FROM EVENT INNER JOIN BUDGET ON EVENT.EVENT_ID = BUDGET.LINK_TO_EVENT WHERE BUDGET.REMAINING > 0","SELECT DISTINCT T1.EVENT_NAME, T1.LOCATION FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T2.REMAINING > 0",
1,1448,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXPENSE__LINK_TO_EVENT`,,"SELECT EVENT.EVENT_NAME, EVENT.EVENT_DATE FROM EVENT INNER JOIN EXPENSE ON EVENT.EVENT_ID = EXPENSE.LINK_TO_EVENT WHERE EXPENSE.EXPENSE_DESCRIPTION = 'PIZZA' AND EXPENSE.COST > 50 AND EXPENSE.COST < 100","SELECT T1.EVENT_NAME, T1.EVENT_DATE FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET WHERE T3.EXPENSE_DESCRIPTION = 'PIZZA' AND T3.COST > 50 AND T3.COST < 100",
2,1448,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXPENSE__LINK_TO_EVENT`,,"SELECT EVENT.EVENT_NAME, EVENT.EVENT_DATE FROM EVENT INNER JOIN EXPENSE ON EVENT.EVENT_ID = EXPENSE.LINK_TO_EVENT WHERE EXPENSE.EXPENSE_DESCRIPTION = 'PIZZA' AND EXPENSE.COST > 50 AND EXPENSE.COST < 100","SELECT T1.EVENT_NAME, T1.EVENT_DATE FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET WHERE T3.EXPENSE_DESCRIPTION = 'PIZZA' AND T3.COST > 50 AND T3.COST < 100",
3,1448,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXPENSE__LINK_TO_EVENT`,,"SELECT EVENT.EVENT_NAME, EVENT.EVENT_DATE FROM EVENT INNER JOIN EXPENSE ON EVENT.EVENT_ID = EXPENSE.LINK_TO_EVENT WHERE EXPENSE.EXPENSE_DESCRIPTION = 'PIZZA' AND EXPENSE.COST > 50 AND EXPENSE.COST < 100","SELECT T1.EVENT_NAME, T1.EVENT_DATE FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET WHERE T3.EXPENSE_DESCRIPTION = 'PIZZA' AND T3.COST > 50 AND T3.COST < 100",
1,1449,True,,0.072574,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME, MAJOR.MAJOR_NAME FROM EXPENSE INNER JOIN MEMBER ON EXPENSE.LINK_TO_MEMBER = MEMBER.MEMBER_ID INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE EXPENSE.COST > 100","SELECT DISTINCT T1.FIRST_NAME, T1.LAST_NAME, T2.MAJOR_NAME FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T2.MAJOR_ID = T1.LINK_TO_MAJOR INNER JOIN EXPENSE AS T3 ON T1.MEMBER_ID = T3.LINK_TO_MEMBER WHERE T3.COST > 100",
1,1450,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EVENT (
	EVENT_ID VARCHAR(20),
	EVENT_NAME VARCHAR(20),
	EVENT_DATE VARCHAR(20),
	TYPE VARCHAR(20),
	NOTES VARCHAR(20),
	LOCATION VARCHAR(20),
	STATUS VARCHAR(20)
);
INSERT INTO EVENT VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483649', '2147483648');
CREATE TABLE MAJOR (
	MAJOR_ID VARCHAR(20),
	MAJOR_NAME VARCHAR(20),
	DEPARTMENT VARCHAR(20),
	COLLEGE VARCHAR(20)
);
INSERT INTO MAJOR VALUES ('2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ZIP_CODE (
	ZIP_CODE VARCHAR(20),
	TYPE VARCHAR(20),
	CITY VARCHAR(20),
	COUNTY VARCHAR(20),
	STATE VARCHAR(20),
	SHORT_STATE VARCHAR(20)
);
INSERT INTO ZIP_CODE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ATTENDANCE (
	LINK_TO_EVENT VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO ATTENDANCE VALUES ('2147483648', '2147483648');
CREATE TABLE BUDGET (
	BUDGET_ID VARCHAR(20),
	CATEGORY VARCHAR(20),
	SPENT VARCHAR(20),
	REMAINING VARCHAR(20),
	AMOUNT VARCHAR(20),
	EVENT_STATUS VARCHAR(20),
	LINK_TO_EVENT VARCHAR(20)
);
INSERT INTO BUDGET VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE EXPENSE (
	EXPENSE_ID VARCHAR(20),
	EXPENSE_DESCRIPTION VARCHAR(20),
	EXPENSE_DATE VARCHAR(20),
	COST VARCHAR(20),
	APPROVED VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20),
	LINK_TO_BUDGET VARCHAR(20)
);
INSERT INTO EXPENSE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE INCOME (
	INCOME_ID VARCHAR(20),
	DATE_RECEIVED VARCHAR(20),
	AMOUNT VARCHAR(20),
	SOURCE VARCHAR(20),
	NOTES VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO INCOME VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR(20),
	FIRST_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	EMAIL VARCHAR(20),
	POSITION VARCHAR(20),
	T_SHIRT_SIZE VARCHAR(20),
	PHONE VARCHAR(20),
	ZIP VARCHAR(20),
	LINK_TO_MAJOR VARCHAR(20)
);
INSERT INTO MEMBER VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
SELECT ZIP_CODE.CITY, ZIP_CODE.COUNTY FROM EVENT INNER JOIN ATTENDANCE ON EVENT.EVENT_ID = ATTENDANCE.LINK_TO_EVENT INNER JOIN INCOME ON ATTENDANCE.LINK_TO_MEMBER = INCOME.LINK_TO_MEMBER INNER JOIN ZIP_CODE ON EVENT.LOCATION = ZIP_CODE.ZIP_CODE GROUP BY EVENT.EVENT_ID HAVING COUNT(INCOME.INCOME_ID) > 40;
-- ----------sql2------------
-- 2147483648, 2147483648
SELECT DISTINCT T3.CITY, T3.COUNTY FROM INCOME AS T1 INNER JOIN MEMBER AS T2 ON T1.LINK_TO_MEMBER = T2.MEMBER_ID INNER JOIN ZIP_CODE AS T3 ON T3.ZIP_CODE = T2.ZIP WHERE T1.AMOUNT > 40;
",0.088925,"SELECT ZIP_CODE.CITY, ZIP_CODE.COUNTY FROM EVENT INNER JOIN ATTENDANCE ON EVENT.EVENT_ID = ATTENDANCE.LINK_TO_EVENT INNER JOIN INCOME ON ATTENDANCE.LINK_TO_MEMBER = INCOME.LINK_TO_MEMBER INNER JOIN ZIP_CODE ON EVENT.LOCATION = ZIP_CODE.ZIP_CODE GROUP BY EVENT.EVENT_ID HAVING COUNT(INCOME.INCOME_ID) > 40","SELECT DISTINCT T3.CITY, T3.COUNTY FROM INCOME AS T1 INNER JOIN MEMBER AS T2 ON T1.LINK_TO_MEMBER = T2.MEMBER_ID INNER JOIN ZIP_CODE AS T3 ON T3.ZIP_CODE = T2.ZIP WHERE T1.AMOUNT > 40",
1,1451,ERROR,IndexError: list index out of range,,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME FROM EXPENSE INNER JOIN MEMBER ON EXPENSE.LINK_TO_MEMBER = MEMBER.MEMBER_ID GROUP BY EXPENSE.LINK_TO_MEMBER HAVING COUNT(DISTINCT EVENT.EVENT_ID) > 1 ORDER BY SUM(EXPENSE.COST) DESC LIMIT 1",SELECT T2.MEMBER_ID FROM EXPENSE AS T1 INNER JOIN MEMBER AS T2 ON T1.LINK_TO_MEMBER = T2.MEMBER_ID INNER JOIN BUDGET AS T3 ON T1.LINK_TO_BUDGET = T3.BUDGET_ID INNER JOIN EVENT AS T4 ON T3.LINK_TO_EVENT = T4.EVENT_ID GROUP BY T2.MEMBER_ID HAVING COUNT(DISTINCT T4.EVENT_ID) > 1 ORDER BY SUM(T1.COST) DESC LIMIT 1,
2,1451,ERROR,IndexError: list index out of range,,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME FROM EXPENSE INNER JOIN MEMBER ON EXPENSE.LINK_TO_MEMBER = MEMBER.MEMBER_ID GROUP BY EXPENSE.LINK_TO_MEMBER HAVING COUNT(DISTINCT EVENT.EVENT_ID) > 1 ORDER BY SUM(EXPENSE.COST) DESC LIMIT 1",SELECT T2.MEMBER_ID FROM EXPENSE AS T1 INNER JOIN MEMBER AS T2 ON T1.LINK_TO_MEMBER = T2.MEMBER_ID INNER JOIN BUDGET AS T3 ON T1.LINK_TO_BUDGET = T3.BUDGET_ID INNER JOIN EVENT AS T4 ON T3.LINK_TO_EVENT = T4.EVENT_ID GROUP BY T2.MEMBER_ID HAVING COUNT(DISTINCT T4.EVENT_ID) > 1 ORDER BY SUM(T1.COST) DESC LIMIT 1,
3,1451,ERROR,IndexError: list index out of range,,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME FROM EXPENSE INNER JOIN MEMBER ON EXPENSE.LINK_TO_MEMBER = MEMBER.MEMBER_ID GROUP BY EXPENSE.LINK_TO_MEMBER HAVING COUNT(DISTINCT EVENT.EVENT_ID) > 1 ORDER BY SUM(EXPENSE.COST) DESC LIMIT 1",SELECT T2.MEMBER_ID FROM EXPENSE AS T1 INNER JOIN MEMBER AS T2 ON T1.LINK_TO_MEMBER = T2.MEMBER_ID INNER JOIN BUDGET AS T3 ON T1.LINK_TO_BUDGET = T3.BUDGET_ID INNER JOIN EVENT AS T4 ON T3.LINK_TO_EVENT = T4.EVENT_ID GROUP BY T2.MEMBER_ID HAVING COUNT(DISTINCT T4.EVENT_ID) > 1 ORDER BY SUM(T1.COST) DESC LIMIT 1,
1,1452,True,,0.05886,SELECT AVG(EXPENSE.COST) FROM EXPENSE INNER JOIN MEMBER ON EXPENSE.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE MEMBER.POSITION != 'MEMBER',SELECT AVG(T1.COST) FROM EXPENSE AS T1 INNER JOIN MEMBER AS T2 ON T1.LINK_TO_MEMBER = T2.MEMBER_ID WHERE T2.POSITION != 'MEMBER',
1,1453,ERROR,AttributeError: 'FProjectionTuple' object has no attribute 'require_tuples',,SELECT EVENT.EVENT_NAME FROM BUDGET INNER JOIN EXPENSE ON BUDGET.BUDGET_ID = EXPENSE.LINK_TO_BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE BUDGET.CATEGORY = 'PARKING' HAVING EXPENSE.COST < (SELECT AVG(EXPENSE.COST) FROM BUDGET INNER JOIN EXPENSE ON BUDGET.BUDGET_ID = EXPENSE.LINK_TO_BUDGET WHERE BUDGET.CATEGORY = 'PARKING'),SELECT T1.EVENT_NAME FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET WHERE T2.CATEGORY = 'PARKING' AND T3.COST < (SELECT AVG(COST) FROM EXPENSE),
2,1453,ERROR,AttributeError: 'FProjectionTuple' object has no attribute 'require_tuples',,SELECT EVENT.EVENT_NAME FROM BUDGET INNER JOIN EXPENSE ON BUDGET.BUDGET_ID = EXPENSE.LINK_TO_BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE BUDGET.CATEGORY = 'PARKING' HAVING EXPENSE.COST < (SELECT AVG(EXPENSE.COST) FROM BUDGET INNER JOIN EXPENSE ON BUDGET.BUDGET_ID = EXPENSE.LINK_TO_BUDGET WHERE BUDGET.CATEGORY = 'PARKING'),SELECT T1.EVENT_NAME FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET WHERE T2.CATEGORY = 'PARKING' AND T3.COST < (SELECT AVG(COST) FROM EXPENSE),
3,1453,ERROR,AttributeError: 'FProjectionTuple' object has no attribute 'require_tuples',,SELECT EVENT.EVENT_NAME FROM BUDGET INNER JOIN EXPENSE ON BUDGET.BUDGET_ID = EXPENSE.LINK_TO_BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE BUDGET.CATEGORY = 'PARKING' HAVING EXPENSE.COST < (SELECT AVG(EXPENSE.COST) FROM BUDGET INNER JOIN EXPENSE ON BUDGET.BUDGET_ID = EXPENSE.LINK_TO_BUDGET WHERE BUDGET.CATEGORY = 'PARKING'),SELECT T1.EVENT_NAME FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET WHERE T2.CATEGORY = 'PARKING' AND T3.COST < (SELECT AVG(COST) FROM EXPENSE),
1,1454,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXPENSE__LINK_TO_EVENT`,,SELECT CAST(SUM(EXPENSE.COST) AS REAL) * 100 / COUNT(EVENT.EVENT_ID) AS PERCENTAGE FROM EVENT INNER JOIN EXPENSE ON EVENT.EVENT_ID = EXPENSE.LINK_TO_EVENT WHERE EVENT.TYPE = 'MEETING',SELECT SUM(CASE WHEN T1.TYPE = 'MEETING' THEN T3.COST ELSE 0 END) * 100 / SUM(T3.COST) FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET,
2,1454,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXPENSE__LINK_TO_EVENT`,,SELECT CAST(SUM(EXPENSE.COST) AS REAL) * 100 / COUNT(EVENT.EVENT_ID) AS PERCENTAGE FROM EVENT INNER JOIN EXPENSE ON EVENT.EVENT_ID = EXPENSE.LINK_TO_EVENT WHERE EVENT.TYPE = 'MEETING',SELECT SUM(CASE WHEN T1.TYPE = 'MEETING' THEN T3.COST ELSE 0 END) * 100 / SUM(T3.COST) FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET,
3,1454,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute EXPENSE__LINK_TO_EVENT`,,SELECT CAST(SUM(EXPENSE.COST) AS REAL) * 100 / COUNT(EVENT.EVENT_ID) AS PERCENTAGE FROM EVENT INNER JOIN EXPENSE ON EVENT.EVENT_ID = EXPENSE.LINK_TO_EVENT WHERE EVENT.TYPE = 'MEETING',SELECT SUM(CASE WHEN T1.TYPE = 'MEETING' THEN T3.COST ELSE 0 END) * 100 / SUM(T3.COST) FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN EXPENSE AS T3 ON T2.BUDGET_ID = T3.LINK_TO_BUDGET,
1,1455,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EVENT (
	EVENT_ID VARCHAR(20),
	EVENT_NAME VARCHAR(20),
	EVENT_DATE VARCHAR(20),
	TYPE VARCHAR(20),
	NOTES VARCHAR(20),
	LOCATION VARCHAR(20),
	STATUS VARCHAR(20)
);
INSERT INTO EVENT VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MAJOR (
	MAJOR_ID VARCHAR(20),
	MAJOR_NAME VARCHAR(20),
	DEPARTMENT VARCHAR(20),
	COLLEGE VARCHAR(20)
);
INSERT INTO MAJOR VALUES ('2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ZIP_CODE (
	ZIP_CODE VARCHAR(20),
	TYPE VARCHAR(20),
	CITY VARCHAR(20),
	COUNTY VARCHAR(20),
	STATE VARCHAR(20),
	SHORT_STATE VARCHAR(20)
);
INSERT INTO ZIP_CODE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ATTENDANCE (
	LINK_TO_EVENT VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO ATTENDANCE VALUES ('2147483648', '2147483648');
CREATE TABLE BUDGET (
	BUDGET_ID VARCHAR(20),
	CATEGORY VARCHAR(20),
	SPENT VARCHAR(20),
	REMAINING VARCHAR(20),
	AMOUNT VARCHAR(20),
	EVENT_STATUS VARCHAR(20),
	LINK_TO_EVENT VARCHAR(20)
);
INSERT INTO BUDGET VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE EXPENSE (
	EXPENSE_ID VARCHAR(20),
	EXPENSE_DESCRIPTION VARCHAR(20),
	EXPENSE_DATE VARCHAR(20),
	COST VARCHAR(20),
	APPROVED VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20),
	LINK_TO_BUDGET VARCHAR(20)
);
INSERT INTO EXPENSE VALUES ('2147483648', 'WATER, CHIPS, COOKIES', '2147483648', '2147483649', '2147483648', '2147483648', '2147483648');
CREATE TABLE INCOME (
	INCOME_ID VARCHAR(20),
	DATE_RECEIVED VARCHAR(20),
	AMOUNT VARCHAR(20),
	SOURCE VARCHAR(20),
	NOTES VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO INCOME VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR(20),
	FIRST_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	EMAIL VARCHAR(20),
	POSITION VARCHAR(20),
	T_SHIRT_SIZE VARCHAR(20),
	PHONE VARCHAR(20),
	ZIP VARCHAR(20),
	LINK_TO_MAJOR VARCHAR(20)
);
INSERT INTO MEMBER VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
-- 2147483649
SELECT EXPENSE.COST FROM EXPENSE WHERE EXPENSE.EXPENSE_DESCRIPTION = 'WATER, CHIPS, COOKIES' ORDER BY EXPENSE.COST DESC LIMIT 1;
-- ----------sql2------------
-- 2147483648
SELECT T2.BUDGET_ID FROM EXPENSE AS T1 INNER JOIN BUDGET AS T2 ON T1.LINK_TO_BUDGET = T2.BUDGET_ID WHERE T1.EXPENSE_DESCRIPTION = 'WATER, CHIPS, COOKIES' ORDER BY T1.COST DESC LIMIT 1;
",0.037213,"SELECT EXPENSE.COST FROM EXPENSE WHERE EXPENSE.EXPENSE_DESCRIPTION = 'WATER, CHIPS, COOKIES' ORDER BY EXPENSE.COST DESC LIMIT 1","SELECT T2.BUDGET_ID FROM EXPENSE AS T1 INNER JOIN BUDGET AS T2 ON T1.LINK_TO_BUDGET = T2.BUDGET_ID WHERE T1.EXPENSE_DESCRIPTION = 'WATER, CHIPS, COOKIES' ORDER BY T1.COST DESC LIMIT 1",
1,1456,True,,0.062878,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME FROM ( SELECT EXPENSE.LINK_TO_MEMBER, SUM(EXPENSE.COST) AS TOTAL_COST FROM EXPENSE GROUP BY EXPENSE.LINK_TO_MEMBER ORDER BY TOTAL_COST DESC LIMIT 5 ) AS TOP_SPENDERS INNER JOIN MEMBER ON TOP_SPENDERS.LINK_TO_MEMBER = MEMBER.MEMBER_ID","SELECT T3.FIRST_NAME, T3.LAST_NAME FROM EXPENSE AS T1 INNER JOIN BUDGET AS T2 ON T1.LINK_TO_BUDGET = T2.BUDGET_ID INNER JOIN MEMBER AS T3 ON T1.LINK_TO_MEMBER = T3.MEMBER_ID ORDER BY T2.SPENT DESC LIMIT 5",
1,1457,ERROR,AttributeError: 'FBaseTable' object has no attribute 'set_attributes',,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME, MEMBER.PHONE FROM MEMBER INNER JOIN EXPENSE ON MEMBER.MEMBER_ID = EXPENSE.LINK_TO_MEMBER GROUP BY EXPENSE.LINK_TO_MEMBER HAVING AVG(EXPENSE.COST) > (SELECT AVG(EXPENSE.COST) FROM EXPENSE)","SELECT DISTINCT T3.FIRST_NAME, T3.LAST_NAME, T3.PHONE FROM EXPENSE AS T1 INNER JOIN BUDGET AS T2 ON T1.LINK_TO_BUDGET = T2.BUDGET_ID INNER JOIN MEMBER AS T3 ON T3.MEMBER_ID = T1.LINK_TO_MEMBER WHERE T1.COST > ( SELECT AVG(T1.COST) FROM EXPENSE AS T1 INNER JOIN BUDGET AS T2 ON T1.LINK_TO_BUDGET = T2.BUDGET_ID INNER JOIN MEMBER AS T3 ON T3.MEMBER_ID = T1.LINK_TO_MEMBER )",
2,1457,ERROR,AttributeError: 'FBaseTable' object has no attribute 'set_attributes',,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME, MEMBER.PHONE FROM MEMBER INNER JOIN EXPENSE ON MEMBER.MEMBER_ID = EXPENSE.LINK_TO_MEMBER GROUP BY EXPENSE.LINK_TO_MEMBER HAVING AVG(EXPENSE.COST) > (SELECT AVG(EXPENSE.COST) FROM EXPENSE)","SELECT DISTINCT T3.FIRST_NAME, T3.LAST_NAME, T3.PHONE FROM EXPENSE AS T1 INNER JOIN BUDGET AS T2 ON T1.LINK_TO_BUDGET = T2.BUDGET_ID INNER JOIN MEMBER AS T3 ON T3.MEMBER_ID = T1.LINK_TO_MEMBER WHERE T1.COST > ( SELECT AVG(T1.COST) FROM EXPENSE AS T1 INNER JOIN BUDGET AS T2 ON T1.LINK_TO_BUDGET = T2.BUDGET_ID INNER JOIN MEMBER AS T3 ON T3.MEMBER_ID = T1.LINK_TO_MEMBER )",
3,1457,ERROR,AttributeError: 'FBaseTable' object has no attribute 'set_attributes',,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME, MEMBER.PHONE FROM MEMBER INNER JOIN EXPENSE ON MEMBER.MEMBER_ID = EXPENSE.LINK_TO_MEMBER GROUP BY EXPENSE.LINK_TO_MEMBER HAVING AVG(EXPENSE.COST) > (SELECT AVG(EXPENSE.COST) FROM EXPENSE)","SELECT DISTINCT T3.FIRST_NAME, T3.LAST_NAME, T3.PHONE FROM EXPENSE AS T1 INNER JOIN BUDGET AS T2 ON T1.LINK_TO_BUDGET = T2.BUDGET_ID INNER JOIN MEMBER AS T3 ON T3.MEMBER_ID = T1.LINK_TO_MEMBER WHERE T1.COST > ( SELECT AVG(T1.COST) FROM EXPENSE AS T1 INNER JOIN BUDGET AS T2 ON T1.LINK_TO_BUDGET = T2.BUDGET_ID INNER JOIN MEMBER AS T3 ON T3.MEMBER_ID = T1.LINK_TO_MEMBER )",
1,1458,ERROR,NotImplementedError: {'real': {}},,SELECT ((SELECT COUNT(*) FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE ZIP_CODE.STATE = 'NEW JERSEY' AND MEMBER.POSITION = 'MEMBER') * 100 / (SELECT COUNT(*) FROM MEMBER WHERE POSITION = 'MEMBER')) - ((SELECT COUNT(*) FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE ZIP_CODE.STATE = 'VERMONT' AND MEMBER.POSITION = 'MEMBER') * 100 / (SELECT COUNT(*) FROM MEMBER WHERE POSITION = 'MEMBER')) AS DIFFERENCE_PERCENTAGE FROM MEMBER LIMIT 1;,SELECT CAST((SUM(CASE WHEN T2.STATE = 'NEW JERSEY' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.STATE = 'VERMONT' THEN 1 ELSE 0 END)) AS REAL) * 100 / COUNT(T1.MEMBER_ID) AS DIFF FROM MEMBER AS T1 INNER JOIN ZIP_CODE AS T2 ON T2.ZIP_CODE = T1.ZIP,
2,1458,ERROR,NotImplementedError: {'real': {}},,SELECT ((SELECT COUNT(*) FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE ZIP_CODE.STATE = 'NEW JERSEY' AND MEMBER.POSITION = 'MEMBER') * 100 / (SELECT COUNT(*) FROM MEMBER WHERE POSITION = 'MEMBER')) - ((SELECT COUNT(*) FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE ZIP_CODE.STATE = 'VERMONT' AND MEMBER.POSITION = 'MEMBER') * 100 / (SELECT COUNT(*) FROM MEMBER WHERE POSITION = 'MEMBER')) AS DIFFERENCE_PERCENTAGE FROM MEMBER LIMIT 1;,SELECT CAST((SUM(CASE WHEN T2.STATE = 'NEW JERSEY' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.STATE = 'VERMONT' THEN 1 ELSE 0 END)) AS REAL) * 100 / COUNT(T1.MEMBER_ID) AS DIFF FROM MEMBER AS T1 INNER JOIN ZIP_CODE AS T2 ON T2.ZIP_CODE = T1.ZIP,
3,1458,ERROR,NotImplementedError: {'real': {}},,SELECT ((SELECT COUNT(*) FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE ZIP_CODE.STATE = 'NEW JERSEY' AND MEMBER.POSITION = 'MEMBER') * 100 / (SELECT COUNT(*) FROM MEMBER WHERE POSITION = 'MEMBER')) - ((SELECT COUNT(*) FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE ZIP_CODE.STATE = 'VERMONT' AND MEMBER.POSITION = 'MEMBER') * 100 / (SELECT COUNT(*) FROM MEMBER WHERE POSITION = 'MEMBER')) AS DIFFERENCE_PERCENTAGE FROM MEMBER LIMIT 1;,SELECT CAST((SUM(CASE WHEN T2.STATE = 'NEW JERSEY' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.STATE = 'VERMONT' THEN 1 ELSE 0 END)) AS REAL) * 100 / COUNT(T1.MEMBER_ID) AS DIFF FROM MEMBER AS T1 INNER JOIN ZIP_CODE AS T2 ON T2.ZIP_CODE = T1.ZIP,
1,1459,True,,0.064315,"SELECT MAJOR.MAJOR_NAME, MAJOR.DEPARTMENT FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MEMBER.FIRST_NAME = 'GARRETT' AND MEMBER.LAST_NAME = 'GERKE';","SELECT T2.MAJOR_NAME, T2.DEPARTMENT FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T2.MAJOR_ID = T1.LINK_TO_MAJOR WHERE T1.FIRST_NAME = 'GARRETT' AND T1.LAST_NAME = 'GERKE'",
1,1460,True,,0.049013,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME, EXPENSE.COST FROM MEMBER INNER JOIN EXPENSE ON MEMBER.MEMBER_ID = EXPENSE.LINK_TO_MEMBER WHERE EXPENSE.EXPENSE_DESCRIPTION = 'WATER, VEGGIE TRAY, SUPPLIES'","SELECT T2.FIRST_NAME, T2.LAST_NAME, T1.COST FROM EXPENSE AS T1 INNER JOIN MEMBER AS T2 ON T1.LINK_TO_MEMBER = T2.MEMBER_ID WHERE T1.EXPENSE_DESCRIPTION = 'WATER, VEGGIE TRAY, SUPPLIES'",
1,1461,True,,0.04519,"SELECT MEMBER.LAST_NAME, MEMBER.PHONE FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MAJOR.MAJOR_NAME = 'ELEMENTARY EDUCATION'","SELECT T1.LAST_NAME, T1.PHONE FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T2.MAJOR_ID = T1.LINK_TO_MAJOR WHERE T2.MAJOR_NAME = 'ELEMENTARY EDUCATION'",
1,1462,True,,0.046818,"SELECT BUDGET.CATEGORY, BUDGET.AMOUNT FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE EVENT.EVENT_NAME = 'JANUARY SPEAKER';","SELECT T2.CATEGORY, T2.AMOUNT FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T1.EVENT_NAME = 'JANUARY SPEAKER'",
1,1463,True,,0.04495,SELECT EVENT.EVENT_NAME FROM EVENT INNER JOIN BUDGET ON EVENT.EVENT_ID = BUDGET.LINK_TO_EVENT WHERE BUDGET.CATEGORY = 'FOOD',SELECT T1.EVENT_NAME FROM EVENT AS T1 INNER JOIN BUDGET AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT WHERE T2.CATEGORY = 'FOOD',
1,1464,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EVENT (
	EVENT_ID VARCHAR(20),
	EVENT_NAME VARCHAR(20),
	EVENT_DATE VARCHAR(20),
	TYPE VARCHAR(20),
	NOTES VARCHAR(20),
	LOCATION VARCHAR(20),
	STATUS VARCHAR(20)
);
INSERT INTO EVENT VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MAJOR (
	MAJOR_ID VARCHAR(20),
	MAJOR_NAME VARCHAR(20),
	DEPARTMENT VARCHAR(20),
	COLLEGE VARCHAR(20)
);
INSERT INTO MAJOR VALUES ('2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ZIP_CODE (
	ZIP_CODE VARCHAR(20),
	TYPE VARCHAR(20),
	CITY VARCHAR(20),
	COUNTY VARCHAR(20),
	STATE VARCHAR(20),
	SHORT_STATE VARCHAR(20)
);
INSERT INTO ZIP_CODE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ATTENDANCE (
	LINK_TO_EVENT VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO ATTENDANCE VALUES ('2147483648', '2147483648');
CREATE TABLE BUDGET (
	BUDGET_ID VARCHAR(20),
	CATEGORY VARCHAR(20),
	SPENT VARCHAR(20),
	REMAINING VARCHAR(20),
	AMOUNT VARCHAR(20),
	EVENT_STATUS VARCHAR(20),
	LINK_TO_EVENT VARCHAR(20)
);
INSERT INTO BUDGET VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE EXPENSE (
	EXPENSE_ID VARCHAR(20),
	EXPENSE_DESCRIPTION VARCHAR(20),
	EXPENSE_DATE VARCHAR(20),
	COST VARCHAR(20),
	APPROVED VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20),
	LINK_TO_BUDGET VARCHAR(20)
);
INSERT INTO EXPENSE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE INCOME (
	INCOME_ID VARCHAR(20),
	DATE_RECEIVED VARCHAR(20),
	AMOUNT VARCHAR(20),
	SOURCE VARCHAR(20),
	NOTES VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO INCOME VALUES ('2147483648', '9/9/2019', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR(20),
	FIRST_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	EMAIL VARCHAR(20),
	POSITION VARCHAR(20),
	T_SHIRT_SIZE VARCHAR(20),
	PHONE VARCHAR(20),
	ZIP VARCHAR(20),
	LINK_TO_MAJOR VARCHAR(20)
);
INSERT INTO MEMBER VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
-- 2147483648, 2147483648, 2147483648
SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME, INCOME.AMOUNT FROM INCOME INNER JOIN MEMBER ON INCOME.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE INCOME.DATE_RECEIVED = '9/9/2019';
-- ----------sql2------------
SELECT DISTINCT T3.FIRST_NAME, T3.LAST_NAME, T4.AMOUNT FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN MEMBER AS T3 ON T3.MEMBER_ID = T2.LINK_TO_MEMBER INNER JOIN INCOME AS T4 ON T4.LINK_TO_MEMBER = T3.MEMBER_ID WHERE T4.DATE_RECEIVED = '2019-09-09';
",0.082707,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME, INCOME.AMOUNT FROM INCOME INNER JOIN MEMBER ON INCOME.LINK_TO_MEMBER = MEMBER.MEMBER_ID WHERE INCOME.DATE_RECEIVED = '9/9/2019'","SELECT DISTINCT T3.FIRST_NAME, T3.LAST_NAME, T4.AMOUNT FROM EVENT AS T1 INNER JOIN ATTENDANCE AS T2 ON T1.EVENT_ID = T2.LINK_TO_EVENT INNER JOIN MEMBER AS T3 ON T3.MEMBER_ID = T2.LINK_TO_MEMBER INNER JOIN INCOME AS T4 ON T4.LINK_TO_MEMBER = T3.MEMBER_ID WHERE T4.DATE_RECEIVED = '2019-09-09'",
1,1465,True,,0.045766,SELECT BUDGET.CATEGORY FROM EXPENSE INNER JOIN BUDGET ON EXPENSE.LINK_TO_BUDGET = BUDGET.BUDGET_ID WHERE EXPENSE.EXPENSE_DESCRIPTION = 'POSTERS',SELECT DISTINCT T2.CATEGORY FROM EXPENSE AS T1 INNER JOIN BUDGET AS T2 ON T1.LINK_TO_BUDGET = T2.BUDGET_ID WHERE T1.EXPENSE_DESCRIPTION = 'POSTERS',
1,1466,True,,0.046273,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME, MAJOR.COLLEGE FROM MEMBER INNER JOIN MAJOR ON MEMBER.LINK_TO_MAJOR = MAJOR.MAJOR_ID WHERE MEMBER.POSITION = 'SECRETARY'","SELECT T1.FIRST_NAME, T1.LAST_NAME, COLLEGE FROM MEMBER AS T1 INNER JOIN MAJOR AS T2 ON T2.MAJOR_ID = T1.LINK_TO_MAJOR WHERE T1.POSITION = 'SECRETARY'",
1,1467,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE EVENT (
	EVENT_ID VARCHAR(20),
	EVENT_NAME VARCHAR(20),
	EVENT_DATE VARCHAR(20),
	TYPE VARCHAR(20),
	NOTES VARCHAR(20),
	LOCATION VARCHAR(20),
	STATUS VARCHAR(20)
);
INSERT INTO EVENT VALUES ('2147483648', '2147483649', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MAJOR (
	MAJOR_ID VARCHAR(20),
	MAJOR_NAME VARCHAR(20),
	DEPARTMENT VARCHAR(20),
	COLLEGE VARCHAR(20)
);
INSERT INTO MAJOR VALUES ('2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ZIP_CODE (
	ZIP_CODE VARCHAR(20),
	TYPE VARCHAR(20),
	CITY VARCHAR(20),
	COUNTY VARCHAR(20),
	STATE VARCHAR(20),
	SHORT_STATE VARCHAR(20)
);
INSERT INTO ZIP_CODE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE ATTENDANCE (
	LINK_TO_EVENT VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO ATTENDANCE VALUES ('2147483648', '2147483648');
CREATE TABLE BUDGET (
	BUDGET_ID VARCHAR(20),
	CATEGORY VARCHAR(20),
	SPENT VARCHAR(20),
	REMAINING VARCHAR(20),
	AMOUNT VARCHAR(20),
	EVENT_STATUS VARCHAR(20),
	LINK_TO_EVENT VARCHAR(20)
);
INSERT INTO BUDGET VALUES ('2147483648', 'SPEAKER GIFTS', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE EXPENSE (
	EXPENSE_ID VARCHAR(20),
	EXPENSE_DESCRIPTION VARCHAR(20),
	EXPENSE_DATE VARCHAR(20),
	COST VARCHAR(20),
	APPROVED VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20),
	LINK_TO_BUDGET VARCHAR(20)
);
INSERT INTO EXPENSE VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE INCOME (
	INCOME_ID VARCHAR(20),
	DATE_RECEIVED VARCHAR(20),
	AMOUNT VARCHAR(20),
	SOURCE VARCHAR(20),
	NOTES VARCHAR(20),
	LINK_TO_MEMBER VARCHAR(20)
);
INSERT INTO INCOME VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR(20),
	FIRST_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	EMAIL VARCHAR(20),
	POSITION VARCHAR(20),
	T_SHIRT_SIZE VARCHAR(20),
	PHONE VARCHAR(20),
	ZIP VARCHAR(20),
	LINK_TO_MAJOR VARCHAR(20)
);
INSERT INTO MEMBER VALUES ('2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648', '2147483648');
-- ----------sql1------------
-- 2147483649, 2147483648
SELECT EVENT.EVENT_NAME, SUM(BUDGET.SPENT) FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE BUDGET.CATEGORY = 'SPEAKER GIFTS' GROUP BY EVENT.EVENT_NAME;
-- ----------sql2------------
-- 2147483648, 2147483649
SELECT SUM(T1.SPENT), T2.EVENT_NAME FROM BUDGET AS T1 INNER JOIN EVENT AS T2 ON T1.LINK_TO_EVENT = T2.EVENT_ID WHERE T1.CATEGORY = 'SPEAKER GIFTS' GROUP BY T2.EVENT_NAME;
",0.065374,"SELECT EVENT.EVENT_NAME, SUM(BUDGET.SPENT) FROM BUDGET INNER JOIN EVENT ON BUDGET.LINK_TO_EVENT = EVENT.EVENT_ID WHERE BUDGET.CATEGORY = 'SPEAKER GIFTS' GROUP BY EVENT.EVENT_NAME","SELECT SUM(T1.SPENT), T2.EVENT_NAME FROM BUDGET AS T1 INNER JOIN EVENT AS T2 ON T1.LINK_TO_EVENT = T2.EVENT_ID WHERE T1.CATEGORY = 'SPEAKER GIFTS' GROUP BY T2.EVENT_NAME",
1,1468,True,,0.067373,SELECT ZIP_CODE.CITY FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE MEMBER.LAST_NAME = 'GERKE' AND MEMBER.FIRST_NAME = 'GARRETT',SELECT T2.CITY FROM MEMBER AS T1 INNER JOIN ZIP_CODE AS T2 ON T2.ZIP_CODE = T1.ZIP WHERE T1.FIRST_NAME = 'GARRETT' AND T1.LAST_NAME = 'GERKE',
1,1469,True,,0.076709,"SELECT MEMBER.FIRST_NAME, MEMBER.LAST_NAME, MEMBER.POSITION FROM MEMBER INNER JOIN ZIP_CODE ON MEMBER.ZIP = ZIP_CODE.ZIP_CODE WHERE ZIP_CODE.CITY = 'LINCOLNTON' AND ZIP_CODE.STATE = 'NORTH CAROLINA' AND ZIP_CODE.ZIP_CODE = '28092'","SELECT T1.FIRST_NAME, T1.LAST_NAME, T1.POSITION FROM MEMBER AS T1 INNER JOIN ZIP_CODE AS T2 ON T2.ZIP_CODE = T1.ZIP WHERE T2.CITY = 'LINCOLNTON' AND T2.STATE = 'NORTH CAROLINA' AND T2.ZIP_CODE = 28092",
1,1470,True,,0.03837,SELECT COUNT(*) FROM GASSTATIONS WHERE COUNTRY = 'CZE' AND SEGMENT = 'PREMIUM',SELECT COUNT(GASSTATIONID) FROM GASSTATIONS WHERE COUNTRY = 'CZE' AND SEGMENT = 'PREMIUM',
1,1471,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM CUSTOMERS WHERE CURRENCY = 'EUR') AS REAL)) / (SELECT COUNT(*) FROM CUSTOMERS WHERE CURRENCY = 'CZK') AS RATIO FROM CUSTOMERS LIMIT 1;,"SELECT CAST(SUM(IIF(CURRENCY = 'EUR', 1, 0)) AS FLOAT) / SUM(IIF(CURRENCY = 'CZK', 1, 0)) AS RATIO FROM CUSTOMERS",
2,1471,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM CUSTOMERS WHERE CURRENCY = 'EUR') AS REAL)) / (SELECT COUNT(*) FROM CUSTOMERS WHERE CURRENCY = 'CZK') AS RATIO FROM CUSTOMERS LIMIT 1;,"SELECT CAST(SUM(IIF(CURRENCY = 'EUR', 1, 0)) AS FLOAT) / SUM(IIF(CURRENCY = 'CZK', 1, 0)) AS RATIO FROM CUSTOMERS",
3,1471,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM CUSTOMERS WHERE CURRENCY = 'EUR') AS REAL)) / (SELECT COUNT(*) FROM CUSTOMERS WHERE CURRENCY = 'CZK') AS RATIO FROM CUSTOMERS LIMIT 1;,"SELECT CAST(SUM(IIF(CURRENCY = 'EUR', 1, 0)) AS FLOAT) / SUM(IIF(CURRENCY = 'CZK', 1, 0)) AS RATIO FROM CUSTOMERS",
1,1472,ERROR,"NotImplementedError: {'substr': ['YEARMONTH__DATE', 1, 4]}",,"SELECT CUSTOMERS.CUSTOMERID FROM YEARMONTH INNER JOIN CUSTOMERS ON YEARMONTH.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '201201' AND '201212' AND CUSTOMERS.SEGMENT = 'LAM' ORDER BY YEARMONTH.CONSUMPTION ASC LIMIT 1;","SELECT T1.CUSTOMERID FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.SEGMENT = 'LAM' AND SUBSTR(T2.DATE, 1, 4) = '2012' GROUP BY T1.CUSTOMERID ORDER BY SUM(T2.CONSUMPTION) ASC LIMIT 1",
2,1472,ERROR,"NotImplementedError: {'substr': ['YEARMONTH__DATE', 1, 4]}",,"SELECT CUSTOMERS.CUSTOMERID FROM YEARMONTH INNER JOIN CUSTOMERS ON YEARMONTH.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '201201' AND '201212' AND CUSTOMERS.SEGMENT = 'LAM' ORDER BY YEARMONTH.CONSUMPTION ASC LIMIT 1;","SELECT T1.CUSTOMERID FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.SEGMENT = 'LAM' AND SUBSTR(T2.DATE, 1, 4) = '2012' GROUP BY T1.CUSTOMERID ORDER BY SUM(T2.CONSUMPTION) ASC LIMIT 1",
3,1472,ERROR,"NotImplementedError: {'substr': ['YEARMONTH__DATE', 1, 4]}",,"SELECT CUSTOMERS.CUSTOMERID FROM YEARMONTH INNER JOIN CUSTOMERS ON YEARMONTH.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '201201' AND '201212' AND CUSTOMERS.SEGMENT = 'LAM' ORDER BY YEARMONTH.CONSUMPTION ASC LIMIT 1;","SELECT T1.CUSTOMERID FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.SEGMENT = 'LAM' AND SUBSTR(T2.DATE, 1, 4) = '2012' GROUP BY T1.CUSTOMERID ORDER BY SUM(T2.CONSUMPTION) ASC LIMIT 1",
1,1473,ERROR,"NotImplementedError: {'substr': ['YEARMONTH__DATE', 1, 4]}",,"SELECT AVG(YEARMONTH.CONSUMPTION) / 12 FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.SEGMENT = 'SME' AND SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '2013' AND '2013'","SELECT AVG(T2.CONSUMPTION) / 12 FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE SUBSTR(T2.DATE, 1, 4) = '2013' AND T1.SEGMENT = 'SME'",
2,1473,ERROR,"NotImplementedError: {'substr': ['YEARMONTH__DATE', 1, 4]}",,"SELECT AVG(YEARMONTH.CONSUMPTION) / 12 FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.SEGMENT = 'SME' AND SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '2013' AND '2013'","SELECT AVG(T2.CONSUMPTION) / 12 FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE SUBSTR(T2.DATE, 1, 4) = '2013' AND T1.SEGMENT = 'SME'",
3,1473,ERROR,"NotImplementedError: {'substr': ['YEARMONTH__DATE', 1, 4]}",,"SELECT AVG(YEARMONTH.CONSUMPTION) / 12 FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.SEGMENT = 'SME' AND SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '2013' AND '2013'","SELECT AVG(T2.CONSUMPTION) / 12 FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE SUBSTR(T2.DATE, 1, 4) = '2013' AND T1.SEGMENT = 'SME'",
1,1474,True,,0.1072709999999999,SELECT CUSTOMERS.CUSTOMERID FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND YEARMONTH.DATE BETWEEN 201101 AND 201112 ORDER BY YEARMONTH.CONSUMPTION DESC LIMIT 1,SELECT T1.CUSTOMERID FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.CURRENCY = 'CZK' AND T2.DATE BETWEEN 201101 AND 201112 GROUP BY T1.CUSTOMERID ORDER BY SUM(T2.CONSUMPTION) DESC LIMIT 1,
1,1475,ERROR,"NotImplementedError: {'substring': ['T2__DATE', 1, 4]}",,SELECT COUNT(DISTINCT CUSTOMERS.CUSTOMERID) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.SEGMENT = 'KAM' AND YEARMONTH.CONSUMPTION < 30000 AND YEARMONTH.DATE BETWEEN 201201 AND 201212,"SELECT COUNT(*) FROM ( SELECT T2.CUSTOMERID FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.SEGMENT = 'KAM' AND SUBSTRING(T2.DATE, 1, 4) = '2012' GROUP BY T2.CUSTOMERID HAVING SUM(T2.CONSUMPTION) < 30000 ) AS T1",
2,1475,ERROR,"NotImplementedError: {'substring': ['T2__DATE', 1, 4]}",,SELECT COUNT(DISTINCT CUSTOMERS.CUSTOMERID) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.SEGMENT = 'KAM' AND YEARMONTH.CONSUMPTION < 30000 AND YEARMONTH.DATE BETWEEN 201201 AND 201212,"SELECT COUNT(*) FROM ( SELECT T2.CUSTOMERID FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.SEGMENT = 'KAM' AND SUBSTRING(T2.DATE, 1, 4) = '2012' GROUP BY T2.CUSTOMERID HAVING SUM(T2.CONSUMPTION) < 30000 ) AS T1",
3,1475,ERROR,"NotImplementedError: {'substring': ['T2__DATE', 1, 4]}",,SELECT COUNT(DISTINCT CUSTOMERS.CUSTOMERID) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.SEGMENT = 'KAM' AND YEARMONTH.CONSUMPTION < 30000 AND YEARMONTH.DATE BETWEEN 201201 AND 201212,"SELECT COUNT(*) FROM ( SELECT T2.CUSTOMERID FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.SEGMENT = 'KAM' AND SUBSTRING(T2.DATE, 1, 4) = '2012' GROUP BY T2.CUSTOMERID HAVING SUM(T2.CONSUMPTION) < 30000 ) AS T1",
1,1476,ERROR,"NotImplementedError: {'substr': ['YEARMONTH__DATE', 1, 4]}",,"SELECT (SUM(DF1.CONSUMPTION) - SUM(DF2.CONSUMPTION)) AS DIFFERENCE FROM (SELECT YEARMONTH.CONSUMPTION FROM YEARMONTH INNER JOIN CUSTOMERS ON YEARMONTH.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND SUBSTR(YEARMONTH.DATE, 1, 4) = '2012') AS DF1, (SELECT YEARMONTH.CONSUMPTION FROM YEARMONTH INNER JOIN CUSTOMERS ON YEARMONTH.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND SUBSTR(YEARMONTH.DATE, 1, 4) = '2012') AS DF2","SELECT SUM(IIF(T1.CURRENCY = 'CZK', T2.CONSUMPTION, 0)) - SUM(IIF(T1.CURRENCY = 'EUR', T2.CONSUMPTION, 0)) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE SUBSTR(T2.DATE, 1, 4) = '2012'",
2,1476,ERROR,"NotImplementedError: {'substr': ['YEARMONTH__DATE', 1, 4]}",,"SELECT (SUM(DF1.CONSUMPTION) - SUM(DF2.CONSUMPTION)) AS DIFFERENCE FROM (SELECT YEARMONTH.CONSUMPTION FROM YEARMONTH INNER JOIN CUSTOMERS ON YEARMONTH.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND SUBSTR(YEARMONTH.DATE, 1, 4) = '2012') AS DF1, (SELECT YEARMONTH.CONSUMPTION FROM YEARMONTH INNER JOIN CUSTOMERS ON YEARMONTH.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND SUBSTR(YEARMONTH.DATE, 1, 4) = '2012') AS DF2","SELECT SUM(IIF(T1.CURRENCY = 'CZK', T2.CONSUMPTION, 0)) - SUM(IIF(T1.CURRENCY = 'EUR', T2.CONSUMPTION, 0)) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE SUBSTR(T2.DATE, 1, 4) = '2012'",
3,1476,ERROR,"NotImplementedError: {'substr': ['YEARMONTH__DATE', 1, 4]}",,"SELECT (SUM(DF1.CONSUMPTION) - SUM(DF2.CONSUMPTION)) AS DIFFERENCE FROM (SELECT YEARMONTH.CONSUMPTION FROM YEARMONTH INNER JOIN CUSTOMERS ON YEARMONTH.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND SUBSTR(YEARMONTH.DATE, 1, 4) = '2012') AS DF1, (SELECT YEARMONTH.CONSUMPTION FROM YEARMONTH INNER JOIN CUSTOMERS ON YEARMONTH.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND SUBSTR(YEARMONTH.DATE, 1, 4) = '2012') AS DF2","SELECT SUM(IIF(T1.CURRENCY = 'CZK', T2.CONSUMPTION, 0)) - SUM(IIF(T1.CURRENCY = 'EUR', T2.CONSUMPTION, 0)) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE SUBSTR(T2.DATE, 1, 4) = '2012'",
1,1477,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'YEARMONTH__DATE']}",,"SELECT STRFTIME('%Y', YEARMONTH.DATE) AS YEAR FROM YEARMONTH INNER JOIN CUSTOMERS ON YEARMONTH.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' GROUP BY YEAR ORDER BY SUM(YEARMONTH.CONSUMPTION) DESC LIMIT 1","SELECT SUBSTRING(T2.DATE, 1, 4) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.CURRENCY = 'EUR' GROUP BY SUBSTRING(T2.DATE, 1, 4) ORDER BY SUM(T2.CONSUMPTION) DESC LIMIT 1",
2,1477,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'YEARMONTH__DATE']}",,"SELECT STRFTIME('%Y', YEARMONTH.DATE) AS YEAR FROM YEARMONTH INNER JOIN CUSTOMERS ON YEARMONTH.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' GROUP BY YEAR ORDER BY SUM(YEARMONTH.CONSUMPTION) DESC LIMIT 1","SELECT SUBSTRING(T2.DATE, 1, 4) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.CURRENCY = 'EUR' GROUP BY SUBSTRING(T2.DATE, 1, 4) ORDER BY SUM(T2.CONSUMPTION) DESC LIMIT 1",
3,1477,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'YEARMONTH__DATE']}",,"SELECT STRFTIME('%Y', YEARMONTH.DATE) AS YEAR FROM YEARMONTH INNER JOIN CUSTOMERS ON YEARMONTH.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' GROUP BY YEAR ORDER BY SUM(YEARMONTH.CONSUMPTION) DESC LIMIT 1","SELECT SUBSTRING(T2.DATE, 1, 4) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.CURRENCY = 'EUR' GROUP BY SUBSTRING(T2.DATE, 1, 4) ORDER BY SUM(T2.CONSUMPTION) DESC LIMIT 1",
1,1478,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute YEARMONTH__SEGMENT`,,SELECT YEARMONTH.SEGMENT FROM YEARMONTH ORDER BY YEARMONTH.CONSUMPTION ASC LIMIT 1;,SELECT T1.SEGMENT FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID GROUP BY T1.SEGMENT ORDER BY SUM(T2.CONSUMPTION) ASC LIMIT 1,
2,1478,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute YEARMONTH__SEGMENT`,,SELECT YEARMONTH.SEGMENT FROM YEARMONTH ORDER BY YEARMONTH.CONSUMPTION ASC LIMIT 1;,SELECT T1.SEGMENT FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID GROUP BY T1.SEGMENT ORDER BY SUM(T2.CONSUMPTION) ASC LIMIT 1,
3,1478,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute YEARMONTH__SEGMENT`,,SELECT YEARMONTH.SEGMENT FROM YEARMONTH ORDER BY YEARMONTH.CONSUMPTION ASC LIMIT 1;,SELECT T1.SEGMENT FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID GROUP BY T1.SEGMENT ORDER BY SUM(T2.CONSUMPTION) ASC LIMIT 1,
1,1479,ERROR,"NotImplementedError: {'substr': ['YEARMONTH__DATE', 1, 4]}",,"SELECT SUBSTR(YEARMONTH.DATE, 1, 4) AS YEAR FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' GROUP BY YEAR ORDER BY SUM(YEARMONTH.CONSUMPTION) DESC LIMIT 1","SELECT SUBSTR(T2.DATE, 1, 4) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.CURRENCY = 'CZK' GROUP BY SUBSTR(T2.DATE, 1, 4) ORDER BY SUM(T2.CONSUMPTION) DESC LIMIT 1",
2,1479,ERROR,"NotImplementedError: {'substr': ['YEARMONTH__DATE', 1, 4]}",,"SELECT SUBSTR(YEARMONTH.DATE, 1, 4) AS YEAR FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' GROUP BY YEAR ORDER BY SUM(YEARMONTH.CONSUMPTION) DESC LIMIT 1","SELECT SUBSTR(T2.DATE, 1, 4) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.CURRENCY = 'CZK' GROUP BY SUBSTR(T2.DATE, 1, 4) ORDER BY SUM(T2.CONSUMPTION) DESC LIMIT 1",
3,1479,ERROR,"NotImplementedError: {'substr': ['YEARMONTH__DATE', 1, 4]}",,"SELECT SUBSTR(YEARMONTH.DATE, 1, 4) AS YEAR FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' GROUP BY YEAR ORDER BY SUM(YEARMONTH.CONSUMPTION) DESC LIMIT 1","SELECT SUBSTR(T2.DATE, 1, 4) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.CURRENCY = 'CZK' GROUP BY SUBSTR(T2.DATE, 1, 4) ORDER BY SUM(T2.CONSUMPTION) DESC LIMIT 1",
1,1480,ERROR,"NotImplementedError: {'substr': ['YEARMONTH__DATE', 1, 6]}",,"SELECT YEARMONTH.DATE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.SEGMENT = 'SME' AND SUBSTR(YEARMONTH.DATE, 1, 6) BETWEEN '201301' AND '201312' ORDER BY YEARMONTH.CONSUMPTION DESC LIMIT 1","SELECT SUBSTR(T2.DATE, 5, 2) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE SUBSTR(T2.DATE, 1, 4) = '2013' AND T1.SEGMENT = 'SME' GROUP BY SUBSTR(T2.DATE, 5, 2) ORDER BY SUM(T2.CONSUMPTION) DESC LIMIT 1",
2,1480,ERROR,"NotImplementedError: {'substr': ['YEARMONTH__DATE', 1, 6]}",,"SELECT YEARMONTH.DATE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.SEGMENT = 'SME' AND SUBSTR(YEARMONTH.DATE, 1, 6) BETWEEN '201301' AND '201312' ORDER BY YEARMONTH.CONSUMPTION DESC LIMIT 1","SELECT SUBSTR(T2.DATE, 5, 2) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE SUBSTR(T2.DATE, 1, 4) = '2013' AND T1.SEGMENT = 'SME' GROUP BY SUBSTR(T2.DATE, 5, 2) ORDER BY SUM(T2.CONSUMPTION) DESC LIMIT 1",
3,1480,ERROR,"NotImplementedError: {'substr': ['YEARMONTH__DATE', 1, 6]}",,"SELECT YEARMONTH.DATE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.SEGMENT = 'SME' AND SUBSTR(YEARMONTH.DATE, 1, 6) BETWEEN '201301' AND '201312' ORDER BY YEARMONTH.CONSUMPTION DESC LIMIT 1","SELECT SUBSTR(T2.DATE, 5, 2) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE SUBSTR(T2.DATE, 1, 4) = '2013' AND T1.SEGMENT = 'SME' GROUP BY SUBSTR(T2.DATE, 5, 2) ORDER BY SUM(T2.CONSUMPTION) DESC LIMIT 1",
1,1481,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,"SELECT (SELECT AVG(YEARMONTH.CONSUMPTION) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND CUSTOMERS.SEGMENT = 'SME' AND SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '2013' AND '2013') - (SELECT AVG(YEARMONTH.CONSUMPTION) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND CUSTOMERS.SEGMENT = 'LAM' AND SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '2013' AND '2013') AS DIFF_SME_LAM, (SELECT AVG(YEARMONTH.CONSUMPTION) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND CUSTOMERS.SEGMENT = 'LAM' AND SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '2013' AND '2013') - (SELECT AVG(YEARMONTH.CONSUMPTION) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND CUSTOMERS.SEGMENT = 'KAM' AND SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '2013' AND '2013') AS DIFF_LAM_KAM, (SELECT AVG(YEARMONTH.CONSUMPTION) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND CUSTOMERS.SEGMENT = 'KAM' AND SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '2013' AND '2013') - (SELECT AVG(YEARMONTH.CONSUMPTION) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND CUSTOMERS.SEGMENT = 'SME' AND SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '2013' AND '2013') AS DIFF_KAM_SME","SELECT CAST(SUM(IIF(T1.SEGMENT = 'SME', T2.CONSUMPTION, 0)) AS REAL) / COUNT(T1.CUSTOMERID) - CAST(SUM(IIF(T1.SEGMENT = 'LAM', T2.CONSUMPTION, 0)) AS REAL) / COUNT(T1.CUSTOMERID) , CAST(SUM(IIF(T1.SEGMENT = 'LAM', T2.CONSUMPTION, 0)) AS REAL) / COUNT(T1.CUSTOMERID) - CAST(SUM(IIF(T1.SEGMENT = 'KAM', T2.CONSUMPTION, 0)) AS REAL) / COUNT(T1.CUSTOMERID) , CAST(SUM(IIF(T1.SEGMENT = 'KAM', T2.CONSUMPTION, 0)) AS REAL) / COUNT(T1.CUSTOMERID) - CAST(SUM(IIF(T1.SEGMENT = 'SME', T2.CONSUMPTION, 0)) AS REAL) / COUNT(T1.CUSTOMERID) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.CURRENCY = 'CZK' AND T2.CONSUMPTION = ( SELECT MIN(CONSUMPTION) FROM YEARMONTH ) AND T2.DATE BETWEEN 201301 AND 201312",
2,1481,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,"SELECT (SELECT AVG(YEARMONTH.CONSUMPTION) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND CUSTOMERS.SEGMENT = 'SME' AND SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '2013' AND '2013') - (SELECT AVG(YEARMONTH.CONSUMPTION) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND CUSTOMERS.SEGMENT = 'LAM' AND SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '2013' AND '2013') AS DIFF_SME_LAM, (SELECT AVG(YEARMONTH.CONSUMPTION) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND CUSTOMERS.SEGMENT = 'LAM' AND SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '2013' AND '2013') - (SELECT AVG(YEARMONTH.CONSUMPTION) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND CUSTOMERS.SEGMENT = 'KAM' AND SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '2013' AND '2013') AS DIFF_LAM_KAM, (SELECT AVG(YEARMONTH.CONSUMPTION) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND CUSTOMERS.SEGMENT = 'KAM' AND SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '2013' AND '2013') - (SELECT AVG(YEARMONTH.CONSUMPTION) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND CUSTOMERS.SEGMENT = 'SME' AND SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '2013' AND '2013') AS DIFF_KAM_SME","SELECT CAST(SUM(IIF(T1.SEGMENT = 'SME', T2.CONSUMPTION, 0)) AS REAL) / COUNT(T1.CUSTOMERID) - CAST(SUM(IIF(T1.SEGMENT = 'LAM', T2.CONSUMPTION, 0)) AS REAL) / COUNT(T1.CUSTOMERID) , CAST(SUM(IIF(T1.SEGMENT = 'LAM', T2.CONSUMPTION, 0)) AS REAL) / COUNT(T1.CUSTOMERID) - CAST(SUM(IIF(T1.SEGMENT = 'KAM', T2.CONSUMPTION, 0)) AS REAL) / COUNT(T1.CUSTOMERID) , CAST(SUM(IIF(T1.SEGMENT = 'KAM', T2.CONSUMPTION, 0)) AS REAL) / COUNT(T1.CUSTOMERID) - CAST(SUM(IIF(T1.SEGMENT = 'SME', T2.CONSUMPTION, 0)) AS REAL) / COUNT(T1.CUSTOMERID) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.CURRENCY = 'CZK' AND T2.CONSUMPTION = ( SELECT MIN(CONSUMPTION) FROM YEARMONTH ) AND T2.DATE BETWEEN 201301 AND 201312",
3,1481,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,"SELECT (SELECT AVG(YEARMONTH.CONSUMPTION) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND CUSTOMERS.SEGMENT = 'SME' AND SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '2013' AND '2013') - (SELECT AVG(YEARMONTH.CONSUMPTION) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND CUSTOMERS.SEGMENT = 'LAM' AND SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '2013' AND '2013') AS DIFF_SME_LAM, (SELECT AVG(YEARMONTH.CONSUMPTION) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND CUSTOMERS.SEGMENT = 'LAM' AND SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '2013' AND '2013') - (SELECT AVG(YEARMONTH.CONSUMPTION) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND CUSTOMERS.SEGMENT = 'KAM' AND SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '2013' AND '2013') AS DIFF_LAM_KAM, (SELECT AVG(YEARMONTH.CONSUMPTION) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND CUSTOMERS.SEGMENT = 'KAM' AND SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '2013' AND '2013') - (SELECT AVG(YEARMONTH.CONSUMPTION) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'CZK' AND CUSTOMERS.SEGMENT = 'SME' AND SUBSTR(YEARMONTH.DATE, 1, 4) BETWEEN '2013' AND '2013') AS DIFF_KAM_SME","SELECT CAST(SUM(IIF(T1.SEGMENT = 'SME', T2.CONSUMPTION, 0)) AS REAL) / COUNT(T1.CUSTOMERID) - CAST(SUM(IIF(T1.SEGMENT = 'LAM', T2.CONSUMPTION, 0)) AS REAL) / COUNT(T1.CUSTOMERID) , CAST(SUM(IIF(T1.SEGMENT = 'LAM', T2.CONSUMPTION, 0)) AS REAL) / COUNT(T1.CUSTOMERID) - CAST(SUM(IIF(T1.SEGMENT = 'KAM', T2.CONSUMPTION, 0)) AS REAL) / COUNT(T1.CUSTOMERID) , CAST(SUM(IIF(T1.SEGMENT = 'KAM', T2.CONSUMPTION, 0)) AS REAL) / COUNT(T1.CUSTOMERID) - CAST(SUM(IIF(T1.SEGMENT = 'SME', T2.CONSUMPTION, 0)) AS REAL) / COUNT(T1.CUSTOMERID) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.CURRENCY = 'CZK' AND T2.CONSUMPTION = ( SELECT MIN(CONSUMPTION) FROM YEARMONTH ) AND T2.DATE BETWEEN 201301 AND 201312",
1,1482,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT 'SME' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'SME' UNION SELECT 'LAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'LAM' UNION SELECT 'KAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'KAM' ORDER BY PERCENTAGE_INCREASE DESC LIMIT 1 UNION SELECT 'SME' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'SME' UNION SELECT 'LAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'LAM' UNION SELECT 'KAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'KAM' ORDER BY PERCENTAGE_INCREASE ASC LIMIT 1;`",,"SELECT 'SME' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'SME' UNION SELECT 'LAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'LAM' UNION SELECT 'KAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'KAM' ORDER BY PERCENTAGE_INCREASE DESC LIMIT 1 UNION SELECT 'SME' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'SME' UNION SELECT 'LAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'LAM' UNION SELECT 'KAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'KAM' ORDER BY PERCENTAGE_INCREASE ASC LIMIT 1;","SELECT CAST((SUM(IIF(T1.SEGMENT = 'SME' AND T2.DATE LIKE '2013%', T2.CONSUMPTION, 0)) - SUM(IIF(T1.SEGMENT = 'SME' AND T2.DATE LIKE '2012%', T2.CONSUMPTION, 0))) AS FLOAT) * 100 / SUM(IIF(T1.SEGMENT = 'SME' AND T2.DATE LIKE '2012%', T2.CONSUMPTION, 0)), CAST(SUM(IIF(T1.SEGMENT = 'LAM' AND T2.DATE LIKE '2013%', T2.CONSUMPTION, 0)) - SUM(IIF(T1.SEGMENT = 'LAM' AND T2.DATE LIKE '2012%', T2.CONSUMPTION, 0)) AS FLOAT) * 100 / SUM(IIF(T1.SEGMENT = 'LAM' AND T2.DATE LIKE '2012%', T2.CONSUMPTION, 0)) , CAST(SUM(IIF(T1.SEGMENT = 'KAM' AND T2.DATE LIKE '2013%', T2.CONSUMPTION, 0)) - SUM(IIF(T1.SEGMENT = 'KAM' AND T2.DATE LIKE '2012%', T2.CONSUMPTION, 0)) AS FLOAT) * 100 / SUM(IIF(T1.SEGMENT = 'KAM' AND T2.DATE LIKE '2012%', T2.CONSUMPTION, 0)) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID",
2,1482,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT 'SME' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'SME' UNION SELECT 'LAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'LAM' UNION SELECT 'KAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'KAM' ORDER BY PERCENTAGE_INCREASE DESC LIMIT 1 UNION SELECT 'SME' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'SME' UNION SELECT 'LAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'LAM' UNION SELECT 'KAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'KAM' ORDER BY PERCENTAGE_INCREASE ASC LIMIT 1;`",,"SELECT 'SME' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'SME' UNION SELECT 'LAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'LAM' UNION SELECT 'KAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'KAM' ORDER BY PERCENTAGE_INCREASE DESC LIMIT 1 UNION SELECT 'SME' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'SME' UNION SELECT 'LAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'LAM' UNION SELECT 'KAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'KAM' ORDER BY PERCENTAGE_INCREASE ASC LIMIT 1;","SELECT CAST((SUM(IIF(T1.SEGMENT = 'SME' AND T2.DATE LIKE '2013%', T2.CONSUMPTION, 0)) - SUM(IIF(T1.SEGMENT = 'SME' AND T2.DATE LIKE '2012%', T2.CONSUMPTION, 0))) AS FLOAT) * 100 / SUM(IIF(T1.SEGMENT = 'SME' AND T2.DATE LIKE '2012%', T2.CONSUMPTION, 0)), CAST(SUM(IIF(T1.SEGMENT = 'LAM' AND T2.DATE LIKE '2013%', T2.CONSUMPTION, 0)) - SUM(IIF(T1.SEGMENT = 'LAM' AND T2.DATE LIKE '2012%', T2.CONSUMPTION, 0)) AS FLOAT) * 100 / SUM(IIF(T1.SEGMENT = 'LAM' AND T2.DATE LIKE '2012%', T2.CONSUMPTION, 0)) , CAST(SUM(IIF(T1.SEGMENT = 'KAM' AND T2.DATE LIKE '2013%', T2.CONSUMPTION, 0)) - SUM(IIF(T1.SEGMENT = 'KAM' AND T2.DATE LIKE '2012%', T2.CONSUMPTION, 0)) AS FLOAT) * 100 / SUM(IIF(T1.SEGMENT = 'KAM' AND T2.DATE LIKE '2012%', T2.CONSUMPTION, 0)) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID",
3,1482,ERROR,"ParserSyntaxError: ParserSyntaxError: cannot parse `SELECT 'SME' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'SME' UNION SELECT 'LAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'LAM' UNION SELECT 'KAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'KAM' ORDER BY PERCENTAGE_INCREASE DESC LIMIT 1 UNION SELECT 'SME' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'SME' UNION SELECT 'LAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'LAM' UNION SELECT 'KAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'KAM' ORDER BY PERCENTAGE_INCREASE ASC LIMIT 1;`",,"SELECT 'SME' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'SME' UNION SELECT 'LAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'LAM' UNION SELECT 'KAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'KAM' ORDER BY PERCENTAGE_INCREASE DESC LIMIT 1 UNION SELECT 'SME' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'SME' UNION SELECT 'LAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'LAM' UNION SELECT 'KAM' AS SEGMENT, ((SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2013' THEN YEARMONTH.CONSUMPTION ELSE 0 END) - SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) * 100 / SUM(CASE WHEN SUBSTR(YEARMONTH.DATE, 1, 4) = '2012' THEN YEARMONTH.CONSUMPTION ELSE 0 END)) AS PERCENTAGE_INCREASE FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND CUSTOMERS.SEGMENT = 'KAM' ORDER BY PERCENTAGE_INCREASE ASC LIMIT 1;","SELECT CAST((SUM(IIF(T1.SEGMENT = 'SME' AND T2.DATE LIKE '2013%', T2.CONSUMPTION, 0)) - SUM(IIF(T1.SEGMENT = 'SME' AND T2.DATE LIKE '2012%', T2.CONSUMPTION, 0))) AS FLOAT) * 100 / SUM(IIF(T1.SEGMENT = 'SME' AND T2.DATE LIKE '2012%', T2.CONSUMPTION, 0)), CAST(SUM(IIF(T1.SEGMENT = 'LAM' AND T2.DATE LIKE '2013%', T2.CONSUMPTION, 0)) - SUM(IIF(T1.SEGMENT = 'LAM' AND T2.DATE LIKE '2012%', T2.CONSUMPTION, 0)) AS FLOAT) * 100 / SUM(IIF(T1.SEGMENT = 'LAM' AND T2.DATE LIKE '2012%', T2.CONSUMPTION, 0)) , CAST(SUM(IIF(T1.SEGMENT = 'KAM' AND T2.DATE LIKE '2013%', T2.CONSUMPTION, 0)) - SUM(IIF(T1.SEGMENT = 'KAM' AND T2.DATE LIKE '2012%', T2.CONSUMPTION, 0)) AS FLOAT) * 100 / SUM(IIF(T1.SEGMENT = 'KAM' AND T2.DATE LIKE '2012%', T2.CONSUMPTION, 0)) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID",
1,1483,True,,0.0702169999999999,SELECT SUM(YEARMONTH.CONSUMPTION) FROM YEARMONTH WHERE YEARMONTH.CUSTOMERID = 6 AND YEARMONTH.DATE >= '201308' AND YEARMONTH.DATE <= '201311',SELECT SUM(CONSUMPTION) FROM YEARMONTH WHERE CUSTOMERID = 6 AND DATE BETWEEN '201308' AND '201311',
1,1484,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT COUNT(*) FROM GASSTATIONS WHERE COUNTRY = 'CZE' AND SEGMENT = 'DISCOUNT') - (SELECT COUNT(*) FROM GASSTATIONS WHERE COUNTRY = 'SVK' AND SEGMENT = 'DISCOUNT') AS MORE_DISCOUNT_STATIONS,"SELECT SUM(IIF(COUNTRY = 'CZE', 1, 0)) - SUM(IIF(COUNTRY = 'SVK', 1, 0)) FROM GASSTATIONS WHERE SEGMENT = 'DISCOUNT'",
2,1484,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT COUNT(*) FROM GASSTATIONS WHERE COUNTRY = 'CZE' AND SEGMENT = 'DISCOUNT') - (SELECT COUNT(*) FROM GASSTATIONS WHERE COUNTRY = 'SVK' AND SEGMENT = 'DISCOUNT') AS MORE_DISCOUNT_STATIONS,"SELECT SUM(IIF(COUNTRY = 'CZE', 1, 0)) - SUM(IIF(COUNTRY = 'SVK', 1, 0)) FROM GASSTATIONS WHERE SEGMENT = 'DISCOUNT'",
3,1484,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT COUNT(*) FROM GASSTATIONS WHERE COUNTRY = 'CZE' AND SEGMENT = 'DISCOUNT') - (SELECT COUNT(*) FROM GASSTATIONS WHERE COUNTRY = 'SVK' AND SEGMENT = 'DISCOUNT') AS MORE_DISCOUNT_STATIONS,"SELECT SUM(IIF(COUNTRY = 'CZE', 1, 0)) - SUM(IIF(COUNTRY = 'SVK', 1, 0)) FROM GASSTATIONS WHERE SEGMENT = 'DISCOUNT'",
1,1485,ERROR,"NotImplementedError: {'iif': [{'eq': ['CUSTOMERID', 7]}, 'CONSUMPTION', 0]}",,SELECT (SELECT SUM(CONSUMPTION) FROM YEARMONTH WHERE CUSTOMERID = 7 AND DATE = 201304) - (SELECT SUM(CONSUMPTION) FROM YEARMONTH WHERE CUSTOMERID = 5 AND DATE = 201304) AS DIFFERENCE FROM YEARMONTH LIMIT 1;,"SELECT SUM(IIF(CUSTOMERID = 7, CONSUMPTION, 0)) - SUM(IIF(CUSTOMERID = 5, CONSUMPTION, 0)) FROM YEARMONTH WHERE DATE = '201304'",
2,1485,ERROR,"NotImplementedError: {'iif': [{'eq': ['CUSTOMERID', 7]}, 'CONSUMPTION', 0]}",,SELECT (SELECT SUM(CONSUMPTION) FROM YEARMONTH WHERE CUSTOMERID = 7 AND DATE = 201304) - (SELECT SUM(CONSUMPTION) FROM YEARMONTH WHERE CUSTOMERID = 5 AND DATE = 201304) AS DIFFERENCE FROM YEARMONTH LIMIT 1;,"SELECT SUM(IIF(CUSTOMERID = 7, CONSUMPTION, 0)) - SUM(IIF(CUSTOMERID = 5, CONSUMPTION, 0)) FROM YEARMONTH WHERE DATE = '201304'",
3,1485,ERROR,"NotImplementedError: {'iif': [{'eq': ['CUSTOMERID', 7]}, 'CONSUMPTION', 0]}",,SELECT (SELECT SUM(CONSUMPTION) FROM YEARMONTH WHERE CUSTOMERID = 7 AND DATE = 201304) - (SELECT SUM(CONSUMPTION) FROM YEARMONTH WHERE CUSTOMERID = 5 AND DATE = 201304) AS DIFFERENCE FROM YEARMONTH LIMIT 1;,"SELECT SUM(IIF(CUSTOMERID = 7, CONSUMPTION, 0)) - SUM(IIF(CUSTOMERID = 5, CONSUMPTION, 0)) FROM YEARMONTH WHERE DATE = '201304'",
1,1486,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT COUNT(*) FROM CUSTOMERS WHERE SEGMENT = 'SME' AND CURRENCY = 'CZK') - (SELECT COUNT(*) FROM CUSTOMERS WHERE SEGMENT = 'SME' AND CURRENCY = 'EUR') AS AMOUNT_OF_MORE_SMES,SELECT SUM(CURRENCY = 'CZK') - SUM(CURRENCY = 'EUR') FROM CUSTOMERS WHERE SEGMENT = 'SME',
2,1486,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT COUNT(*) FROM CUSTOMERS WHERE SEGMENT = 'SME' AND CURRENCY = 'CZK') - (SELECT COUNT(*) FROM CUSTOMERS WHERE SEGMENT = 'SME' AND CURRENCY = 'EUR') AS AMOUNT_OF_MORE_SMES,SELECT SUM(CURRENCY = 'CZK') - SUM(CURRENCY = 'EUR') FROM CUSTOMERS WHERE SEGMENT = 'SME',
3,1486,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT COUNT(*) FROM CUSTOMERS WHERE SEGMENT = 'SME' AND CURRENCY = 'CZK') - (SELECT COUNT(*) FROM CUSTOMERS WHERE SEGMENT = 'SME' AND CURRENCY = 'EUR') AS AMOUNT_OF_MORE_SMES,SELECT SUM(CURRENCY = 'CZK') - SUM(CURRENCY = 'EUR') FROM CUSTOMERS WHERE SEGMENT = 'SME',
1,1487,True,,0.061473,SELECT CUSTOMERS.CUSTOMERID FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.SEGMENT = 'LAM' AND CUSTOMERS.CURRENCY = 'EURO' AND YEARMONTH.DATE = '201310' ORDER BY YEARMONTH.CONSUMPTION DESC LIMIT 1,SELECT T1.CUSTOMERID FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.SEGMENT = 'LAM' AND T2.DATE = '201310' AND T1.CURRENCY = 'EUR' GROUP BY T1.CUSTOMERID ORDER BY SUM(T2.CONSUMPTION) DESC LIMIT 1,
1,1488,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CUSTOMERS (
	CUSTOMERID INTEGER,
	SEGMENT VARCHAR(20),
	CURRENCY VARCHAR(20)
);
INSERT INTO CUSTOMERS VALUES (2, '1880818454360114341', '2147483648');
CREATE TABLE GASSTATIONS (
	GASSTATIONID INTEGER,
	CHAINID INTEGER,
	COUNTRY VARCHAR(20),
	SEGMENT VARCHAR(20)
);
INSERT INTO GASSTATIONS VALUES (0, 0, '2147483648', '2147483648');
CREATE TABLE PRODUCTS (
	PRODUCTID INTEGER,
	DESCRIPTION VARCHAR(20)
);
INSERT INTO PRODUCTS VALUES (0, '2147483648');
CREATE TABLE TRANSACTIONS_1K (
	TRANSACTIONID INTEGER,
	DATE DATE,
	TIME VARCHAR(20),
	CUSTOMERID INTEGER,
	CARDID INTEGER,
	GASSTATIONID INTEGER,
	PRODUCTID INTEGER,
	AMOUNT INTEGER,
	PRICE INTEGER
);
INSERT INTO TRANSACTIONS_1K VALUES (0, '1970-01-01', '2147483648', 0, 0, 0, 0, 0, 0);
CREATE TABLE YEARMONTH (
	CUSTOMERID INTEGER,
	DATE VARCHAR(20),
	CONSUMPTION INTEGER
);
INSERT INTO YEARMONTH VALUES (2, '2147483648', 3);
-- ----------sql1------------
SELECT CUSTOMERS.CUSTOMERID, YEARMONTH.CONSUMPTION FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.SEGMENT = 'KAM' ORDER BY YEARMONTH.CONSUMPTION DESC LIMIT 1;
-- ----------sql2------------
-- NULL, NULL
SELECT T2.CUSTOMERID, SUM(T2.CONSUMPTION) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.SEGMENT = 'KAM' GROUP BY T2.CUSTOMERID ORDER BY SUM(T2.CONSUMPTION) DESC LIMIT 1;
",0.03968,"SELECT CUSTOMERS.CUSTOMERID, YEARMONTH.CONSUMPTION FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.SEGMENT = 'KAM' ORDER BY YEARMONTH.CONSUMPTION DESC LIMIT 1","SELECT T2.CUSTOMERID, SUM(T2.CONSUMPTION) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.SEGMENT = 'KAM' GROUP BY T2.CUSTOMERID ORDER BY SUM(T2.CONSUMPTION) DESC LIMIT 1",
1,1489,True,,0.0526149999999999,SELECT SUM(YEARMONTH.CONSUMPTION) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.SEGMENT = 'KAM' AND YEARMONTH.DATE = '201305',SELECT SUM(T2.CONSUMPTION) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T2.DATE = '201305' AND T1.SEGMENT = 'KAM',
1,1490,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM CUSTOMERS WHERE SEGMENT = 'LAM') AS REAL) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.SEGMENT = 'LAM' AND YEARMONTH.CONSUMPTION > 46.73,"SELECT CAST(SUM(IIF(T2.CONSUMPTION > 46.73, 1, 0)) AS FLOAT) * 100 / COUNT(T1.CUSTOMERID) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.SEGMENT = 'LAM'",
2,1490,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM CUSTOMERS WHERE SEGMENT = 'LAM') AS REAL) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.SEGMENT = 'LAM' AND YEARMONTH.CONSUMPTION > 46.73,"SELECT CAST(SUM(IIF(T2.CONSUMPTION > 46.73, 1, 0)) AS FLOAT) * 100 / COUNT(T1.CUSTOMERID) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.SEGMENT = 'LAM'",
3,1490,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM CUSTOMERS WHERE SEGMENT = 'LAM') AS REAL) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.SEGMENT = 'LAM' AND YEARMONTH.CONSUMPTION > 46.73,"SELECT CAST(SUM(IIF(T2.CONSUMPTION > 46.73, 1, 0)) AS FLOAT) * 100 / COUNT(T1.CUSTOMERID) FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.SEGMENT = 'LAM'",
1,1491,ERROR,AttributeError: 'str' object has no attribute 'name',,"SELECT GASSTATIONS.COUNTRY, COUNT(*) FROM GASSTATIONS WHERE GASSTATIONS.SEGMENT = 'VALUE FOR MONEY' GROUP BY GASSTATIONS.COUNTRY","SELECT COUNTRY , ( SELECT COUNT(GASSTATIONID) FROM GASSTATIONS WHERE SEGMENT = 'VALUE FOR MONEY' ) FROM GASSTATIONS WHERE SEGMENT = 'VALUE FOR MONEY' GROUP BY COUNTRY ORDER BY COUNT(GASSTATIONID) DESC LIMIT 1",
2,1491,ERROR,AttributeError: 'str' object has no attribute 'name',,"SELECT GASSTATIONS.COUNTRY, COUNT(*) FROM GASSTATIONS WHERE GASSTATIONS.SEGMENT = 'VALUE FOR MONEY' GROUP BY GASSTATIONS.COUNTRY","SELECT COUNTRY , ( SELECT COUNT(GASSTATIONID) FROM GASSTATIONS WHERE SEGMENT = 'VALUE FOR MONEY' ) FROM GASSTATIONS WHERE SEGMENT = 'VALUE FOR MONEY' GROUP BY COUNTRY ORDER BY COUNT(GASSTATIONID) DESC LIMIT 1",
3,1491,ERROR,AttributeError: 'str' object has no attribute 'name',,"SELECT GASSTATIONS.COUNTRY, COUNT(*) FROM GASSTATIONS WHERE GASSTATIONS.SEGMENT = 'VALUE FOR MONEY' GROUP BY GASSTATIONS.COUNTRY","SELECT COUNTRY , ( SELECT COUNT(GASSTATIONID) FROM GASSTATIONS WHERE SEGMENT = 'VALUE FOR MONEY' ) FROM GASSTATIONS WHERE SEGMENT = 'VALUE FOR MONEY' GROUP BY COUNTRY ORDER BY COUNT(GASSTATIONID) DESC LIMIT 1",
1,1492,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM CUSTOMERS WHERE SEGMENT = 'KAM') FROM CUSTOMERS WHERE SEGMENT = 'KAM' AND CURRENCY = 'EURO',SELECT CAST(SUM(CURRENCY = 'EUR') AS FLOAT) * 100 / COUNT(CUSTOMERID) FROM CUSTOMERS WHERE SEGMENT = 'KAM',
2,1492,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM CUSTOMERS WHERE SEGMENT = 'KAM') FROM CUSTOMERS WHERE SEGMENT = 'KAM' AND CURRENCY = 'EURO',SELECT CAST(SUM(CURRENCY = 'EUR') AS FLOAT) * 100 / COUNT(CUSTOMERID) FROM CUSTOMERS WHERE SEGMENT = 'KAM',
3,1492,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM CUSTOMERS WHERE SEGMENT = 'KAM') FROM CUSTOMERS WHERE SEGMENT = 'KAM' AND CURRENCY = 'EURO',SELECT CAST(SUM(CURRENCY = 'EUR') AS FLOAT) * 100 / COUNT(CUSTOMERID) FROM CUSTOMERS WHERE SEGMENT = 'KAM',
1,1493,ERROR,"NotImplementedError: {'substr': ['DATE', 1, 6]}",,"SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM YEARMONTH WHERE SUBSTR(DATE, 1, 6) = '201202') FROM YEARMONTH WHERE SUBSTR(DATE, 1, 6) = '201202' AND CONSUMPTION > 528.3","SELECT CAST(SUM(IIF(CONSUMPTION > 528.3, 1, 0)) AS FLOAT) * 100 / COUNT(CUSTOMERID) FROM YEARMONTH WHERE DATE = '201202'",
2,1493,ERROR,"NotImplementedError: {'substr': ['DATE', 1, 6]}",,"SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM YEARMONTH WHERE SUBSTR(DATE, 1, 6) = '201202') FROM YEARMONTH WHERE SUBSTR(DATE, 1, 6) = '201202' AND CONSUMPTION > 528.3","SELECT CAST(SUM(IIF(CONSUMPTION > 528.3, 1, 0)) AS FLOAT) * 100 / COUNT(CUSTOMERID) FROM YEARMONTH WHERE DATE = '201202'",
3,1493,ERROR,"NotImplementedError: {'substr': ['DATE', 1, 6]}",,"SELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM YEARMONTH WHERE SUBSTR(DATE, 1, 6) = '201202') FROM YEARMONTH WHERE SUBSTR(DATE, 1, 6) = '201202' AND CONSUMPTION > 528.3","SELECT CAST(SUM(IIF(CONSUMPTION > 528.3, 1, 0)) AS FLOAT) * 100 / COUNT(CUSTOMERID) FROM YEARMONTH WHERE DATE = '201202'",
1,1494,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) FILTER (WHERE GASSTATIONS.SEGMENT = 'PREMIUM') AS REAL) * 100 / COUNT(*) FROM GASSTATIONS WHERE GASSTATIONS.COUNTRY = 'SLOVAKIA',"SELECT CAST(SUM(IIF(SEGMENT = 'PREMIUM', 1, 0)) AS FLOAT) * 100 / COUNT(GASSTATIONID) FROM GASSTATIONS WHERE COUNTRY = 'SVK'",
2,1494,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) FILTER (WHERE GASSTATIONS.SEGMENT = 'PREMIUM') AS REAL) * 100 / COUNT(*) FROM GASSTATIONS WHERE GASSTATIONS.COUNTRY = 'SLOVAKIA',"SELECT CAST(SUM(IIF(SEGMENT = 'PREMIUM', 1, 0)) AS FLOAT) * 100 / COUNT(GASSTATIONID) FROM GASSTATIONS WHERE COUNTRY = 'SVK'",
3,1494,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) FILTER (WHERE GASSTATIONS.SEGMENT = 'PREMIUM') AS REAL) * 100 / COUNT(*) FROM GASSTATIONS WHERE GASSTATIONS.COUNTRY = 'SLOVAKIA',"SELECT CAST(SUM(IIF(SEGMENT = 'PREMIUM', 1, 0)) AS FLOAT) * 100 / COUNT(GASSTATIONID) FROM GASSTATIONS WHERE COUNTRY = 'SVK'",
1,1495,True,,0.024916,SELECT YEARMONTH.CUSTOMERID FROM YEARMONTH WHERE YEARMONTH.DATE = '201309' ORDER BY YEARMONTH.CONSUMPTION DESC LIMIT 1,SELECT T1.CUSTOMERID FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T2.DATE = '201309' GROUP BY T1.CUSTOMERID ORDER BY SUM(T2.CONSUMPTION) DESC LIMIT 1,
1,1496,True,,0.036413,SELECT CUSTOMERS.SEGMENT FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE YEARMONTH.DATE = '201309' GROUP BY CUSTOMERS.SEGMENT ORDER BY SUM(YEARMONTH.CONSUMPTION) ASC LIMIT 1,SELECT T1.SEGMENT FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T2.DATE = '201309' GROUP BY T1.CUSTOMERID ORDER BY SUM(T2.CONSUMPTION) ASC LIMIT 1,
1,1497,True,,0.0511589999999999,SELECT CUSTOMERS.CUSTOMERID FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.SEGMENT = 'SME' AND YEARMONTH.DATE = '201206' ORDER BY YEARMONTH.CONSUMPTION ASC LIMIT 1,SELECT T1.CUSTOMERID FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T2.DATE = '201206' AND T1.SEGMENT = 'SME' GROUP BY T1.CUSTOMERID ORDER BY SUM(T2.CONSUMPTION) ASC LIMIT 1,
1,1498,ERROR,"NotImplementedError: {'substr': ['YEARMONTH__DATE', 1, 4]}",,"SELECT MAX(YEARMONTH.CONSUMPTION) FROM YEARMONTH WHERE SUBSTR(YEARMONTH.DATE, 1, 4) = '2012'","SELECT SUM(CONSUMPTION) FROM YEARMONTH WHERE SUBSTR(DATE, 1, 4) = '2012' GROUP BY SUBSTR(DATE, 5, 2) ORDER BY SUM(CONSUMPTION) DESC LIMIT 1",
2,1498,ERROR,"NotImplementedError: {'substr': ['YEARMONTH__DATE', 1, 4]}",,"SELECT MAX(YEARMONTH.CONSUMPTION) FROM YEARMONTH WHERE SUBSTR(YEARMONTH.DATE, 1, 4) = '2012'","SELECT SUM(CONSUMPTION) FROM YEARMONTH WHERE SUBSTR(DATE, 1, 4) = '2012' GROUP BY SUBSTR(DATE, 5, 2) ORDER BY SUM(CONSUMPTION) DESC LIMIT 1",
3,1498,ERROR,"NotImplementedError: {'substr': ['YEARMONTH__DATE', 1, 4]}",,"SELECT MAX(YEARMONTH.CONSUMPTION) FROM YEARMONTH WHERE SUBSTR(YEARMONTH.DATE, 1, 4) = '2012'","SELECT SUM(CONSUMPTION) FROM YEARMONTH WHERE SUBSTR(DATE, 1, 4) = '2012' GROUP BY SUBSTR(DATE, 5, 2) ORDER BY SUM(CONSUMPTION) DESC LIMIT 1",
1,1499,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CUSTOMERS (
	CUSTOMERID INTEGER,
	SEGMENT VARCHAR(20),
	CURRENCY VARCHAR(20)
);
INSERT INTO CUSTOMERS VALUES (2, '2147483648', 'EUR');
CREATE TABLE GASSTATIONS (
	GASSTATIONID INTEGER,
	CHAINID INTEGER,
	COUNTRY VARCHAR(20),
	SEGMENT VARCHAR(20)
);
INSERT INTO GASSTATIONS VALUES (0, 0, '2147483648', '2147483648');
CREATE TABLE PRODUCTS (
	PRODUCTID INTEGER,
	DESCRIPTION VARCHAR(20)
);
INSERT INTO PRODUCTS VALUES (0, '2147483648');
CREATE TABLE TRANSACTIONS_1K (
	TRANSACTIONID INTEGER,
	DATE DATE,
	TIME VARCHAR(20),
	CUSTOMERID INTEGER,
	CARDID INTEGER,
	GASSTATIONID INTEGER,
	PRODUCTID INTEGER,
	AMOUNT INTEGER,
	PRICE INTEGER
);
INSERT INTO TRANSACTIONS_1K VALUES (0, '1970-01-01', '2147483648', 0, 0, 0, 0, 0, 0);
CREATE TABLE YEARMONTH (
	CUSTOMERID INTEGER,
	DATE VARCHAR(20),
	CONSUMPTION INTEGER
);
INSERT INTO YEARMONTH VALUES (2, '2147483648', 0);
-- ----------sql1------------
-- NULL
SELECT MAX(SUM(YEARMONTH.CONSUMPTION)/12) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EURO';
-- ----------sql2------------
-- 0
SELECT SUM(T2.CONSUMPTION) / 12 AS MONTHLYCONSUMPTION FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.CURRENCY = 'EUR' GROUP BY T1.CUSTOMERID ORDER BY MONTHLYCONSUMPTION DESC LIMIT 1;
",0.044229,SELECT MAX(SUM(YEARMONTH.CONSUMPTION)/12) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EURO',SELECT SUM(T2.CONSUMPTION) / 12 AS MONTHLYCONSUMPTION FROM CUSTOMERS AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.CURRENCY = 'EUR' GROUP BY T1.CUSTOMERID ORDER BY MONTHLYCONSUMPTION DESC LIMIT 1,
1,1500,ERROR,"NotImplementedError: {'substr': ['YEARMONTH__DATE', 1, 6]}",,"SELECT PRODUCTS.DESCRIPTION FROM YEARMONTH INNER JOIN TRANSACTIONS_1K ON YEARMONTH.CUSTOMERID = TRANSACTIONS_1K.CUSTOMERID INNER JOIN PRODUCTS ON TRANSACTIONS_1K.PRODUCTID = PRODUCTS.PRODUCTID WHERE SUBSTR(YEARMONTH.DATE, 1, 6) = '201309'",SELECT T3.DESCRIPTION FROM TRANSACTIONS_1K AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID INNER JOIN PRODUCTS AS T3 ON T1.PRODUCTID = T3.PRODUCTID WHERE T2.DATE = '201309',
2,1500,ERROR,"NotImplementedError: {'substr': ['YEARMONTH__DATE', 1, 6]}",,"SELECT PRODUCTS.DESCRIPTION FROM YEARMONTH INNER JOIN TRANSACTIONS_1K ON YEARMONTH.CUSTOMERID = TRANSACTIONS_1K.CUSTOMERID INNER JOIN PRODUCTS ON TRANSACTIONS_1K.PRODUCTID = PRODUCTS.PRODUCTID WHERE SUBSTR(YEARMONTH.DATE, 1, 6) = '201309'",SELECT T3.DESCRIPTION FROM TRANSACTIONS_1K AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID INNER JOIN PRODUCTS AS T3 ON T1.PRODUCTID = T3.PRODUCTID WHERE T2.DATE = '201309',
3,1500,ERROR,"NotImplementedError: {'substr': ['YEARMONTH__DATE', 1, 6]}",,"SELECT PRODUCTS.DESCRIPTION FROM YEARMONTH INNER JOIN TRANSACTIONS_1K ON YEARMONTH.CUSTOMERID = TRANSACTIONS_1K.CUSTOMERID INNER JOIN PRODUCTS ON TRANSACTIONS_1K.PRODUCTID = PRODUCTS.PRODUCTID WHERE SUBSTR(YEARMONTH.DATE, 1, 6) = '201309'",SELECT T3.DESCRIPTION FROM TRANSACTIONS_1K AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID INNER JOIN PRODUCTS AS T3 ON T1.PRODUCTID = T3.PRODUCTID WHERE T2.DATE = '201309',
1,1501,ERROR,"NotImplementedError: {'substr': ['TRANSACTIONS_1K__DATE', 1, 6]}",,"SELECT GASSTATIONS.COUNTRY FROM GASSTATIONS INNER JOIN TRANSACTIONS_1K ON GASSTATIONS.GASSTATIONID = TRANSACTIONS_1K.GASSTATIONID WHERE SUBSTR(TRANSACTIONS_1K.DATE, 1, 6) = '201306'",SELECT DISTINCT T2.COUNTRY FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID INNER JOIN YEARMONTH AS T3 ON T1.CUSTOMERID = T3.CUSTOMERID WHERE T3.DATE = '201306',
2,1501,ERROR,"NotImplementedError: {'substr': ['TRANSACTIONS_1K__DATE', 1, 6]}",,"SELECT GASSTATIONS.COUNTRY FROM GASSTATIONS INNER JOIN TRANSACTIONS_1K ON GASSTATIONS.GASSTATIONID = TRANSACTIONS_1K.GASSTATIONID WHERE SUBSTR(TRANSACTIONS_1K.DATE, 1, 6) = '201306'",SELECT DISTINCT T2.COUNTRY FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID INNER JOIN YEARMONTH AS T3 ON T1.CUSTOMERID = T3.CUSTOMERID WHERE T3.DATE = '201306',
3,1501,ERROR,"NotImplementedError: {'substr': ['TRANSACTIONS_1K__DATE', 1, 6]}",,"SELECT GASSTATIONS.COUNTRY FROM GASSTATIONS INNER JOIN TRANSACTIONS_1K ON GASSTATIONS.GASSTATIONID = TRANSACTIONS_1K.GASSTATIONID WHERE SUBSTR(TRANSACTIONS_1K.DATE, 1, 6) = '201306'",SELECT DISTINCT T2.COUNTRY FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID INNER JOIN YEARMONTH AS T3 ON T1.CUSTOMERID = T3.CUSTOMERID WHERE T3.DATE = '201306',
1,1502,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CUSTOMERS (
	CUSTOMERID INTEGER,
	SEGMENT VARCHAR(20),
	CURRENCY VARCHAR(20)
);
INSERT INTO CUSTOMERS VALUES (2, '2147483648', 'EUR');
CREATE TABLE GASSTATIONS (
	GASSTATIONID INTEGER,
	CHAINID INTEGER,
	COUNTRY VARCHAR(20),
	SEGMENT VARCHAR(20)
);
INSERT INTO GASSTATIONS VALUES (3, 4, '2147483648', '2147483648');
CREATE TABLE PRODUCTS (
	PRODUCTID INTEGER,
	DESCRIPTION VARCHAR(20)
);
INSERT INTO PRODUCTS VALUES (0, '2147483648');
CREATE TABLE TRANSACTIONS_1K (
	TRANSACTIONID INTEGER,
	DATE DATE,
	TIME VARCHAR(20),
	CUSTOMERID INTEGER,
	CARDID INTEGER,
	GASSTATIONID INTEGER,
	PRODUCTID INTEGER,
	AMOUNT INTEGER,
	PRICE INTEGER
);
INSERT INTO TRANSACTIONS_1K VALUES (5, '1970-01-01', '2147483648', 2, 6, 3, 7, 8, 9);
CREATE TABLE YEARMONTH (
	CUSTOMERID INTEGER,
	DATE VARCHAR(20),
	CONSUMPTION INTEGER
);
INSERT INTO YEARMONTH VALUES (2, '2147483648', 0);
-- ----------sql1------------
SELECT GASSTATIONS.CHAINID FROM GASSTATIONS INNER JOIN TRANSACTIONS_1K ON GASSTATIONS.GASSTATIONID = TRANSACTIONS_1K.GASSTATIONID INNER JOIN CUSTOMERS ON TRANSACTIONS_1K.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EURO';
-- ----------sql2------------
-- 4
SELECT DISTINCT T3.CHAINID FROM TRANSACTIONS_1K AS T1 INNER JOIN CUSTOMERS AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID INNER JOIN GASSTATIONS AS T3 ON T1.GASSTATIONID = T3.GASSTATIONID WHERE T2.CURRENCY = 'EUR';
",0.052493,SELECT GASSTATIONS.CHAINID FROM GASSTATIONS INNER JOIN TRANSACTIONS_1K ON GASSTATIONS.GASSTATIONID = TRANSACTIONS_1K.GASSTATIONID INNER JOIN CUSTOMERS ON TRANSACTIONS_1K.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EURO',SELECT DISTINCT T3.CHAINID FROM TRANSACTIONS_1K AS T1 INNER JOIN CUSTOMERS AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID INNER JOIN GASSTATIONS AS T3 ON T1.GASSTATIONID = T3.GASSTATIONID WHERE T2.CURRENCY = 'EUR',
1,1503,False,,,SELECT PRODUCTS.DESCRIPTION FROM PRODUCTS INNER JOIN TRANSACTIONS_1K ON PRODUCTS.PRODUCTID = TRANSACTIONS_1K.PRODUCTID INNER JOIN CUSTOMERS ON TRANSACTIONS_1K.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EURO',"SELECT DISTINCT T1.PRODUCTID, T3.DESCRIPTION FROM TRANSACTIONS_1K AS T1 INNER JOIN CUSTOMERS AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID INNER JOIN PRODUCTS AS T3 ON T1.PRODUCTID = T3.PRODUCTID WHERE T2.CURRENCY = 'EUR'",
1,1504,ERROR,"NotImplementedError: {'like': ['TRANSACTIONS_1K__DATE', {'literal': '2012-01%'}]}",,SELECT AVG(TRANSACTIONS_1K.PRICE) FROM TRANSACTIONS_1K WHERE TRANSACTIONS_1K.DATE LIKE '2012-01%',SELECT AVG(AMOUNT) FROM TRANSACTIONS_1K WHERE DATE LIKE '2012-01%',
2,1504,ERROR,"NotImplementedError: {'like': ['TRANSACTIONS_1K__DATE', {'literal': '2012-01%'}]}",,SELECT AVG(TRANSACTIONS_1K.PRICE) FROM TRANSACTIONS_1K WHERE TRANSACTIONS_1K.DATE LIKE '2012-01%',SELECT AVG(AMOUNT) FROM TRANSACTIONS_1K WHERE DATE LIKE '2012-01%',
3,1504,ERROR,"NotImplementedError: {'like': ['TRANSACTIONS_1K__DATE', {'literal': '2012-01%'}]}",,SELECT AVG(TRANSACTIONS_1K.PRICE) FROM TRANSACTIONS_1K WHERE TRANSACTIONS_1K.DATE LIKE '2012-01%',SELECT AVG(AMOUNT) FROM TRANSACTIONS_1K WHERE DATE LIKE '2012-01%',
1,1505,True,,0.049993,SELECT COUNT(DISTINCT CUSTOMERS.CUSTOMERID) FROM CUSTOMERS INNER JOIN YEARMONTH ON CUSTOMERS.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EUR' AND YEARMONTH.CONSUMPTION > 1000,SELECT COUNT(*) FROM YEARMONTH AS T1 INNER JOIN CUSTOMERS AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T2.CURRENCY = 'EUR' AND T1.CONSUMPTION > 1000.00,
1,1506,True,,0.054395,SELECT PRODUCTS.DESCRIPTION FROM GASSTATIONS INNER JOIN TRANSACTIONS_1K ON GASSTATIONS.GASSTATIONID = TRANSACTIONS_1K.GASSTATIONID INNER JOIN PRODUCTS ON TRANSACTIONS_1K.PRODUCTID = PRODUCTS.PRODUCTID WHERE GASSTATIONS.COUNTRY = 'CZE';,SELECT DISTINCT T3.DESCRIPTION FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID INNER JOIN PRODUCTS AS T3 ON T1.PRODUCTID = T3.PRODUCTID WHERE T2.COUNTRY = 'CZE',
1,1507,True,,0.0345599999999999,SELECT TRANSACTIONS_1K.TIME FROM GASSTATIONS INNER JOIN TRANSACTIONS_1K ON GASSTATIONS.GASSTATIONID = TRANSACTIONS_1K.GASSTATIONID WHERE GASSTATIONS.CHAINID = 11,SELECT DISTINCT T1.TIME FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T2.CHAINID = 11,
1,1508,True,,0.05433,SELECT COUNT(*) FROM GASSTATIONS INNER JOIN TRANSACTIONS_1K ON GASSTATIONS.GASSTATIONID = TRANSACTIONS_1K.GASSTATIONID WHERE GASSTATIONS.COUNTRY = 'CZE' AND TRANSACTIONS_1K.PRICE > 1000,SELECT COUNT(T1.TRANSACTIONID) FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T2.COUNTRY = 'CZE' AND T1.PRICE > 1000,
1,1509,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T1__DATE']}",,SELECT COUNT(*) FROM GASSTATIONS INNER JOIN TRANSACTIONS_1K ON GASSTATIONS.GASSTATIONID = TRANSACTIONS_1K.GASSTATIONID WHERE GASSTATIONS.COUNTRY = 'CZE' AND TRANSACTIONS_1K.DATE > '2012/1/1',"SELECT COUNT(T1.TRANSACTIONID) FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T2.COUNTRY = 'CZE' AND STRFTIME('%Y', T1.DATE) >= '2012'",
2,1509,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T1__DATE']}",,SELECT COUNT(*) FROM GASSTATIONS INNER JOIN TRANSACTIONS_1K ON GASSTATIONS.GASSTATIONID = TRANSACTIONS_1K.GASSTATIONID WHERE GASSTATIONS.COUNTRY = 'CZE' AND TRANSACTIONS_1K.DATE > '2012/1/1',"SELECT COUNT(T1.TRANSACTIONID) FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T2.COUNTRY = 'CZE' AND STRFTIME('%Y', T1.DATE) >= '2012'",
3,1509,ERROR,"NotImplementedError: {'strftime': [{'literal': '%Y'}, 'T1__DATE']}",,SELECT COUNT(*) FROM GASSTATIONS INNER JOIN TRANSACTIONS_1K ON GASSTATIONS.GASSTATIONID = TRANSACTIONS_1K.GASSTATIONID WHERE GASSTATIONS.COUNTRY = 'CZE' AND TRANSACTIONS_1K.DATE > '2012/1/1',"SELECT COUNT(T1.TRANSACTIONID) FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T2.COUNTRY = 'CZE' AND STRFTIME('%Y', T1.DATE) >= '2012'",
1,1510,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CUSTOMERS (
	CUSTOMERID INTEGER,
	SEGMENT VARCHAR(20),
	CURRENCY VARCHAR(20)
);
INSERT INTO CUSTOMERS VALUES (2, '2147483648', '2147483648');
CREATE TABLE GASSTATIONS (
	GASSTATIONID INTEGER,
	CHAINID INTEGER,
	COUNTRY VARCHAR(20),
	SEGMENT VARCHAR(20)
);
INSERT INTO GASSTATIONS VALUES (10, 6, 'CZE', '2147483648');
CREATE TABLE PRODUCTS (
	PRODUCTID INTEGER,
	DESCRIPTION VARCHAR(20)
);
INSERT INTO PRODUCTS VALUES (0, '2147483648');
CREATE TABLE TRANSACTIONS_1K (
	TRANSACTIONID INTEGER,
	DATE DATE,
	TIME VARCHAR(20),
	CUSTOMERID INTEGER,
	CARDID INTEGER,
	GASSTATIONID INTEGER,
	PRODUCTID INTEGER,
	AMOUNT INTEGER,
	PRICE INTEGER
);
INSERT INTO TRANSACTIONS_1K VALUES (7, '1970-01-01', '2147483648', 8, 9, 10, 11, NULL, -10);
CREATE TABLE YEARMONTH (
	CUSTOMERID INTEGER,
	DATE VARCHAR(20),
	CONSUMPTION INTEGER
);
INSERT INTO YEARMONTH VALUES (2, '2147483648', 0);
-- ----------sql1------------
-- NULL
SELECT AVG(TRANSACTIONS_1K.PRICE * TRANSACTIONS_1K.AMOUNT) FROM GASSTATIONS INNER JOIN TRANSACTIONS_1K ON GASSTATIONS.GASSTATIONID = TRANSACTIONS_1K.GASSTATIONID WHERE GASSTATIONS.COUNTRY = 'CZE';
-- ----------sql2------------
-- -10
SELECT AVG(T1.PRICE) FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T2.COUNTRY = 'CZE';
",0.046333,SELECT AVG(TRANSACTIONS_1K.PRICE * TRANSACTIONS_1K.AMOUNT) FROM GASSTATIONS INNER JOIN TRANSACTIONS_1K ON GASSTATIONS.GASSTATIONID = TRANSACTIONS_1K.GASSTATIONID WHERE GASSTATIONS.COUNTRY = 'CZE',SELECT AVG(T1.PRICE) FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T2.COUNTRY = 'CZE',
1,1511,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CUSTOMERS (
	CUSTOMERID INTEGER,
	SEGMENT VARCHAR(20),
	CURRENCY VARCHAR(20)
);
INSERT INTO CUSTOMERS VALUES (2, '2147483648', 'EUR');
CREATE TABLE GASSTATIONS (
	GASSTATIONID INTEGER,
	CHAINID INTEGER,
	COUNTRY VARCHAR(20),
	SEGMENT VARCHAR(20)
);
INSERT INTO GASSTATIONS VALUES (9, 12, '2147483648', '2147483648');
CREATE TABLE PRODUCTS (
	PRODUCTID INTEGER,
	DESCRIPTION VARCHAR(20)
);
INSERT INTO PRODUCTS VALUES (0, '2147483648');
CREATE TABLE TRANSACTIONS_1K (
	TRANSACTIONID INTEGER,
	DATE DATE,
	TIME VARCHAR(20),
	CUSTOMERID INTEGER,
	CARDID INTEGER,
	GASSTATIONID INTEGER,
	PRODUCTID INTEGER,
	AMOUNT INTEGER,
	PRICE INTEGER
);
INSERT INTO TRANSACTIONS_1K VALUES (7, '1970-01-01', '2147483648', 2, 8, 9, 10, 11, -11);
CREATE TABLE YEARMONTH (
	CUSTOMERID INTEGER,
	DATE VARCHAR(20),
	CONSUMPTION INTEGER
);
INSERT INTO YEARMONTH VALUES (2, '2147483648', 0);
-- ----------sql1------------
-- NULL
SELECT AVG(SUM_PRICE) FROM ( SELECT CUSTOMERS.CUSTOMERID, SUM(TRANSACTIONS_1K.PRICE) AS SUM_PRICE FROM CUSTOMERS INNER JOIN TRANSACTIONS_1K ON CUSTOMERS.CUSTOMERID = TRANSACTIONS_1K.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EURO' GROUP BY CUSTOMERS.CUSTOMERID ) AS SUBQUERY;
-- ----------sql2------------
-- -11
SELECT AVG(T1.PRICE) FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID INNER JOIN CUSTOMERS AS T3 ON T1.CUSTOMERID = T3.CUSTOMERID WHERE T3.CURRENCY = 'EUR';
",0.065236,"SELECT AVG(SUM_PRICE) FROM ( SELECT CUSTOMERS.CUSTOMERID, SUM(TRANSACTIONS_1K.PRICE) AS SUM_PRICE FROM CUSTOMERS INNER JOIN TRANSACTIONS_1K ON CUSTOMERS.CUSTOMERID = TRANSACTIONS_1K.CUSTOMERID WHERE CUSTOMERS.CURRENCY = 'EURO' GROUP BY CUSTOMERS.CUSTOMERID ) AS SUBQUERY",SELECT AVG(T1.PRICE) FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID INNER JOIN CUSTOMERS AS T3 ON T1.CUSTOMERID = T3.CUSTOMERID WHERE T3.CURRENCY = 'EUR',
1,1512,True,,0.020555,SELECT CUSTOMERID FROM TRANSACTIONS_1K WHERE DATE = '2012-08-25' ORDER BY PRICE DESC LIMIT 1,SELECT CUSTOMERID FROM TRANSACTIONS_1K WHERE DATE = '2012-08-25' GROUP BY CUSTOMERID ORDER BY SUM(PRICE) DESC LIMIT 1,
1,1513,True,,0.035635,SELECT GASSTATIONS.COUNTRY FROM TRANSACTIONS_1K INNER JOIN GASSTATIONS ON TRANSACTIONS_1K.GASSTATIONID = GASSTATIONS.GASSTATIONID WHERE TRANSACTIONS_1K.DATE = '2012-08-25' ORDER BY TRANSACTIONS_1K.TIME ASC LIMIT 1,SELECT T2.COUNTRY FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T1.DATE = '2012-08-25' ORDER BY T1.TIME DESC LIMIT 1,
1,1514,ERROR,NotSupportedError: Not supported feature: month must be in 1..12,,SELECT CUSTOMERS.CURRENCY FROM TRANSACTIONS_1K INNER JOIN CUSTOMERS ON TRANSACTIONS_1K.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE TRANSACTIONS_1K.DATE = '2012-08-24' AND TRANSACTIONS_1K.TIME = '16:25:00',SELECT DISTINCT T3.CURRENCY FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID INNER JOIN CUSTOMERS AS T3 ON T1.CUSTOMERID = T3.CUSTOMERID WHERE T1.DATE = '2012-08-24' AND T1.TIME = '16:25:00',
2,1514,ERROR,NotSupportedError: Not supported feature: month must be in 1..12,,SELECT CUSTOMERS.CURRENCY FROM TRANSACTIONS_1K INNER JOIN CUSTOMERS ON TRANSACTIONS_1K.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE TRANSACTIONS_1K.DATE = '2012-08-24' AND TRANSACTIONS_1K.TIME = '16:25:00',SELECT DISTINCT T3.CURRENCY FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID INNER JOIN CUSTOMERS AS T3 ON T1.CUSTOMERID = T3.CUSTOMERID WHERE T1.DATE = '2012-08-24' AND T1.TIME = '16:25:00',
3,1514,ERROR,NotSupportedError: Not supported feature: month must be in 1..12,,SELECT CUSTOMERS.CURRENCY FROM TRANSACTIONS_1K INNER JOIN CUSTOMERS ON TRANSACTIONS_1K.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE TRANSACTIONS_1K.DATE = '2012-08-24' AND TRANSACTIONS_1K.TIME = '16:25:00',SELECT DISTINCT T3.CURRENCY FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID INNER JOIN CUSTOMERS AS T3 ON T1.CUSTOMERID = T3.CUSTOMERID WHERE T1.DATE = '2012-08-24' AND T1.TIME = '16:25:00',
1,1515,ERROR,NotSupportedError: Not supported feature: month must be in 1..12,,SELECT CUSTOMERS.SEGMENT FROM TRANSACTIONS_1K INNER JOIN CUSTOMERS ON TRANSACTIONS_1K.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE TRANSACTIONS_1K.TIME = '2012-08-23 21:20:00';,SELECT T2.SEGMENT FROM TRANSACTIONS_1K AS T1 INNER JOIN CUSTOMERS AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.DATE = '2012-08-23' AND T1.TIME = '21:20:00',
2,1515,ERROR,NotSupportedError: Not supported feature: month must be in 1..12,,SELECT CUSTOMERS.SEGMENT FROM TRANSACTIONS_1K INNER JOIN CUSTOMERS ON TRANSACTIONS_1K.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE TRANSACTIONS_1K.TIME = '2012-08-23 21:20:00';,SELECT T2.SEGMENT FROM TRANSACTIONS_1K AS T1 INNER JOIN CUSTOMERS AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.DATE = '2012-08-23' AND T1.TIME = '21:20:00',
3,1515,ERROR,NotSupportedError: Not supported feature: month must be in 1..12,,SELECT CUSTOMERS.SEGMENT FROM TRANSACTIONS_1K INNER JOIN CUSTOMERS ON TRANSACTIONS_1K.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE TRANSACTIONS_1K.TIME = '2012-08-23 21:20:00';,SELECT T2.SEGMENT FROM TRANSACTIONS_1K AS T1 INNER JOIN CUSTOMERS AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.DATE = '2012-08-23' AND T1.TIME = '21:20:00',
1,1516,ERROR,NotSupportedError: Not supported feature: month must be in 1..12,,SELECT COUNT(*) FROM TRANSACTIONS_1K INNER JOIN CUSTOMERS ON TRANSACTIONS_1K.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE TRANSACTIONS_1K.DATE = '2012-08-26' AND TRANSACTIONS_1K.TIME < '13:00:00' AND CUSTOMERS.CURRENCY = 'CZK',SELECT COUNT(T1.TRANSACTIONID) FROM TRANSACTIONS_1K AS T1 INNER JOIN CUSTOMERS AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.DATE = '2012-08-26' AND T1.TIME < '13:00:00' AND T2.CURRENCY = 'CZK',
2,1516,ERROR,NotSupportedError: Not supported feature: month must be in 1..12,,SELECT COUNT(*) FROM TRANSACTIONS_1K INNER JOIN CUSTOMERS ON TRANSACTIONS_1K.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE TRANSACTIONS_1K.DATE = '2012-08-26' AND TRANSACTIONS_1K.TIME < '13:00:00' AND CUSTOMERS.CURRENCY = 'CZK',SELECT COUNT(T1.TRANSACTIONID) FROM TRANSACTIONS_1K AS T1 INNER JOIN CUSTOMERS AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.DATE = '2012-08-26' AND T1.TIME < '13:00:00' AND T2.CURRENCY = 'CZK',
3,1516,ERROR,NotSupportedError: Not supported feature: month must be in 1..12,,SELECT COUNT(*) FROM TRANSACTIONS_1K INNER JOIN CUSTOMERS ON TRANSACTIONS_1K.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE TRANSACTIONS_1K.DATE = '2012-08-26' AND TRANSACTIONS_1K.TIME < '13:00:00' AND CUSTOMERS.CURRENCY = 'CZK',SELECT COUNT(T1.TRANSACTIONID) FROM TRANSACTIONS_1K AS T1 INNER JOIN CUSTOMERS AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.DATE = '2012-08-26' AND T1.TIME < '13:00:00' AND T2.CURRENCY = 'CZK',
1,1517,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CUSTOMERS (
	CUSTOMERID INTEGER,
	SEGMENT VARCHAR(20),
	CURRENCY VARCHAR(20)
);
INSERT INTO CUSTOMERS VALUES (2, '2147483648', '2147483648');
CREATE TABLE GASSTATIONS (
	GASSTATIONID INTEGER,
	CHAINID INTEGER,
	COUNTRY VARCHAR(20),
	SEGMENT VARCHAR(20)
);
INSERT INTO GASSTATIONS VALUES (0, 0, '2147483648', '2147483648');
CREATE TABLE PRODUCTS (
	PRODUCTID INTEGER,
	DESCRIPTION VARCHAR(20)
);
INSERT INTO PRODUCTS VALUES (0, '2147483648');
CREATE TABLE TRANSACTIONS_1K (
	TRANSACTIONID INTEGER,
	DATE DATE,
	TIME VARCHAR(20),
	CUSTOMERID INTEGER,
	CARDID INTEGER,
	GASSTATIONID INTEGER,
	PRODUCTID INTEGER,
	AMOUNT INTEGER,
	PRICE INTEGER
);
INSERT INTO TRANSACTIONS_1K VALUES (4, '1970-01-01', '2147483648', 3, 5, 6, 7, 8, 9);
CREATE TABLE YEARMONTH (
	CUSTOMERID INTEGER,
	DATE VARCHAR(20),
	CONSUMPTION INTEGER
);
INSERT INTO YEARMONTH VALUES (2, '2147483648', 0);
-- ----------sql1------------
-- 2147483648
SELECT CUSTOMERS.SEGMENT FROM CUSTOMERS ORDER BY CUSTOMERS.CUSTOMERID ASC LIMIT 1;
-- ----------sql2------------
SELECT T2.SEGMENT FROM TRANSACTIONS_1K AS T1 INNER JOIN CUSTOMERS AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID ORDER BY DATE ASC LIMIT 1;
",0.020973,SELECT CUSTOMERS.SEGMENT FROM CUSTOMERS ORDER BY CUSTOMERS.CUSTOMERID ASC LIMIT 1,SELECT T2.SEGMENT FROM TRANSACTIONS_1K AS T1 INNER JOIN CUSTOMERS AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID ORDER BY DATE ASC LIMIT 1,
1,1518,ERROR,NotSupportedError: Not supported feature: month must be in 1..12,,SELECT GASSTATIONS.COUNTRY FROM TRANSACTIONS_1K INNER JOIN GASSTATIONS ON TRANSACTIONS_1K.GASSTATIONID = GASSTATIONS.GASSTATIONID WHERE TRANSACTIONS_1K.DATE = '2012-08-24' AND TRANSACTIONS_1K.TIME = '12:42:00',SELECT T2.COUNTRY FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T1.DATE = '2012-08-24' AND T1.TIME = '12:42:00',
2,1518,ERROR,NotSupportedError: Not supported feature: month must be in 1..12,,SELECT GASSTATIONS.COUNTRY FROM TRANSACTIONS_1K INNER JOIN GASSTATIONS ON TRANSACTIONS_1K.GASSTATIONID = GASSTATIONS.GASSTATIONID WHERE TRANSACTIONS_1K.DATE = '2012-08-24' AND TRANSACTIONS_1K.TIME = '12:42:00',SELECT T2.COUNTRY FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T1.DATE = '2012-08-24' AND T1.TIME = '12:42:00',
3,1518,ERROR,NotSupportedError: Not supported feature: month must be in 1..12,,SELECT GASSTATIONS.COUNTRY FROM TRANSACTIONS_1K INNER JOIN GASSTATIONS ON TRANSACTIONS_1K.GASSTATIONID = GASSTATIONS.GASSTATIONID WHERE TRANSACTIONS_1K.DATE = '2012-08-24' AND TRANSACTIONS_1K.TIME = '12:42:00',SELECT T2.COUNTRY FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T1.DATE = '2012-08-24' AND T1.TIME = '12:42:00',
1,1519,ERROR,NotSupportedError: Not supported feature: month must be in 1..12,,SELECT PRODUCTID FROM TRANSACTIONS_1K WHERE DATE = '2012-08-23' AND TIME = '21:20:00',SELECT T1.PRODUCTID FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T1.DATE = '2012-08-23' AND T1.TIME = '21:20:00',
2,1519,ERROR,NotSupportedError: Not supported feature: month must be in 1..12,,SELECT PRODUCTID FROM TRANSACTIONS_1K WHERE DATE = '2012-08-23' AND TIME = '21:20:00',SELECT T1.PRODUCTID FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T1.DATE = '2012-08-23' AND T1.TIME = '21:20:00',
3,1519,ERROR,NotSupportedError: Not supported feature: month must be in 1..12,,SELECT PRODUCTID FROM TRANSACTIONS_1K WHERE DATE = '2012-08-23' AND TIME = '21:20:00',SELECT T1.PRODUCTID FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T1.DATE = '2012-08-23' AND T1.TIME = '21:20:00',
1,1520,ERROR,"NotImplementedError: {'like': ['YEARMONTH__DATE', {'literal': '2012-01%'}]}",,"SELECT YEARMONTH.DATE, YEARMONTH.CONSUMPTION FROM TRANSACTIONS_1K INNER JOIN YEARMONTH ON TRANSACTIONS_1K.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE TRANSACTIONS_1K.PRICE = 124.05 AND TRANSACTIONS_1K.DATE = '2012-08-24' AND YEARMONTH.DATE LIKE '2012-01%';","SELECT T1.CUSTOMERID, T2.DATE, T2.CONSUMPTION FROM TRANSACTIONS_1K AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.DATE = '2012-08-24' AND T1.PRICE = 124.05 AND T2.DATE = '201201'",
2,1520,ERROR,"NotImplementedError: {'like': ['YEARMONTH__DATE', {'literal': '2012-01%'}]}",,"SELECT YEARMONTH.DATE, YEARMONTH.CONSUMPTION FROM TRANSACTIONS_1K INNER JOIN YEARMONTH ON TRANSACTIONS_1K.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE TRANSACTIONS_1K.PRICE = 124.05 AND TRANSACTIONS_1K.DATE = '2012-08-24' AND YEARMONTH.DATE LIKE '2012-01%';","SELECT T1.CUSTOMERID, T2.DATE, T2.CONSUMPTION FROM TRANSACTIONS_1K AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.DATE = '2012-08-24' AND T1.PRICE = 124.05 AND T2.DATE = '201201'",
3,1520,ERROR,"NotImplementedError: {'like': ['YEARMONTH__DATE', {'literal': '2012-01%'}]}",,"SELECT YEARMONTH.DATE, YEARMONTH.CONSUMPTION FROM TRANSACTIONS_1K INNER JOIN YEARMONTH ON TRANSACTIONS_1K.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE TRANSACTIONS_1K.PRICE = 124.05 AND TRANSACTIONS_1K.DATE = '2012-08-24' AND YEARMONTH.DATE LIKE '2012-01%';","SELECT T1.CUSTOMERID, T2.DATE, T2.CONSUMPTION FROM TRANSACTIONS_1K AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.DATE = '2012-08-24' AND T1.PRICE = 124.05 AND T2.DATE = '201201'",
1,1521,ERROR,NotSupportedError: Not supported feature: month must be in 1..12,,SELECT COUNT(*) FROM TRANSACTIONS_1K INNER JOIN GASSTATIONS ON TRANSACTIONS_1K.GASSTATIONID = GASSTATIONS.GASSTATIONID WHERE TRANSACTIONS_1K.DATE = '2012-08-26' AND TRANSACTIONS_1K.TIME BETWEEN '08:00:00' AND '09:00:00' AND GASSTATIONS.COUNTRY = 'CZE',SELECT COUNT(T1.TRANSACTIONID) FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T1.DATE = '2012-08-26' AND T1.TIME BETWEEN '08:00:00' AND '09:00:00' AND T2.COUNTRY = 'CZE',
2,1521,ERROR,NotSupportedError: Not supported feature: month must be in 1..12,,SELECT COUNT(*) FROM TRANSACTIONS_1K INNER JOIN GASSTATIONS ON TRANSACTIONS_1K.GASSTATIONID = GASSTATIONS.GASSTATIONID WHERE TRANSACTIONS_1K.DATE = '2012-08-26' AND TRANSACTIONS_1K.TIME BETWEEN '08:00:00' AND '09:00:00' AND GASSTATIONS.COUNTRY = 'CZE',SELECT COUNT(T1.TRANSACTIONID) FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T1.DATE = '2012-08-26' AND T1.TIME BETWEEN '08:00:00' AND '09:00:00' AND T2.COUNTRY = 'CZE',
3,1521,ERROR,NotSupportedError: Not supported feature: month must be in 1..12,,SELECT COUNT(*) FROM TRANSACTIONS_1K INNER JOIN GASSTATIONS ON TRANSACTIONS_1K.GASSTATIONID = GASSTATIONS.GASSTATIONID WHERE TRANSACTIONS_1K.DATE = '2012-08-26' AND TRANSACTIONS_1K.TIME BETWEEN '08:00:00' AND '09:00:00' AND GASSTATIONS.COUNTRY = 'CZE',SELECT COUNT(T1.TRANSACTIONID) FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T1.DATE = '2012-08-26' AND T1.TIME BETWEEN '08:00:00' AND '09:00:00' AND T2.COUNTRY = 'CZE',
1,1522,ERROR,"NotImplementedError: {'like': ['YEARMONTH__DATE', {'literal': '%201306%'}]}",,SELECT CUSTOMERS.CURRENCY FROM YEARMONTH INNER JOIN CUSTOMERS ON YEARMONTH.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE YEARMONTH.CONSUMPTION = 214582.17 AND YEARMONTH.DATE LIKE '%201306%',SELECT T2.CURRENCY FROM YEARMONTH AS T1 INNER JOIN CUSTOMERS AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.DATE = '201306' AND T1.CONSUMPTION = 214582.17,
2,1522,ERROR,"NotImplementedError: {'like': ['YEARMONTH__DATE', {'literal': '%201306%'}]}",,SELECT CUSTOMERS.CURRENCY FROM YEARMONTH INNER JOIN CUSTOMERS ON YEARMONTH.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE YEARMONTH.CONSUMPTION = 214582.17 AND YEARMONTH.DATE LIKE '%201306%',SELECT T2.CURRENCY FROM YEARMONTH AS T1 INNER JOIN CUSTOMERS AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.DATE = '201306' AND T1.CONSUMPTION = 214582.17,
3,1522,ERROR,"NotImplementedError: {'like': ['YEARMONTH__DATE', {'literal': '%201306%'}]}",,SELECT CUSTOMERS.CURRENCY FROM YEARMONTH INNER JOIN CUSTOMERS ON YEARMONTH.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE YEARMONTH.CONSUMPTION = 214582.17 AND YEARMONTH.DATE LIKE '%201306%',SELECT T2.CURRENCY FROM YEARMONTH AS T1 INNER JOIN CUSTOMERS AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.DATE = '201306' AND T1.CONSUMPTION = 214582.17,
1,1523,True,,0.032954,SELECT GASSTATIONS.COUNTRY FROM TRANSACTIONS_1K INNER JOIN GASSTATIONS ON TRANSACTIONS_1K.GASSTATIONID = GASSTATIONS.GASSTATIONID WHERE TRANSACTIONS_1K.CARDID = '667467',SELECT T2.COUNTRY FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T1.CARDID = '667467',
1,1524,True,,0.0528149999999999,SELECT CUSTOMERS.CURRENCY FROM TRANSACTIONS_1K INNER JOIN CUSTOMERS ON TRANSACTIONS_1K.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE TRANSACTIONS_1K.AMOUNT = 548.4 AND TRANSACTIONS_1K.DATE = '2012-08-24',SELECT T2.COUNTRY FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T1.DATE = '2012-08-24' AND T1.PRICE = 548.4,
1,1525,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM TRANSACTIONS_1K WHERE DATE = '2012-08-25') AS REAL) FROM CUSTOMERS INNER JOIN TRANSACTIONS_1K ON CUSTOMERS.CUSTOMERID = TRANSACTIONS_1K.CUSTOMERID WHERE TRANSACTIONS_1K.DATE = '2012-08-25' AND CUSTOMERS.CURRENCY = 'EUR',"SELECT CAST(SUM(IIF(T2.CURRENCY = 'EUR', 1, 0)) AS FLOAT) * 100 / COUNT(T1.CUSTOMERID) FROM TRANSACTIONS_1K AS T1 INNER JOIN CUSTOMERS AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.DATE = '2012-08-25'",
2,1525,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM TRANSACTIONS_1K WHERE DATE = '2012-08-25') AS REAL) FROM CUSTOMERS INNER JOIN TRANSACTIONS_1K ON CUSTOMERS.CUSTOMERID = TRANSACTIONS_1K.CUSTOMERID WHERE TRANSACTIONS_1K.DATE = '2012-08-25' AND CUSTOMERS.CURRENCY = 'EUR',"SELECT CAST(SUM(IIF(T2.CURRENCY = 'EUR', 1, 0)) AS FLOAT) * 100 / COUNT(T1.CUSTOMERID) FROM TRANSACTIONS_1K AS T1 INNER JOIN CUSTOMERS AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.DATE = '2012-08-25'",
3,1525,ERROR,NotImplementedError: {'real': {}},,SELECT CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM TRANSACTIONS_1K WHERE DATE = '2012-08-25') AS REAL) FROM CUSTOMERS INNER JOIN TRANSACTIONS_1K ON CUSTOMERS.CUSTOMERID = TRANSACTIONS_1K.CUSTOMERID WHERE TRANSACTIONS_1K.DATE = '2012-08-25' AND CUSTOMERS.CURRENCY = 'EUR',"SELECT CAST(SUM(IIF(T2.CURRENCY = 'EUR', 1, 0)) AS FLOAT) * 100 / COUNT(T1.CUSTOMERID) FROM TRANSACTIONS_1K AS T1 INNER JOIN CUSTOMERS AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.DATE = '2012-08-25'",
1,1526,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT CONSUMPTION FROM YEARMONTH WHERE DATE = '2012' AND CUSTOMERID = (SELECT CUSTOMERID FROM TRANSACTIONS_1K WHERE PRICE = 634.8 AND DATE = '2012-08-24')) - (SELECT CONSUMPTION FROM YEARMONTH WHERE DATE = '2013' AND CUSTOMERID = (SELECT CUSTOMERID FROM TRANSACTIONS_1K WHERE PRICE = 634.8 AND DATE = '2012-08-24')) / (SELECT CONSUMPTION FROM YEARMONTH WHERE DATE = '2012' AND CUSTOMERID = (SELECT CUSTOMERID FROM TRANSACTIONS_1K WHERE PRICE = 634.8 AND DATE = '2012-08-24')) AS CONSUMPTION_DECREASE_RATE,"SELECT CAST(SUM(IIF(SUBSTR(DATE, 1, 4) = '2012', CONSUMPTION, 0)) - SUM(IIF(SUBSTR(DATE, 1, 4) = '2013', CONSUMPTION, 0)) AS FLOAT) / SUM(IIF(SUBSTR(DATE, 1, 4) = '2012', CONSUMPTION, 0)) FROM YEARMONTH WHERE CUSTOMERID = ( SELECT T1.CUSTOMERID FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T1.DATE = '2012-08-25' AND T1.PRICE = 634.8 )",
2,1526,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT CONSUMPTION FROM YEARMONTH WHERE DATE = '2012' AND CUSTOMERID = (SELECT CUSTOMERID FROM TRANSACTIONS_1K WHERE PRICE = 634.8 AND DATE = '2012-08-24')) - (SELECT CONSUMPTION FROM YEARMONTH WHERE DATE = '2013' AND CUSTOMERID = (SELECT CUSTOMERID FROM TRANSACTIONS_1K WHERE PRICE = 634.8 AND DATE = '2012-08-24')) / (SELECT CONSUMPTION FROM YEARMONTH WHERE DATE = '2012' AND CUSTOMERID = (SELECT CUSTOMERID FROM TRANSACTIONS_1K WHERE PRICE = 634.8 AND DATE = '2012-08-24')) AS CONSUMPTION_DECREASE_RATE,"SELECT CAST(SUM(IIF(SUBSTR(DATE, 1, 4) = '2012', CONSUMPTION, 0)) - SUM(IIF(SUBSTR(DATE, 1, 4) = '2013', CONSUMPTION, 0)) AS FLOAT) / SUM(IIF(SUBSTR(DATE, 1, 4) = '2012', CONSUMPTION, 0)) FROM YEARMONTH WHERE CUSTOMERID = ( SELECT T1.CUSTOMERID FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T1.DATE = '2012-08-25' AND T1.PRICE = 634.8 )",
3,1526,ERROR,NotSupportedError: Not supported feature: Query must have a FROM clause,,SELECT (SELECT CONSUMPTION FROM YEARMONTH WHERE DATE = '2012' AND CUSTOMERID = (SELECT CUSTOMERID FROM TRANSACTIONS_1K WHERE PRICE = 634.8 AND DATE = '2012-08-24')) - (SELECT CONSUMPTION FROM YEARMONTH WHERE DATE = '2013' AND CUSTOMERID = (SELECT CUSTOMERID FROM TRANSACTIONS_1K WHERE PRICE = 634.8 AND DATE = '2012-08-24')) / (SELECT CONSUMPTION FROM YEARMONTH WHERE DATE = '2012' AND CUSTOMERID = (SELECT CUSTOMERID FROM TRANSACTIONS_1K WHERE PRICE = 634.8 AND DATE = '2012-08-24')) AS CONSUMPTION_DECREASE_RATE,"SELECT CAST(SUM(IIF(SUBSTR(DATE, 1, 4) = '2012', CONSUMPTION, 0)) - SUM(IIF(SUBSTR(DATE, 1, 4) = '2013', CONSUMPTION, 0)) AS FLOAT) / SUM(IIF(SUBSTR(DATE, 1, 4) = '2012', CONSUMPTION, 0)) FROM YEARMONTH WHERE CUSTOMERID = ( SELECT T1.CUSTOMERID FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T1.DATE = '2012-08-25' AND T1.PRICE = 634.8 )",
1,1527,False,"-- ----------An counterexample found by VeriEQL------------
CREATE TABLE CUSTOMERS (
	CUSTOMERID INTEGER,
	SEGMENT VARCHAR(20),
	CURRENCY VARCHAR(20)
);
INSERT INTO CUSTOMERS VALUES (2, '2147483648', '2147483648');
CREATE TABLE GASSTATIONS (
	GASSTATIONID INTEGER,
	CHAINID INTEGER,
	COUNTRY VARCHAR(20),
	SEGMENT VARCHAR(20)
);
INSERT INTO GASSTATIONS VALUES (3, 5, '2147483648', '2147483648');
CREATE TABLE PRODUCTS (
	PRODUCTID INTEGER,
	DESCRIPTION VARCHAR(20)
);
INSERT INTO PRODUCTS VALUES (0, '2147483648');
CREATE TABLE TRANSACTIONS_1K (
	TRANSACTIONID INTEGER,
	DATE DATE,
	TIME VARCHAR(20),
	CUSTOMERID INTEGER,
	CARDID INTEGER,
	GASSTATIONID INTEGER,
	PRODUCTID INTEGER,
	AMOUNT INTEGER,
	PRICE INTEGER
);
INSERT INTO TRANSACTIONS_1K VALUES (6, '1970-01-01', '2147483648', 7, 8, 9, 10, 11, 12);
CREATE TABLE YEARMONTH (
	CUSTOMERID INTEGER,
	DATE VARCHAR(20),
	CONSUMPTION INTEGER
);
INSERT INTO YEARMONTH VALUES (2, '2147483648', 0);
-- ----------sql1------------
SELECT GASSTATIONS.GASSTATIONID FROM GASSTATIONS INNER JOIN TRANSACTIONS_1K ON GASSTATIONS.GASSTATIONID = TRANSACTIONS_1K.GASSTATIONID GROUP BY GASSTATIONS.GASSTATIONID ORDER BY SUM(TRANSACTIONS_1K.PRICE * TRANSACTIONS_1K.AMOUNT) DESC LIMIT 1;
-- ----------sql2------------
-- 9
SELECT GASSTATIONID FROM TRANSACTIONS_1K GROUP BY GASSTATIONID ORDER BY SUM(PRICE) DESC LIMIT 1;
",0.034923,SELECT GASSTATIONS.GASSTATIONID FROM GASSTATIONS INNER JOIN TRANSACTIONS_1K ON GASSTATIONS.GASSTATIONID = TRANSACTIONS_1K.GASSTATIONID GROUP BY GASSTATIONS.GASSTATIONID ORDER BY SUM(TRANSACTIONS_1K.PRICE * TRANSACTIONS_1K.AMOUNT) DESC LIMIT 1,SELECT GASSTATIONID FROM TRANSACTIONS_1K GROUP BY GASSTATIONID ORDER BY SUM(PRICE) DESC LIMIT 1,
1,1528,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM GASSTATIONS WHERE SEGMENT = 'PREMIUM' AND COUNTRY = 'SVK') AS REAL) * 100) / (SELECT COUNT(*) FROM GASSTATIONS WHERE COUNTRY = 'SVK') AS PERCENTAGE FROM GASSTATIONS LIMIT 1;,"SELECT CAST(SUM(IIF(COUNTRY = 'SVK' AND SEGMENT = 'PREMIUM', 1, 0)) AS FLOAT) * 100 / SUM(IIF(COUNTRY = 'SVK', 1, 0)) FROM GASSTATIONS",
2,1528,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM GASSTATIONS WHERE SEGMENT = 'PREMIUM' AND COUNTRY = 'SVK') AS REAL) * 100) / (SELECT COUNT(*) FROM GASSTATIONS WHERE COUNTRY = 'SVK') AS PERCENTAGE FROM GASSTATIONS LIMIT 1;,"SELECT CAST(SUM(IIF(COUNTRY = 'SVK' AND SEGMENT = 'PREMIUM', 1, 0)) AS FLOAT) * 100 / SUM(IIF(COUNTRY = 'SVK', 1, 0)) FROM GASSTATIONS",
3,1528,ERROR,NotImplementedError: {'real': {}},,SELECT (CAST((SELECT COUNT(*) FROM GASSTATIONS WHERE SEGMENT = 'PREMIUM' AND COUNTRY = 'SVK') AS REAL) * 100) / (SELECT COUNT(*) FROM GASSTATIONS WHERE COUNTRY = 'SVK') AS PERCENTAGE FROM GASSTATIONS LIMIT 1;,"SELECT CAST(SUM(IIF(COUNTRY = 'SVK' AND SEGMENT = 'PREMIUM', 1, 0)) AS FLOAT) * 100 / SUM(IIF(COUNTRY = 'SVK', 1, 0)) FROM GASSTATIONS",
1,1529,ERROR,"NotImplementedError: {'iif': [{'eq': ['T3__DATE', 201201]}, 'T1__PRICE', 0]}",,SELECT SUM(TRANSACTIONS_1K.AMOUNT) FROM TRANSACTIONS_1K INNER JOIN CUSTOMERS ON TRANSACTIONS_1K.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE CUSTOMERS.CUSTOMERID = '38508' AND TRANSACTIONS_1K.DATE = '201201',"SELECT SUM(T1.PRICE) , SUM(IIF(T3.DATE = '201201', T1.PRICE, 0)) FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID INNER JOIN YEARMONTH AS T3 ON T1.CUSTOMERID = T3.CUSTOMERID WHERE T1.CUSTOMERID = '38508'",
2,1529,ERROR,"NotImplementedError: {'iif': [{'eq': ['T3__DATE', 201201]}, 'T1__PRICE', 0]}",,SELECT SUM(TRANSACTIONS_1K.AMOUNT) FROM TRANSACTIONS_1K INNER JOIN CUSTOMERS ON TRANSACTIONS_1K.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE CUSTOMERS.CUSTOMERID = '38508' AND TRANSACTIONS_1K.DATE = '201201',"SELECT SUM(T1.PRICE) , SUM(IIF(T3.DATE = '201201', T1.PRICE, 0)) FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID INNER JOIN YEARMONTH AS T3 ON T1.CUSTOMERID = T3.CUSTOMERID WHERE T1.CUSTOMERID = '38508'",
3,1529,ERROR,"NotImplementedError: {'iif': [{'eq': ['T3__DATE', 201201]}, 'T1__PRICE', 0]}",,SELECT SUM(TRANSACTIONS_1K.AMOUNT) FROM TRANSACTIONS_1K INNER JOIN CUSTOMERS ON TRANSACTIONS_1K.CUSTOMERID = CUSTOMERS.CUSTOMERID WHERE CUSTOMERS.CUSTOMERID = '38508' AND TRANSACTIONS_1K.DATE = '201201',"SELECT SUM(T1.PRICE) , SUM(IIF(T3.DATE = '201201', T1.PRICE, 0)) FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID INNER JOIN YEARMONTH AS T3 ON T1.CUSTOMERID = T3.CUSTOMERID WHERE T1.CUSTOMERID = '38508'",
1,1530,True,,0.034631,"SELECT PRODUCTS.DESCRIPTION FROM PRODUCTS INNER JOIN ( SELECT TRANSACTIONS_1K.PRODUCTID, SUM(TRANSACTIONS_1K.AMOUNT) AS TOTAL_AMOUNT FROM TRANSACTIONS_1K GROUP BY TRANSACTIONS_1K.PRODUCTID ORDER BY TOTAL_AMOUNT DESC LIMIT 5 ) AS TOP_PRODUCTS ON PRODUCTS.PRODUCTID = TOP_PRODUCTS.PRODUCTID",SELECT T2.DESCRIPTION FROM TRANSACTIONS_1K AS T1 INNER JOIN PRODUCTS AS T2 ON T1.PRODUCTID = T2.PRODUCTID ORDER BY T1.AMOUNT DESC LIMIT 5,
1,1531,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T2__CUSTOMERID`,,"SELECT CUSTOMERS.CUSTOMERID, AVG(TRANSACTIONS_1K.PRICE / TRANSACTIONS_1K.AMOUNT) AS AVERAGE_PRICE, CUSTOMERS.CURRENCY FROM CUSTOMERS INNER JOIN TRANSACTIONS_1K ON CUSTOMERS.CUSTOMERID = TRANSACTIONS_1K.CUSTOMERID GROUP BY CUSTOMERS.CUSTOMERID ORDER BY SUM(TRANSACTIONS_1K.AMOUNT) DESC LIMIT 1","SELECT T2.CUSTOMERID, SUM(T2.PRICE / T2.AMOUNT), T1.CURRENCY FROM CUSTOMERS AS T1 INNER JOIN TRANSACTIONS_1K AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T2.CUSTOMERID = ( SELECT CUSTOMERID FROM YEARMONTH ORDER BY CONSUMPTION DESC LIMIT 1 ) GROUP BY T2.CUSTOMERID, T1.CURRENCY",
2,1531,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T2__CUSTOMERID`,,"SELECT CUSTOMERS.CUSTOMERID, AVG(TRANSACTIONS_1K.PRICE / TRANSACTIONS_1K.AMOUNT) AS AVERAGE_PRICE, CUSTOMERS.CURRENCY FROM CUSTOMERS INNER JOIN TRANSACTIONS_1K ON CUSTOMERS.CUSTOMERID = TRANSACTIONS_1K.CUSTOMERID GROUP BY CUSTOMERS.CUSTOMERID ORDER BY SUM(TRANSACTIONS_1K.AMOUNT) DESC LIMIT 1","SELECT T2.CUSTOMERID, SUM(T2.PRICE / T2.AMOUNT), T1.CURRENCY FROM CUSTOMERS AS T1 INNER JOIN TRANSACTIONS_1K AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T2.CUSTOMERID = ( SELECT CUSTOMERID FROM YEARMONTH ORDER BY CONSUMPTION DESC LIMIT 1 ) GROUP BY T2.CUSTOMERID, T1.CURRENCY",
3,1531,ERROR,UnknownColumnError: UnknownColumnError: UnknownColumnError: unknown column `Unknown attribute T2__CUSTOMERID`,,"SELECT CUSTOMERS.CUSTOMERID, AVG(TRANSACTIONS_1K.PRICE / TRANSACTIONS_1K.AMOUNT) AS AVERAGE_PRICE, CUSTOMERS.CURRENCY FROM CUSTOMERS INNER JOIN TRANSACTIONS_1K ON CUSTOMERS.CUSTOMERID = TRANSACTIONS_1K.CUSTOMERID GROUP BY CUSTOMERS.CUSTOMERID ORDER BY SUM(TRANSACTIONS_1K.AMOUNT) DESC LIMIT 1","SELECT T2.CUSTOMERID, SUM(T2.PRICE / T2.AMOUNT), T1.CURRENCY FROM CUSTOMERS AS T1 INNER JOIN TRANSACTIONS_1K AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T2.CUSTOMERID = ( SELECT CUSTOMERID FROM YEARMONTH ORDER BY CONSUMPTION DESC LIMIT 1 ) GROUP BY T2.CUSTOMERID, T1.CURRENCY",
1,1532,True,,0.035368,SELECT GASSTATIONS.COUNTRY FROM TRANSACTIONS_1K INNER JOIN GASSTATIONS ON TRANSACTIONS_1K.GASSTATIONID = GASSTATIONS.GASSTATIONID WHERE TRANSACTIONS_1K.PRODUCTID = 2 ORDER BY TRANSACTIONS_1K.PRICE DESC LIMIT 1,SELECT T2.COUNTRY FROM TRANSACTIONS_1K AS T1 INNER JOIN GASSTATIONS AS T2 ON T1.GASSTATIONID = T2.GASSTATIONID WHERE T1.PRODUCTID = 2 ORDER BY T1.PRICE DESC LIMIT 1,
1,1533,True,,0.068133,SELECT YEARMONTH.CONSUMPTION FROM TRANSACTIONS_1K INNER JOIN YEARMONTH ON TRANSACTIONS_1K.CUSTOMERID = YEARMONTH.CUSTOMERID WHERE TRANSACTIONS_1K.PRODUCTID = 5 AND TRANSACTIONS_1K.PRICE/TRANSACTIONS_1K.AMOUNT > 29.00 AND YEARMONTH.DATE = '201208',SELECT T2.CONSUMPTION FROM TRANSACTIONS_1K AS T1 INNER JOIN YEARMONTH AS T2 ON T1.CUSTOMERID = T2.CUSTOMERID WHERE T1.PRICE / T1.AMOUNT > 29.00 AND T1.PRODUCTID = 5 AND T2.DATE = '201208',
